.Const

.Data?

.Data
dword_40A568    DD 0E7E63A0BH, 0BBBEF6AEH, 29E9FAB4H, 3 Dup(0)
                                        ; DATA XREF: vBng___62+3B¡ýo
dword_40A580    dd 0FABC2A13h, 37FE3C13h, 0D39854B9h, 0EE45AEC9h
                                        ; DATA XREF: vBng___189_stk+52¡ýo
dword_40A590    dd 0E97EAA0Fh, 4218EA07h, 69CE4960h
                                        ; DATA XREF: vBng___41+4B¡ýo
dword_40A59C    dd 64AF8D19h, 6F011880h, 4E750891h
                                        ; DATA XREF: vBng___149+124¡ýo
dword_40A5A8    dd 91157425h, 0AE481EF6h, 0C3700343h
                                        ; DATA XREF: vBng___131+21¡ýo
dword_40A5B4    dd 0E8A87A2Eh, 0BD7912BFh, 6F875CD7h
                                        ; DATA XREF: vBng___126+3D¡ýo
dword_40A5C0    dd 99E6250Dh, 775B1CAh, 797A54B1h, 0F81335AEh
                                        ; DATA XREF: vBng_h__30+32¡ýo
dword_40A5D0    dd 11FEE331h, 31C0D730h, 66EBF7B2h, 289AF4EFh
                                        ; DATA XREF: vBng_h__20+40¡ýo
dword_40A5E0    dd 2A51B32Dh, 13BE24FDh ; DATA XREF: vBng_h__38+32¡ýo
dword_40A5E8    dd 0CEC33408h, 682BADB2h, 4B5BBF8Eh, 3 dup(0)
                                        ; DATA XREF: vBng___137_stk+34¡ýo
dword_40A600    dd 55136011h, 7C4ADEEEh, 770650C9h, 19C9982Eh
                                        ; DATA XREF: vBng___63_stk+40¡ýo
dword_40A610    dd 0C9A53404h, 3A808CDEh, 9A9D7BEBh
                                        ; DATA XREF: vBng_2+40¡ýo
dword_40A61C    dd 775FF735h, 91CC6387h, 0D51EA361h
                                        ; DATA XREF: vBng___86+42¡ýo
dword_40A628    dd 0B51B8127h, 0FD39804h, 91F3DCD5h, 3 dup(0)
                                        ; DATA XREF: vBng___2+43¡ýo
dword_40A640    dd 0A761F72Bh, 36C9B25Dh, 0FA67046h, 3A9ADD08h
                                        ; DATA XREF: vBng_h__18+2C¡ýo
dword_40A650    dd 3B94291Ch, 0C3085C6Eh, 0DFF97B52h, 5D0E36CCh
                                        ; DATA XREF: vBng___117_stk+23¡ýo
dword_40A660    dd 7D351E1Ch, 83BB0D1Ch, 5B63071h, 624FF4FAh
                                        ; DATA XREF: vBng___191_stk+51¡ýo
dword_40A670    dd 0E9C6E62Bh, 0CAADC3F8h, 8BCAD2A9h, 230B0308h
                                        ; DATA XREF: vBng___9_stk+50¡ýo
dword_40A680    dd 647A309h, 5F6BB4h, 8C8BE715h, 0
                                        ; DATA XREF: vBng_h__39+2D¡ýo
dword_40A690    dd 0D0990A13h, 0DDB3F642h, 2EF227E3h, 526B9E1Eh
                                        ; DATA XREF: vBng___133_stk+66¡ýo
dword_40A6A0    dd 0C6217A1Bh, 2BAFF8B4h, 62AC05CAh, 0
                                        ; DATA XREF: vBng___118+11A¡ýo
dword_40A6B0    dd 0B541C020h, 5D112133h, 1233E3ADh, 68FCF49Fh
                                        ; DATA XREF: vBng___141_stk+63¡ýo
dword_40A6C0    dd 72488830h, 0AFEE687Dh, 0DE59DA6Fh, 0
                                        ; DATA XREF: vBng___174+58¡ýo
dword_40A6D0    dd 74E1CE1Fh, 7A5E5201h, 433E37DAh, 9042BFD3h
                                        ; DATA XREF: vBng___188_stk+21¡ýo
dword_40A6E0    dd 0B153D00Eh, 6E4D91B4h, 776729F6h
                                        ; DATA XREF: vBng___133+5E¡ýo
dword_40A6EC    dd 501DB22Ch, 19DF35D3h, 0F20BB4D0h, 2 dup(0)
                                        ; DATA XREF: vBng___68+2A¡ýo
dword_40A700    dd 0D16F9C20h, 0F06BABB2h, 0BA3A2605h, 82B08131h
                                        ; DATA XREF: vBng___47_stk+4D¡ýo
dword_40A710    dd 5ECECF09h, 951F55CCh, 28C6B69Dh
                                        ; DATA XREF: vBng___82+3C¡ýo
dword_40A71C    dd 2679C325h, 82B2DF38h, 0FBE4DE08h, 2 dup(0)
dword_40C0D0    DD 9917AC1CH, 0ADC04C37H, 81EA48B6H, 0C586ECDCH
                                        ; DATA XREF: vBng___61_stk+42¡ýo
dword_40C0E0    dd 4C2401Ch, 0BA45FC22h, 0C77AAF8Fh, 0F3BED514h
                                        ; DATA XREF: vBng___201+2B¡ýo
dword_40C0F0    dd 0F743F808h, 9FCBB5E3h, 0EA6BA128h
                                        ; DATA XREF: vBng___42+1A¡ýo
dword_40C0FC    dd 267F1A30h, 34E82D84h, 0B1465F4Bh, 2 dup(0)
                                        ; DATA XREF: vBng___2_stk+1E¡ýo
dword_40C110    dd 0A0CCD411h, 631323CDh, 0B033E94Eh, 85253B96h
                                        ; DATA XREF: vBng___99_stk+3A¡ýo
dword_40C120    dd 0CD151A30h, 0F0939943h, 2 dup(0)
                                        ; DATA XREF: vBng___51+33¡ýo
dword_40C130    dd 3A6F8F13h, 46412D62h, 2C54DF51h, 3E843490h
                                        ; DATA XREF: vBng___114_stk+1F¡ýo
dword_40C140    dd 0BE980D1Dh, 0F8D72B31h, 3892E558h
                                        ; DATA XREF: vBng___154+36¡ýo
dword_40C14C    dd 0DCE5FB28h, 0BB210E4Dh, 0C60F87D7h
                                        ; DATA XREF: vBng___40+33¡ýo
dword_40C158    dd 0BD34B404h, 0DF13F30Ah, 85CDCE24h
                                        ; DATA XREF: vBng___173+36¡ýo
dword_40C164    dd 3A67A432h, 0AA406264h, 78466EBDh
                                        ; DATA XREF: vBng_h__19+2D¡ýo
dword_40C170    dd 0B24D1011h, 0E0D999CDh, 0C3E38CC0h
                                        ; DATA XREF: vBng___92+37¡ýo
dword_40C17C    dd 58EE951Dh, 0D5F695E7h, 1DA38414h
                                        ; DATA XREF: vBng___169+44¡ýo
dword_40C188    dd 133BB037h, 0E3408DFBh, 0F212ADA7h
                                        ; DATA XREF: vBng___94+5C¡ýo
dword_40C194    dd 0BEAB080Dh, 461100FCh, 35507D3Bh
                                        ; DATA XREF: vBng___63+43¡ýo
dword_40C1A0    dd 0D3B1221Eh, 9426F0C1h, 0C8F49391h, 0E94DABE2h
                                        ; DATA XREF: vBng___91_stk+18¡ýo
dword_40C1B0    dd 63ED0C1Fh, 833E16C1h, 6C496B48h, 0CF1A3DB7h
                                        ; DATA XREF: vBng___84_stk+5C¡ýo
dword_40C1C0    dd 872FE2Bh, 8304C838h, 0D20F8BEFh, 41869B0Ch
                                        ; DATA XREF: vBng___195_stk+51¡ýo
dword_40C1D0    dd 0F467ED1Eh, 72872BBEh, 959414D2h, 0A1047F23h
                                        ; DATA XREF: vBng___88_stk+5E¡ýo
dword_40C1E0    dd 0D75E9830h, 2F0D12F7h, 72957E66h, 0
                                        ; DATA XREF: vBng___196+14A¡ýo
dword_40C1F0    dd 42DE2320h, 0B6403FABh, 0DD1D1E65h, 8237DD8Ah
                                        ; DATA XREF: vBng___44_stk+24¡ýo
dword_40C200    dd 7F38212Eh, 432077B0h, 0FE5592A2h
                                        ; DATA XREF: vBng___61+35¡ýo
dword_40C20C    dd 0C9E3BE2Dh, 0E0C9FD02h, 0F8EDA949h, 2 dup(0)
                                        ; DATA XREF: vBng___80+130¡ýo
dword_40C220    dd 1EA3C035h, 0FDB4F15Eh, 0B688974Fh, 76D61181h
                                        ; DATA XREF: vBng_h__16+2D¡ýo
dword_40C230    dd 49DAC832h, 135E8DBDh, 6B77A4EDh
                                        ; DATA XREF: vBng___145+30¡ýo
dword_40C23C    dd 2D9DB91Dh, 62FBC167h, 1DCBA5BAh, 2 dup(0)
                                        ; DATA XREF: vBng___136+30¡ýo
dword_40C250    dd 13FB4B1Eh, 78366ACFh, 0CD6FBE97h, 0F0AE3411h
                                        ; DATA XREF: vBng___5_stk+40¡ýo
dword_40C260    dd 0CC3C6220h, 5CD5334Bh, 0B500E5A1h, 1BCB83D2h
                                        ; DATA XREF: vBng___105_stk+27¡ýo
dword_40C270    dd 0B28AA01Fh, 67137574h, 58AFB63Ah, 0C0C2B29Ah
                                        ; DATA XREF: vBng___120_stk+28¡ýo
dword_40C280    dd 85306917h, 5FBA32Dh, 427784C6h, 0
                                        ; DATA XREF: vBng___5+21¡ýo
dword_40C290    dd 0D31AA31Eh, 0D72EC66Fh, 0EA9B2E02h, 0AB4C0FCh
                                        ; DATA XREF: vBng___176_stk+13¡ýo
dword_40C2A0    dd 5A700C22h, 950D98CEh, 2778C0D2h, 0
                                        ; DATA XREF: vBng___168+37¡ýo
dword_40C2B0    dd 4CE2E52Bh, 24080D5h, 0D6E2BA0h, 2C45ACFDh
                                        ; DATA XREF: vBng___170_stk+74¡ýo
dword_40C2C0    dd 12A05A11h, 97CD8C6Eh, 0E2BC4B25h, 6318697Ah
                                        ; DATA XREF: vBng___121_stk+4D¡ýo
dword_40C2D0    dd 0F131741Ch, 7ED7716Dh, 0F6FAA5F2h, 57FCB645h
                                        ; DATA XREF: vBng___62_stk+49¡ýo
dword_40C2E0    dd 2B2E4F1Fh, 85F784Ch, 19C1E4A5h, 0BD657F0Ah
                                        ; DATA XREF: vBng___174_stk+21¡ýo
dword_40C2F0    dd 2408E308h, 3345C17Dh, 0D5B64633h, 0
                                        ; DATA XREF: vBng___180+3D¡ýo
dword_40C300    dd 92EC5113h, 0D290A24Dh, 82EC9159h, 0CE396FA5h
                                        ; DATA XREF: vBng___116_stk+26¡ýo
dword_40C310    dd 0E1533720h, 230906F2h, 97C0805Dh, 29614D56h
                                        ; DATA XREF: vBng___156_stk+39¡ýo
dword_40C320    dd 3A881C00h, 49C8947Ah, 0EA4C221Ch
                                        ; DATA XREF: vBng_h__2+1C¡ýo
dword_40C32C    dd 0A2B42B2Dh, 7C66399Ah, 0A121EAEEh
                                        ; DATA XREF: vBng___96+3F¡ýo
dword_40C338    dd 380F9214h, 0BDF4AB0Bh, 0C478B0C9h
                                        ; DATA XREF: vBng___192+32¡ýo
dword_40C344    dd 0F3889C20h, 5DC2B271h, 7B4262DEh
                                        ; DATA XREF: vBng___38+60¡ýo
dword_40C350    dd 4BA64812h, 0EF8D80Dh, 7C0E1815h, 0E874950Eh
                                        ; DATA XREF: vBng___149_stk+4A¡ýo
dword_40C360    dd 0E0FFAF2Bh, 5DB32619h, 0A71EAF38h, 0A02BD16Fh
                                        ; DATA XREF: vBng___127_stk+34¡ýo
dword_40C370    dd 0A3FC1F13h, 0B01B5638h, 8DC8A6B3h, 0C3F427D3h
                                        ; DATA XREF: vBng___178_stk+48¡ýo
dword_40C380    dd 0D467F008h, 24DBB9B3h, 1E6631Dh
                                        ; DATA XREF: vBng___129+46¡ýo
dword_40C38C    dd 7FDCCE2Dh, 6A06D30Ah, 7666B7A7h
                                        ; DATA XREF: vBng___188+3A¡ýo
dword_40C398    dd 0D0B1702Fh, 0A7E49D54h, 2A4FB6Fh
                                        ; DATA XREF: vBng___122+3D¡ýo
dword_40C3A4    dd 0C4B3D312h, 64811A69h ; DATA XREF: vBng___73+4D¡ýo
dword_40C3AC    dd 88D67F06h, 376A3CE8h, 2F583805h
                                        ; DATA XREF: vBng_h__21+31¡ýo
dword_40C3B8    dd 0EDD0C71Bh, 0F816BFE7h, 958577D1h
                                        ; DATA XREF: vBng___159+60¡ýo
dword_40C3C4    dd 23A1CC26h, 0ED9F98ADh, 89EF75F6h
                                        ; DATA XREF: vBng_h__3_stk+4E¡ýo
dword_40C3D0    dd 0D02C982Bh, 0B11E035h, 6710D2Ch, 7E5088CCh
                                        ; DATA XREF: vBng___83_stk+58¡ýo
dword_40C3E0    dd 287B8812h, 0D80169A1h, 0A7A71B65h, 0E980B530h
                                        ; DATA XREF: vBng___118_stk+5A¡ýo
dword_40C3F0    dd 385BB81Fh, 5FE45021h, 6414DB96h, 42B14B16h
                                        ; DATA XREF: vBng___148_stk+68¡ýo
dword_40C400    dd 16D80C17h, 0A63856E9h, 85CF9958h, 27BC0851h
                                        ; DATA XREF: vBng_h__37+3D¡ýo
dword_40C410    dd 988F4D21h, 0F1DBDCEDh, 3778E78Dh
                                        ; DATA XREF: vBng___31+40¡ýo
dword_40C41C    dd 0EA65FD14h, 38F2DE8Eh, 0BC2BC5BBh, 2 dup(0)
                                        ; DATA XREF: vBng___91+3C¡ýo
dword_40C430    dd 1FD63F12h, 9E366E59h, 9E83D575h, 0B6C17326h
                                        ; DATA XREF: vBng___75_stk+23¡ýo
dword_40C440    dd 11AD7119h, 7CBFAA93h, 8ADDD30Eh
                                        ; DATA XREF: vBng___77+44¡ýo
dword_40C44C    dd 3237D22Eh, 3963BABCh, 6DFEC405h, 2 dup(0)
                                        ; DATA XREF: vBng_h__1+23¡ýo
dword_40C460    dd 0A96DDD1Eh, 6D374502h, 9AEBBF04h, 36312CDAh
                                        ; DATA XREF: vBng___157_stk+5A¡ýo
dword_40C470    dd 6E888612h, 0A050B841h, 69FF1B29h, 0C113A43Dh
                                        ; DATA XREF: vBng___186_stk+4C¡ýo
dword_40C480    dd 0BC70700Fh, 0E84681DAh, 77D58E57h, 0
                                        ; DATA XREF: vBng___107+14F¡ýo
dword_40C490    dd 0A71EA31Fh, 0D52CFF8Eh, 34457A97h, 0BE98985Fh
                                        ; DATA XREF: vBng___59_stk+51¡ýo
dword_40C4A0    dd 62607B1Eh, 6499A4E2h, 0A757DA48h, 62B7E794h
                                        ; DATA XREF: vBng___53_stk+28¡ýo
dword_40C4B0    dd 0AC2F6C02h, 0D32607EAh, 475956F2h
                                        ; DATA XREF: vBng___165+49¡ýo
dword_40C4BC    dd 0DE0EA810h, 867886C8h, 710CBD18h, 2 dup(0)
                                        ; DATA XREF: vBng___130+49¡ýo
dword_40C4D0    dd 0FBC84913h, 55EA7953h, 8DA8A1F5h, 0C6E838E2h
                                        ; DATA XREF: vBng___20_stk+20¡ýo
dword_40C4E0    dd 26EB705h, 5D0C68D5h, 0B1C93402h, 0
                                        ; DATA XREF: vBng___128+131¡ýo
dword_40C4F0    dd 1F407A2Bh, 46046975h, 6959C394h, 58174C7Ch
                                        ; DATA XREF: vBng___28_stk+31¡ýo
dword_40C500    dd 10EB6301h, 50B863C4h, 35D7463Ch, 0
                                        ; DATA XREF: vBng___104+3C¡ýo
dword_40C510    dd 1E195A13h, 0D9AD5F2Fh, 0A4C8A3A0h, 0ACB4B938h
                                        ; DATA XREF: vBng___65_stk+4E¡ýo
dword_40C520    dd 0D5631D1Dh, 74F2F778h ; DATA XREF: vBng_1__1_stk+2B¡ýo
dword_40C528    dd 1D958204h, 0B458DBE4h, 9350756Dh, 3 dup(0)
                                        ; DATA XREF: vBng___49+63¡ýo
dword_40C540    dd 107FD813h, 12E503B8h, 75D2863Dh, 5A50F759h
                                        ; DATA XREF: vBng_stk+22¡ýo
dword_40C550    dd 2139F711h, 1130606Eh, 13485945h, 7F872FE7h
                                        ; DATA XREF: vBng___100_stk+3C¡ýo
dword_40C560    dd 0F1766920h, 353450F2h, 2171E788h, 1F97C52Bh
                                        ; DATA XREF: vBng___18_stk+37¡ýo
dword_40C570    dd 33CC7711h, 0B8096F91h, 0CC7C55ADh, 607A0877h
                                        ; DATA XREF: vBng___6_stk+12¡ýo
dword_40C580    dd 3AD06815h, 19A79443h, 0E08C105Ch, 0
                                        ; DATA XREF: vBng___163+43¡ýo
dword_40C590    dd 0E603C21Fh, 4E07E041h, 1ABF1389h, 0C8A5A919h
                                        ; DATA XREF: vBng___71_stk+48¡ýo
dword_40C5A0    dd 4BB5020h, 0F355BF51h, 0E5003D2Bh, 5940C52Ah
                                        ; DATA XREF: vBng___87_stk+2F¡ýo
dword_40C5B0    dd 217AB211h, 0C8A7A434h, 2 dup(0)
                                        ; DATA XREF: vBng___98+47¡ýo
dword_40C5C0    dd 2BFB81Ch, 64DAA337h, 4C2EAC96h, 257B6771h
                                        ; DATA XREF: vBng___160_stk+55¡ýo
dword_40C5D0    dd 0A6030633h, 0C847EB6Bh, 0CED6D85Dh, 0
                                        ; DATA XREF: vBng_h__32+1B¡ýo
dword_40C5E0    dd 0D77A3911h, 0E214B2AEh, 0DD3389AFh, 0B33D4351h
                                        ; DATA XREF: vBng___103_stk+81¡ýo
dword_40C5F0    dd 6B843A2Bh, 0F8BD877h, 22385B89h, 0F1CD0177h
                                        ; DATA XREF: vBng___94_stk+10¡ýo
dword_40C600    dd 1A71532Fh, 0E7913BE5h, 11E2C8DAh, 0
                                        ; DATA XREF: vBng___153+42¡ýo
dword_40C610    dd 7116111Eh, 297C0175h, 0AD5A5331h, 79F047E7h
                                        ; DATA XREF: vBng___184_stk+25¡ýo
dword_40C620    dd 0D935C405h, 0B81F32FCh, 0C3314578h, 0
                                        ; DATA XREF: vBng_h__stk+43¡ýo
dword_40C630    dd 7F6CBA11h, 759ABA23h, 0DF8E4C60h, 6649A54h
                                        ; DATA XREF: vBng___110_stk+1B¡ýo
dword_40C640    dd 9E6AC12Ah, 808AE1D2h, 0D4DDEA6Eh
                                        ; DATA XREF: vBng_h__11+16¡ýo
dword_40C64C    dd 946D7221h, 59C41A95h, 3 dup(0)
                                        ; DATA XREF: vBng_1__stk+52¡ýo
dword_40C660    dd 0D42BD61Fh, 0F838123Fh, 7373A3EAh, 0C0C4F36Bh
                                        ; DATA XREF: vBng___187_stk+36¡ýo
dword_40C670    dd 0FA38B11Eh, 8F1B6BA2h, 0A8A4002Ah, 9E4EA523h
                                        ; DATA XREF: vBng___29_stk+28¡ýo
dword_40C680    dd 48C15E0Fh, 776CF1A0h, 8565B536h
                                        ; DATA XREF: vBng___121+35¡ýo
dword_40C68C    dd 5C3D140Dh, 45EA994Dh, 7CB540DFh
                                        ; DATA XREF: vBng___171+3C¡ýo
dword_40C698    dd 0F795771Ah, 7C4407EEh, 0C36562E3h, 3 dup(0)
                                        ; DATA XREF: vBng_h__34+6B¡ýo
dword_40C6B0    dd 0FF831612h, 0B0C26092h, 55934E92h, 0B85BACEEh
                                        ; DATA XREF: vBng___48_stk+32¡ýo
dword_40C6C0    dd 840C8B11h, 9170DAC2h, 0F23F31EDh, 0C17AA0C3h
                                        ; DATA XREF: vBng___40_stk+2E¡ýo
dword_40C6D0    dd 0FDC1AE13h, 7459811Fh, 0CDAFF042h, 0
                                        ; DATA XREF: vBng___6+41¡ýo
dword_40C6E0    dd 86BC6B20h, 169B4F32h, 575BCF6Dh, 0DAB4B48Dh
                                        ; DATA XREF: vBng___111_stk+28¡ýo
dword_40C6F0    dd 0AC8EA520h, 4CF2AAB1h, 60A4651Eh, 10236B1Bh
                                        ; DATA XREF: vBng___24_stk+2B¡ýo
dword_40C700    dd 24DD0911h, 5F7A7B6Fh, 0DCA41777h, 2C157B35h
                                        ; DATA XREF: vBng___108_stk+31¡ýo
dword_40C710    dd 0A45D821Fh, 0F8997CDDh, 0DF871249h, 0
                                        ; DATA XREF: vBng_h__10+1F¡ýo
dword_40C720    dd 9992C313h, 0D838CDECh, 0C38F72BBh, 617DB372h
                                        ; DATA XREF: vBng___109_stk+28¡ýo
dword_40C730    dd 534ED922h, 0E7C4A978h, 31134CB0h
                                        ; DATA XREF: vBng___142+2D¡ýo
dword_40C73C    dd 16B5DF11h, 28793146h, 51897DBh, 2 dup(0)
                                        ; DATA XREF: vBng_h__27+14¡ýo
dword_40C750    dd 0B8ACA21Eh, 2B797EDh, 0B03DD8B0h, 0EB1F0D8Fh
                                        ; DATA XREF: vBng___177_stk+2E¡ýo
dword_40C760    dd 0FCDDCB08h, 0DF6B0945h, 82615280h, 0
                                        ; DATA XREF: vBng___7+57¡ýo
dword_40C770    dd 0ACEC7D1Eh, 6C898C35h, 9118A55h, 0DD82CD14h
                                        ; DATA XREF: vBng___26_stk+5C¡ýo
dword_40C780    dd 0EFE78910h, 0C898F926h, 3B678A4Dh
                                        ; DATA XREF: vBng___120+3E¡ýo
dword_40C78C    dd 82A6CE37h, 90B1FBFDh, 0DC7D81F1h, 2 dup(0)
                                        ; DATA XREF: vBng___99+35¡ýo
dword_40C7A0    dd 578FC322h, 0A31D7749h, 0BF3F25B6h, 6C57BC35h
                                        ; DATA XREF: vBng_h__28+15¡ýo
dword_40C7B0    dd 0F0DBFD19h, 74BD12B0h, 2EFE8C04h
                                        ; DATA XREF: vBng___167+47¡ýo
dword_40C7BC    dd 2BE8920h, 0A382FF9Ah, 3E812A19h, 2 dup(0)
                                        ; DATA XREF: vBng___14+38¡ýo
dword_40C7D0    dd 0D9E6062Bh, 2B2E64B7h, 22BB2F10h, 0ACB537AAh
                                        ; DATA XREF: vBng___193_stk+5D¡ýo
dword_40C7E0    dd 8BCEDD2Bh, 3AA30E87h, 0BF343C3Dh
                                        ; DATA XREF: vBng___132+58¡ýo
dword_40C7EC    dd 4D8F2604h, 0F7D1F2B6h, 9A3D57B9h
                                        ; DATA XREF: vBng___78+24¡ýo
dword_40C7F8    dd 0F252FE11h, 7B98B604h, 18E9D67h
                                        ; DATA XREF: vBng___124+44¡ýo
dword_40C804    dd 23E0EA0Ch, 0F1593D10h, 58E9B965h
                                        ; DATA XREF: vBng___89+37¡ýo
dword_40C810    dd 75293913h, 0B682F98h, 57C07359h, 9C67069Dh
                                        ; DATA XREF: vBng___46_stk+51¡ýo
dword_40C820    dd 0E17B6B16h, 0EDB7AFC1h, 0D7356312h, 0
                                        ; DATA XREF: vBng___186+37¡ýo
dword_40C830    dd 1C33612Bh, 0B504BD5Ah, 1AB5C1F0h, 5D99A79h
                                        ; DATA XREF: vBng___138_stk+55¡ýo
dword_40C840    dd 0AB3DEE11h, 0FC2968A3h, 2D19D92Eh, 3C95010Fh
                                        ; DATA XREF: vBng___200_stk+25¡ýo
dword_40C850    dd 34E65D0Bh, 0C1FF1BE4h, 5FE8FF7Bh
                                        ; DATA XREF: vBng_h__23+21¡ýo
dword_40C85C    dd 0B5DA2725h, 29EE9DF5h, 236F3BF6h, 2 dup(0)
                                        ; DATA XREF: vBng___71+3E¡ýo
dword_40C870    dd 7992C42Eh, 91D066C1h, 0D7ED0286h, 87BCED67h
                                        ; DATA XREF: vBng_h__40+45¡ýo
dword_40C880    dd 0A276D61Ch, 7168C3EEh, 5D6196A2h, 0E5F2066Fh
                                        ; DATA XREF: vBng___199_stk+51¡ýo
dword_40C890    dd 1DA4B02Bh, 1A9E37B8h, 28E25Eh, 0FC42D179h
                                        ; DATA XREF: vBng___142_stk+3B¡ýo
dword_40C8A0    dd 353E7A2Ah, 0F4397ADAh, 902CAE9Ch, 0
                                        ; DATA XREF: vBng___195+3B¡ýo
dword_40C8B0    dd 848BFB12h, 113A1481h, 808A6CB6h, 62AC3A10h
                                        ; DATA XREF: vBng___132_stk+63¡ýo
dword_40C8C0    DD 0C8F3EF04H, 41451B26H ; DATA XREF:vBng_1__2 + 48¡ýo
dword_40A2C0    dd 9BE69730h, 0F175A71Fh, 7C895213h, 0
                                        ; DATA XREF: vBng___177+20¡ýo
dword_40A2D0    dd 1CD92A2Bh, 0AE75D278h, 39722028h, 0EC5EEA70h
                                        ; DATA XREF: vBng___197_stk+27¡ýo
dword_40A2E0    dd 1824ED02h, 0C421BA8Dh, 340D725Ah
                                        ; DATA XREF: vBng___56+5D¡ýo
dword_40A2EC    dd 147B2930h, 0AEEB931Ah, 1F47E2E5h
                                        ; DATA XREF: vBng___150+3E¡ýo
dword_40A2F8    dd 0CADD570Dh, 728FBCC6h, 6B5F801Fh, 3 dup(0)
                                        ; DATA XREF: vBng___113+42¡ýo
dword_40A310    dd 9CBD371Eh, 420F1B82h, 0E5DAC46Dh, 8586FC42h
                                        ; DATA XREF: vBng___11_stk+56¡ýo
dword_40A320    dd 72DAB420h, 0E0D671C0h, 0DD223FDEh
                                        ; DATA XREF: vBng___162+36¡ýo
dword_40A32C    dd 920B7323h, 30818172h, 9D2032E5h, 2 dup(0)
                                        ; DATA XREF: vBng_h__13+31¡ýo
dword_40A340    dd 0C487321Eh, 611F9115h, 60A657D6h, 0C9497814h, 1D03526Eh
                                        ; DATA XREF: vBng___39_stk+21¡ýo
                dd 3 dup(0)
dword_40A360    dd 3274181Eh, 0BE69166Fh, 8C92C1EFh, 0D148016h
                                        ; DATA XREF: vBng___96_stk+60¡ýo
dword_40A370    dd 0EFC4802Ch, 69AE226Ch, 0E947EAEh, 0
                                        ; DATA XREF: vBng___46+39¡ýo
dword_40A380    dd 265E6912h, 72C487ADh, 7D3B021Bh, 6DB04657h
                                        ; DATA XREF: vBng___54_stk+21¡ýo
dword_40A390    dd 9EF29032h, 0FE217E16h, 8C7255FDh
                                        ; DATA XREF: vBng___181+157¡ýo
dword_40A39C    dd 5C682100h, 0DCBB1875h, 5A4073F4h, 2 dup(0)
                                        ; DATA XREF: vBng___114+55¡ýo
dword_40A3B0    dd 41E3E81Fh, 4D33C361h, 7C7C0727h, 0C91659F1h
                                        ; DATA XREF: vBng___58_stk+28¡ýo
dword_40A3C0    dd 18DDB32Ch, 8848CA0Fh, 86574412h
                                        ; DATA XREF: vBng___152+3A¡ýo
dword_40A3CC    dd 0EAFE0C14h, 4F3906E0h, 0D026AA10h, 2 dup(0)
                                        ; DATA XREF: vBng___70+12A¡ýo
dword_40A3E0    dd 0F1FB0C11h, 0FF964682h, 6CA0B407h, 0D38A5CC4h
                                        ; DATA XREF: vBng___21_stk+10¡ýo
dword_40A3F0    dd 21EF042Ch, 1E5228E4h, 9E29F66Ah, 0C429BEB2h
                                        ; DATA XREF: vBng_h__26+14¡ýo
dword_40A400    dd 74DD2220h, 67D90B97h, 7EC5809h, 0
                                        ; DATA XREF: vBng___21+12A¡ýo
dword_40A410    dd 0FCB7C512h, 0E7485C21h, 0E3390F02h, 8F1AABA6h
                                        ; DATA XREF: vBng___102_stk+27¡ýo
dword_40A420    dd 7ACDE21Eh, 0C758D24Ch, 3575F449h, 0E307682Fh
                                        ; DATA XREF: vBng___17_stk+44¡ýo
dword_40A430    dd 9A9FC92Ch, 0BA999027h, 0F4CEB570h
                                        ; DATA XREF: vBng___101+45¡ýo
dword_40A43C    dd 0AFB7020Dh, 7FDA8790h, 70DADF52h
                                        ; DATA XREF: vBng___81+14E¡ýo
dword_40A448    dd 2C519E2Ah, 645CC0FDh ; DATA XREF: vBng_h__4+43¡ýo
dword_40A450    dd 768E352Bh, 88D7411Eh, 0B7ACDF40h, 9B4E51FFh
                                        ; DATA XREF: vBng_h__14+35¡ýo
dword_40A460    dd 0CF782612h, 6AB9CBF2h, 3A508E15h, 3EAAE796h
                                        ; DATA XREF: vBng___113_stk+28¡ýo
dword_40A470    dd 9D10A617h, 32C16D8Dh, 0F78F9139h, 0
                                        ; DATA XREF: vBng___25+30¡ýo
dword_40A480    dd 9D52231Ch, 0EF825FCFh, 4CE4B7A4h, 2EEFA526h
                                        ; DATA XREF: vBng___112_stk+22¡ýo
dword_40A490    dd 7B61DC19h, 9A762884h, 9BCAD740h
                                        ; DATA XREF: vBng___134_stk+2F¡ýo
dword_40A49C    dd 79B2800Eh, 0EC8AA4F0h, 5D55E9F6h, 2 dup(0)
                                        ; DATA XREF: vBng___146+3C¡ýo
dword_40A4B0    dd 838FF41Eh, 0DD7708EDh, 17160B90h, 4C2236Dh
                                        ; DATA XREF: vBng___190_stk+2B¡ýo
dword_40A4C0    dd 374CF532h, 1A5D5147h, 9645C16Ah, 0
                                        ; DATA XREF: vBng___16+140¡ýo
dword_40A4D0    dd 67F2D620h, 72857B5Eh, 50096835h, 54BD2550h
                                        ; DATA XREF: vBng___16_stk+20¡ýo
dword_40A4E0    DD 99504711H, 548BFC23H, 29F7EEDEH, 0A021023DH

dword_40C8E0    dd 455DE510h, 0FE83554Bh, 19E33023h, 0EF0D0F12h, 0D16DE826h
                                        ; DATA XREF: vBng___57_stk+41¡ýo
                dd 3 dup(0)
dword_40C900    dd 0BFA4BA1Ch, 9B4BCB6Fh, 95474B50h, 0F1FCB14Ah
                                        ; DATA XREF: vBng___90_stk+42¡ýo
dword_40C910    dd 55B4E312h, 0CE984719h, 7E8734F0h, 29E179CDh
                                        ; DATA XREF: vBng___171_stk+57¡ýo
dword_40C920    dd 6C9C6F25h, 388F467h, 7E9E9CECh, 0
                                        ; DATA XREF: vBng___110+147¡ýo
dword_40C930    dd 197E9A20h, 0D8FA0833h, 729084B4h, 0BFAA84ACh
                                        ; DATA XREF: vBng___180_stk+2F¡ýo
dword_40C940    dd 36442A12h, 0EAEF74CDh, 44A91021h, 72C51834h
                                        ; DATA XREF: vBng___168_stk+2C¡ýo
dword_40C950    dd 5357841Eh, 0FFA1BCEFh, 6088C60h, 0AEAFAA3Bh
                                        ; DATA XREF: vBng___19_stk+56¡ýo
dword_40C960    dd 0A21BE51Dh, 0AB242839h, 0D4C4C120h
                                        ; DATA XREF: vBng___1_stk+13¡ýo
dword_40C96C    dd 599B8316h, 8DFD8E60h ; DATA XREF: vBng___stk+2F¡ýo
dword_40C974    dd 56A0C02Eh, 165BC96Eh, 30D5248Dh
                                        ; DATA XREF: vBng___151+43¡ýo
dword_40C980    dd 0FF311413h, 5E068254h, 0BEC745F5h
                                        ; DATA XREF: vBng___198+34¡ýo
dword_40C98C    dd 0C45D620h, 65FE7B1Fh, 117B806Dh, 2 dup(0)
                                        ; DATA XREF: vBng___35+43¡ýo
dword_40C9A0    dd 0ADF76211h, 1639A311h, 890FBC9h, 36A65BBDh
                                        ; DATA XREF: vBng___41_stk+2B¡ýo
dword_40C9B0    dd 0C4C58612h, 715BCF21h, 0E55F3DC9h, 9522CE61h
                                        ; DATA XREF: vBng___144_stk+17¡ýo
dword_40C9C0    dd 7E3FD932h, 6B444BB4h, 3716771h, 0
                                        ; DATA XREF: vBng___28+29¡ýo
dword_40C9D0    dd 8F1F8720h, 6BB39412h, 0DFE71ACh, 3A245D98h
                                        ; DATA XREF: vBng___153_stk+21¡ýo
dword_40C9E0    dd 7321CB08h, 0A4BBDD54h ; DATA XREF: vBng__+21C¡ýo
dword_40C9E8    dd 0AA370F27h, 3E0FE0D7h, 0CBBA7C09h
                                        ; DATA XREF: vBng___43+131¡ýo
dword_40C9F4    dd 77BE7114h, 1898C88Bh, 0A1636F2Dh
                                        ; DATA XREF: vBng___158+36¡ýo
dword_40CA00    dd 0E3612C35h, 5244D72Eh, 0AB664D06h, 0
                                        ; DATA XREF: vBng___85+32¡ýo
dword_40CA10    dd 7C73621Fh, 0B5C2B023h, 6E2CFE1h, 1370CB86h
                                        ; DATA XREF: vBng___124_stk+43¡ýo
dword_40CA20    dd 97AC4612h, 78B44ECh, 0F03E47DDh, 538F0176h
                                        ; DATA XREF: vBng___12_stk+42¡ýo
dword_40CA30    dd 43AA3611h, 1DFFA354h, 0E4D2DA61h, 0
                                        ; DATA XREF: vBng_h__31+35¡ýo
dword_40CA40    DD 0EC3E451CH, 5EF239A2H, 1285D406H, 67B53EDAH
dword_40A9E0    dd 0C90CE60Eh, 74EAEF2Eh ; DATA XREF: vBng___27+12E¡ýo
dword_40A9E8    dd 0EE90502Ch, 2828962Bh, 9C91C632h
                                        ; DATA XREF: vBng___65+3F¡ýo
dword_40A9F4    dd 0BB459409h, 0C492A7EAh, 60C37638h
                                        ; DATA XREF: vBng___144+35¡ýo
dword_40AA00    dd 0D141E211h, 0ABF9E802h, 4D7B937h, 0A3732359h
                                        ; DATA XREF: vBng___23_stk+23¡ýo
dword_40AA10    dd 0D1BCA91Eh, 0F6ABA262h, 6E0705CCh, 0CD90E7F9h
                                        ; DATA XREF: vBng___104_stk+24¡ýo
dword_40AA20    dd 0E456B20h, 5358EC71h, 342EEE76h, 0C1C6341h
                                        ; DATA XREF: vBng___198_stk+23¡ýo
dword_40AA30    dd 88CF6B12h, 79AB56CDh, 5A9F0DD0h, 989D09DFh
                                        ; DATA XREF: vBng___131_stk+52¡ýo
dword_40AA40    dd 4719D11Ch, 0B4F7822h, 0E433D5CEh, 0EFDA6D6h
                                        ; DATA XREF: vBng___73_stk+4F¡ýo
dword_40AA50    dd 23457237h, 0A99ACBB9h, 3F26DBEBh
                                        ; DATA XREF: vBng___176+24¡ýo
dword_40AA5C    dd 0E0DE9236h, 894C83D5h, 11E4F0C9h
                                        ; DATA XREF: vBng___90+26¡ýo
dword_40AA68    dd 230FEF0Fh, 2F04CAD1h, 0D0CE7B04h, 3 dup(0)
                                        ; DATA XREF: vBng___39+1F¡ýo
dword_40AA80    dd 11DCB41Eh, 0DA2FBCEFh, 0DB3A1DABh, 34C0C4E8h
                                        ; DATA XREF: vBng___152_stk+23¡ýo
dword_40AA90    dd 153E2412h, 3A3503C1h, 0EEA0ACD9h, 3A6A8F3h
                                        ; DATA XREF: vBng___151_stk+4C¡ýo
dword_40AAA0    dd 3A8C141Fh, 40BEA86Ch, 13FAA398h, 79FCC76Dh
                                        ; DATA XREF: vBng___79_stk+61¡ýo
dword_40AAB0    dd 1FEAC90Ch, 0DCA6911Eh, 4A40E821h, 0
                                        ; DATA XREF: vBng_h__33+1D¡ýo
dword_40AAC0    dd 5A716505h, 90F2696Ch, 6BE0AA62h, 43918155h
                                        ; DATA XREF: vBng_h__24+28¡ýo
dword_40AAD0    dd 3ED0941Fh, 0ED955BF4h, 43004787h, 4713BC93h
                                        ; DATA XREF: vBng___194_stk+16¡ýo
dword_40AAE0    dd 0DD195B04h, 3B0DFEBBh ; DATA XREF: vBng_1__3_stk+34¡ýo
dword_40AAE8    dd 0AB182B30h, 1534D13Ah
                                        ; DATA XREF: VBNCB_unnamed_8000106b+18C1¡ýo
dword_40AAF0    dd 7AB24913h, 4538A401h, 0B2BBAF94h, 7DDDDCC0h
                                        ; DATA XREF: vBng___185_stk+42¡ýo
dword_40AB00    dd 6D20BF11h, 7FF3EBC5h ; DATA XREF: vBng___147+80¡ýo
dword_40AB08    dd 5DE7801Fh, 0BC469142h, 0F13D634Fh, 3 dup(0)
                                        ; DATA XREF: vBng___100+4B¡ýo
dword_40AB20    dd 5D6BF62Bh, 0A8C133FAh, 0BB30F66Dh, 8E9DA7EEh
                                        ; DATA XREF: vBng___147_stk+13¡ýo
dword_40AB30    dd 757D072Bh, 82B548C3h, 20C9AF5h
                                        ; DATA XREF: vBng___84+47¡ýo
dword_40AB3C    dd 0D4687E36h, 0D0A9E6F3h, 0ED5F2FA0h, 2 dup(0)
                                        ; DATA XREF: vBng___32+37¡ýo
dword_40AB50    dd 5DD93634h, 0EAD1C80h, 3E3693FEh, 893F7CE4h
                                        ; DATA XREF: vBng_h__12+2F¡ýo
dword_40AB60    dd 5A2CD10Ch, 98905798h, 0D12EE248h, 1CDC0395h
                                        ; DATA XREF: vBng___135+9D¡ýo
dword_40AB70    dd 2A83921Eh, 99725A0Fh, 0FFBE43DCh, 0
                                        ; DATA XREF: vBng___3+87¡ýo
dword_40AB80    dd 0A58BF120h, 0E221B773h, 235EE75Bh, 58FAE1D3h
                                        ; DATA XREF: vBng___123_stk+29¡ýo
dword_40AB90    dd 8061F212h, 0A38F98C3h, 88EA74C4h, 30D4D991h
                                        ; DATA XREF: vBng___182_stk+16¡ýo
dword_40ABA0    dd 4D41E729h, 0D5BC072Ah, 0F8A90C5Ah, 0F8F507C8h
                                        ; DATA XREF: vBng___67+32¡ýo
dword_40ABB0    dd 0FD9DEB30h, 4A32AC4Fh, 99C5730Bh, 0
                                        ; DATA XREF: vBng___75+59¡ýo
dword_40ABC0    dd 1EC69920h, 0C6B26F0Bh, 1ABE0F85h, 0FE40D0FAh
                                        ; DATA XREF: vBng___119_stk+2A¡ýo
dword_40ABD0    dd 0D50B4A21h, 0E28E3C43h, 0E4125729h, 6C04FB47h, 0FC1D1DD4h
                                        ; DATA XREF: vBng___97_stk+67¡ýo
dword_40ABE4    dd 82201Dh, 0D5EFDCD6h, 947B694Bh
                                        ; DATA XREF: vBng___87+41¡ýo
dword_40ABF0    dd 0DB9EE412h, 0F2DE5E23h, 40C9F424h, 0E738B692h
                                        ; DATA XREF: vBng___192_stk+21¡ýo
dword_40AC00    dd 0D0AC6413h, 69E24A0Ch, 7422CFBAh, 894C54D3h
                                        ; DATA XREF: vBng___81_stk+32¡ýo
dword_40AC10    dd 0D361B629h, 0E489AE11h, 0D8C25A35h
                                        ; DATA XREF: vBng___111+4B¡ýo
dword_40AC1C    dd 54416517h, 796E9824h, 0CBDDB86Ch
                                        ; DATA XREF: vBng_h__15+13¡ýo
dword_40AC28    dd 0B1F7131Eh, 3B278773h, 3A44011Ch, 3 dup(0)
                                        ; DATA XREF: vBng___88+129¡ýo
dword_40AC40    dd 77631C2Bh, 19417619h, 0E55034D5h, 399A4A3h
                                        ; DATA XREF: vBng___140_stk+4D¡ýo
dword_40AC50    dd 0B85FFC1Dh, 4263B196h, 0D9EF5742h, 0DB0B089Fh
                                        ; DATA XREF: vBng_h__35+24¡ýo
dword_40AC60    dd 3503AD13h, 4E26DA2Fh, 38CDF28Dh, 0B2EB49F9h
                                        ; DATA XREF: vBng___37_stk+5B¡ýo
dword_40AC70    dd 7A050B19h, 0E1883D49h, 20F7502h, 0
                                        ; DATA XREF: vBng___10_stk+3F¡ýo
dword_40AC80    dd 2583B1Fh, 0E30E8854h, 0A518A091h, 16AFFE8Dh
                                        ; DATA XREF: vBng___25_stk+29¡ýo
dword_40AC90    dd 2AB64604h, 7C30C5EFh, 6635DC52h
                                        ; DATA XREF: vBng___155+3A¡ýo
dword_40AC9C    dd 66533A11h, 0A13FED44h, 3 dup(0)
                                        ; DATA XREF: vBng___79+3B¡ýo
dword_40ACB0    dd 0AEE2B713h, 788C5A61h, 3CB978D4h, 0C36DF21Eh
                                        ; DATA XREF: vBng___129_stk+3E¡ýo
dword_40ACC0    dd 8E7F5512h, 2922CF0Ch, 9A75AB79h, 0F5754679h
                                        ; DATA XREF: vBng___101_stk+1F¡ýo
dword_40ACD0    dd 0C4374A27h, 600F4C94h, 0F84DEBFFh
                                        ; DATA XREF: vBng___140+46¡ýo
dword_40ACDC    dd 12F55D2Ch, 0F4818ED1h, 4243F4Dh
                                        ; DATA XREF: vBng___3_stk+22¡ýo
dword_40ACE8    dd 4666B10Bh, 0E217960Ch, 0FEFCCA11h, 2 dup(0)
                                        ; DATA XREF: vBng___102+37¡ýo
dword_40ACFC    dd 0                    ; DATA XREF: vBng_0+89¡ýo
dword_40AD00    dd 7183A91Fh, 0F1E081h, 0C5969C10h, 615EC665h
                                        ; DATA XREF: vBng___35_stk+F¡ýo
dword_40AD10    dd 7F27021Fh, 4132760Eh, 553C2966h, 96DC5F3Ch
                                        ; DATA XREF: vBng___128_stk+2F¡ýo
dword_40AD20    dd 6059B417h, 0EAB63BCEh, 2 dup(0)
                                        ; DATA XREF: vBng___143+4D¡ýo
dword_40AD30    dd 0A0E2EE11h, 5C222691h, 6706E95Ah, 0B1F025BFh
                                        ; DATA XREF: vBng___7_stk+45¡ýo
dword_40AD40    dd 5B905518h, 0A2E68A3h ; DATA XREF: vBng___138+32¡ýo
dword_40AD48    dd 0D3FBE110h, 7C936C24h, 0D5826EABh
                                        ; DATA XREF: vBng___47+43¡ýo
dword_40AD54    dd 0D4EBB118h, 0AFEE03A6h, 33C9CD77h
                                        ; DATA XREF: vBng___54+2B¡ýo
dword_40AD60    dd 7B0EB420h, 0BAEE0D5Dh, 8E6893FDh
                                        ; DATA XREF: vBng___20+3C¡ýo
dword_40AD6C    dd 7AB25D13h, 6553A8AAh, 3 dup(0)
                                        ; DATA XREF: vBng___193+41¡ýo
dword_40AD80    dd 56D94B1Fh, 14D5B06Dh, 267B8EC2h, 392C879Ch
                                        ; DATA XREF: vBng___181_stk+61¡ýo
dword_40AD90    dd 5BEDF111h, 8E000183h, 0CCD193DFh, 43B34915h
                                        ; DATA XREF: vBng___22_stk+49¡ýo
dword_40ADA0    dd 6B2E9813h, 98CAB0ECh, 3D278F71h, 0
                                        ; DATA XREF: vBng___166+3B¡ýo
dword_40ADB0    dd 42EED51Eh, 0F9451F2Dh, 0A27083D5h, 528EC9F1h
                                        ; DATA XREF: vBng___158_stk+35¡ýo
dword_40ADC0    dd 4A7C3F2Bh, 1E7749Fh, 0B4077DF7h, 0
                                        ; DATA XREF: VBNCB_unnamed_80001ec8+91¡ýo
dword_40ADD0    dd 75E5AB11h, 0BC9D4FD6h, 0B5680273h, 9BA40995h, 39650379h
                                        ; DATA XREF: vBng___137+DE¡ýo
                                        ; vBng___1+15C¡ýo ...
                dd 492E93D5h, 4C17D225h, 62779587h, 1ED9D412h, 7E97D021h
                dd 7DEA4EEEh, 8E221A9Eh, 6EC7B22Eh, 0C82668C0h, 3E926234h
                dd 0FB1ED94Bh, 889C6D18h, 0CB8B3879h, 0A0CA2B22h, 53CEFAEDh
                dd 0B1E69342h, 957AB324h, 0DD027F8Fh, 2EC1B5D4h, 21BBEB83h
                dd 3EF15A04h, 0CF3F8453h, 60E99589h, 9BB1B13Fh, 0B3A35A07h
                dd 0D9B5E045h, 6C9DE2DFh, 39F6FF9Fh, 80C83726h, 0D90DFD38h
                dd 0F7D3D67Ch, 0F5D3A709h, 0ED44A8ABh, 0FD73AAE7h, 0CC7C9FD0h
                dd 0FB54AAFh, 0D3B2EF1Eh, 7585F27Dh, 0B5813EEh, 1C3BA60Bh
                dd 0FEB1D652h, 0A7DA7EDEh, 27454A62h, 6FC2A3A5h, 8D786D8Bh
                dd 0E82FC192h, 8686B54Eh, 0CC3B1BA7h, 0FAA1F782h, 0B98C6968h
                dd 0FC5CBA83h, 27BF9336h, 391A26E9h, 2B237EEBh, 535457B7h
                dd 4C96CC29h, 1734DC9Fh, 0AB92EBFDh, 0A609D0A4h, 0E26A4DB3h
                dd 73570080h, 5D1B907Fh, 759AC736h, 541FD47Ch, 832AE8C6h
                dd 63CF6718h, 2A2AEA81h, 0C0159669h, 0AA6115B3h, 371CC72Eh
                dd 0BD66EC36h, 0C96D22D0h, 5AF810FAh, 0F3743DEh, 0AA307B95h
                dd 13FF6403h, 57468657h, 0EB948938h, 97BD32EDh, 0D9FCF0A3h
                dd 28CFA2D4h, 0B70641Ah, 0BFD5A99Bh, 0DE5771F8h, 143D51B8h
                dd 0C508BFBAh, 8145DA7Eh, 9847D5DFh, 8ED7BF1Fh, 44BCA808h
                dd 2AAF2B17h, 0F2655A91h, 604E0A20h, 4D6CEB87h, 0C00D1A4h
                dd 646DBDA8h, 6F5A4A70h, 3013BE2Bh, 0DEE816A3h, 3FE86B7Bh
                dd 0C83691DCh, 0D9004590h, 0D57C6801h, 922DA7E3h, 0E9EF81B8h
                dd 3C1FE0D8h, 0C3251D51h, 24A9AC82h, 4578D552h, 8E473646h
                dd 70FACBFEh, 2152D613h, 675D69F1h, 4B7559E8h, 2E5B39DDh
                dd 171ED72Fh, 0ADBFCF8Ch, 765A3445h, 608B7507h, 86C8CD16h
                dd 0C9E23513h, 0C4D2E867h, 0CD1600h, 9148AB22h, 0E15D5034h
                dd 0FA0711F9h, 96DFB423h, 0AD38BC4Dh, 84A68327h, 9F4CE6D5h
                dd 0FB734A0Dh, 0DDFC45E9h, 0F49C368Dh, 61DBA81Fh, 0D16FE5EDh
                dd 4BB88447h, 343DE356h, 13A16F44h, 4C12193Eh, 0C9FF3D35h
                dd 6EE6A93Eh, 0C8DDF09Eh, 5036E761h, 1C3C8BD2h, 0A53D6D2Bh
                dd 9160D343h, 0BF490534h, 91DAB27Eh, 648138BCh, 6FB479DFh
                dd 7BABD53Fh, 0C13E1C2Eh, 68C5CF14h, 0BDBBEF09h, 842CC7Dh
                dd 224FE29Ch, 0E3403A0Ah, 62B306D8h, 0D74725DFh, 0F8D5C757h
                dd 5053F3CFh, 5553E697h, 25965601h, 4ED44804h, 0B8020460h
                dd 0F729722Fh, 3C7EDDEh, 516770A6h, 0C8D2A21Eh, 0FD9EC36Ch
                dd 0EFB16338h, 74CA6C00h, 0D6DEDAEFh, 50422416h, 0C5313576h
                dd 50C55507h, 2958F794h, 5359AE24h, 0ABE2DC1Dh, 0F4A0F6FDh
                dd 0A7257E9Dh, 83E051CEh, 0C5F84D6Eh, 0E85774EDh, 5C444118h
                dd 0C59B00B5h, 49E4FA40h, 5BC8797h, 0B5E0FFF7h, 0D9A0CC5Eh
                dd 0F58B424Ah, 0AB1540F8h, 4526103Eh, 39B6A67Dh, 40C9D31Dh
                dd 8190388Ch, 8BB7417Dh, 0ED5A427Fh, 6B632818h, 28343E7Dh
                dd 0ADD9B0E1h, 0F15386C5h, 0AA5F2E85h, 0B14FD882h, 6AD40438h
                dd 22EF78ADh, 49608D7Eh, 7428B337h, 0AEE82DDDh, 0D457841h
                dd 8FFD2042h, 72CF0477h, 37441E41h, 23E6A1B1h, 98BC14F3h
                dd 15C76149h, 0F2E443BEh, 1A9D3A36h, 97AC61B9h, 0EE73334Ch
                dd 890B30CBh, 16143711h, 16557EA1h, 97F68FC4h, 9B1BE361h
                dd 0D2799B9Eh, 7C329CA1h, 4E2CDB43h, 78F8FD9Eh, 0D0A99D4Ah
                dd 0A45FCBC7h, 0CBFB8A86h, 192A7F5Dh, 0AE6E650Ah, 49919276h
                dd 0DAC06BFh, 35E0FF77h, 0D9A0C45Eh, 0FD9BC24Ah, 2B1550F8h
                dd 4527102Eh, 31B6A67Dh, 41C1C39Ch, 8190308Ch, 8BB74175h
                dd 0EC5A427Fh, 6BE32808h, 2034BE75h, 0ADD9B061h, 0E1D28EC5h
                dd 0AA5F2E85h, 304FD883h, 6AD40C28h, 22EFF9ADh, 49688DFEh
                dd 64A9BB37h, 0A6F82CDDh, 0D4D68C1h, 8F7D2042h, 7ADF0477h
                dd 0B6441E41h, 3367A1B1h, 98BC14FBh, 14CF7148h, 0F2E443BEh
                dd 1A9D3A36h, 96A46139h, 0FE73334Ch, 890B30C3h, 171C3790h
                dd 16557EA1h, 97E60FC4h, 9A13E3E0h, 0C2789B8Eh, 74321CA9h
                dd 4E24CBC3h, 78F8FD9Eh, 0D8A91D4Ah, 0A55FCBC7h, 0DBFA8296h
                dd 112AFF55h, 2E66750Bh, 49909266h, 5BC06BFh, 35E0FFF7h
                dd 0D921C45Eh, 0F58B424Ah, 0AA1550F9h, 4526103Eh, 39B6A67Dh
                dd 40C1D31Dh, 9111388Ch, 8BA7C07Dh, 6C5A427Eh, 6BE32808h
                dd 28343E7Dh, 0ADD1B060h, 0E15286C5h, 0A25FAF85h, 314FD883h
                dd 7A540438h, 2AEF78A5h, 49688DFEh, 7429BB37h, 0A6E8ACDDh
                dd 0C456840h, 8F7D2852h, 7ADF0477h, 0B6441E41h, 2366A9B1h
                dd 90AC94F3h, 94C771C9h, 0F2E443AEh, 1A9DBB36h, 16AC61B9h
                dd 0EE723B4Ch, 891BB0CBh, 96143711h, 16557EB1h, 97F68FC4h
                dd 9B1BF3E1h, 0C279938Eh, 74321CA9h, 4E24CBC3h, 7879FD9Eh
                dd 0D0A99D4Ah, 0A457DB47h, 0DB7B8A86h, 113A7F55h, 0AE6E650Bh
                dd 49919276h, 0DBC87BFh, 35E0FFF7h, 0D921C45Eh, 0F59B4342h
                dd 0AB1550F9h, 5527103Eh, 39B6A67Dh, 40C1C39Dh, 9110389Ch
                dd 8BB7C07Dh, 0EC5A427Eh, 7B622818h, 2034BE75h, 0ADD9B0E1h
                dd 0E1528EC5h, 0AA4FAF85h, 304FD882h, 7A540C28h, 22EF78A5h
                dd 0C9689D7Eh, 6429BB37h, 0A6E8ACDDh, 0C457840h, 8F7D2852h
                dd 72CF0477h, 0B6441E41h, 2366A9B1h, 98BC14F3h, 15C76149h
                dd 0E2654BAEh, 1A9DBB36h, 96AC71B9h, 0FE723B4Ch, 891B30C3h
                dd 171C3791h, 16557EB1h, 9FE68FC4h, 1A1BE361h, 0D2789B8Eh
                dd 74321CA1h, 4E24CBC3h, 7878FD8Eh, 0D0B99C42h, 2457DB47h
                dd 0CBFA8286h, 113A7E5Dh, 2E6E650Ah, 59919266h, 5BC07B7h
                dd 0B4E8FFF7h, 0D9A0C45Eh, 0F58B4242h, 0AA1540F9h, 5526103Eh
                dd 39B62775h, 0C0C1C39Dh, 9110388Ch, 8BA7C07Dh, 0EC5A527Fh
                dd 6BE32008h, 20343E75h, 0ADD1B061h, 0E1D286C5h, 0A25F2E8Dh
                dd 304FC883h, 7A540C28h, 2AFFF8A5h, 0C9689D7Fh, 6429B327h
                dd 0A6F82DDDh, 0C457841h, 9FFC2042h, 72DF047Fh, 37441E41h
                dd 23E6A9B1h, 98AC94F3h, 14C76148h, 0E2E443AEh, 129D3A3Eh
                dd 96AC71B8h, 0FEF3334Ch, 811BB0C3h, 96143791h, 165476B1h
                dd 9FE68EC4h, 1A1BE361h, 0C2799B8Eh, 7C329CA9h, 0CE2CDB43h
                dd 6878FD8Eh, 0D0B99C42h, 2457DB47h, 0DB7B8A86h, 112AFF55h
                dd 2E6E750Bh, 49919266h, 5BC07BFh, 0B5E0FFF7h, 0D9A0C44Eh
                dd 0F58B4242h, 0AA1540F9h, 4527103Eh, 39B6A77Dh, 41C1D39Dh
                dd 8111389Ch, 83B7417Dh, 6C52527Eh, 7B622808h, 2824BF75h
                dd 0ADD9B0E1h, 0E1D28EC5h, 0AA5FAE8Dh, 304FD883h, 7AD40438h
                dd 2AFFF8A5h, 49608DFEh, 7429B337h, 0A6E8ACDDh, 0D4D6841h
                dd 8F7D2042h, 72CF0477h, 0B6440EC1h, 2367A1A1h, 98AC94F3h
                dd 94C76148h, 0F2E443AEh, 128DBB36h, 96A46139h, 0FEF3334Ch
                dd 890B31CBh, 961C2790h, 6D47EB1h, 97E68FCCh, 9B1BF3E0h
                dd 0D2789B8Eh, 7C221DA1h, 0CE2CCB43h, 78F8FD8Eh, 0D0B99D42h
                dd 0A55FDB47h, 0DB7B8286h, 192A7F55h, 0AE6E650Ah, 49909A76h
                dd 0DBC07BFh, 0B5E0FFF6h, 0D9A0C44Eh, 0FD9B424Ah, 2B1D4078h
                dd 55A7102Eh, 31B62775h, 40C9D31Dh, 9110308Ch, 83B7C07Dh
                dd 0EC52527Eh, 6B622808h, 2824BE75h, 2CD9B060h, 0F15386D5h
                dd 0AA5F2E85h, 0B14FD882h, 7AD40438h, 2AFFF9ADh, 0C9688DFEh
                dd 6428B327h, 0A6E82CDDh, 8D4D68C1h, 8FFD2852h, 72CF057Fh
                dd 37441E40h, 23E6A9B1h, 90AC14FBh, 94CF71C9h, 0E2654BAEh
                dd 128DBA3Eh, 16AC71B8h
                dd 0EE723B4Ch, 890B31CBh, 96143790h, 65476B1h, 97F68FC4h
                dd 1A13E361h, 0D279938Eh, 7C321CA1h, 4E24CB43h, 78F8F58Eh
                dd 0D0A91D42h, 245FDB47h, 0DBFA8286h, 112AFF55h, 2E6E650Ah
                dd 59919276h, 5BC06BFh, 0B4E8FF77h, 0D921C44Eh, 0F58B4242h
                dd 0AA1550F9h, 55A7182Eh, 31A6A67Dh, 40C9D31Dh, 8190389Ch
                dd 83B74175h, 0EC52527Eh, 7B632818h, 2824BF75h, 2CD9B061h
                dd 0E1528EC5h, 0AA4FAE8Dh, 304FC882h, 6AD50C28h, 2AEFF9ADh
                dd 49608D7Fh, 7429BB37h, 0A6E82DDDh, 8D457840h, 9FFD2052h
                dd 72CF047Fh, 374C0EC1h, 3367A1B1h, 98BC14FBh, 14CF71C9h
                dd 0E26543BEh, 129DBA36h, 97AC6139h, 0FE723B5Ch, 891B30C3h
                dd 16143790h, 6D476B1h, 97E60FCCh, 1A1BE3E1h, 0D279938Eh
                dd 74329CA1h, 4E2CDB43h, 6878FD9Eh, 0D0A99C42h, 0A55FDB47h
                dd 0DBFB8296h, 112A7F5Dh, 0AE66758Ah, 59109276h, 0DAC06BFh
                dd 0B4E8EFF6h, 0D9A0CC5Eh, 0F58B424Ah, 0AA1550F9h, 5527102Eh
                dd 39B62775h, 0C0C1C39Dh, 9110308Ch, 83B7C07Dh, 6C5A427Eh
                dd 6BE32808h, 2034BE7Dh, 0ADD9B0E1h, 0F15286C5h, 0A25F2E85h
                dd 314FC803h, 7A540438h, 22EFF9ADh, 49689D7Eh, 64A9B337h
                dd 0A6E82CD5h, 0C456840h, 8F7D2852h, 72DF057Fh, 0B7440E40h
                dd 3366A1B1h, 98BC15FBh, 14CF71C9h, 0E2E54BAEh, 1A9D3A3Eh
                dd 96A46139h, 0EE73334Ch, 811B31CBh, 171C3791h, 6D47EB1h
                dd 97E68FCCh, 1A1BF3E0h, 0C2F9938Eh, 74329CA9h, 4F2CCBC3h
                dd 7878F58Eh, 0D0A91D4Ah, 0A55FCBC6h, 0DBFA8286h, 192A7E5Dh
                dd 2E66758Ah, 49919276h, 0DAC06BFh, 0B4E8EFF7h, 0D920CC5Eh
                dd 0F59B424Ah, 0AA1550F8h, 55A7103Eh, 31A6A775h, 41C1D39Ch
                dd 8190389Ch, 8BB74175h, 0ED5A427Fh, 6BE32808h, 20343E7Dh
                dd 2DD9B061h, 0E1528EC5h, 0AA5FAF85h, 0B147C882h, 7AD50C38h
                dd 22EF78A5h, 0C8689D7Eh, 64A9B327h, 0A6E8ACDDh, 8D4D6841h
                dd 9FFD2852h, 7ADF847Fh, 37440EC1h, 2366A1B1h, 98AC14FBh
                dd 94C77148h, 0E2E443AEh, 129DBA3Eh, 96AC61B8h, 0FEF33B4Ch
                dd 891B31CBh, 961C3791h, 6D47EB1h, 97E60FCCh, 9B1BF3E0h
                dd 0C279938Eh, 7C321CA9h, 4F2CDB42h, 78F8F58Eh, 0D8A91D4Ah
                dd 245FCBC7h, 0DBFB8A86h, 192A7E5Dh, 2E6E758Ah, 49909A76h
                dd 0DBC07BFh, 0B4E8FF77h, 0D920C44Eh, 0FD9B4342h, 0AB154078h
                dd 4527103Eh, 31B6277Dh, 41C1C39Ch, 9111389Ch, 8BB7417Dh
                dd 0EC5A527Fh, 7B622818h, 2824BF75h, 0ADD9A061h, 0F15286C5h
                dd 0A25FAE85h, 3147C883h, 7A540C38h, 2AEFF8A5h, 0C9608D7Fh
                dd 7429B327h, 0A6E82DDDh, 0C457841h, 9FFC2042h, 72CF057Fh
                dd 0B7440E40h, 3366A9B1h, 98BC15FBh, 15C77148h, 0E26543BEh
                dd 129D3A3Eh, 96A461B8h, 0FEF3334Ch, 811BB0CBh, 171C3791h
                dd 16557EA1h, 9FE68EC4h, 9A13E361h, 0C2789B9Eh, 74329CA9h
                dd 4F2CCB43h, 6878FD9Eh, 0D8A99D42h, 0A55FCBC7h, 0CBFA8296h
                dd 113A7E5Dh, 0AE66758Ah, 59109276h, 5BC87B7h, 35E0FF77h
                dd 0C921C45Eh, 0F59B4242h, 2B1540F9h, 4526102Eh, 31B6277Dh
                dd 0C0C1D31Dh, 8190308Ch, 8BA7C175h, 0EC5A427Eh, 6BE32818h
                dd 20343E7Dh, 0ADD1B0E1h, 0F1528EC5h, 0A25FAE85h, 314FD883h
                dd 7A540438h, 22EF78ADh, 49689D7Eh, 6428B337h, 0AEE8ACD5h
                dd 8D4D68C1h, 8FFD2852h, 72DF047Fh, 0B6441E40h, 23E6A1A1h
                dd 98AC94F3h, 14CF71C9h, 0E26543BEh, 128DBB36h, 97AC6139h
                dd 0FE73334Ch, 811BB0C3h, 16143711h, 6D476B1h, 9FE68EC4h
                dd 9A13E3E1h, 0D279938Eh, 74329CA1h, 0CE2CDB43h, 78F8F58Eh
                dd 0D0A91D4Ah, 245FCBC7h, 0DB7B8A86h, 592AFF5Dh, 0C138FEF4h
                dd 9 dup(0)
dword_40B9F0    dd 79412011h, 0B3F44C90h, 0E21B1035h
                                        ; DATA XREF: vBng___141+37¡ýo
dword_40B9FC    dd 1393AA0Dh, 0FB7CAA9Ch, 1D8E5CE8h
                                        ; DATA XREF: vBng___18+3E¡ýo
dword_40BA08    dd 0F000F28h, 10BA6F51h ; DATA XREF: vBng___93+37¡ýo
dword_40BA10    dd 893FB122h, 610058BAh, 0CA2FC6ACh
                                        ; DATA XREF: vBng___57+42¡ýo
dword_40BA1C    dd 0A9979236h, 64E9BDD7h, 2465E4DBh, 2 dup(0)
                                        ; DATA XREF: vBng___183+11B¡ýo
dword_40BA30    dd 857C7327h, 8FB198A4h, 52F7471Fh, 7AE0CDD1h
                                        ; DATA XREF: vBng___66+29¡ýo
dword_40BA40    dd 969C6024h, 825EAD7Ah, 0F3173B0Bh
                                        ; DATA XREF: vBng___15+37¡ýo
dword_40BA4C    dd 25188D19h, 5E4D395h, 39E0AAFDh, 2 dup(0)
                                        ; DATA XREF: vBng___8+39¡ýo
dword_40BA60    dd 83BF0811h, 6A1A6B8Fh, 0B72EA7A2h, 0CDCFAEB7h
                                        ; DATA XREF: vBng___154_stk+F¡ýo
dword_40BA70    dd 0CE204211h, 7B89FA2Fh, 19EA41FFh, 0C4E66CECh
                                        ; DATA XREF: vBng___43_stk+3E¡ýo
dword_40BA80    dd 668C2C1Fh, 4C4D7F43h, 0E56B4B7Ch, 0BCA1EDA3h
                                        ; DATA XREF: vBng___115_stk+4E¡ýo
dword_40BA90    dd 0DAC1FA2Bh, 654D0FDAh, 0A4DB81EDh, 472AE9Eh
                                        ; DATA XREF: vBng___64_stk+20¡ýo
dword_40BAA0    dd 9B4F4316h, 0BB602A02h, 9601E80Bh, 0
                                        ; DATA XREF: vBng___201_stk+21¡ýo
dword_40BAB0    dd 0B5DCE113h, 0DDFA23ACh, 0B4DD9331h, 2E432F41h
                                        ; DATA XREF: vBng___76_stk+13¡ýo
dword_40BAC0    dd 83153C11h, 3F4D8AF3h, 7F1ED1FBh
                                        ; DATA XREF: vBng___9+5E¡ýo
dword_40BACC    dd 99ED6E25h, 390F749Fh, 9044D75Ah
                                        ; DATA XREF: vBng___52+3C¡ýo
dword_40BAD8    dd 517C4F37h, 24368D4Dh, 715A0762h
                                        ; DATA XREF: vBng___68_stk+2C¡ýo
dword_40BAE4    dd 1BC97325h, 448D0474h, 414DD044h
                                        ; DATA XREF: vBng_h__25+25¡ýo
dword_40BAF0    dd 990E8124h, 31CF9F29h, 205331D5h
                                        ; DATA XREF: vBng___30+48¡ýo
dword_40BAFC    dd 65DDB2Fh, 8C0B3832h, 0D8E9BD3Ch, 2 dup(0)
                                        ; DATA XREF: vBng___194+135¡ýo
dword_40BB10    dd 0F26CF41Ch, 0C2B5F33Ch, 0DCD10BDDh, 0B56A9D4Fh
                                        ; DATA XREF: vBng___42_stk+29¡ýo
dword_40BB20    dd 6AA8FE1Eh, 93AF81ACh, 0A3961579h, 66E5FADFh
                                        ; DATA XREF: vBng___52_stk+60¡ýo
dword_40BB30    dd 47EC072Ch, 7D10F1B2h, 0E23452CAh, 0
                                        ; DATA XREF: vBng___70_stk+4A¡ýo
dword_40BB40    dd 0F4169E20h, 212B171h, 90C0949Bh, 350D866Ah
                                        ; DATA XREF: vBng___146_stk+59¡ýo
dword_40BB50    dd 0B935E507h, 99D60C15h, 59C770Ah
                                        ; DATA XREF: vBng___139+3E¡ýo

                dd 56666DD4h, 0BE3D6404h, 2 dup(0)
dword_40BB70    dd 0A8E41720h, 9361FBEBh, 2DF9BB1Dh, 1082B229h
                                        ; DATA XREF: vBng___122_stk+32¡ýo
dword_40BB80    dd 0AD26F509h, 37B2F8D1h, 0EF84D1AEh
                                        ; DATA XREF: VBNCB_unnamed_80002a6f+41¡ýo
dword_40BB8C    dd 0A56A7803h, 0D55865B0h, 221A275Dh, 2 dup(0)
                                        ; DATA XREF: vBng___179+48¡ýo
dword_40BBA0    dd 4C49D013h, 68EF48Fh, 31456258h, 4BDB3216h
                                        ; DATA XREF: vBng___74_stk+39¡ýo
dword_40BBB0    dd 7521741Dh, 0FD7C6BFAh, 0FA4BB5FFh, 0
                                        ; DATA XREF: vBng___37+62¡ýo
dword_40BBC0    dd 0ACECFC13h, 6D0E830Fh, 7CDBB668h, 0E83CD9BCh
                                        ; DATA XREF: vBng___80_stk+26¡ýo
dword_40BBD0    dd 0B758AA33h, 0FFBBF375h, 2 dup(0)
                                        ; DATA XREF: vBng___1+41¡ýo
dword_40BBE0    DD 0D6BD7D1EH, 0D8C037FEH, 0DB3A047AH, 0F847681DH

dword_40A7B0    dd 237B3120h, 5D09B4D2h, 5C0689F6h, 8889627Fh
                                        ; DATA XREF: vBng___165_stk+2A¡ýo
dword_40A7C0    dd 94769B2Eh, 23DC8AFAh, 732C48EFh, 0
                                        ; DATA XREF: vBng___29+49¡ýo
dword_40A7D0    dd 641F892Bh, 0D490DB5Ah, 81EF5270h, 589829E9h
                                        ; DATA XREF: vBng___95_stk+3C¡ýo
dword_40A7E0    dd 5D966B20h, 0C8EE7C7Dh, 0AE286A7Ch
                                        ; DATA XREF: vBng___50+1A¡ýo
dword_40A7EC    dd 7FAFD619h, 0D8F2C00Fh, 8419520Ch, 2 dup(0)
                                        ; DATA XREF: vBng___10+3B¡ýo
dword_40A800    dd 0A04DC91Eh, 0C2687E75h, 60261C5Fh, 2D1997D6h
                                        ; DATA XREF: vBng___155_stk+2B¡ýo
dword_40A810    dd 59BF2D2Bh, 2F1210B4h, 35D9B9C7h
                                        ; DATA XREF: vBng___148+3E¡ýo
dword_40A81C    dd 926A9932h, 65F8C1ABh, 784D4C6Dh, 2 dup(0)
                                        ; DATA XREF: vBng___123+13C¡ýo
dword_40A830    dd 0FAED8C2Bh, 6803BE98h, 0E3ABD64h, 0CEDCF376h
                                        ; DATA XREF: vBng___72_stk+33¡ýo
dword_40A840    dd 3D321C2Ch, 884AD6E9h, 9F11417Bh, 0D1AD0A67h
                                        ; DATA XREF: vBng_h__22+11¡ýo
dword_40A850    dd 2444DD2Bh, 7AD0DAB9h, 0D246B85Bh, 759519FDh
                                        ; DATA XREF: vBng___179_stk+47¡ýo
dword_40A860    dd 140FB815h, 0D0F9C001h, 0BCBD1DDEh
                                        ; DATA XREF: vBng___66_stk+55¡ýo
dword_40A86C    dd 5B8C4E0Dh, 8DB1B79Eh, 711D0B2Bh
                                        ; DATA XREF: vBng___97+146¡ýo
dword_40A878    dd 54A69C16h, 0F53F9D71h, 0BED25A94h
                                        ; DATA XREF: vBng___12+30¡ýo
dword_40A884    dd 0F6E3C2Fh, 460E5BE3h ; DATA XREF: vBng_1__3+17¡ýo
dword_40A88C    dd 142B8113h, 0A76971Eh, 7372C2D2h
                                        ; DATA XREF: vBng___24+46¡ýo
dword_40A898    dd 9B571A2Ch, 0FB40FAABh, 98DDFF71h
                                        ; DATA XREF: vBng___172+30¡ýo
dword_40A8A4    dd 74EF312h, 0C3113D36h, 0 ; DATA XREF: vBng_1_+3F¡ýo
dword_40A8B0    dd 2C7A7C1Fh, 0B3671D23h, 873C58Dh, 74BE1B11h
                                        ; DATA XREF: vBng___162_stk+2F¡ýo
dword_40A8C0    dd 6A38891Eh, 411CBA42h, 93DA1FA8h, 0C133E5BCh
                                        ; DATA XREF: vBng___89_stk+41¡ýo
dword_40A8D0    dd 1990F72Bh, 31DFFDABh, 6612E595h, 34BF40Bh
                                        ; DATA XREF: vBng___126_stk+1A¡ýo
dword_40A8E0    dd 0D561981Eh, 1769B33Eh, 0C61479A1h, 4D7EB19Fh
                                        ; DATA XREF: vBng___92_stk+35¡ýo
dword_40A8F0    dd 8E272105h, 37B75619h, 9A94B3EFh
                                        ; DATA XREF: vBng___184+69¡ýo
dword_40A8FC    dd 0B9E2FE1Bh, 9956E6DCh, 8BE869Ah, 2 dup(0)
                                        ; DATA XREF: vBng___200+30¡ýo
dword_40A910    dd 4176A220h, 5246027Eh, 39FA5B51h, 705DCC5Ah
                                        ; DATA XREF: vBng___130_stk+13¡ýo
dword_40A920    dd 140521Eh, 66A2597Bh, 82807847h
                                        ; DATA XREF: vBng___178+13E¡ýo
dword_40A92C    dd 0C4611E0Bh, 9D29769Eh, 64D49401h, 2 dup(0)
                                        ; DATA XREF: vBng___76+F1¡ýo
dword_40A940    dd 0E4792F20h, 0DEAC251Ch, 8282CB17h, 26703841h
                                        ; DATA XREF: vBng___173_stk+25¡ýo
dword_40A950    dd 36621B09h, 766B47E4h ; DATA XREF: vBng_1+2B¡ýo
dword_40A958    dd 64224E33h, 0B95F5A17h ; DATA XREF: vBng___164+54¡ýo
dword_40A960    DD 0C2A8C12EH, 0E3A9452BH, 3EF8E6B7H, 0
dword_40BD80    DD 9C0C222BH, 0CB0A4E59H, 9B32363CH, 244BFA73H
dword_40A740    dd 37A24F1Fh, 1D82A89Bh, 0E55DB369h
                                        ; DATA XREF: vBng___108+39¡ýo
dword_40A74C    dd 816C6221h, 5101B882h, 971C7D7h
                                        ; DATA XREF: vBng_h__7+31¡ýo
dword_40A758    dd 9B576514h, 1BA8510Fh, 0E42FA7F0h, 3 dup(0)
                                        ; DATA XREF: vBng___185+2A¡ýo
dword_40A770    dd 0B0B9252Bh, 0D3B133DAh, 3DEA8712h, 0FC290941h
                                        ; DATA XREF: vBng___93_stk+1D¡ýo
dword_40A780    dd 0C5E5B331h, 3AF95A54h, 16041B5Bh
                                        ; DATA XREF: vBng___34+48¡ýo
dword_40A78C    DD 9C557300H, 4F46841FH, 0DB17CC96H, 2 Dup(0)
dword_40BCDC    dd 0C0AF1B2Eh, 9829F30Ch, 2AD64460h
                                        ; DATA XREF: VBNCB_unnamed_8000105c+47¡ýo
dword_40BCE8    dd 0F03E27h, 0D1545C3Ah, 45998542h
                                        ; DATA XREF: vBng___170+43¡ýo
dword_40BCF4    dd 7207DD09h, 0D821F5CEh, 0E277D0B7h
                                        ; DATA XREF: vBng___13+11C¡ýo
dword_40BD00    dd 46EC1833h, 0E6DADECBh, 0D3ECFF7Fh
                                        ; DATA XREF: vBng___161+3C¡ýo
dword_40BD0C    dd 69294408h, 1324CADBh, 0A2B5488Ch, 2 dup(0)
                                        ; DATA XREF: vBng___112+13E¡ýo
dword_40BD20    dd 0B9B7732Bh, 0EF38AD98h, 6D10F698h, 78691FFEh
                                        ; DATA XREF: vBng___60_stk+58¡ýo
dword_40BD30    dd 19E4F537h, 0A313F1AAh, 0BD421B3Eh
                                        ; DATA XREF: vBng_h__3+34¡ýo
dword_40BD3C    dd 0CC3AFD02h, 5B2E4D03h, 1B72750h, 2 dup(0)
                                        ; DATA XREF: vBng___190+3B¡ýo
dword_40BD50    dd 73613D11h, 0FADE6723h, 0B838C493h, 608D32E3h
                                        ; DATA XREF: vBng___150_stk+2C¡ýo
dword_40BD60    dd 0A6E0C417h, 0C815F4F3h, 529BB005h, 3DBD6A55h
                                        ; DATA XREF: vBng_h__36+22¡ýo
dword_40BD70    dd 0C20B6431h, 61105F65h, 645C01BAh, 0
                                        ; DATA XREF: vBng___48+2B¡ýo

dword_40BD90    dd 792B5F20h, 548808CBh, 404A9F5Dh, 0BCF2E67Fh
                                        ; DATA XREF: vBng___183_stk+2C¡ýo
dword_40BDA0    dd 226CFE18h, 0EEEB6600h, 0C60C2E82h
                                        ; DATA XREF: vBng___103+47¡ýo
dword_40BDAC    dd 0CFF7D52Fh, 0C644DB0Bh, 63770FB1h
                                        ; DATA XREF: vBng___36+135¡ýo
dword_40BDB8    dd 0B4D9F121h, 0B91913Fh, 79471FCDh, 3 dup(0)
                                        ; DATA XREF: vBng___26+115¡ýo
dword_40BDD0    dd 0EA12181Fh, 4401C4FFh, 0F4517B5Fh, 1BB9E9C7h
                                        ; DATA XREF: vBng___161_stk+58¡ýo
dword_40BDE0    dd 75872E21h, 0A902035Ah, 1294AD32h
                                        ; DATA XREF: vBng_h__6+1F¡ýo
dword_40BDEC    dd 233DED27h, 911C2BD4h ; DATA XREF: vBng___69+6E¡ýo
dword_40BDF4    dd 83FBB60Eh, 0FE600212h, 9A5257C7h
                                        ; DATA XREF: vBng___115+59¡ýo
dword_40BE00    dd 5EDF7F0Fh, 939E70F9h, 33759D9Bh
                                        ; DATA XREF: vBng___106+E2¡ýo
dword_40BE0C    dd 5B6C7409h, 0EA70EEE3h ; DATA XREF: vBng_1_stk+2D¡ýo
dword_40BE14    dd 54706F21h, 0F27C6452h, 60EFF399h
                                        ; DATA XREF: vBng___119+31¡ýo
dword_40BE20    dd 328D5C12h, 8A31D832h, 53B3BFCDh, 2EFDB2BDh
                                        ; DATA XREF: vBng___175_stk+48¡ýo
dword_40BE30    dd 0B85E5B32h, 0E573CFADh, 717EECD3h
                                        ; DATA XREF: vBng_h__5+48¡ýo
dword_40BE3C    dd 83CA408h, 2220CC68h, 4E9BCA57h, 2 dup(0)
                                        ; DATA XREF: vBng___125+34¡ýo
dword_40BE50    dd 833EE711h, 5722C2AFh, 786DF1CFh, 609F869Dh
                                        ; DATA XREF: vBng___196_stk+71¡ýo
dword_40BE60    dd 3A7DF70Fh, 752EE84Bh, 0F5A9AD65h
                                        ; DATA XREF: vBng___197+57¡ýo
dword_40BE6C    dd 2FAE0724h, 41B3C9E3h, 0FC65AE99h, 2 dup(0)
                                        ; DATA XREF: vBng___157+44¡ýo
dword_40BE80    dd 0BE1E2C1Fh, 9E6C6ECCh, 41E1680Ch, 32231BDCh
                                        ; DATA XREF: vBng___85_stk+62¡ýo
dword_40BE90    dd 826B1514h, 0FA1557A3h, 0A1C9621Ah
                                        ; DATA XREF: vBng___117+46¡ýo
dword_40BE9C    dd 1DEC6829h, 0B05D8772h, 0B1181304h, 2 dup(0)
                                        ; DATA XREF: vBng_h__17+2F¡ýo
dword_40BEB0    dd 0D36711Fh, 0ED6DC2A3h, 0FE5F3971h, 0FDBA82EEh
                                        ; DATA XREF: vBng___169_stk+45¡ýo
dword_40BEC0    dd 0B8D63135h, 82CE7767h, 0B02C5DF0h
                                        ; DATA XREF: vBng___182+41¡ýo
dword_40BECC    dd 8EB8B521h, 0F462621Fh, 0FD9AA5EAh
                                        ; DATA XREF: vBng___22+11D¡ýo
dword_40BED8    dd 0C6B0DF01h, 0AE0DA95Dh, 0DA6D44F5h
                                        ; DATA XREF: vBng___74+26¡ýo
dword_40BEE4    dd 0FEFE9C0Fh, 0BB190BCAh, 82BA255Ch
                                        ; DATA XREF: vBng___191+153¡ýo
dword_40BEF0    dd 0A5BCF406h, 0B9C1B0F3h, 2BDE2681h, 0
                                        ; DATA XREF: vBng___53+2D¡ýo
dword_40BF00    dd 32D8761Fh, 0FE380E01h, 75E965BAh, 0A467D17Eh
                                        ; DATA XREF: vBng___38_stk+3B¡ýo
dword_40BF10    dd 0D002E20h, 0BED8EC2Dh, 0CB40FF53h, 0
                                        ; DATA XREF: vBng___116+45¡ýo
dword_40BF20    dd 6469441Eh, 0CDC5C8EDh, 3B8F605Dh, 0DD2E1F37h
                                        ; DATA XREF: vBng___106_stk+2A¡ýo
dword_40BF30    dd 0B7DAE726h, 3CD34155h, 70124569h, 0
                                        ; DATA XREF: vBng___160+49¡ýo
dword_40BF40    dd 3D4ED11Ch, 0B1B1084Fh, 0A1E7CFF7h, 0C922651Ah
                                        ; DATA XREF: vBng___36_stk+4A¡ýo
dword_40BF50    dd 7A43471Eh, 0AA57008Fh, 3A126217h, 56A1AC6Dh
                                        ; DATA XREF: vBng___86_stk+17¡ýo
dword_40BF60    dd 0EB2FE313h, 67DB18C1h, 0C0A25E02h, 0CC1742C8h
                                        ; DATA XREF: vBng___34_stk+10¡ýo
dword_40BF70    dd 4B7EC227h, 0A8A3D93Bh, 53245050h, 0AFA77274h, 9F8AAD2Ah
                                        ; DATA XREF: vBng_h__2_stk+33¡ýo
dword_40BF84    dd 8053E32h, 0ABAE26Bh, 8E3E935Bh
                                        ; DATA XREF: vBng___33+1F¡ýo
dword_40BF90    dd 0BAC4281Fh, 8DFE3601h, 79501D5Ah, 0EAE5DB2Dh
                                        ; DATA XREF: vBng___33_stk+21¡ýo
dword_40BFA0    dd 0B04A4213h, 0B4F9C8C2h, 51B06FEFh, 7DF2A324h
                                        ; DATA XREF: vBng___8_stk+5E¡ýo
dword_40BFB0    dd 0C451A61Fh, 9081D2CEh, 0D6642120h, 7D82CDBBh
                                        ; DATA XREF: vBng___15_stk+27¡ýo
dword_40BFC0    dd 0EB82A131h, 4313B941h, 0A5584665h
                                        ; DATA XREF: vBng___23+2D¡ýo
dword_40BFCC    dd 0EE65CE01h, 619FC0C8h, 89A49FEh
                                        ; DATA XREF: vBng___187+47¡ýo
dword_40BFD8    dd 613EB015h, 0C3CF903h, 6B3E3568h, 3 dup(0)
                                        ; DATA XREF: vBng___202_stk+35¡ýo
dword_40BFF0    dd 6FC4291Fh, 65B21103h, 0C781E664h, 70C4A729h
                                        ; DATA XREF: vBng___98_stk+69¡ýo
dword_40C000    dd 0D43E231Ch, 0F028310Fh, 1816964Ch, 7B9DF0EBh
                                        ; DATA XREF: vBng___27_stk+4E¡ýo
dword_40C010    dd 26E85B2Ah, 4CBC3A7Eh ; DATA XREF: vBng_h__29+45¡ýo
dword_40C018    dd 0B3B3E810h, 6EE93F6Eh, 7FC86832h, 3 dup(0)
                                        ; DATA XREF: vBng___55+38¡ýo
dword_40C030    dd 1061F22Bh, 3571852Bh, 0B4C2E60Ah, 0FA66077Ah
                                        ; DATA XREF: vBng___125_stk+13¡ýo
dword_40C040    dd 0DF14EF2Ch, 716BB95Bh, 2 dup(0)
                                        ; DATA XREF: vBng_h_+36¡ýo
dword_40C050    dd 2F6CB912h, 5413AEACh, 0E200A264h, 0CF615639h
                                        ; DATA XREF: vBng___51_stk+5D¡ýo
dword_40C060    dd 33B7722Bh, 40FBED78h, 1AF2E299h, 8EF7A69Eh
                                        ; DATA XREF: vBng___164_stk+52¡ýo
dword_40C070    dd 0C929B026h, 8B517FD4h, 523077E3h
                                        ; DATA XREF: vBng___83+37¡ýo
dword_40C07C    dd 0C68B4703h, 5B4CBB9h, 40DBC2Ch
                                        ; DATA XREF: vBng___199+3A¡ýo
dword_40C088    dd 380E8532h, 33033518h, 49A58CB7h
                                        ; DATA XREF: vBng___17+1E¡ýo
dword_40C094    dd 0DC6E1007h, 4B32E5AEh, 222A3A87h
                                        ; DATA XREF: vBng___64+133¡ýo
dword_40C0A0    dd 0F24D1F22h, 4416975h, 0C0AFDC1Bh
                                        ; DATA XREF: vBng___136_stk+23¡ýo
dword_40C0AC    DD 1052E434H, 6F212194H ; DATA XREF:vBng___19 + 1C¡ýo
dword_40A530    DD 32E1812BH, 0E2D7F254H, 6E9B545BH, 0DF2B7A76H
dword_40A970    DD 0D2815F20H, 0EF807453H, 60A30405H, 1F8DFE4DH
dword_40A520    DD 1534FD12H, 7CD5061H, 298D5020H, 95ADDDB9H

include ECProtos.inc ; .Code

sub_40C8C8      proc far                ; DATA XREF: vBng___109+3F¡ýo
                db      26h
                inc     ecx
                retf
sub_40C8C8 EndP
sub_40A9C0      proc near               ; DATA XREF: vBng___172_stk+54¡ýo
                and     al, cl
                neg     cl
                rol     ecx, cl
                retn
sub_40A9C0 EndP
sub_40A7A0      proc far                ; DATA XREF: vBng___78_stk+15¡ýo
                pop     ds
                retf
sub_40A7A0 EndP ; sp-analysis failed
sub_40BCD0      proc near               ; DATA XREF: vBng___202+33¡ýo
                and     al, 1Ah
                retn
sub_40BCD0 EndP
__allshl        proc near               ; CODE XREF: vBng___202+18A¡üp
                                        ; VBNCB_unnamed_8000242f+C1C¡üp ...
                cmp     cl, 40h ; '@'
                jnb     short loc_4B0D4A
                cmp     cl, 20h ; ' '
                jnb     short loc_4B0D40
                shld    edx, eax, cl
                shl     eax, cl
                retn
; ---------------------------------------------------------------------------

loc_4B0D40:                             ; CODE XREF: __allshl+8¡üj
                mov     edx, eax
                xor     eax, eax
                and     cl, 1Fh
                shl     edx, cl
                retn
; ---------------------------------------------------------------------------

loc_4B0D4A:                             ; CODE XREF: __allshl+3¡üj
                xor     eax, eax
                xor     edx, edx
                retn
__allshl EndP

vBng___2        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     edx, [eax+68A2B1C5h]
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_48], edx
                lea     ebx, [esi+1E964C86h]
                mov     [esp+58h+var_34], edi
                add     ebx, eax
                xor     edx, 0D025DE7Ah
                mov     eax, ebx
                mov     [esp+58h+var_28], ebx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40A628
                mov     ecx, [eax+edi-98h]
                mov     eax, [eax+edi-94h]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_24], ecx
                mov     ecx, [eax+edi-40h]
                mov     eax, [eax+edi-3Ch]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     [esp+5Ch+var_44], ecx
                mov     ecx, [eax+edi-7]
                mov     eax, [eax+edi-3]
                mov     [esp+5Ch+var_14], eax
                movzx   eax, bl
                xor     eax, 0CAh
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, edi
                mov     eax, [edi+eax*8]
                mov     eax, [eax]
                mov     [esp+5Ch+var_1C], eax
                call    VBN_TransformContext
                lea     eax, [esi+75D4076Dh]
                xor     edx, edx
                xor     eax, ebx
                movzx   ecx, al
                mov     [esp+58h+var_38], eax
                xor     ecx, 0C5h
                xor     eax, eax
                inc     eax
                call    __allshl
                mov     edi, [esp+58h+var_38]
                add     eax, offset dword_40ADD0
                mov     [esp+58h+var_30], eax
                mov     ecx, edi
                shr     ecx, 10h
                movzx   edx, cl
                mov     ecx, edi
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+58h+var_44]
                sub     eax, 64h ; 'd'
                mov     ecx, [edx+ecx+13h]
                mov     edx, [esp+58h+var_44]
                and     ecx, eax
                mov     eax, edi
                shr     eax, 18h
                mov     [eax+edx-0B7h], ecx
                mov     eax, esi
                mov     ecx, [ebp+arg_4]
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     eax, esi
                xor     ecx, [esp+58h+var_48]
                xor     eax, edi
                xor     eax, [ebp+arg_4]
                xor     ecx, ebx
                xor     eax, [esp+58h+var_48]
                mov     [esp+58h+var_10], ecx
                mov     [esp+58h+var_2C], eax
                mov     edx, [ebp+arg_4]
                add     edx, 13CF99E6h
                shl     esi, 4
                xor     edx, ecx
                xor     edx, edi
                mov     edi, [ebp+arg_4]
                shr     edi, 4
                add     edi, esi
                mov     [esp+58h+var_8], edx
                xor     edi, eax
                xor     esi, esi
                xor     edi, ecx
                mov     eax, edx
                xor     eax, [esp+58h+var_2C]
                xor     eax, ebx
                mov     [esp+58h+var_3C], edi
                xor     eax, 5CE8DF1Ch
                mov     ebx, edi
                mov     [esp+58h+var_40], eax
                xor     ebx, edx
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_28]
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0DFh
                add     al, 79h ; 'y'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_24]
                mov     edx, [esp+58h+var_3C]
                adc     esi, dword ptr [esp+58h+var_24+4]
                xor     eax, 955B43F8h
                xor     ecx, ecx
                xor     edx, 96A3C0F7h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_30]
                shr     eax, 10h
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_34]
                movzx   eax, al
                shr     ebx, 18h
                and     dword ptr [eax+edx-0A6h], 0
                mov     [eax+edx-0AAh], ecx
                and     dword ptr [edx+ebx*8+4Ch], 0
                mov     eax, [esp+58h+var_1C]
                mov     [edx+ebx*8+48h], eax
                mov     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_48]
                mov     ecx, [esp+58h+var_18]
                movzx   eax, bl
                xor     eax, 0E7h
                mov     [edx+eax*8+4], esi
                mov     [edx+eax*8], edi
                mov     eax, ebx
                mov     esi, [esp+58h+var_34]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 62h
                mov     [eax+edx], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [eax+edx+4], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_10]
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 42h ; 'B'
                add     edx, [esp+58h+var_44]
                adc     ecx, [esp+58h+var_C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0CDh
                mov     [esi+eax*8], edx
                mov     [esi+eax*8+4], ecx
                mov     eax, [esp+58h+var_30]
                mov     ecx, [esp+58h+var_8]
                mov     edx, [esp+58h+var_2C]
                xor     ecx, 0D5741EDBh
                shr     ebx, 18h
                xor     edx, 600E7BAAh
                pop     edi
                and     dword ptr [esi+ebx*8+0D4h], 0
                mov     [esi+ebx*8+0D0h], eax
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___2        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___99_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], edi
                lea     eax, [esi-4C137B4h]
                add     eax, edx
                lea     ecx, [esi-25C68B85h]
                mov     [ebp+var_8], eax
                lea     eax, [edx+658326Bh]
                xor     eax, ecx
                mov     [ebp+var_C], eax
                movzx   eax, cl
                xor     eax, 0D8h
                push    offset dword_40C110
                mov     ebx, [eax+edi]
                mov     edi, [eax+edi+4]
                mov     eax, esi
                mov     [ebp+var_10], ebx
                mov     ebx, edx
                shr     ebx, 4
                sub     edx, esi
                xor     edx, [ebp+var_C]
                xor     edx, [ebp+var_8]
                shl     eax, 4
                add     edx, 27619624h
                add     ebx, eax
                xor     ebx, [ebp+var_8]
                xor     ebx, ecx
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 75h
                sub     esi, 0AEh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                add     edx, 927898BAh
                mov     ecx, [ebp+var_C]
                xor     eax, eax
                pop     edi
                add     ecx, 0CD445D76h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___99_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__40      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = qword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, ecx
                mov     ecx, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ecx
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [esp+20h+var_10], eax
                movzx   eax, bl
                mov     [esp+20h+var_C], eax
                xor     eax, 0FEh
                push    esi
                push    edi
                mov     [esp+28h+var_18], edx
                mov     edi, [edx+eax*8]
                mov     esi, [edx+eax*8+4]
                lea     edx, [ecx-770EC9E7h]
                mov     ecx, [esp+28h+var_18]
                push    offset dword_40C870
                call    VBN_TransformContext
                xor     ebx, [ebp+arg_4]
                xor     ecx, ecx
                xor     ebx, [ebp+arg_0]
                mov     [esp+28h+var_14], ebx
                mov     eax, [esp+28h+var_14]
                movzx   ebx, bl
                sub     ebx, 35h ; '5'
                add     ebx, edi
                mov     edi, [esp+28h+var_18]
                adc     ecx, esi
                shr     eax, 8
                movzx   esi, al
                xor     edx, edx
                sub     esi, 1Ch
                add     esi, ebx
                adc     edx, ecx
                mov     ecx, [esp+28h+var_14]
                shr     ecx, 18h
                mov     eax, [esi]
                xor     ecx, 0C7h
                mov     dword ptr [esp+28h+var_8], eax
                mov     eax, [esi+4]
                mov     dword ptr [esp+28h+var_8+4], eax
                mov     eax, [ebx]
                mov     [edi+ecx*8], eax
                mov     eax, [ebx+4]
                mov     ebx, edi
                xor     edi, edi
                mov     [ebx+ecx*8+4], eax
                mov     eax, [esp+28h+var_14]
                mov     ecx, [ebp+arg_4]
                shr     eax, 10h
                movzx   eax, al
                sub     eax, 41h ; 'A'
                add     eax, esi
                adc     edi, edx
                mov     edx, dword ptr [esp+28h+var_8+4]
                shl     cl, 4
                add     cl, byte ptr [esp+28h+var_10]
                movzx   esi, cl
                mov     ecx, [ebp+arg_0]
                add     cl, 3
                movzx   ecx, cl
                xor     esi, ecx
                xor     esi, 0CCh
                xor     esi, [esp+28h+var_C]
                mov     [ebx+esi*8+4], edi
                mov     [ebx+esi*8], eax
                mov     eax, dword ptr [esp+28h+var_8]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__40      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___145      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                mov     edx, esi
                mov     [esp+4Ch+var_38], ebx
                shr     edx, 4
                add     edx, eax
                movzx   eax, dl
                xor     eax, 0B2h
                mov     [esp+4Ch+var_3C], edx
                push    edi
                push    offset dword_40C230
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     [esp+54h+var_8], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+54h+var_2C], ecx
                mov     ecx, [ebx+eax*8-3D8h]
                mov     eax, [ebx+eax*8-3D4h]
                mov     [esp+54h+var_10], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0A2h
                mov     [esp+54h+var_14], ecx
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     [esp+54h+var_20], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+54h+var_24], ecx
                mov     ecx, [ebx+eax*8+50h]
                mov     edi, [ebx+eax*8+54h]
                mov     ebx, esi
                sub     ebx, [ebp+arg_0]
                mov     [esp+54h+var_28], ecx
                mov     edx, ebx
                mov     ecx, [esp+54h+var_38]
                xor     edx, 46622533h
                mov     [esp+54h+var_1C], ebx
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_3C]
                mov     edx, [esp+50h+var_2C]
                xor     ecx, esi
                xor     ecx, [ebp+arg_0]
                movzx   eax, cl
                mov     [esp+50h+var_18], ecx
                mov     eax, [edx+eax*4-178h]
                mov     edx, [ebp+arg_0]
                sub     edx, esi
                mov     [esp+50h+var_C], eax
                xor     edx, ebx
                mov     eax, ebx
                xor     edx, [esp+50h+var_3C]
                xor     edx, 0BDCB473Ah
                mov     [esp+50h+var_34], edx
                lea     edx, [esi-57614F8h]
                mov     esi, [esp+50h+var_3C]
                xor     edx, ecx
                xor     esi, [esp+50h+var_34]
                xor     edx, ebx
                xor     esi, ecx
                mov     [esp+50h+var_4], edx
                xor     eax, edx
                mov     ebx, esi
                xor     eax, [esp+50h+var_34]
                xor     ebx, edx
                xor     ebx, [esp+50h+var_3C]
                mov     [esp+50h+var_30], eax
                xor     ebx, 49652878h
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                xor     eax, 0D531h
                movzx   eax, ax
                cdq
                sub     ecx, 0D8h
                mov     [esp+50h+var_40], ecx
                xor     ecx, ecx
                sub     [esp+50h+var_40], eax
                mov     eax, [esp+50h+var_40]
                sbb     ecx, edx
                add     eax, [esp+50h+var_28]
                mov     [esp+50h+var_40], eax
                mov     edx, esi
                mov     eax, [esp+50h+var_30]
                adc     ecx, edi
                mov     edi, [esp+50h+var_40]
                add     eax, 0F10C4F56h
                mov     [esp+50h+var_28], ecx
                xor     edx, 0A9A1BBE9h
                xor     ecx, ecx
                shr     ebx, 18h
                or      ecx, eax
                mov     eax, [esp+50h+var_24]
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_38]
                mov     [edi+4], edx
                mov     [ecx+ebx*8-58h], eax
                mov     eax, [esp+50h+var_20]
                mov     [ecx+ebx*8-54h], eax
                mov     ebx, [esp+50h+var_30]
                mov     eax, [esp+50h+var_18]
                xor     ebx, esi
                xor     ebx, [esp+50h+var_1C]
                xor     ebx, [esp+50h+var_3C]
                mov     esi, [esp+50h+var_38]
                shr     eax, 8
                xor     al, 2Fh
                movzx   ecx, bl
                movzx   eax, al
                cdq
                add     eax, [esp+50h+var_14]
                mov     [esi+ecx*8-590h], eax
                mov     eax, ebx
                adc     edx, [esp+50h+var_10]
                shr     eax, 8
                mov     [esi+ecx*8-58Ch], edx
                mov     ecx, [esp+50h+var_C]
                mov     edx, [esp+50h+var_34]
                movzx   eax, al
                xor     edx, 9E5F1D18h
                xor     eax, 28h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                mov     eax, ebx
                mov     ecx, [esp+50h+var_28]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 3Fh
                mov     [esi+eax*8+134h], ecx
                mov     ecx, [esp+50h+var_4]
                mov     [esi+eax*8+130h], edi
                add     ecx, 6088C3FCh
                mov     eax, [esp+50h+var_2C]
                mov     [ebx+esi], eax
                mov     eax, [esp+50h+var_8]
                mov     [ebx+esi+4], eax
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___145      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___136      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, esi
                sub     edx, edi
                mov     [esp+38h+var_2C], ebx
                xor     edx, 2E540164h
                movzx   eax, dl
                xor     eax, 0CEh
                mov     [esp+38h+var_28], edx
                push    offset dword_40C23C
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     dword ptr [esp+3Ch+var_20+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0ACh
                mov     dword ptr [esp+3Ch+var_20], ecx
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     ebx, edi
                mov     [esp+3Ch+var_C], eax
                mov     eax, esi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [esp+3Ch+var_10], ecx
                mov     ecx, [esp+3Ch+var_2C]
                mov     edx, ebx
                xor     edx, 22E2F4A7h
                call    VBN_TransformContext
                mov     edx, [esp+38h+var_28]
                lea     ecx, [edi-630DE820h]
                xor     edx, edi
                xor     ecx, ebx
                xor     ecx, [esp+38h+var_28]
                xor     edx, esi
                sub     edi, esi
                mov     [esp+38h+var_8], edx
                xor     edi, edx
                mov     [esp+38h+var_4], ecx
                xor     edi, ebx
                mov     eax, ebx
                xor     eax, ecx
                mov     [esp+38h+var_18], edi
                xor     eax, edx
                xor     ebx, edi
                mov     [esp+38h+var_24], eax
                xor     ebx, ecx
                mov     eax, ebx
                mov     [esp+38h+var_14], ebx
                shr     eax, 8
                xor     bl, 0F7h
                add     al, 2
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, bl
                cdq
                mov     ebx, eax
                mov     eax, [esp+38h+var_24]
                sub     ebx, esi
                mov     esi, [esp+38h+var_18]
                sbb     edx, edi
                add     ebx, dword ptr [esp+38h+var_20]
                adc     edx, dword ptr [esp+38h+var_20+4]
                xor     eax, 0F38BE1A8h
                xor     ecx, ecx
                xor     esi, 0CB607F6Bh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+38h+var_14]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                movzx   eax, al
                mov     esi, [esp+38h+var_2C]
                xor     eax, 44h
                mov     edi, [esp+38h+var_2C]
                shr     ecx, 18h
                xor     ecx, 32h
                mov     [eax+esi], ebx
                mov     ebx, esi
                mov     esi, [esp+38h+var_28]
                mov     [eax+ebx+4], edx
                mov     eax, esi
                and     dword ptr [ebx+ecx*8+4], 0
                mov     edx, [esp+38h+var_10]
                shr     eax, 10h
                movzx   eax, al
                sub     eax, 0D8h
                mov     [ebx+ecx*8], eax
                mov     ebx, [esp+38h+var_24]
                xor     ebx, [esp+38h+var_18]
                xor     ebx, esi
                shr     esi, 18h
                xor     ebx, 0EB31695Ah
                movzx   eax, bl
                xor     eax, 39h
                lea     ecx, [esi-5Fh]
                mov     [edi+eax*8], edx
                mov     edx, [esp+38h+var_C]
                mov     [edi+eax*8+4], edx
                xor     eax, eax
                inc     eax
                xor     edx, edx
                call    __allshl
                mov     edx, [esp+38h+var_8]
                shr     ebx, 8
                xor     edx, 17E1D3D4h
                movzx   ecx, bl
                xor     ecx, 0E6h
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+38h+var_4]
                pop     edi
                xor     ecx, 61BFAC61h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___136      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___162      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                and     [esp+54h+var_4], 0
                mov     [esp+54h+var_44], ebx
                push    edi
                lea     edx, [esi-68A6BAFEh]
                mov     edi, [ebp+arg_0]
                mov     eax, edx
                mov     [esp+58h+var_48], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E5h
                push    offset dword_40A320
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [eax+ebx+2]
                mov     eax, [eax+ebx+6]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 61h
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     ebx, esi
                mov     [esp+5Ch+var_10], eax
                xor     ebx, edi
                movzx   eax, bl
                sub     eax, 5Fh ; '_'
                mov     [esp+5Ch+var_3C], ebx
                add     eax, eax
                mov     [esp+5Ch+var_14], ecx
                mov     eax, [ecx+eax*8]
                xor     ecx, ecx
                mov     [esp+5Ch+var_18], eax
                mov     eax, ebx
                mov     ebx, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   edx, ax
                mov     eax, [esp+5Ch+var_48]
                sub     edx, 0F64h
                movzx   eax, al
                add     edx, [ebx+eax*8-338h]
                mov     dword ptr [esp+5Ch+var_28], edx
                mov     edx, ebx
                adc     ecx, [edx+eax*8-334h]
                add     esi, 85B7383Eh
                add     esi, edi
                mov     dword ptr [esp+5Ch+var_28+4], ecx
                xor     esi, [esp+5Ch+var_48]
                mov     ecx, ebx
                mov     edx, esi
                xor     edx, 51DD9523h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     ecx, [edi+455D169Dh]
                xor     ecx, [esp+58h+var_3C]
                mov     eax, edi
                xor     ecx, [esp+58h+var_48]
                mov     ebx, [ebp+arg_4]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                shl     ebx, 4
                lea     eax, [edi+4D4FC5FEh]
                mov     [esp+58h+var_C], ecx
                xor     edx, esi
                shr     edi, 4
                xor     edx, [esp+58h+var_3C]
                xor     eax, ecx
                xor     eax, esi
                mov     [esp+58h+var_8], edx
                mov     [esp+58h+var_30], eax
                add     ebx, edi
                xor     ebx, edx
                xor     ebx, ecx
                mov     ecx, eax
                xor     ecx, edx
                mov     [esp+58h+var_40], ebx
                xor     ecx, [esp+58h+var_48]
                xor     ecx, 0A631D222h
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 88h
                xor     al, 0ADh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                mov     esi, [esp+58h+var_30]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                pop     edi
                adc     edx, dword ptr [esp+54h+var_38+4]
                xor     eax, 156589EAh
                xor     ecx, ecx
                xor     esi, 8500498Fh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_2C]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                mov     esi, [esp+54h+var_44]
                movzx   eax, al
                xor     eax, 0BEh
                shr     ecx, 18h
                mov     [esi+eax*8+4], edx
                mov     edx, [esp+54h+var_40]
                xor     edx, [esp+54h+var_30]
                xor     edx, [esp+54h+var_3C]
                xor     edx, [esp+54h+var_48]
                mov     [esi+eax*8], ebx
                mov     eax, dword ptr [esp+54h+var_28]
                mov     [esi+ecx*8-70h], eax
                mov     eax, dword ptr [esp+54h+var_28+4]
                mov     [esi+ecx*8-6Ch], eax
                mov     ecx, [esp+54h+var_20]
                movzx   eax, dl
                mov     [esi+eax*8-500h], ecx
                mov     ecx, [esp+54h+var_1C]
                mov     [esi+eax*8-4FCh], ecx
                mov     eax, edx
                mov     ecx, [esp+54h+var_18]
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                and     dword ptr [esi+eax*8-404h], 0
                mov     [esi+eax*8-408h], ecx
                mov     ecx, [esp+54h+var_14]
                movzx   eax, dl
                mov     edx, [esp+54h+var_C]
                xor     eax, 7Eh
                xor     edx, 2AFF570Ch
                mov     [eax+esi], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [eax+esi+4], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 7CDC0767h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___162      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___30       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                xor     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_0]
                sub     ecx, [ebp+arg_4]
                mov     edx, ecx
                mov     [esp+58h+var_48], ecx
                xor     edx, 36C00B15h
                mov     [esp+58h+var_4C], edi
                mov     eax, edx
                mov     esi, [esp+58h+var_4C]
                shr     eax, 18h
                xor     eax, 4Dh
                mov     [esp+58h+var_40], edx
                movzx   edx, dl
                mov     [esp+58h+var_44], ebx
                push    offset dword_40BAF0
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 8
                mov     dword ptr [esp+5Ch+var_30], ecx
                movzx   ecx, al
                mov     eax, [edx+edi-16h]
                mov     edi, [esp+5Ch+var_40]
                mov     eax, [eax+ecx-33h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edi
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     ecx, 45h
                xor     al, 0DAh
                movzx   eax, al
                cdq
                add     eax, [esi+ecx*8]
                mov     [esp+5Ch+var_10], eax
                mov     eax, esi
                adc     edx, [eax+ecx*8+4]
                movzx   ecx, bl
                xor     ebx, edi
                mov     [esp+5Ch+var_C], edx
                mov     edx, eax
                mov     [esp+5Ch+var_14], ecx
                mov     [esp+5Ch+var_3C], ebx
                mov     eax, [ecx+edx+33h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [ecx+edx+37h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edi
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+edx+7Bh]
                mov     eax, [eax+edx+7Fh]
                lea     edx, [ebx+4A3EBCD8h]
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, esi
                mov     [esp+5Ch+var_24], eax
                call    VBN_TransformContext
                mov     esi, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                mov     ecx, [esp+58h+var_48]
                sub     edx, esi
                mov     eax, [esp+58h+var_44]
                xor     ecx, ebx
                xor     edx, eax
                xor     ecx, eax
                xor     edx, edi
                xor     ecx, 308206Eh
                mov     ebx, eax
                mov     [esp+58h+var_48], ecx
                xor     ebx, edx
                mov     [esp+58h+var_8], edx
                xor     ebx, [esp+58h+var_3C]
                lea     ecx, [esi+0EB05AF1h]
                xor     ecx, [esp+58h+var_48]
                mov     eax, ebx
                xor     eax, [esp+58h+var_48]
                xor     ecx, edx
                xor     eax, edi
                mov     [esp+58h+var_38], ecx
                xor     eax, 7649186Dh
                movzx   edi, bl
                mov     [esp+58h+var_34], eax
                xor     esi, esi
                mov     eax, ebx
                sub     edi, 0C0h
                shr     eax, 8
                xor     al, 37h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                lea     edx, [ecx-6835C245h]
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 3B59A8CFh
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                mov     ebx, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 77h
                mov     [eax+ebx], edx
                mov     edx, [esp+58h+var_24]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-608h], edx
                mov     edx, [esp+58h+var_1C]
                mov     [ebx+eax*8-604h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_18]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Fh
                shr     ecx, 18h
                xor     ecx, 0D8h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], edx
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_8]
                mov     [ebx+ecx*8], edi
                add     edx, 6E3BB5D9h
                mov     [ebx+ecx*8+4], esi
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, [esp+58h+var_14]
                pop     edi
                pop     esi
                mov     [ebx+ecx*8-228h], eax
                mov     eax, [esp+50h+var_C]
                mov     [ebx+ecx*8-224h], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_48]
                xor     ecx, 1FBE017Dh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___30       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__31      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shl     edx, 4
                add     edx, eax
                mov     eax, edx
                mov     [esp+10h+var_4], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Ah
                push    esi
                mov     esi, ecx
                push    edi
                mov     [esp+18h+var_8], esi
                push    offset dword_40CA30
                mov     ecx, [esi+eax*8]
                movzx   eax, dl
                mov     edi, [eax+esi+92h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 21h
                mov     esi, [eax+ecx]
                mov     eax, ebx
                sub     eax, [ebp+arg_0]
                mov     ecx, [esp+1Ch+var_8]
                mov     edx, eax
                xor     edx, 0AF0736ABh
                mov     [esp+1Ch+var_C], eax
                call    VBN_TransformContext
                mov     eax, [esp+18h+var_4]
                add     ebx, 82DE895Fh
                mov     ecx, eax
                xor     ebx, eax
                xor     ecx, [esp+18h+var_C]
                sub     edi, esi
                xor     ecx, eax
                xor     esi, esi
                shr     eax, 18h
                xor     eax, 84h
                mov     [esp+18h+var_4], ecx
                cmp     edi, eax
                jz      short loc_4A2917
                lea     eax, [ecx-497AB56Dh]
                xor     ebx, 0A1938373h
                or      esi, eax
                jmp     short loc_4A2942
; ---------------------------------------------------------------------------

loc_4A2917:                             ; CODE XREF: vBng_h__31+95¡üj
                mov     eax, [ebp+arg_0]
                lea     edx, [eax+39DD389Fh]
                xor     edx, ebx
                lea     ecx, [eax+3827DE76h]
                xor     ecx, [esp+18h+var_4]
                xor     edx, [esp+18h+var_C]
                xor     ecx, ebx
                xor     edx, 0FC5A465Eh
                xor     ecx, 417BF2FCh
                or      esi, ecx
                mov     ebx, edx

loc_4A2942:                             ; CODE XREF: vBng_h__31+A5¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__31      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_1__3       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 34h
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     [esp+40h+var_24], esi
                push    offset dword_40A884
                lea     ecx, [edi-1D8E1C9Dh]
                movzx   eax, cl
                xor     eax, 4Dh
                mov     [esp+44h+var_28], ecx
                mov     edx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+44h+var_C], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+44h+var_10], edx
                mov     edx, [ebp+arg_4]
                shr     edx, 4
                mov     ebx, [esi+eax*8-3A8h]
                mov     eax, [esi+eax*8-3A4h]
                mov     dword ptr [esp+44h+var_20+4], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     dword ptr [esp+44h+var_20], ebx
                mov     ecx, [esi+eax*8-250h]
                mov     eax, [esi+eax*8-24Ch]
                mov     [esp+44h+var_14], eax
                mov     eax, edi
                shl     eax, 4
                add     edx, eax
                mov     [esp+44h+var_18], ecx
                mov     [esp+44h+var_2C], edx
                lea     eax, [edi-1D8E1C9Dh]
                shr     eax, 8
                movzx   ecx, al
                movzx   edx, dl
                xor     edx, 86h
                mov     eax, [ecx+esi+25h]
                mov     [edx+ebx], eax
                mov     eax, [ecx+esi+29h]
                mov     esi, edi
                sub     esi, [ebp+arg_4]
                mov     ecx, [esp+44h+var_24]
                mov     [edx+ebx+4], eax
                lea     ebx, [edi-1D8E1C9Dh]
                xor     esi, ebx
                xor     esi, 34A58583h
                lea     edx, [esi-57FF7053h]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     ecx, [edi-4E075EE9h]
                mov     eax, [esp+40h+var_2C]
                sub     edx, edi
                xor     edx, eax
                xor     ecx, esi
                xor     ecx, eax
                xor     edx, ebx
                mov     ebx, eax
                mov     [esp+40h+var_8], edx
                xor     eax, ecx
                mov     [esp+40h+var_4], ecx
                xor     eax, edx
                xor     ebx, edx
                xor     ebx, esi
                mov     [esp+40h+var_30], eax
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                xor     esi, esi
                sub     al, 72h ; 'r'
                sub     edi, 7Dh ; '}'
                movzx   eax, al
                cdq
                sub     edi, eax
                sbb     esi, edx
                add     edi, dword ptr [esp+40h+var_20]
                mov     edx, ebx
                adc     esi, dword ptr [esp+40h+var_20+4]
                xor     edx, ecx
                xor     edx, [esp+40h+var_28]
                xor     ecx, ecx
                mov     eax, [esp+40h+var_30]
                xor     edx, 0CF00C536h
                add     eax, 0C5BB91Ch
                sub     edx, 5E3F7EE5h
                or      ecx, eax
                mov     [edi], edx
                mov     [edi+4], ecx
                mov     ecx, [esp+40h+var_30]
                xor     ecx, ebx
                mov     edx, [esp+40h+var_18]
                xor     ecx, [esp+40h+var_2C]
                xor     ecx, [esp+40h+var_28]
                mov     ebx, [esp+40h+var_24]
                movzx   eax, cl
                xor     eax, 78h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 5Ah
                shr     ecx, 10h
                pop     edi
                pop     esi
                mov     [eax+ebx], edx
                mov     edx, [esp+38h+var_14]
                mov     [eax+ebx+4], edx
                mov     edx, [esp+38h+var_8]
                movzx   eax, cl
                add     edx, 0A7CC37DBh
                mov     ecx, [esp+38h+var_10]
                mov     [ebx+eax*8-4C8h], ecx
                mov     ecx, [esp+38h+var_C]
                mov     [ebx+eax*8-4C4h], ecx
                xor     eax, eax
                mov     ecx, [esp+38h+var_4]
                xor     ecx, 0D1119149h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__3       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___168_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                add     eax, 2DA0BE19h
                add     eax, edx
                add     edx, 73DA304Dh
                push    ebx
                mov     [ebp+var_4], eax
                push    esi
                mov     esi, ecx
                movzx   eax, al
                xor     eax, 38h
                mov     [ebp+var_C], esi
                push    edi
                push    offset dword_40C940
                lea     edx, [edx+60BE2BCAh]
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 58h
                shr     ecx, 10h
                movzx   eax, al
                xor     cl, 30h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                mov     edx, [ebp+arg_0]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     ebx, [ebp+arg_4]
                mov     [eax+1BCh], edi
                mov     eax, ebx
                sub     eax, edx
                lea     ecx, [edx+73DA304Dh]
                xor     eax, ecx
                lea     esi, [edx+2DA0BE19h]
                add     esi, ebx
                lea     ecx, [ebx-3E23CA00h]
                xor     ecx, esi
                xor     eax, esi
                pop     edi
                xor     edx, edx
                sub     ecx, 3785A735h
                pop     esi
                add     eax, 0FB4B407h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___168_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___59_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                lea     ebx, [eax+50607749h]
                mov     [ebp+var_4], ecx
                add     ebx, esi
                lea     ecx, [eax+1AD5D888h]
                mov     edx, esi
                xor     edx, eax
                xor     edx, ecx
                push    edi
                mov     edi, esi
                mov     [ebp+var_8], edx
                mov     esi, [ebp+var_4]
                sub     edi, eax
                xor     ebx, edi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 75h
                mov     esi, [ecx+esi-4Fh]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C490
                mov     ecx, [ecx+eax-4Bh]
                sbb     ecx, edx
                xor     bl, 0Ch
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                mov     eax, [ebp+arg_0]
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+arg_4]
                mov     esi, [ebp+var_8]
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                mov     [ebx+1BCh], ecx
                xor     edx, esi
                mov     ecx, ebx
                xor     edx, edi
                xor     edx, 0F46F1FA9h
                call    VBN_TransformContext
                xor     esi, 0BFCE0192h
                lea     edx, [edi-104B33B6h]
                xor     eax, eax
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___59_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___82_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_10], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     [ebp+var_4], edx
                lea     eax, [ebx-42CA0F44h]
                sub     ebx, [ebp+arg_4]
                movzx   eax, al
                mov     esi, ebx
                xor     esi, 0F7AF6AF8h
                push    offset dword_40BD80
                mov     [ebp+var_10], esi
                mov     ecx, [eax+edx-43h]
                mov     edi, [eax+edx-3Fh]
                mov     edx, esi
                mov     [ebp+var_C], ecx
                xor     edx, 0E3687F41h
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                lea     eax, [ecx-42CA0F44h]
                xor     ebx, eax
                xor     ebx, 5971A459h
                mov     [ebp+var_8], ebx
                mov     ebx, ecx
                xor     ebx, [ebp+arg_4]
                xor     ebx, [ebp+var_8]
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 17h
                shr     eax, 8
                add     eax, 68CFh
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                mov     ebx, [ebp+arg_4]
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                sub     ebx, ecx
                xor     ebx, [ebp+var_10]
                pop     edi
                pop     esi
                lea     eax, [ecx-42CA0F44h]
                mov     ecx, [ebp+var_8]
                add     ecx, 99A042BCh
                xor     eax, ebx
                or      edx, ecx
                add     eax, 1742C7D8h
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___82_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001fb5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     edx, 4
                shr     eax, 4
                add     eax, edx
                mov     [esp+28h+var_10], ecx
                lea     ebx, [edi+403E18E9h]
                mov     [esp+28h+var_14], eax
                lea     esi, [edi-51AA4290h]
                mov     edx, eax
                mov     edi, [esp+28h+var_10]
                xor     edx, ebx
                movzx   ecx, dl
                movzx   eax, bl
                xor     ecx, 9Ch
                mov     eax, [eax+edi+39h]
                mov     ecx, [eax+ecx]
                mov     eax, esi
                xor     eax, 39880524h
                mov     edi, ecx
                sub     edi, eax
                cmp     eax, ecx
                mov     [esp+28h+var_8], edi
                mov     edi, [ebp+arg_4]
                setnbe  [esp+28h+var_19]
                add     edi, 0B11B3333h
                xor     edi, esi
                xor     edi, ebx
                mov     [esp+28h+var_C], edi
                mov     edi, [esp+28h+var_14]
                xor     edi, edx
                xor     edi, esi
                mov     esi, [ebp+arg_4]
                sub     esi, [ebp+arg_0]
                mov     [esp+28h+var_14], edi
                mov     edi, [esp+28h+var_C]
                mov     [esp+28h+var_18], esi
                xor     [esp+28h+var_18], edi
                xor     [esp+28h+var_18], edx
                mov     edx, [esp+28h+var_18]
                xor     edx, [esp+28h+var_14]
                xor     edx, ebx
                xor     edx, 0F831E97Ah
                cmp     eax, ecx
                jbe     short loc_4A2E1F
                mov     eax, [esp+28h+var_14]
                xor     esi, esi
                xor     eax, 0F7862970h
                xor     edi, 3B645E33h
                or      esi, eax
                jmp     short loc_4A2E38
; ---------------------------------------------------------------------------

loc_4A2E1F:                             ; CODE XREF: VBNCB_unnamed_80001fb5+A8¡üj
                xor     esi, [esp+28h+var_14]
                mov     eax, [esp+28h+var_18]
                xor     esi, edi
                xor     edi, edi
                add     eax, 0A52FED27h
                sub     esi, 136D259h
                or      edi, eax

loc_4A2E38:                             ; CODE XREF: VBNCB_unnamed_80001fb5+BD¡üj
                mov     eax, [esp+28h+var_10]
                mov     bl, [esp+28h+var_19]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, dl
                mov     [eax+ecx*8-148h], bl
                setz    bl
                shr     edx, 8
                movzx   ecx, dl
                mov     edx, edi
                pop     edi
                mov     [eax+ecx*8-348h], bl
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001fb5 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___109      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                mov     edx, eax
                push    ebx
                mov     ebx, [ebp+arg_0]
                sub     edx, ebx
                xor     eax, ebx
                and     [esp+50h+var_4], 0
                mov     [esp+50h+var_48], eax
                push    esi
                mov     esi, ecx
                movzx   eax, dl
                push    edi
                mov     [esp+58h+var_44], esi
                mov     [esp+58h+var_34], edx
                mov     edi, [eax+esi+70h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 16h
                push    offset sub_40C8C8
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0ACh
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0F9h
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     esi, [eax+esi]
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, al
                mov     ecx, [ecx+eax*8-498h]
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     eax, [ecx+eax*8-494h]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8-698h]
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     eax, [ecx+eax*8-694h]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                sub     eax, [ebp+arg_4]
                mov     [esp+5Ch+var_40], eax
                xor     eax, edx
                xor     eax, 3027AB8Dh
                mov     edx, eax
                mov     [esp+5Ch+var_38], eax
                xor     edx, 0E139387Eh
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_34]
                mov     ecx, edx
                xor     ecx, [esp+58h+var_48]
                xor     ecx, edx
                shl     ebx, 4
                movzx   eax, cl
                add     eax, esi
                mov     [esp+58h+var_34], ecx
                mov     esi, [esp+58h+var_48]
                xor     esi, [esp+58h+var_38]
                xor     esi, [esp+58h+var_48]
                mov     eax, [edi+eax*4-1F4h]
                mov     edi, [ebp+arg_4]
                shr     edi, 4
                add     edi, ebx
                mov     [esp+58h+var_20], eax
                xor     edi, ecx
                mov     [esp+58h+var_C], esi
                xor     edi, [esp+58h+var_38]
                mov     [esp+58h+var_8], edi
                mov     ecx, [esp+58h+var_40]
                mov     eax, edi
                xor     eax, esi
                xor     ecx, esi
                xor     ecx, [esp+58h+var_34]
                xor     eax, edx
                xor     eax, 4DCA85BCh
                xor     ecx, 0AB35ADFFh
                mov     [esp+58h+var_3C], eax
                mov     ebx, ecx
                xor     ebx, edi
                mov     [esp+58h+var_40], ecx
                xor     ebx, [esp+58h+var_48]
                xor     esi, esi
                xor     ebx, edx
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0EFh
                add     al, 78h ; 'x'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                lea     edx, [ecx+240A11h]
                adc     esi, dword ptr [esp+58h+var_30+4]
                xor     eax, 0A577C299h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_44]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3Ah
                mov     [edi+4], edx
                shr     ebx, 18h
                mov     [ecx+eax*8], edi
                mov     edi, ecx
                mov     ecx, [esp+58h+var_20]
                mov     [edi+eax*8+4], esi
                mov     eax, [esp+58h+var_28]
                mov     [edi+ebx*8-80h], eax
                mov     eax, [esp+58h+var_24]
                mov     [edi+ebx*8-7Ch], eax
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_48]
                movzx   eax, bl
                xor     eax, 7Ah
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 35h
                mov     [eax+edi], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [eax+edi+4], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_34]
                shr     eax, 8
                movzx   edx, al
                sub     edx, 0AEh
                add     edx, dword ptr [esp+58h+var_14]
                adc     ecx, dword ptr [esp+58h+var_14+4]
                shr     ebx, 10h
                movzx   eax, bl
                xor     eax, 0F9h
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_8]
                mov     [edi+eax*8], edx
                add     ecx, 50719369h
                mov     edx, [esp+58h+var_C]
                xor     eax, eax
                add     edx, 2510B8F2h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___109      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___180      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shl     ebx, 4
                add     ebx, eax
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_40], ebx
                lea     eax, [esi+7DA0AE09h]
                mov     [esp+58h+var_44], edi
                mov     [esp+58h+var_28], eax
                movzx   eax, bl
                xor     eax, 3Fh
                push    offset dword_40C2F0
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [edi+eax*8-4F0h]
                mov     eax, [edi+eax*8-4ECh]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     edx, [eax+edi-8Bh]
                mov     eax, [eax+edi-87h]
                mov     [esp+5Ch+var_30], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0A2h
                mov     [esp+5Ch+var_34], edx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                lea     eax, [esi+7DA0AE09h]
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, edi
                mov     eax, [edx+eax*2-58h]
                mov     edx, 3F3BFA03h
                mov     [esp+5Ch+var_1C], eax
                call    VBN_TransformContext
                mov     eax, ebx
                lea     ecx, [esi+7DA0AE09h]
                xor     eax, ecx
                mov     edi, esi
                sub     edi, [ebp+arg_0]
                xor     eax, ebx
                mov     edx, eax
                mov     [esp+58h+var_18], eax
                xor     edi, ecx
                xor     edx, esi
                xor     edx, [ebp+arg_0]
                lea     ecx, [esi+1B83B052h]
                xor     ecx, edi
                mov     [esp+58h+var_C], edi
                xor     ecx, eax
                mov     [esp+58h+var_8], edx
                mov     eax, edx
                mov     [esp+58h+var_2C], ecx
                xor     eax, edi
                xor     eax, ebx
                mov     ebx, ecx
                xor     eax, 0DD3C4D0Dh
                xor     ebx, edx
                mov     [esp+58h+var_48], eax
                lea     eax, [esi+7DA0AE09h]
                xor     ebx, eax
                xor     ebx, [esp+58h+var_40]
                mov     eax, ebx
                shr     eax, 8
                xor     al, 24h
                movzx   eax, al
                cdq
                xor     esi, esi
                movzx   edi, bl
                sub     edi, 0D4h
                sub     edi, eax
                mov     eax, [esp+58h+var_48]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_3C]
                lea     edx, [ecx-394D5559h]
                adc     esi, dword ptr [esp+58h+var_3C+4]
                xor     eax, 847BEFFAh
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_34]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_44]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 89h
                shr     ebx, 18h
                xor     ebx, 0AAh
                mov     [eax+edx], ecx
                mov     ecx, [esp+58h+var_30]
                mov     [eax+edx+4], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edx+ebx*8+4], esi
                mov     [edx+ebx*8], edi
                mov     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_2C]
                xor     ebx, [esp+58h+var_28]
                movzx   eax, bl
                xor     eax, 70h
                mov     esi, [esp+58h+var_44]
                pop     edi
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+54h+var_20]
                mov     [edx+eax*8+4], ecx
                mov     eax, ebx
                mov     ecx, [esp+54h+var_1C]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [edx+eax*8-55Ch], 0
                mov     [edx+eax*8-560h], ecx
                xor     ecx, ecx
                mov     eax, [esp+54h+var_18]
                movzx   edx, al
                sub     edx, 8Eh
                add     edx, dword ptr [esp+54h+var_14]
                adc     ecx, dword ptr [esp+54h+var_14+4]
                shr     ebx, 10h
                movzx   eax, bl
                xor     eax, 89h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+54h+var_8]
                mov     [esi+eax*8], edx
                add     ecx, 0D84FF5A2h
                mov     edx, [esp+54h+var_C]
                xor     eax, eax
                pop     esi
                xor     edx, 5ED0B9F7h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___180      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__4       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                sub     edx, [ebp+arg_4]
                push    ebx
                xor     edx, 0D58ACB3Bh
                mov     ebx, ecx
                movzx   eax, dl
                push    esi
                push    edi
                mov     [esp+20h+var_14], ebx
                mov     ecx, [ebx+eax*8-1B8h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Bh
                mov     [esp+20h+var_10], edx
                mov     [esp+20h+var_C], ecx
                mov     ecx, [esp+20h+var_14]
                push    offset dword_40A448
                mov     edi, [ebx+eax*8]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0FCh
                mov     esi, [eax+ebx]
                mov     ebx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                lea     edx, [ebx-62145B59h]
                call    VBN_TransformContext
                mov     eax, ebx
                xor     edx, edx
                xor     [esp+20h+var_10], eax
                mov     eax, [esp+20h+var_C]
                movzx   ecx, al
                mov     eax, esi
                call    __allshl
                mov     cl, byte ptr [ebp+arg_0]
                or      eax, edi
                sub     cl, byte ptr [ebp+arg_4]
                movzx   edx, cl
                movzx   ecx, bl
                mov     ebx, [esp+20h+var_10]
                xor     edx, ecx
                movzx   ecx, bl
                xor     edx, ecx
                mov     ecx, [esp+20h+var_14]
                xor     edx, 0Dh
                pop     edi
                pop     esi
                and     dword ptr [ecx+edx*8+4], 0
                mov     [ecx+edx*8], eax
                mov     eax, ebx
                xor     eax, [ebp+arg_4]
                lea     ecx, [ebx+1AFC83FBh]
                xor     eax, [ebp+arg_0]
                xor     edx, edx
                xor     eax, 1E7A8066h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__4       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___118      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                sub     eax, edi
                mov     [esp+50h+var_44], esi
                xor     eax, 58247BEh
                and     [esp+50h+var_4], 0
                mov     [esp+50h+var_3C], eax
                mov     edx, edi
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     ebx, [esp+50h+var_44]
                movzx   eax, dl
                mov     [esp+50h+var_10], eax
                xor     eax, 4
                mov     [esp+50h+var_40], edx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+50h+var_2C], eax
                mov     [esp+50h+var_30], ecx
                mov     ecx, [esp+50h+var_3C]
                movzx   eax, cl
                mov     esi, [esi+eax*8-5F8h]
                mov     [esp+50h+var_18], esi
                mov     esi, [esp+50h+var_44]
                mov     eax, [esi+eax*8-5F4h]
                mov     [esp+50h+var_14], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 6Ch
                mov     esi, [eax+esi]
                mov     [esp+50h+var_C], esi
                mov     esi, [esp+50h+var_44]
                mov     eax, [eax+esi+4]
                mov     [esp+50h+var_8], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 18h
                xor     ecx, 0C5h
                xor     al, 0E7h
                movzx   eax, al
                cdq
                add     eax, [ecx+esi]
                mov     [esp+50h+var_20], eax
                adc     edx, [ecx+esi+4]
                mov     esi, [esp+50h+var_3C]
                mov     ecx, esi
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 73h
                mov     [esp+50h+var_1C], edx
                mov     edx, [esp+50h+var_40]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+ebx]
                xor     eax, 0CBh
                add     ecx, eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0ACh
                mov     eax, [ebx+eax*8]
                mov     eax, [eax+ecx*4]
                mov     ecx, edi
                mov     [esp+50h+var_24], eax
                mov     eax, edx
                xor     eax, esi
                shl     ecx, 4
                mov     [esp+50h+var_34], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     ecx, eax
                xor     ecx, edx
                xor     ecx, esi
                xor     esi, [ebp+arg_0]
                xor     esi, edi
                mov     [esp+50h+var_38], ecx
                push    offset dword_40A6A0
                mov     ecx, ebx
                lea     edx, [esi-433CBA4Fh]
                call    VBN_TransformContext
                mov     ebx, [esp+50h+var_40]
                xor     edi, edi
                xor     ebx, [esp+50h+var_38]
                xor     ebx, [esp+50h+var_34]
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 0EBh
                add     al, 2Dh ; '-'
                movzx   eax, al
                cdq
                sub     ecx, eax
                mov     eax, ebx
                sbb     edi, edx
                add     ecx, [esp+50h+var_30]
                mov     [esp+50h+var_28], ecx
                adc     edi, [esp+50h+var_2C]
                xor     eax, esi
                xor     eax, [esp+50h+var_3C]
                mov     ecx, [esp+50h+var_40]
                xor     eax, 0FBC18695h
                xor     ecx, esi
                mov     [esp+50h+var_2C], eax
                xor     ecx, [esp+50h+var_38]
                add     eax, 298B35BCh
                mov     esi, [esp+50h+var_28]
                mov     edx, ecx
                mov     [esp+50h+var_30], ecx
                xor     edx, 861DEAEEh
                xor     ecx, ecx
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_30]
                xor     ecx, ebx
                mov     [esi+4], edx
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_3C]
                mov     edx, [esp+50h+var_44]
                mov     ebx, [esp+50h+var_24]
                movzx   eax, cl
                mov     [edx+eax*8-148h], ebx
                mov     ebx, edx
                and     dword ptr [ebx+eax*8-144h], 0
                mov     eax, ecx
                mov     ebx, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [edx+eax*8-8], ebx
                mov     ebx, [esp+50h+var_1C]
                mov     [edx+eax*8-4], ebx
                mov     eax, ecx
                shr     eax, 10h
                mov     ebx, edx
                movzx   eax, al
                xor     eax, 56h
                shr     ecx, 18h
                xor     ecx, 37h
                mov     [ebx+eax*8], esi
                mov     esi, edx
                mov     ebx, [esp+50h+var_34]
                mov     edx, [esp+50h+var_30]
                mov     [esi+eax*8+4], edi
                mov     eax, [esp+50h+var_18]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+50h+var_14]
                mov     [esi+ecx*8+4], eax
                movzx   eax, dl
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                xor     ecx, 47h
                xor     ecx, [esp+50h+var_10]
                lea     edx, [ebx-2E52C283h]
                mov     eax, [esp+50h+var_C]
                pop     edi
                mov     [ecx+esi], eax
                mov     eax, [esp+4Ch+var_8]
                mov     [ecx+esi+4], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_38]
                xor     ecx, 1920A204h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___118      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___26_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                mov     edx, esi
                mov     [ebp+var_4], ebx
                xor     edx, eax
                add     eax, 90B1D6E2h
                mov     [ebp+var_C], eax
                mov     eax, edx
                shr     eax, 10h
                xor     al, 0A5h
                movzx   ecx, dl
                xor     ecx, 0BDh
                movzx   eax, al
                mov     [ebp+var_8], edx
                cdq
                push    edi
                mov     edi, [ecx+ebx]
                mov     ebx, [ecx+ebx+4]
                sub     edi, eax
                mov     eax, [ebp+var_8]
                sbb     ebx, edx
                mov     ecx, [ebp+var_4]
                shr     eax, 8
                xor     al, 39h
                movzx   eax, al
                cdq
                add     edi, eax
                mov     eax, [ebp+arg_0]
                push    offset dword_40C770
                adc     ebx, edx
                shr     eax, 4
                shl     esi, 4
                add     esi, eax
                mov     edx, esi
                xor     edx, [ebp+var_C]
                xor     edx, [ebp+var_8]
                xor     edx, 0F6DD7409h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                xor     esi, [ebp+var_8]
                mov     ecx, [ebp+var_C]
                add     ecx, 59456F07h
                mov     [eax+1B8h], edi
                or      edx, ecx
                mov     [eax+1BCh], ebx
                lea     eax, [esi-782FCF11h]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___26_stk   endp


vBng___34       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [esp+54h+var_48], ecx
                and     [esp+54h+var_4], 0
                push    edi
                lea     edx, [esi-7E76C09h]
                movzx   eax, dl
                lea     ebx, [esi+0F36E537h]
                xor     eax, 0CAh
                add     ebx, [ebp+arg_4]
                mov     [esp+58h+var_3C], edx
                mov     edi, [esp+58h+var_3C]
                mov     [esp+58h+var_44], ebx
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+58h+var_18], ecx
                mov     ecx, [esp+58h+var_48]
                push    offset dword_40A780
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EDh
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0ADh
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_20], eax
                movzx   eax, bl
                xor     eax, 95h
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 0F9h
                movzx   ecx, al
                mov     ebx, esi
                mov     eax, [esp+5Ch+var_48]
                xor     ebx, [ebp+arg_4]
                xor     ebx, edi
                mov     [esp+5Ch+var_28], ebx
                mov     eax, [edx+eax]
                mov     edx, ebx
                xor     edx, 6FF2E085h
                mov     eax, [eax+ecx-7Eh]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_10], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, esi
                mov     ecx, [ebp+arg_4]
                sub     eax, edx
                xor     eax, [esp+58h+var_44]
                add     ecx, 1A62458Ch
                xor     eax, edi
                sub     edx, esi
                xor     eax, 8148E7E3h
                xor     edx, ebx
                xor     edx, [esp+58h+var_44]
                add     ecx, esi
                xor     ecx, eax
                mov     [esp+58h+var_1C], eax
                xor     ecx, ebx
                mov     [esp+58h+var_C], edx
                mov     ebx, [ebp+arg_4]
                mov     [esp+58h+var_8], ecx
                shr     ebx, 4
                shl     esi, 4
                add     ebx, esi
                xor     esi, esi
                xor     ebx, edx
                xor     ebx, eax
                mov     eax, ecx
                xor     eax, edx
                mov     [esp+58h+var_3C], ebx
                xor     eax, edi
                xor     ebx, ecx
                xor     ebx, [esp+58h+var_44]
                xor     eax, 401337EBh
                mov     [esp+58h+var_40], eax
                xor     ebx, edi
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 74h ; 't'
                xor     al, 0FCh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                mov     edx, [esp+58h+var_3C]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     eax, 148BF753h
                xor     ecx, ecx
                xor     edx, 14B30D81h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_30]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Eh
                shr     ebx, 18h
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     [edx+eax*8+4], ecx
                mov     [edx+ebx*8-1B0h], edi
                mov     edi, edx
                mov     ecx, [esp+58h+var_24]
                mov     [edi+ebx*8-1ACh], esi
                mov     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_28]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                mov     [eax+edi-6Ah], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+edi-66h], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_1C]
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 88h
                add     edx, dword ptr [esp+58h+var_18]
                adc     ecx, dword ptr [esp+58h+var_18+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 97h
                shr     ebx, 10h
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [edi+eax*8], edx
                mov     edx, [esp+58h+var_C]
                movzx   eax, bl
                xor     edx, 3B2034FCh
                xor     eax, 0BEh
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                xor     ecx, 502F8C5Ah
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___34       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f17 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_11          = byte ptr -11h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                sub     ebx, edi
                and     [esp+20h+var_4], 0
                xor     ebx, 2362E8CFh
                mov     [esp+20h+var_C], esi
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     edx, 0D8h
                movzx   ecx, al
                xor     ecx, 3Dh
                mov     eax, [edx+esi]
                mov     edx, [eax+ecx]
                movzx   eax, bl
                xor     eax, 0E5h
                mov     ecx, [esi+eax*8]
                cmp     ecx, edx
                mov     eax, edx
                mov     esi, edi
                setnbe  [esp+20h+var_11]
                sub     esi, [ebp+arg_0]
                sub     eax, ecx
                mov     [esp+20h+var_8], eax
                mov     eax, edi
                xor     eax, [ebp+arg_0]
                xor     eax, ebx
                shr     edi, 4
                mov     [esp+20h+var_10], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     edi, eax
                mov     eax, esi
                xor     edi, esi
                xor     edi, ebx
                mov     ebx, [esp+20h+var_10]
                xor     eax, edi
                xor     eax, ebx
                mov     [esp+20h+var_10], eax
                cmp     ecx, edx
                jbe     short loc_4A3993
                xor     eax, eax
                xor     ebx, 425FBD06h
                xor     esi, 0EE4DDD9Ch
                or      eax, ebx
                jmp     short loc_4A39AE
; ---------------------------------------------------------------------------

loc_4A3993:                             ; CODE XREF: VBNCB_unnamed_80001f17+8F¡üj
                mov     eax, [ebp+arg_0]
                xor     edi, 16D977E9h
                add     eax, 89F18AC3h
                xor     eax, ebx
                xor     eax, esi
                xor     esi, esi
                add     eax, 1CE2AED9h
                or      esi, edi

loc_4A39AE:                             ; CODE XREF: VBNCB_unnamed_80001f17+A1¡üj
                mov     edx, [esp+20h+var_10]
                mov     edi, [esp+20h+var_C]
                mov     bl, [esp+20h+var_11]
                movzx   ecx, dl
                xor     ecx, 0D2h
                cmp     [esp+20h+var_8], 0
                mov     [edi+ecx*8], bl
                setz    bl
                shr     edx, 8
                movzx   ecx, dl
                mov     edx, esi
                xor     ecx, 19h
                mov     [edi+ecx*8], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f17 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___135      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     [esp+2Ch+var_1C], ecx
                mov     eax, esi
                shl     eax, 4
                mov     ecx, edx
                sub     ecx, esi
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+2Ch+var_14], ecx
                push    edi
                lea     eax, [edx+61CA7610h]
                mov     [esp+30h+var_1D], 1
                xor     eax, ecx
                mov     edi, esi
                sub     edi, edx
                mov     [esp+30h+var_10], eax
                mov     [esp+30h+var_C], edi
                mov     eax, ecx
                xor     edi, 310A419Dh
                shr     eax, 8
                xor     eax, 8442h
                mov     [esp+30h+var_18], edi
                mov     edi, [esp+30h+var_1C]
                add     edx, 6C74D343h
                movzx   ecx, cl
                add     esi, edx
                movzx   eax, ax
                cdq
                mov     edi, [ecx+edi+0A0h]
                sub     edi, eax
                mov     eax, [esp+30h+var_1C]
                mov     [esp+30h+var_8], edi
                mov     ecx, [ecx+eax+0A4h]
                mov     eax, edi
                sbb     ecx, edx
                or      eax, ecx
                mov     [esp+30h+var_4], ecx
                jz      short loc_4A3A85
                mov     [esp+30h+var_1D], 0

loc_4A3A85:                             ; CODE XREF: vBng___135+8E¡üj
                mov     edi, [esp+30h+var_14]
                mov     ecx, [esp+30h+var_1C]
                push    offset dword_40AB60
                lea     edx, [edi+34A2B9F4h]
                call    VBN_TransformContext
                mov     ecx, [esp+30h+var_10]
                xor     ebx, ecx
                xor     ebx, edi
                mov     edi, [esp+30h+var_C]
                mov     eax, ebx
                xor     eax, esi
                xor     [esp+30h+var_18], eax
                cmp     [esp+30h+var_1D], 0
                jnz     short loc_4A3ACA
                xor     edi, edi
                lea     edx, [ecx+293C7698h]
                xor     esi, 0DA8A65D3h
                or      edi, esi
                jmp     short loc_4A3AE4
; ---------------------------------------------------------------------------

loc_4A3ACA:                             ; CODE XREF: vBng___135+C6¡üj
                xor     edi, esi
                xor     edx, edx
                xor     edi, ecx
                xor     ebx, 3435641h
                xor     edi, 0AF2B93A8h
                sub     edi, 539842B3h
                or      edx, ebx

loc_4A3AE4:                             ; CODE XREF: vBng___135+D8¡üj
                mov     eax, [esp+30h+var_18]
                mov     esi, [esp+30h+var_8]
                movzx   ecx, al
                mov     eax, [esp+30h+var_1C]
                xor     ecx, 17h
                mov     [ecx+eax], esi
                mov     esi, [esp+30h+var_4]
                mov     [ecx+eax+4], esi
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___135      endp



; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int STRAPI_MultiCat(unsigned __int16 **, unsigned int, ...)






; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame



vBng___117_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                sub     eax, [ebp+arg_0]
                mov     ebx, esi
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 2Ch
                shr     ebx, 4
                push    edi
                mov     edi, ecx
                push    offset dword_40A650
                mov     [ebp+var_10], edi
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [ebp+var_C], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     ebx, eax
                mov     [ebp+var_8], ecx
                mov     ecx, edi
                lea     edx, [ebx+6A301ACCh]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [esi+4710658Bh]
                xor     ecx, eax
                mov     edi, eax
                xor     edi, ebx
                mov     [ebp+var_4], ecx
                mov     esi, [ebp+var_4]
                xor     edi, eax
                mov     al, byte ptr [ebp+arg_0]
                sub     al, 0Fh
                xor     al, bl
                xor     al, cl
                mov     ecx, [ebp+arg_0]
                add     ecx, 35050EA5h
                xor     al, 5Eh
                xor     ecx, edi
                movzx   eax, al
                xor     ecx, esi
                cdq
                xor     ecx, 8197BF02h
                sub     eax, ecx
                mov     ecx, [ebp+var_10]
                sbb     edx, 0
                add     eax, [ebp+var_8]
                adc     edx, [ebp+var_C]
                xor     edi, 919E62D9h
                mov     [ecx+1B8h], eax
                xor     eax, eax
                or      eax, edi
                mov     [ecx+1BCh], edx
                pop     edi
                lea     edx, [esi-25F310C5h]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___117_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___61       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                sub     edx, edi
                mov     eax, edx
                mov     [esp+58h+var_4C], ecx
                shr     eax, 10h
                lea     ebx, [esi+423E9FA3h]
                movzx   eax, al
                xor     eax, 25h
                mov     [esp+58h+var_48], edx
                mov     [esp+58h+var_44], ebx
                push    offset dword_40C200
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 3Dh
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 6Eh
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_4C]
                xor     ecx, 17h
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+5Ch+var_24], eax
                movzx   eax, bl
                mov     [esp+5Ch+var_38], eax
                mov     eax, ebx
                mov     ebx, [esp+5Ch+var_4C]
                shr     eax, 10h
                movzx   edx, al
                mov     eax, [esp+5Ch+var_38]
                sub     edx, 0B5h
                xor     eax, 36h
                add     edx, [eax+ebx]
                mov     [esp+5Ch+var_18], edx
                adc     ecx, [eax+ebx+4]
                mov     edx, [esp+5Ch+var_48]
                movzx   eax, dl
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [ebx+eax*8-168h]
                mov     eax, [ebx+eax*8-164h]
                mov     ebx, edi
                sub     ebx, esi
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_4C]
                xor     ebx, edx
                xor     ebx, 1464A214h
                mov     [esp+5Ch+var_1C], eax
                mov     [esp+5Ch+var_10], ebx
                lea     edx, [ebx+7D88DC1Bh]
                call    VBN_TransformContext
                mov     ecx, esi
                lea     edx, [esi+423E9FA3h]
                mov     eax, edi
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     eax, ecx
                xor     eax, edx
                lea     edx, [edi-8579A30h]
                xor     eax, [esp+58h+var_48]
                add     edx, esi
                mov     [esp+58h+var_34], eax
                xor     ecx, eax
                xor     edx, ebx
                xor     edx, [esp+58h+var_44]
                lea     eax, [edi-2BBAEAAh]
                add     eax, esi
                mov     [esp+58h+var_4], edx
                xor     eax, edx
                xor     ecx, ebx
                xor     eax, [esp+58h+var_34]
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                xor     eax, edx
                mov     [esp+58h+var_28], ecx
                xor     eax, [esp+58h+var_48]
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0C4h
                add     al, 26h ; '&'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_3C]
                adc     edx, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                xor     eax, 20508E0Fh
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-5FD8B801h]
                mov     [ebx+4], esi
                mov     ecx, edi
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                mov     edi, [esp+58h+var_4C]
                mov     esi, [esp+58h+var_24]
                movzx   eax, cl
                and     dword ptr [edi+eax*8-3E4h], 0
                mov     [edi+eax*8-3E8h], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-8], esi
                mov     esi, [esp+58h+var_1C]
                mov     [edi+eax*8-4], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [edi+eax*8+4], edx
                mov     [edi+eax*8], ebx
                mov     eax, [esp+58h+var_18]
                mov     [edi+ecx*8-2B0h], eax
                mov     eax, [esp+58h+var_14]
                mov     [edi+ecx*8-2ACh], eax
                mov     eax, [esp+58h+var_10]
                mov     edx, [esp+58h+var_34]
                movzx   ecx, al
                xor     edx, 2354D809h
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                xor     ecx, 0Ch
                xor     ecx, [esp+58h+var_38]
                mov     [ecx+edi], eax
                mov     eax, [esp+58h+var_8]
                mov     [ecx+edi+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_4]
                pop     edi
                add     ecx, 3AD6ABA4h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___61       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000209a proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                push    edi
                mov     [ebp+var_4], ecx
                xor     edi, edi
                lea     ebx, [esi+13F2F4B0h]
                add     esi, 85B56C99h
                add     ebx, edx
                shl     edx, 4
                add     edx, eax
                mov     ecx, edx
                xor     ecx, ebx
                lea     eax, [ebx+575C9834h]
                mov     [ebp+var_8], ecx
                or      edi, eax
                xor     esi, ecx
                mov     ecx, [ebp+var_4]
                mov     eax, ebx
                shr     eax, 8
                xor     esi, edx
                movzx   eax, al
                sub     esi, 784094E8h
                cmp     byte ptr [ecx+eax*8+0A0h], 0
                mov     ecx, [ebp+var_8]
                jnz     short loc_46D0F0
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8-200h], 0
                jnz     short loc_46D0F0
                xor     esi, esi
                xor     ecx, 79D9E901h
                xor     edx, 3C66383Ah
                or      esi, ecx
                jmp     short loc_46D0F2
; ---------------------------------------------------------------------------

loc_46D0F0:                             ; CODE XREF: VBNCB_unnamed_8000209a+5C¡üj
                                        ; VBNCB_unnamed_8000209a+6C¡üj
                mov     edx, edi

loc_46D0F2:                             ; CODE XREF: VBNCB_unnamed_8000209a+7E¡üj
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000209a endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___20       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, esi
                xor     eax, edi
                mov     [esp+58h+var_4C], ecx
                sub     ebx, edi
                and     [esp+58h+var_4], 0
                xor     eax, ebx
                mov     [esp+58h+var_3C], ebx
                mov     [esp+58h+var_48], eax
                lea     edx, [edi-6C7A8015h]
                movzx   eax, bl
                mov     [esp+58h+var_2C], edx
                push    offset dword_40AD60
                mov     ecx, [eax+ecx+4Ah]
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4Eh]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-490h]
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-48Ch]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, [ecx+eax*8-610h]
                mov     dword ptr [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-60Ch]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                movzx   eax, dl
                xor     eax, 0E8h
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                lea     eax, [edi-6C7A8015h]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_4C]
                mov     eax, [edx+eax+1Ah]
                mov     edx, [esp+5Ch+var_48]
                xor     edx, 0DED9F6FBh
                mov     eax, [eax+ecx+13h]
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_1C], eax
                call    VBN_TransformContext
                lea     ecx, [edi-6C7A8015h]
                mov     eax, edi
                sub     eax, esi
                lea     edx, [esi+5E114028h]
                xor     edx, [esp+58h+var_48]
                xor     eax, ecx
                xor     edx, ecx
                xor     eax, ebx
                mov     [esp+58h+var_40], edx
                xor     eax, 0E7EA5155h
                lea     edx, [esi+68E434Eh]
                mov     [esp+58h+var_28], eax
                add     edx, edi
                mov     ecx, ebx
                xor     ecx, [esp+58h+var_40]
                xor     edx, eax
                xor     edx, [esp+58h+var_48]
                xor     ecx, eax
                mov     eax, edx
                mov     [esp+58h+var_8], edx
                xor     eax, [esp+58h+var_40]
                mov     [esp+58h+var_30], ecx
                xor     eax, ebx
                xor     esi, esi
                xor     eax, 9FA27338h
                mov     ebx, ecx
                mov     [esp+58h+var_44], eax
                xor     ebx, edx
                lea     eax, [edi-6C7A8015h]
                movzx   edi, cl
                xor     ebx, eax
                sub     edi, 0BCh
                xor     ebx, [esp+58h+var_3C]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0D3h
                mov     [esp+58h+var_3C], ebx
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_28]
                movzx   eax, al
                sbb     esi, edx
                mov     [esp+58h+var_28], eax
                add     edi, dword ptr [esp+58h+var_38]
                mov     edx, [esp+58h+var_44]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     ecx, ecx
                xor     ebx, 8210AAF3h
                mov     dword ptr [esp+58h+var_38+4], esi
                mov     esi, [esp+58h+var_4C]
                or      ecx, ebx
                mov     ebx, [esp+58h+var_44]
                add     edx, 512377B2h
                xor     ebx, [esp+58h+var_30]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_2C]
                mov     [edi], ecx
                xor     ecx, ecx
                mov     [edi+4], edx
                lea     edx, [eax-29h]
                add     edx, dword ptr [esp+58h+var_24]
                movzx   eax, bl
                adc     ecx, dword ptr [esp+58h+var_24+4]
                mov     [esi+eax*8-108h], edx
                mov     edx, esi
                mov     esi, dword ptr [esp+58h+var_38+4]
                mov     [edx+eax*8-104h], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                mov     [edx+eax*8+148h], edi
                mov     [edx+eax*8+14Ch], esi
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 4Ah
                and     dword ptr [edx+eax*8-0C4h], 0
                mov     [edx+eax*8-0C8h], ecx
                mov     eax, [esp+58h+var_18]
                mov     [ebx+edx], eax
                mov     eax, [esp+58h+var_14]
                mov     [ebx+edx+4], eax
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 57h
                xor     ecx, [esp+58h+var_28]
                mov     [edx+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [edx+ecx*8+4], eax
                mov     edx, [esp+58h+var_40]
                mov     ecx, [esp+58h+var_8]
                xor     edx, 0AE8DBDCh
                xor     eax, eax
                pop     edi
                add     ecx, 0C84178D7h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___20       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___162_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                sub     edi, edx
                mov     [ebp+var_14], esi
                mov     ebx, edi
                shl     edx, 4
                xor     ebx, 0F39915D3h
                xor     edi, 224B7228h
                movzx   eax, bl
                mov     [ebp+var_4], edi
                push    offset dword_40A8B0
                mov     ecx, [eax+esi-29h]
                mov     eax, [eax+esi-25h]
                mov     [ebp+var_10], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     edx, eax
                mov     [ebp+var_C], ecx
                mov     eax, [ebp+arg_4]
                mov     edi, edx
                sub     eax, [ebp+arg_0]
                xor     edi, ebx
                xor     eax, [ebp+var_4]
                xor     edx, edi
                xor     edx, [ebp+var_4]
                xor     eax, ebx
                xor     edx, 0DE872FFFh
                mov     [ebp+var_8], eax
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ebx, [ebp+var_8]
                mov     eax, ebx
                shr     eax, 8
                xor     bl, 5
                add     al, 54h ; 'T'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_14]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, [ebp+var_10]
                xor     edi, 0C9ADF841h
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+var_4]
                mov     [ecx+1B8h], eax
                xor     edx, 0A757D6B8h
                xor     eax, eax
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___162_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___47_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                and     [ebp+var_8], 0
                mov     [ebp+var_4], ecx
                mov     ecx, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                lea     ebx, [ecx-232D82FBh]
                add     ebx, eax
                xor     eax, ecx
                mov     [ebp+var_8], eax
                mov     ecx, ebx
                mov     eax, ebx
                shr     ecx, 8
                shr     eax, 10h
                xor     cl, 1
                xor     al, 73h
                movzx   eax, al
                cdq
                mov     edi, edx
                mov     esi, eax
                movzx   eax, cl
                cdq
                sub     eax, esi
                movzx   ecx, bl
                mov     esi, [ebp+var_8]
                sbb     edx, edi
                mov     edi, [ebp+var_4]
                push    offset dword_40A700
                add     eax, [ecx+edi+66h]
                adc     edx, [ecx+edi+6Ah]
                mov     ecx, edi
                mov     [edi+1BCh], edx
                mov     edx, [ebp+arg_0]
                add     edx, 865078C3h
                mov     [edi+1B8h], eax
                xor     edx, esi
                xor     edx, ebx
                xor     edx, 0F4EE78ECh
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                lea     ecx, [esi-1AB5C121h]
                sub     eax, [ebp+arg_4]
                xor     edx, edx
                xor     eax, ebx
                pop     edi
                pop     esi
                xor     eax, 0CCA352CDh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___47_stk   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___112      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                push    ebx
                shl     edx, 4
                mov     [esp+48h+var_40], ecx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                add     edx, eax
                mov     ecx, [ebp+arg_4]
                mov     esi, [esp+50h+var_40]
                sub     ecx, edi
                lea     ebx, [edi-3F4C78DBh]
                and     [esp+50h+var_4], 0
                xor     edx, ebx
                mov     [esp+50h+var_3C], ecx
                mov     [esp+50h+var_38], edx
                mov     eax, ebx
                mov     edx, [esp+50h+var_40]
                shr     eax, 10h
                movzx   eax, al
                movzx   ecx, cl
                xor     ecx, 0FAh
                mov     [esp+50h+var_30], ebx
                mov     edx, [edx+eax*8-3C8h]
                mov     [esp+50h+var_10], edx
                mov     edx, [esp+50h+var_40]
                mov     eax, [edx+eax*8-3C4h]
                mov     [esp+50h+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 30h
                mov     edx, [edx+eax*8]
                mov     [esp+50h+var_1C], edx
                mov     edx, [esp+50h+var_40]
                mov     eax, [edx+eax*8+4]
                mov     [esp+50h+var_18], eax
                mov     eax, [esp+50h+var_38]
                xor     eax, 1CC7h
                movzx   eax, ax
                cdq
                add     eax, [esi+ecx*8]
                mov     [esp+50h+var_24], eax
                mov     eax, esi
                adc     edx, [eax+ecx*8+4]
                mov     ecx, ebx
                mov     eax, [esp+50h+var_3C]
                shr     ecx, 18h
                xor     ecx, 0F2h
                mov     [esp+50h+var_20], edx
                shr     eax, 10h
                mov     edx, esi
                mov     ecx, [ecx+edx]
                add     ecx, eax
                movzx   eax, bl
                mov     eax, [eax+edx-5Eh]
                lea     edx, [edi+37C4DE3Eh]
                xor     edx, [esp+50h+var_3C]
                xor     edx, ebx
                mov     [esp+50h+var_14], edx
                mov     eax, [eax+ecx*4-19610h]
                mov     ecx, [ebp+arg_4]
                mov     [esp+50h+var_28], eax
                mov     eax, edi
                shr     ecx, 4
                xor     edi, edx
                xor     edi, [ebp+arg_4]
                xor     edi, [esp+50h+var_38]
                shl     eax, 4
                add     ecx, eax
                mov     [esp+50h+var_2C], edi
                xor     ecx, [esp+50h+var_38]
                mov     eax, [esp+50h+var_3C]
                xor     ecx, eax
                mov     ebx, eax
                mov     [esp+50h+var_8], ecx
                xor     ebx, ecx
                xor     ebx, edx
                xor     edi, ecx
                xor     edi, [esp+50h+var_30]
                shr     eax, 8
                xor     edi, 844FF31Ah
                movzx   ecx, al
                mov     eax, edi
                shr     eax, 8
                xor     ecx, 1Eh
                xor     al, 8Fh
                mov     [esp+50h+var_34], edi
                movzx   eax, al
                mov     edi, esi
                cdq
                push    offset dword_40BD0C
                mov     esi, [edi+ecx*8]
                mov     edi, [edi+ecx*8+4]
                sub     esi, eax
                mov     al, byte ptr [esp+54h+var_34]
                mov     ecx, [esp+54h+var_40]
                sbb     edi, edx
                xor     al, 1Ah
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, ebx
                adc     edi, edx
                xor     eax, [esp+54h+var_2C]
                xor     eax, [esp+54h+var_3C]
                xor     eax, [esp+54h+var_30]
                mov     [esp+54h+var_30], eax
                lea     edx, [eax-1F0ABCABh]
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_2C]
                lea     eax, [ebx+72AFED4Ah]
                xor     ecx, ecx
                add     edx, 676C1161h
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_34]
                xor     ecx, ebx
                mov     [esi+4], edx
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_3C]
                mov     ebx, [esp+50h+var_40]
                mov     edx, [esp+50h+var_28]
                movzx   eax, cl
                xor     eax, 7Ch
                mov     [ebx+eax*8], edx
                mov     edx, ebx
                mov     ebx, [esp+50h+var_38]
                and     dword ptr [edx+eax*8+4], 0
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 14h
                mov     [edx+eax*8], esi
                mov     esi, edx
                mov     edx, [esp+50h+var_24]
                mov     [esi+eax*8+4], edi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 84h
                shr     ecx, 18h
                mov     [esi+eax*8], edx
                mov     edx, [esp+50h+var_20]
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+50h+var_1C]
                mov     edx, [esp+50h+var_14]
                mov     [ecx+esi-90h], eax
                mov     eax, [esp+50h+var_18]
                mov     [ecx+esi-8Ch], eax
                movzx   eax, dl
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_34]
                movzx   eax, al
                xor     ecx, eax
                xor     ecx, 0A4h
                mov     eax, [esp+50h+var_10]
                add     edx, 0F6449FC1h
                mov     [esi+ecx*8], eax
                mov     eax, [esp+50h+var_C]
                mov     [esi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                pop     edi
                add     ecx, 904A5B98h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___112      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h_         proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                and     [esp+38h+var_4], 0
                mov     ecx, esi
                mov     [esp+38h+var_28], edi
                sub     ecx, [ebp+arg_4]
                xor     ecx, 0DD2B8103h
                mov     eax, ecx
                mov     [esp+38h+var_24], ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Ch
                push    offset dword_40C040
                mov     edx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     dword ptr [esp+3Ch+var_1C+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+3Ch+var_2C], edx
                mov     ebx, [eax+edi-0Eh]
                mov     eax, [eax+edi-0Ah]
                mov     dword ptr [esp+3Ch+var_1C], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 1
                mov     [esp+3Ch+var_20], ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+3Ch+var_10], eax
                lea     eax, [esi-5A113319h]
                add     eax, ebx
                mov     [esp+3Ch+var_14], edx
                movzx   eax, al
                add     ebx, 0A5EECCE7h
                xor     eax, 48h
                mov     esi, [eax+edi]
                mov     edi, [eax+edi+4]
                movzx   eax, cl
                mov     edx, eax
                mov     [esp+3Ch+var_8], eax
                mov     eax, [ebp+arg_0]
                xor     edx, 42h
                add     eax, ebx
                mov     ebx, [esp+3Ch+var_2C]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+3Ch+var_28]
                mov     eax, [edx+eax]
                mov     [ecx+ebx-9], eax
                mov     ebx, [esp+3Ch+var_28]
                mov     eax, [edx+ebx+4]
                mov     edx, [esp+3Ch+var_2C]
                mov     [ecx+edx-5], eax
                mov     ecx, ebx
                mov     eax, [ebp+arg_0]
                add     eax, 0BD7AC961h
                xor     eax, [esp+3Ch+var_24]
                mov     edx, eax
                mov     [esp+3Ch+var_C], eax
                xor     edx, 9CFF9C4Eh
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                add     ebx, 0A5EECCE7h
                mov     ecx, [esp+38h+var_2C]
                add     edx, ebx
                mov     ebx, [esp+38h+var_20]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx-30h], ebx
                mov     ebx, [esp+38h+var_2C]
                mov     ecx, dword ptr [esp+38h+var_1C]
                mov     [eax+ebx-2Ch], ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 519C6BF6h
                xor     ecx, edx
                xor     ecx, [esp+38h+var_24]
                movzx   eax, cl
                xor     eax, 69h
                mov     [esp+38h+var_24], ecx
                mov     [eax+ebx], esi
                mov     [eax+ebx+4], edi
                mov     eax, ecx
                mov     esi, [esp+38h+var_24]
                xor     ecx, ecx
                shr     eax, 8
                movzx   ebx, al
                mov     eax, esi
                shr     eax, 10h
                sub     ebx, 0DAh
                xor     al, 81h
                mov     edi, [ebp+arg_0]
                movzx   eax, al
                cdq
                sub     ebx, eax
                mov     eax, [esp+38h+var_14]
                sbb     ecx, edx
                add     ebx, [esp+38h+var_2C]
                mov     dword ptr [esp+38h+var_1C], ebx
                adc     ecx, dword ptr [esp+38h+var_1C+4]
                mov     dword ptr [esp+38h+var_1C+4], ecx
                mov     ecx, [ebp+arg_4]
                mov     [ebx], eax
                mov     eax, [esp+38h+var_10]
                mov     [ebx+4], eax
                mov     ebx, ecx
                xor     ebx, edi
                lea     eax, [edi-5A113319h]
                xor     ebx, [esp+38h+var_C]
                add     eax, ecx
                xor     ebx, eax
                shl     ecx, 4
                mov     eax, edi
                shr     eax, 4
                add     ecx, eax
                mov     eax, esi
                shr     eax, 18h
                xor     ecx, esi
                xor     ecx, [esp+38h+var_C]
                xor     al, 3Dh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     [esp+38h+var_2C], ecx
                lea     ecx, [ebx+43h]
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     esi, eax
                mov     eax, [esp+38h+var_2C]
                movzx   ecx, al
                sbb     edi, edx
                movzx   eax, bl
                add     esi, dword ptr [esp+38h+var_1C]
                adc     edi, dword ptr [esp+38h+var_1C+4]
                xor     ecx, eax
                mov     eax, [esp+38h+var_28]
                xor     ecx, 0BDh
                xor     ecx, [esp+38h+var_8]
                xor     edx, edx
                mov     [ecx+eax], esi
                mov     esi, [ebp+arg_4]
                mov     [ecx+eax+4], edi
                mov     eax, [ebp+arg_0]
                mov     ecx, [esp+38h+var_2C]
                shl     eax, 4
                add     ecx, 0B514537Bh
                shr     esi, 4
                or      edx, ecx
                add     eax, esi
                xor     eax, ebx
                xor     eax, [esp+38h+var_24]
                pop     edi
                pop     esi
                add     eax, 5E0B737Eh
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h_         endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___182_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                shl     esi, 4
                push    offset dword_40AB90
                mov     [ebp+var_14], ebx
                lea     eax, [edi+4C52538Eh]
                add     eax, [ebp+arg_4]
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 9Dh
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [ebp+var_10], eax
                mov     eax, edi
                shr     eax, 4
                add     esi, eax
                mov     [ebp+var_C], ecx
                mov     edx, esi
                mov     ecx, ebx
                xor     edx, 0E81E40D7h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     ebx, esi
                xor     ebx, [ebp+var_4]
                shr     eax, 4
                shl     edi, 4
                add     eax, edi
                xor     eax, ebx
                xor     eax, esi
                mov     [ebp+var_8], eax
                shr     eax, 8
                add     al, 3Eh ; '>'
                movzx   eax, al
                cdq
                mov     esi, edx
                mov     ecx, eax
                mov     edx, [ebp+var_8]
                xor     dl, 42h
                movzx   eax, dl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_14]
                pop     edi
                sbb     edx, esi
                add     eax, [ebp+var_C]
                pop     esi
                adc     edx, [ebp+var_10]
                mov     [ecx+1B8h], eax
                xor     eax, eax
                mov     [ecx+1BCh], edx
                lea     edx, [ebx+649EFDBDh]
                mov     ecx, [ebp+var_4]
                xor     ecx, 0CEA9482Fh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___182_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___55_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     edx, 4
                add     eax, edx
                push    ebx
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    esi
                mov     esi, ecx
                xor     eax, 20h
                mov     ecx, [ebp+arg_4]
                push    edi
                shl     ecx, 4
                mov     ebx, [eax+esi]
                mov     edi, [eax+esi+4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     ecx, eax
                mov     [ebp+var_8], esi
                mov     edx, ecx
                mov     [ebp+var_C], ecx
                push    offset dword_40A530
                xor     edx, 0BFA88EB2h
                mov     ecx, esi
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 0C4h
                shr     eax, 10h
                xor     al, 86h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                xor     eax, eax
                sub     ecx, [ebp+arg_4]
                mov     eax, 586E1409h
                xor     ecx, [ebp+var_C]
                xor     ecx, [ebp+var_4]
                xor     ecx, 27937957h
                or      edx, eax
                pop     edi
                pop     esi
                pop     ebx
                lea     eax, [ecx+2521386Bh]
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___55_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001feb proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shl     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shr     ebx, 4
                add     ebx, eax
                mov     [ebp+var_8], ecx
                lea     eax, [edx+10EA8221h]
                add     eax, esi
                lea     ecx, [esi+5DEF616Ah]
                xor     eax, ebx
                mov     [ebp+var_4], eax
                lea     eax, [edx+217BD87Ah]
                add     eax, esi
                sub     esi, edx
                mov     edx, [ebp+var_4]
                xor     eax, ecx
                xor     eax, ebx
                xor     esi, edx
                sub     eax, 0C3E6520h
                xor     esi, ecx
                push    edi
                xor     esi, 4BB51789h
                mov     [ebp+var_4], eax
                xor     edi, edi
                movzx   eax, bl
                or      edi, esi
                xor     eax, 34h
                mov     esi, [ebp+var_8]
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_46DB5B
                shr     ebx, 8
                movzx   eax, bl
                xor     eax, 0E2h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_46DB5B
                xor     edi, edi
                lea     eax, [edx+587DB270h]
                xor     ecx, 0B5E82439h
                or      edi, eax
                jmp     short loc_46DB5E
; ---------------------------------------------------------------------------

loc_46DB5B:                             ; CODE XREF: VBNCB_unnamed_80001feb+66¡üj
                                        ; VBNCB_unnamed_80001feb+77¡üj
                mov     ecx, [ebp+var_4]

loc_46DB5E:                             ; CODE XREF: VBNCB_unnamed_80001feb+89¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001feb endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___130      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                shr     edx, 4
                add     edx, eax
                and     [esp+54h+var_4], 0
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_40], edx
                mov     ecx, ebx
                mov     [esp+58h+var_4C], edi
                shl     ecx, 4
                add     ecx, eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 40h
                mov     [esp+58h+var_48], ecx
                push    offset dword_40C4BC
                mov     esi, [edi+eax*8]
                mov     dword ptr [esp+5Ch+var_14], esi
                mov     esi, edi
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 72h
                mov     edi, [eax+esi]
                movzx   eax, cl
                mov     ecx, [eax+esi+0ADh]
                mov     eax, [eax+esi+0B1h]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     esi, [esi+eax*8-290h]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 1Fh
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_28], eax
                movzx   eax, dl
                mov     ecx, [eax+ecx+3Eh]
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+42h]
                mov     [esp+5Ch+var_20], eax
                lea     eax, [ebx+85BDA66h]
                xor     eax, edx
                mov     edx, eax
                mov     [esp+5Ch+var_3C], eax
                xor     edx, 0D77706CCh
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_48]
                mov     ecx, eax
                mov     edx, [esp+58h+var_40]
                xor     ecx, eax
                shr     eax, 10h
                xor     ecx, edx
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_18], ecx
                lea     esi, [ebx+74E9256Ah]
                mov     eax, [edi+eax*4-360h]
                mov     edi, ebx
                sub     edi, [ebp+arg_0]
                xor     edi, [esp+58h+var_3C]
                xor     edi, [esp+58h+var_48]
                mov     [esp+58h+var_1C], eax
                mov     [esp+58h+var_C], edi
                mov     eax, [ebp+arg_0]
                xor     esi, ecx
                xor     esi, [esp+58h+var_3C]
                xor     eax, edi
                xor     eax, ecx
                mov     [esp+58h+var_8], esi
                xor     eax, ebx
                mov     [esp+58h+var_40], eax
                mov     eax, esi
                xor     eax, edi
                mov     ecx, [esp+58h+var_40]
                xor     eax, edx
                xor     ecx, esi
                xor     ecx, [esp+58h+var_48]
                xor     eax, 0B0A71EB3h
                mov     [esp+58h+var_44], eax
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     cl, 23h
                sub     al, 62h ; 'b'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_44]
                sub     ebx, esi
                mov     esi, [esp+58h+var_40]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                mov     edi, [esp+58h+var_4C]
                adc     edx, dword ptr [esp+58h+var_38+4]
                xor     eax, 842D8785h
                xor     ecx, ecx
                add     esi, 1F127CFh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_30]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F7h
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_2C]
                shr     ecx, 18h
                mov     [edi+eax*8], esi
                mov     esi, [esp+58h+var_28]
                mov     [edi+eax*8+4], esi
                mov     esi, edi
                mov     eax, [esp+58h+var_24]
                mov     [ecx+esi-73h], eax
                mov     eax, [esp+58h+var_20]
                mov     [ecx+esi-6Fh], eax
                mov     eax, [esp+58h+var_44]
                xor     eax, [esp+58h+var_40]
                xor     eax, [esp+58h+var_3C]
                xor     eax, [esp+58h+var_48]
                mov     ecx, [esp+58h+var_1C]
                mov     [esp+58h+var_44], eax
                movzx   eax, al
                and     dword ptr [esi+eax*8-56Ch], 0
                mov     [esi+eax*8-570h], ecx
                mov     ecx, [esp+58h+var_44]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-4FCh], edx
                mov     [esi+eax*8-500h], ebx
                mov     eax, [esp+58h+var_18]
                xor     al, 0Ah
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_14]
                adc     edx, dword ptr [esp+58h+var_14+4]
                shr     ecx, 10h
                movzx   ecx, cl
                mov     [esi+ecx*8-550h], eax
                mov     [esi+ecx*8-54Ch], edx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                mov     edx, [esp+58h+var_C]
                add     ecx, 92C35CEAh
                pop     edi
                pop     esi
                add     edx, 21270CE7h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___130      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___171      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                shr     edx, 4
                add     edx, eax
                mov     [esp+58h+var_28], edi
                mov     [esp+58h+var_48], edx
                lea     eax, [ecx+18ADA7ABh]
                mov     [esp+58h+var_44], eax
                movzx   eax, dl
                push    offset dword_40C68C
                mov     ecx, [edi+eax*8-3A8h]
                mov     eax, [edi+eax*8-3A4h]
                mov     [esp+5Ch+var_34], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_40], ecx
                mov     esi, [eax+edi+0B8h]
                mov     eax, [eax+edi+0BCh]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_24], esi
                mov     ecx, [eax+edi+49h]
                mov     eax, [eax+edi+4Dh]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                mov     edx, [ebp+arg_4]
                shr     eax, 18h
                xor     eax, 0FDh
                mov     [esp+5Ch+var_1C], ecx
                lea     edx, [edx-0C9AFD82h]
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_10], ecx
                mov     ecx, edi
                mov     dword ptr [esp+5Ch+var_10+4], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_48]
                mov     ecx, edx
                xor     ecx, edx
                movzx   eax, cl
                mov     [esp+58h+var_8], eax
                mov     [esp+58h+var_14], ecx
                mov     eax, [esi+eax*4+104h]
                lea     esi, [ebx-4F31741Eh]
                mov     [esp+58h+var_2C], eax
                mov     eax, [ebp+arg_4]
                add     esi, eax
                xor     esi, [esp+58h+var_44]
                sub     eax, ebx
                sub     ebx, [ebp+arg_4]
                xor     eax, ecx
                xor     eax, [esp+58h+var_44]
                xor     esi, edx
                xor     ebx, esi
                mov     [esp+58h+var_38], eax
                xor     ebx, ecx
                mov     [esp+58h+var_3C], esi
                xor     ebx, 0E31A1A27h
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     al, 0D5h
                xor     cl, 0FBh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ecx, edx
                sub     eax, esi
                mov     edx, [ebp+arg_4]
                sbb     ecx, edi
                add     eax, [esp+58h+var_40]
                mov     edi, [esp+58h+var_48]
                adc     ecx, [esp+58h+var_34]
                xor     edx, [ebp+arg_0]
                xor     edx, [esp+58h+var_38]
                xor     edx, [esp+58h+var_3C]
                mov     [esp+58h+var_30], eax
                mov     eax, ebx
                xor     eax, [esp+58h+var_38]
                mov     esi, [esp+58h+var_30]
                xor     eax, edi
                xor     eax, 0BC0D3712h
                mov     [esp+58h+var_34], ecx
                mov     [esp+58h+var_48], eax
                xor     ecx, ecx
                add     eax, 7661F8E8h
                mov     [esp+58h+var_40], edx
                or      ecx, eax
                xor     edx, 469EF286h
                mov     [esi], ecx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, ebx
                mov     [esi+4], edx
                mov     ebx, [esp+58h+var_44]
                xor     ecx, ebx
                mov     edx, [esp+58h+var_2C]
                xor     ecx, edi
                mov     edi, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 3Ch
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-0D3h], edx
                mov     edx, [esp+58h+var_20]
                mov     [eax+edi-0CFh], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_34]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 1Bh
                mov     [edi+eax*8-158h], esi
                mov     [edi+eax*8-154h], edx
                mov     eax, [esp+58h+var_1C]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                mov     [edi+ecx*8+4], eax
                mov     eax, [esp+58h+var_14]
                mov     ecx, [esp+58h+var_40]
                shr     eax, 8
                xor     al, 48h
                movzx   ecx, cl
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_10]
                movzx   esi, bl
                adc     edx, dword ptr [esp+58h+var_10+4]
                xor     esi, ecx
                mov     ecx, [esp+58h+var_48]
                movzx   ecx, cl
                xor     esi, ecx
                mov     ecx, [esp+58h+var_38]
                xor     esi, [esp+58h+var_8]
                add     ecx, 23474E84h
                mov     [edi+esi*8-300h], eax
                xor     eax, eax
                mov     [edi+esi*8-2FCh], edx
                mov     edx, [esp+58h+var_3C]
                pop     edi
                pop     esi
                xor     edx, 0F88030FDh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___171      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__11      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                and     [esp+14h+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                push    offset dword_40C640
                lea     ebx, [esi-68EE6776h]
                xor     esi, [ebp+arg_0]
                movzx   eax, bl
                mov     edx, [ecx+eax*8+18h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+24h+var_8], edx
                xor     eax, 0C0h
                mov     edx, esi
                xor     edx, 0F9364A6Fh
                mov     edi, [ecx+eax*8]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ecx, edx
                shl     ecx, 4
                lea     eax, [edx-761092DFh]
                xor     eax, ebx
                mov     [esp+20h+var_14], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     ecx, eax
                mov     eax, [esp+20h+var_14]
                xor     ecx, esi
                xor     ecx, ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 0D47AAD6Bh
                mov     [esp+20h+var_10], ecx
                mov     ecx, [esp+20h+var_8]
                add     ebx, edx
                xor     ebx, eax
                movzx   eax, al
                xor     ebx, esi
                sub     ecx, [eax+edi-61h]
                mov     edi, [esp+20h+var_14]
                mov     eax, edi
                shr     eax, 8
                movzx   eax, al
                sub     ecx, eax
                add     ecx, 51h ; 'Q'
                jz      short loc_46E0C7
                mov     esi, [esp+20h+var_10]
                lea     eax, [ebx-78F9DF04h]
                xor     edi, edi
                xor     esi, 0BEE73442h
                or      edi, eax
                jmp     short loc_46E0EB
; ---------------------------------------------------------------------------

loc_46E0C7:                             ; CODE XREF: vBng_h__11+9F¡üj
                mov     esi, edx
                xor     edx, [ebp+arg_0]
                sub     esi, [ebp+arg_0]
                xor     edx, ebx
                xor     esi, [esp+20h+var_10]
                xor     edx, [esp+20h+var_10]
                xor     esi, edi
                xor     edi, edi
                sub     edx, 40108943h
                xor     esi, 0AFBE7DCAh
                or      edi, edx

loc_46E0EB:                             ; CODE XREF: vBng_h__11+B5¡üj
                mov     eax, edi
                mov     edx, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__11      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___165_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                lea     esi, [eax-3DB20BE9h]
                mov     edi, ecx
                shr     eax, 4
                lea     ecx, [edx-7BF50BC1h]
                add     edx, edx
                mov     [ebp+var_8], esi
                mov     [ebp+var_4], edi
                push    offset dword_40A7B0
                lea     ebx, [eax+edx*8]
                mov     [ebp+var_C], ebx
                mov     eax, ebx
                xor     eax, ecx
                xor     ebx, esi
                xor     ebx, ecx
                mov     [ebp+var_10], eax
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, 7Ah
                add     al, 37h ; '7'
                movzx   eax, al
                cdq
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                sub     esi, eax
                mov     ecx, [ebp+var_4]
                sbb     edi, edx
                movzx   eax, bl
                mov     edx, [ebp+var_C]
                sub     eax, 0EAh
                mov     ebx, [ebp+var_10]
                add     esi, eax
                adc     edi, 0
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                add     edx, 0D25E7F4h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ebx, 439EE47Dh
                mov     edx, [ebp+var_8]
                xor     edx, 5F7C7FFAh
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___165_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___83       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                shr     edx, 4
                lea     ecx, [eax-73A8BD28h]
                mov     [esp+54h+var_48], esi
                shl     eax, 4
                add     ecx, ebx
                add     edx, eax
                mov     [esp+54h+var_44], ecx
                movzx   eax, cl
                push    edi
                mov     [esp+58h+var_40], edx
                push    offset dword_40C070
                mov     edi, [eax+esi+5Ch]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 7
                mov     esi, [eax+esi]
                mov     [esp+5Ch+var_1C], esi
                mov     esi, [esp+5Ch+var_48]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 0F6h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                movzx   eax, dl
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [eax+esi-10h]
                mov     eax, [eax+esi-0Ch]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_24], ecx
                mov     ecx, [esi+eax*8-248h]
                mov     eax, [esi+eax*8-244h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                mov     [esp+5Ch+var_14], ecx
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 10h
                xor     al, 7
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     eax, [esp+5Ch+var_48]
                add     esi, [ecx+eax+1]
                mov     eax, [ebp+arg_0]
                mov     ecx, [esp+5Ch+var_48]
                add     eax, 48E688D2h
                xor     eax, [esp+5Ch+var_44]
                mov     edx, eax
                mov     [esp+5Ch+var_3C], eax
                xor     edx, 0CAE9748Dh
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                lea     edx, [ebx+186F4D0Ch]
                xor     edx, [esp+58h+var_40]
                xor     eax, eax
                xor     edx, [esp+58h+var_44]
                shld    eax, esi, 2
                mov     [esp+58h+var_28], edx
                mov     eax, [edi+esi*4]
                mov     edi, ecx
                sub     edi, ebx
                mov     [esp+58h+var_30], eax
                xor     edi, [esp+58h+var_3C]
                lea     esi, [ecx+386F283Ah]
                xor     edi, [esp+58h+var_40]
                xor     edi, 32C162ECh
                mov     [esp+58h+var_C], edi
                mov     ecx, [esp+58h+var_40]
                xor     esi, edx
                xor     esi, [esp+58h+var_3C]
                xor     ecx, edi
                xor     ecx, edx
                mov     [esp+58h+var_8], esi
                mov     edx, [esp+58h+var_44]
                mov     ebx, ecx
                xor     ebx, esi
                mov     [esp+58h+var_2C], ecx
                xor     ebx, [esp+58h+var_40]
                mov     eax, esi
                xor     eax, edi
                xor     ebx, edx
                xor     eax, edx
                movzx   edi, bl
                xor     eax, 7C617967h
                sub     edi, 3Eh ; '>'
                mov     [esp+58h+var_44], eax
                xor     esi, esi
                mov     eax, ebx
                shr     eax, 8
                sub     al, 7Fh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_44]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                lea     edx, [ecx+5C092FE7h]
                adc     esi, dword ptr [esp+58h+var_38+4]
                add     eax, 0C21A2185h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_30]
                shr     eax, 10h
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 0A4h
                shr     ebx, 18h
                and     dword ptr [edx+eax*8+4], 0
                mov     [edx+eax*8], ecx
                mov     eax, [esp+58h+var_28]
                mov     [edx+ebx*8-5B0h], edi
                xor     al, 0CCh
                mov     edi, edx
                movzx   eax, al
                cdq
                mov     [edi+ebx*8-5ACh], esi
                mov     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_2C]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_40]
                add     eax, dword ptr [esp+58h+var_24]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_24+4]
                xor     ecx, 64h
                mov     [edi+ecx*8], eax
                mov     eax, ebx
                mov     [edi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_1C]
                mov     edx, [esp+58h+var_C]
                shr     eax, 8
                add     edx, 62E4E5D9h
                movzx   eax, al
                shr     ebx, 10h
                mov     [edi+eax*8+130h], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [edi+eax*8+134h], ecx
                mov     ecx, [esp+58h+var_14]
                movzx   eax, bl
                xor     eax, 3
                mov     [eax+edi], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [eax+edi+4], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                add     ecx, 529873C6h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___83       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___174      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                sub     ebx, esi
                xor     ebx, 2DBA3552h
                mov     [esp+54h+var_48], ecx
                mov     eax, ebx
                and     [esp+54h+var_4], 0
                shr     eax, 8
                movzx   eax, al
                mov     [esp+54h+var_44], ebx
                push    edi
                mov     edi, [esp+58h+var_48]
                mov     edx, [ecx+eax*8-430h]
                mov     eax, [ecx+eax*8-42Ch]
                mov     [esp+58h+var_18], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B1h
                mov     [esp+58h+var_1C], edx
                push    offset dword_40A6C0
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ebx, esi
                xor     ebx, [ebp+arg_0]
                mov     [esp+5Ch+var_20], ebx
                mov     ecx, [eax+ecx-6Eh]
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx-6Ah]
                xor     ecx, ecx
                mov     [esp+5Ch+var_10], eax
                movzx   eax, bx
                mov     eax, [eax+edx-9628h]
                mov     edx, ebx
                mov     [esp+5Ch+var_24], eax
                mov     eax, [esp+5Ch+var_44]
                shr     edx, 10h
                movzx   eax, al
                sub     edx, 1C1Ch
                add     edx, [edi+eax*8-428h]
                mov     [esp+5Ch+var_2C], edx
                mov     edx, edi
                adc     ecx, [edx+eax*8-424h]
                add     esi, 6CDB8E4Fh
                xor     esi, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, edi
                lea     edx, [esi+7C9FAED7h]
                call    VBN_TransformContext
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     eax, ecx
                lea     edx, [edi+75585125h]
                add     edx, [ebp+arg_4]
                mov     ecx, eax
                xor     edx, ebx
                xor     ecx, esi
                xor     edx, [esp+58h+var_44]
                xor     ecx, ebx
                mov     ebx, [ebp+arg_4]
                xor     eax, edx
                sub     ebx, edi
                mov     [esp+58h+var_C], edx
                xor     eax, esi
                mov     [esp+58h+var_8], ecx
                xor     ebx, ecx
                mov     [esp+58h+var_30], eax
                xor     ebx, edx
                mov     [esp+58h+var_40], ebx
                mov     ebx, eax
                xor     ebx, ecx
                xor     ebx, [esp+58h+var_44]
                xor     ebx, 3BCDBD2Bh
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 88h
                add     al, 43h ; 'C'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_3C], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_3C]
                sub     edx, esi
                sbb     eax, edi
                add     edx, dword ptr [esp+58h+var_38]
                mov     edi, [esp+58h+var_30]
                adc     eax, dword ptr [esp+58h+var_38+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_38+4], eax
                mov     eax, [esp+58h+var_40]
                add     eax, 86D5C65Ah
                lea     esi, [edi-5DE5DCB4h]
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+58h+var_2C]
                shr     eax, 10h
                mov     [edx+4], esi
                mov     esi, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 2Bh
                shr     ebx, 18h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [esi+eax*8+4], ecx
                and     dword ptr [esi+ebx*8-5CCh], 0
                mov     eax, [esp+58h+var_24]
                mov     [esi+ebx*8-5D0h], eax
                mov     ebx, [esp+58h+var_40]
                mov     ecx, [esp+58h+var_1C]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_20]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                xor     eax, 0B2h
                pop     edi
                mov     [eax+esi], ecx
                mov     ecx, [esp+54h+var_18]
                mov     [eax+esi+4], ecx
                mov     eax, ebx
                mov     ecx, dword ptr [esp+54h+var_38+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E6h
                shr     ebx, 10h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+54h+var_14]
                mov     [esi+eax*8], edx
                mov     edx, [esp+54h+var_C]
                movzx   eax, bl
                xor     edx, 0EE575B1Eh
                mov     [esi+eax*8-0A0h], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [esi+eax*8-9Ch], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 5447F7Eh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___174      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___130_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                push    offset dword_40A910
                lea     eax, [esi+2FB50C66h]
                mov     [ebp+var_10], ebx
                add     eax, edi
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 39h
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [ebp+var_C], eax
                lea     eax, [esi-198A6A6Ah]
                add     eax, edi
                mov     [ebp+var_8], ecx
                mov     edx, eax
                mov     [ebp+var_18], eax
                xor     edx, 1F1585C5h
                mov     ecx, ebx
                call    VBN_TransformContext
                sub     edi, esi
                mov     ebx, edi
                mov     [ebp+var_14], edi
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 40h
                add     al, 3
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                mov     esi, [ebp+var_14]
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, [ebp+var_C]
                xor     eax, eax
                mov     [ecx+1BCh], edx
                mov     edx, esi
                xor     edx, [ebp+var_18]
                xor     esi, ebx
                xor     esi, [ebp+var_18]
                xor     edx, [ebp+var_4]
                add     esi, 676CA06Bh
                pop     edi
                sub     edx, 4F2D425Ah
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___130_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___119      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     ebx, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                xor     edx, [ebp+arg_0]
                mov     eax, edx
                mov     [esp+58h+var_48], ebx
                mov     esi, [esp+58h+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     [esp+58h+var_44], edx
                push    offset dword_40BE14
                mov     ecx, [eax+ebx-0Ch]
                mov     eax, [eax+ebx-8]
                mov     ebx, edi
                sub     ebx, [ebp+arg_0]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     [esp+5Ch+var_1C], ebx
                mov     ecx, [esi+eax*8-0D0h]
                mov     eax, [esi+eax*8-0CCh]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 33h
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     al, 8Ch
                mov     [esp+5Ch+var_2C], ecx
                movzx   eax, al
                cdq
                movzx   ecx, bl
                xor     ecx, 3Dh
                add     eax, [ecx+esi]
                mov     [esp+5Ch+var_14], eax
                adc     edx, [ecx+esi+4]
                mov     ecx, ebx
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+5Ch+var_48]
                xor     eax, 20h
                mov     [esp+5Ch+var_10], edx
                mov     edx, [esp+5Ch+var_44]
                movzx   esi, dl
                mov     ecx, [ecx+esi*8+0D0h]
                mov     esi, [esp+5Ch+var_48]
                add     ecx, eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 54h
                mov     eax, [eax+esi]
                lea     esi, [edi-0DBDAD45h]
                xor     esi, edx
                mov     eax, [eax+ecx*4]
                mov     ecx, [esp+5Ch+var_48]
                lea     edx, [esi-82F68EDh]
                mov     [esp+5Ch+var_18], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     edx, edi
                shl     edx, 4
                mov     ecx, ebx
                shr     eax, 4
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_44]
                add     edx, eax
                xor     edx, esi
                mov     [esp+58h+var_C], ecx
                xor     edx, ebx
                mov     [esp+58h+var_8], edx
                mov     ebx, [ebp+arg_0]
                lea     eax, [ebx-2C042254h]
                sub     ebx, edi
                xor     eax, ecx
                xor     ebx, edx
                xor     eax, esi
                xor     ebx, ecx
                mov     [esp+58h+var_30], eax
                xor     ebx, 62C23864h
                mov     [esp+58h+var_40], ebx
                mov     ebx, eax
                xor     ebx, edx
                xor     ebx, [esp+58h+var_44]
                xor     ebx, 8550B682h
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 7Bh
                xor     al, 0C6h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_3C], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_3C]
                sub     edx, esi
                sbb     eax, edi
                add     edx, dword ptr [esp+58h+var_38]
                mov     edi, [esp+58h+var_30]
                adc     eax, dword ptr [esp+58h+var_38+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_38+4], eax
                mov     eax, [esp+58h+var_40]
                add     eax, 24111F06h
                lea     esi, [edi-3B34B15Eh]
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     [edx+4], esi
                mov     esi, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 0B1h
                mov     [eax+esi+19h], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [eax+esi+1Dh], ecx
                mov     eax, [esp+58h+var_24]
                mov     [esi+ebx*8], eax
                mov     eax, [esp+58h+var_20]
                mov     [esi+ebx*8+4], eax
                mov     ebx, [esp+58h+var_40]
                mov     ecx, [esp+58h+var_18]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_1C]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                xor     eax, 59h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_14]
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 10h
                mov     [esi+eax*8-3B0h], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [esi+eax*8-3ACh], ecx
                mov     ecx, dword ptr [esp+58h+var_38+4]
                movzx   eax, bl
                xor     eax, 52h
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_C]
                mov     [esi+eax*8+4], ecx
                add     edx, 0B0D4E95Ch
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 75D387E8h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___119      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___1_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                push    offset dword_40C960
                lea     eax, [esi-4D87890h]
                mov     [ebp+var_10], edi
                add     eax, edx
                sub     edx, esi
                mov     [ebp+var_8], eax
                movzx   eax, al
                xor     eax, 0A6h
                mov     [ebp+var_4], edx
                xor     edx, 0BAA452F2h
                mov     ecx, [edi+eax*8]
                mov     ebx, [edi+eax*8+4]
                mov     [ebp+var_C], ecx
                mov     ecx, edi
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     edi, esi
                sub     edi, [ebp+arg_4]
                xor     edi, [ebp+var_8]
                shr     ecx, 4
                xor     edi, 5F946A20h
                shl     esi, 4
                add     ecx, esi
                xor     ecx, edi
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 64h
                sub     esi, 0E1h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_10]
                sbb     ecx, edx
                add     esi, [ebp+var_C]
                adc     ecx, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                lea     ecx, [edi+420243EAh]
                add     eax, 402C3B0Fh
                xor     eax, [ebp+var_4]
                xor     eax, [ebp+var_8]
                pop     edi
                pop     esi
                add     eax, 3C181985h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___1_stk    endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001fc3 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                lea     ebx, [edx+2ACA273Bh]
                mov     eax, esi
                mov     [ebp+var_C], ecx
                shr     eax, 4
                add     ebx, esi
                push    edi
                mov     edi, edx
                xor     ecx, ecx
                shl     edx, 4
                xor     edi, esi
                add     edx, eax
                mov     eax, edx
                xor     edx, edi
                xor     eax, ebx
                xor     edx, ebx
                mov     [ebp+var_4], eax
                add     edx, 79DF4A79h
                lea     eax, [esi+2FEBA7EDh]
                mov     esi, [ebp+var_C]
                xor     eax, [ebp+var_4]
                xor     eax, edi
                xor     eax, 74E8A589h
                or      ecx, eax
                movzx   eax, bl
                xor     eax, 17h
                cmp     byte ptr [esi+eax*8], 0
                mov     esi, [ebp+var_4]
                jnz     short loc_46EA78
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cmp     byte ptr [ebx+eax*8-3C8h], 0
                jnz     short loc_46EA78
                xor     ecx, ecx
                lea     eax, [esi-1233E4CDh]
                lea     edx, [edi+14C7F92Ah]
                or      ecx, eax

loc_46EA78:                             ; CODE XREF: VBNCB_unnamed_80001fc3+63¡üj
                                        ; VBNCB_unnamed_80001fc3+76¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001fc3 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___172_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                push    edi
                mov     edi, ecx
                shl     ebx, 4
                mov     ecx, edx
                mov     [ebp+var_8], edi
                mov     eax, esi
                sub     ecx, esi
                shr     eax, 4
                add     ebx, eax
                shl     esi, 4
                lea     eax, [edx-469DBAE4h]
                mov     [ebp+var_C], ebx
                xor     eax, ecx
                shr     edx, 4
                mov     [ebp+var_10], eax
                add     edx, esi
                xor     edx, [ebp+var_10]
                xor     edx, [ebp+var_C]
                movzx   eax, cl
                add     edx, 0A0290BCh
                xor     eax, 4Dh
                mov     [ebp+var_4], ecx
                mov     ecx, [ebp+var_8]
                push    offset sub_40A9C0
                mov     ebx, [eax+edi]
                mov     edi, [eax+edi+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                shr     eax, 8
                add     al, 11h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_4]
                xor     al, 0E5h
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_8]
                sbb     edx, esi
                add     eax, ebx
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_10]
                mov     edx, [ebp+var_C]
                xor     ecx, 859D7D98h
                pop     edi
                pop     esi
                add     edx, 0C4E49FF2h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___172_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800020cb proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+30h+var_14], ecx
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+30h+var_14]
                mov     eax, [edx+eax-1Eh]
                mov     edx, [eax+ecx-4]
                lea     eax, [edi+97DD666h]
                add     eax, esi
                mov     [esp+30h+var_18], edx
                mov     [esp+30h+var_4], edx
                lea     ecx, [eax-2EC3A444h]
                sub     [esp+30h+var_18], ecx
                cmp     ecx, edx
                lea     edx, [esi+6696E822h]
                setnbe  [esp+30h+var_1D]
                xor     edx, ebx
                mov     [esp+30h+var_1C], edx
                add     edi, 6BC6EA28h
                xor     edi, [esp+30h+var_1C]
                lea     edx, [esi+6050CDC6h]
                xor     edx, eax
                xor     edi, eax
                xor     edx, ebx
                lea     eax, [esi+3C7CDA42h]
                xor     eax, edi
                mov     ebx, edx
                xor     eax, ebx
                mov     [esp+30h+var_10], eax
                cmp     ecx, [esp+30h+var_4]
                jbe     short loc_46EBFE
                mov     edx, [esp+30h+var_1C]
                lea     eax, [ebx+5348E120h]
                xor     esi, esi
                add     edx, 862F8D64h
                or      esi, eax
                mov     eax, [esp+30h+var_10]
                jmp     short loc_46EC1F
; ---------------------------------------------------------------------------

loc_46EBFE:                             ; CODE XREF: VBNCB_unnamed_800020cb+92¡üj
                mov     ecx, [ebp+arg_0]
                xor     edx, edx
                shl     esi, 4
                xor     edi, 0C102D6C6h
                shr     ecx, 4
                add     esi, ecx
                xor     esi, ebx
                xor     esi, [esp+30h+var_1C]
                xor     esi, 378A2A1Ah
                or      edx, edi

loc_46EC1F:                             ; CODE XREF: VBNCB_unnamed_800020cb+AC¡üj
                cmp     [esp+30h+var_18], 0
                mov     edi, [esp+30h+var_14]
                movzx   ecx, al
                setz    bl
                xor     ecx, 75h
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                mov     [edi+ecx*8-6C8h], al
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020cb endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___132      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_0]
                sub     edx, ecx
                sub     ecx, [ebp+arg_4]
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 0DD793B7Bh
                movzx   eax, al
                mov     [esp+58h+var_48], ecx
                mov     [esp+58h+var_40], edi
                mov     [esp+58h+var_44], edx
                mov     ecx, [edi+eax*8+0A8h]
                mov     eax, [edi+eax*8+0ACh]
                mov     [esp+58h+var_24], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+58h+var_28], ecx
                push    offset dword_40C7E0
                mov     ecx, [edi+eax*8-400h]
                mov     eax, [edi+eax*8-3FCh]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, edx
                shr     eax, 18h
                not     al
                mov     dword ptr [esp+5Ch+var_20], ecx
                movzx   eax, al
                mov     ecx, [edi+eax*8]
                mov     ebx, [edi+eax*8+4]
                mov     [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_48]
                movzx   eax, cl
                mov     esi, [eax+edi+2]
                mov     eax, [eax+edi+6]
                mov     [esp+5Ch+var_8], eax
                mov     eax, ecx
                mov     ecx, [esp+5Ch+var_40]
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_C], esi
                mov     edi, [edi+eax*8-570h]
                movzx   eax, dl
                mov     edx, 82FACB03h
                xor     eax, 0B3h
                mov     esi, [eax+ecx]
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_44]
                xor     eax, [esp+58h+var_48]
                xor     eax, [esp+58h+var_44]
                mov     ecx, [ebp+arg_0]
                mov     [esp+58h+var_3C], eax
                mov     eax, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                mov     eax, [edi+eax*4-10h]
                lea     edi, [ecx-7635D7DBh]
                xor     edi, [esp+58h+var_3C]
                mov     [esp+58h+var_18], eax
                mov     eax, [ebp+arg_4]
                mov     edx, eax
                xor     edx, ecx
                mov     [esp+58h+var_34], edi
                xor     edx, [esp+58h+var_48]
                add     eax, 2AEA811Ch
                add     ecx, eax
                mov     [esp+58h+var_38], edx
                xor     ecx, edx
                xor     ecx, [esp+58h+var_3C]
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     al, 0C4h
                movzx   edi, cl
                movzx   eax, al
                cdq
                sub     edi, 0ACh
                xor     esi, esi
                sub     edi, eax
                mov     eax, ecx
                sbb     esi, edx
                add     edi, [esp+58h+var_30]
                adc     esi, ebx
                xor     eax, [esp+58h+var_34]
                xor     eax, [esp+58h+var_48]
                xor     ecx, ecx
                xor     eax, [esp+58h+var_44]
                mov     ebx, [esp+58h+var_34]
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_44]
                mov     [esp+58h+var_44], eax
                xor     ebx, 0EF4024D5h
                xor     eax, 68500C3Ah
                mov     [esp+58h+var_30], ebx
                or      ecx, eax
                mov     edx, ebx
                xor     ebx, [esp+58h+var_2C]
                xor     edx, 6D96C78Ch
                xor     ebx, [esp+58h+var_48]
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_40]
                mov     [edi+4], edx
                movzx   eax, bl
                mov     [ecx+eax*8-370h], edi
                mov     edi, ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edi+eax*8-36Ch], esi
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-53h], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [eax+edi-4Fh], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_3C]
                movzx   edx, ax
                mov     eax, ebx
                sub     edx, 0D5A6h
                add     edx, dword ptr [esp+58h+var_20]
                adc     ecx, dword ptr [esp+58h+var_20+4]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 8Ch
                mov     [edi+eax*8-494h], ecx
                mov     [edi+eax*8-498h], edx
                mov     eax, [esp+58h+var_18]
                and     dword ptr [edi+ebx*8+4], 0
                mov     [edi+ebx*8], eax
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_38]
                movzx   ecx, al
                add     edx, 16EC45FAh
                mov     eax, [esp+58h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                mov     [edi+ecx*8+128h], eax
                mov     eax, [esp+58h+var_8]
                mov     [edi+ecx*8+12Ch], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_34]
                pop     edi
                xor     ecx, 0E722B215h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___132      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002074 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     ebx, [edx+5968DE2Ch]
                mov     eax, edi
                mov     [ebp+var_4], ecx
                sub     edi, edx
                shl     eax, 4
                mov     esi, edx
                xor     edi, ebx
                shr     esi, 4
                xor     edi, 97E20B56h
                add     esi, eax
                add     edx, 0F15FB430h
                xor     edx, esi
                mov     [ebp+var_8], esi
                mov     esi, [ebp+var_4]
                mov     eax, edi
                xor     eax, 0E5E35BB9h
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, ebx
                movzx   eax, bl
                xor     edx, 6FE6BBB8h
                cmp     byte ptr [esi+eax*8-258h], 0
                mov     esi, [ebp+var_8]
                jnz     short loc_46EF25
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8-108h], 0
                jnz     short loc_46EF25
                xor     ecx, ecx
                lea     eax, [edi+3507ABFEh]
                xor     esi, 0D36389E5h
                or      ecx, eax
                jmp     short loc_46EF27
; ---------------------------------------------------------------------------

loc_46EF25:                             ; CODE XREF: VBNCB_unnamed_80002074+5E¡üj
                                        ; VBNCB_unnamed_80002074+71¡üj
                mov     esi, edx

loc_46EF27:                             ; CODE XREF: VBNCB_unnamed_80002074+83¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002074 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___23_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     eax, [edx+7DA0ED58h]
                mov     [ebp+var_8], ecx
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 3
                push    edi
                push    offset dword_40AA00
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                lea     eax, [esi-1084C02Bh]
                add     eax, edx
                mov     [ebp+var_C], eax
                lea     edx, [eax-30EBF1CCh]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 2Fh ; '/'
                shr     eax, 10h
                sub     al, 25h ; '%'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     eax, ecx
                xor     ecx, [ebp+var_4]
                xor     eax, [ebp+var_C]
                xor     ecx, 48349D30h
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                sub     eax, 2F074D12h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___23_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___85       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                mov     [esp+4Ch+var_4C], ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                lea     eax, [edx+45033316h]
                add     eax, ebx
                lea     ecx, [edx-7FCFB4E4h]
                mov     edx, [esp+50h+var_4C]
                add     ecx, ebx
                mov     [esp+50h+var_44], eax
                movzx   eax, cl
                push    esi
                push    edi
                push    offset dword_40CA00
                mov     edi, [eax+edx+62h]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 14h
                mov     esi, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_38], esi
                mov     edx, [eax+edx-0B7h]
                mov     dword ptr [esp+5Ch+var_14], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx-0B3h]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 0ECh
                mov     esi, [edx+eax*8]
                mov     eax, [esp+5Ch+var_44]
                movzx   eax, al
                mov     edx, [edx+eax*8-1B0h]
                mov     [esp+5Ch+var_24], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8-1ACh]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 95h
                mov     edx, [eax+edx]
                mov     [esp+5Ch+var_1C], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ebx
                shl     eax, 4
                mov     [esp+5Ch+var_48], eax
                mov     eax, [ebp+arg_0]
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 4
                add     edx, eax
                xor     edx, ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_48], edx
                xor     edx, 0F411C159h
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     edx, ebx
                shr     edx, 4
                mov     eax, ecx
                shl     eax, 4
                add     edx, eax
                lea     eax, [ecx+45033316h]
                add     eax, ebx
                xor     edx, eax
                shr     eax, 10h
                mov     [esp+58h+var_40], edx
                lea     edx, [ecx-7FCFB4E4h]
                movzx   eax, al
                add     edx, ebx
                xor     [esp+58h+var_40], edx
                xor     eax, 0ABh
                add     eax, esi
                mov     eax, [edi+eax*4]
                lea     esi, [ecx+45033316h]
                mov     [esp+58h+var_28], eax
                add     esi, ebx
                lea     edi, [ebx-529F8435h]
                xor     edi, [esp+58h+var_48]
                lea     eax, [ecx+6BCCA63Bh]
                xor     edi, esi
                mov     esi, ecx
                sub     esi, ebx
                mov     [esp+58h+var_C], edi
                xor     esi, [esp+58h+var_40]
                xor     eax, edi
                xor     eax, [esp+58h+var_40]
                xor     esi, [esp+58h+var_48]
                xor     esi, 4980CD25h
                mov     [esp+58h+var_30], eax
                mov     ecx, esi
                mov     [esp+58h+var_8], esi
                xor     ecx, edi
                xor     ecx, edx
                xor     ecx, 8E3E6BA8h
                mov     [esp+58h+var_3C], ecx
                mov     ecx, eax
                xor     ecx, esi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 53h
                add     al, 4Fh ; 'O'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+58h+var_30]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                adc     edx, dword ptr [esp+58h+var_38+4]
                xor     eax, 3D3FFF7Ch
                xor     ecx, ecx
                xor     esi, 3EC7E381h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_4C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Ch
                shr     ecx, 18h
                mov     [esi+eax*8], ebx
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_30]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_44]
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+58h+var_28]
                and     dword ptr [esi+ecx*8-14Ch], 0
                mov     [esi+ecx*8-150h], eax
                mov     ecx, [esp+58h+var_24]
                movzx   eax, bl
                xor     eax, 0E2h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [esi+eax*8+4], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+esi-20h], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [eax+esi-1Ch], ecx
                mov     eax, [esp+58h+var_40]
                movzx   edx, ax
                sub     edx, 16B9h
                xor     ecx, ecx
                add     edx, dword ptr [esp+58h+var_14]
                pop     edi
                adc     ecx, dword ptr [esp+54h+var_14+4]
                shr     ebx, 10h
                movzx   eax, bl
                mov     [esi+eax*8-21Ch], ecx
                mov     ecx, [esp+54h+var_8]
                mov     [esi+eax*8-220h], edx
                add     ecx, 0E2026AD8h
                mov     edx, [esp+54h+var_C]
                xor     eax, eax
                pop     esi
                xor     edx, 7DBC691Dh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___85       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___108      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shl     edx, 4
                add     edx, eax
                and     [esp+50h+var_4], 0
                push    esi
                mov     esi, ecx
                mov     [esp+54h+var_3C], edx
                mov     eax, ebx
                mov     [esp+54h+var_44], esi
                sub     eax, [ebp+arg_0]
                mov     [esp+54h+var_48], eax
                movzx   eax, dl
                push    edi
                push    offset dword_40A740
                mov     ecx, [eax+esi-21h]
                mov     eax, [eax+esi-1Dh]
                mov     [esp+5Ch+var_28], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0CEh
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [eax+esi-64h]
                mov     eax, [eax+esi-60h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, al
                xor     eax, 2Bh
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D8h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     edi, [esi+eax*8]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 4Fh
                mov     esi, [eax+esi]
                mov     eax, ebx
                xor     eax, [ebp+arg_0]
                xor     eax, edx
                mov     [esp+5Ch+var_38], eax
                lea     edx, [eax+72EE66A2h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     ecx, [esp+58h+var_48]
                sub     eax, ebx
                mov     [esp+58h+var_40], eax
                mov     edx, eax
                mov     eax, ecx
                xor     edx, ecx
                xor     edx, [esp+58h+var_3C]
                add     ebx, 0D32A8C0Ch
                xor     ebx, [esp+58h+var_38]
                xor     edx, 7D62924h
                shr     eax, 10h
                xor     ebx, ecx
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_24], edx
                mov     esi, [esp+58h+var_40]
                mov     [esp+58h+var_8], ebx
                xor     esi, edx
                mov     eax, [edi+eax*4+0C8h]
                mov     [esp+58h+var_C], eax
                xor     esi, [esp+58h+var_38]
                xor     ecx, ebx
                xor     ecx, edx
                xor     esi, 55C01B75h
                mov     edx, [esp+58h+var_3C]
                mov     eax, esi
                xor     eax, ebx
                mov     [esp+58h+var_18], ecx
                xor     eax, edx
                mov     [esp+58h+var_40], esi
                xor     eax, 0F3DF038Ah
                mov     ebx, ecx
                mov     [esp+58h+var_3C], eax
                xor     ebx, esi
                xor     ebx, [esp+58h+var_48]
                xor     esi, esi
                xor     ebx, edx
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 31h ; '1'
                sub     al, 77h ; 'w'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 47690E01h
                xor     ecx, ecx
                xor     edx, 964BEF24h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_44]
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+edx-8Fh], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [eax+edx-8Bh], ecx
                mov     eax, [esp+58h+var_24]
                movzx   ecx, al
                xor     eax, eax
                add     ecx, 3
                add     ecx, dword ptr [esp+58h+var_20]
                adc     eax, dword ptr [esp+58h+var_20+4]
                shr     ebx, 18h
                xor     ebx, 0E0h
                mov     [edx+ebx*8], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_18]
                xor     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_48]
                mov     [edx+ebx*8+4], eax
                mov     ebx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_14]
                movzx   eax, cl
                xor     eax, 0AFh
                mov     [ebx+eax*8], edx
                mov     edx, [esp+58h+var_10]
                mov     [ebx+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_8]
                shr     eax, 8
                xor     edx, 5766692Bh
                movzx   eax, al
                shr     ecx, 10h
                mov     [ebx+eax*8-648h], edi
                mov     [ebx+eax*8-644h], esi
                movzx   eax, cl
                mov     ecx, [esp+58h+var_C]
                xor     eax, 61h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_40]
                add     ecx, 8C6C5FB5h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___108      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___187_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, edx
                shl     eax, 4
                sub     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ecx, esi
                xor     ecx, 0F209AF36h
                shr     edi, 4
                add     edi, eax
                mov     [ebp+var_8], ecx
                movzx   eax, cl
                xor     eax, 45h
                mov     [ebp+var_4], ebx
                push    offset dword_40C660
                mov     [ebp+var_10], edi
                mov     ecx, [eax+ebx]
                mov     ebx, [eax+ebx+4]
                mov     eax, [ebp+arg_4]
                add     eax, 0FCD33936h
                mov     [ebp+var_C], ecx
                mov     ecx, [ebp+var_4]
                add     edx, eax
                xor     edx, esi
                xor     edx, edi
                xor     edx, 0F209AF36h
                add     edx, 5AA71A2Dh
                call    VBN_TransformContext
                mov     ecx, [ebp+var_8]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 74h
                shr     ecx, 10h
                movzx   eax, al
                not     cl
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     edi, edx
                add     esi, [ebp+var_C]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                add     ecx, 519DAD7h
                add     eax, 5B83E600h
                xor     eax, [ebp+var_8]
                pop     edi
                pop     esi
                xor     eax, 9CE6B05Ah
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___187_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002066 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                and     [esp+2Ch+var_C], 0
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, edi
                xor     eax, ecx
                mov     [esp+30h+var_4], esi
                mov     [esp+30h+var_14], eax
                lea     ebx, [ecx-137081E0h]
                add     ebx, edi
                lea     edx, [ecx+957063Dh]
                xor     ebx, eax
                add     edx, edi
                movzx   eax, al
                movzx   ecx, bl
                mov     eax, [eax+esi-22h]
                mov     ecx, [eax+ecx-0DEh]
                mov     eax, edx
                xor     eax, 0FA48C2EBh
                mov     esi, ecx
                sub     esi, eax
                cmp     eax, ecx
                mov     [esp+30h+var_10], esi
                mov     esi, [ebp+arg_0]
                setnbe  [esp+30h+var_1D]
                add     esi, 0BE6E388Dh
                xor     esi, edx
                mov     [esp+30h+var_1C], esi
                mov     esi, [esp+30h+var_14]
                xor     [esp+30h+var_1C], esi
                mov     esi, [ebp+arg_0]
                add     esi, 0EAE145AAh
                add     esi, edi
                xor     esi, ebx
                xor     esi, edx
                mov     edx, [esp+30h+var_1C]
                mov     [esp+30h+var_18], esi
                mov     esi, [ebp+arg_0]
                add     esi, 5C5C7724h
                add     esi, edi
                xor     esi, edx
                xor     esi, ebx
                mov     ebx, esi
                xor     ebx, [esp+30h+var_18]
                xor     ebx, [esp+30h+var_14]
                xor     ebx, 21C60C4h
                mov     [esp+30h+var_14], ebx
                cmp     eax, ecx
                jbe     short loc_46F66A
                mov     eax, [esp+30h+var_18]
                xor     edi, edi
                add     eax, 63677450h
                xor     edx, 6654D9F1h
                or      edi, eax
                jmp     short loc_46F684
; ---------------------------------------------------------------------------

loc_46F66A:                             ; CODE XREF: VBNCB_unnamed_80002066+B3¡üj
                sub     edi, [ebp+arg_0]
                mov     eax, esi
                xor     edi, [esp+30h+var_18]
                add     eax, 5539016Fh
                xor     edi, edx
                xor     edx, edx
                sub     edi, 6D90F600h
                or      edx, eax

loc_46F684:                             ; CODE XREF: VBNCB_unnamed_80002066+C8¡üj
                cmp     [esp+30h+var_10], 0
                mov     eax, [esp+30h+var_14]
                mov     esi, [esp+30h+var_4]
                setz    bl
                movzx   ecx, al
                xor     ecx, 24h
                shr     eax, 8
                mov     [esi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                mov     [esi+ecx*8-5B0h], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002066 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002313 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shr     eax, 4
                xor     ebx, edx
                mov     [ebp+var_4], ecx
                mov     ecx, esi
                shl     ecx, 4
                add     ecx, eax
                lea     eax, [edx+82E2792h]
                push    edi
                xor     eax, ecx
                lea     edi, [edx-0AC487C0h]
                add     edi, esi
                xor     eax, ebx
                sub     esi, edx
                xor     eax, 39D0FACEh
                xor     edi, ebx
                xor     edx, edx
                xor     esi, edi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                or      edx, eax
                movzx   eax, bl
                xor     esi, ecx
                xor     eax, 2Ah
                sub     esi, 1CDAB681h
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_46F74B
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8-2D8h], 0
                jnz     short loc_46F74B
                xor     esi, esi
                lea     eax, [edi-3C892A64h]
                xor     ecx, 109BEC58h
                or      esi, eax
                jmp     short loc_46F74D
; ---------------------------------------------------------------------------

loc_46F74B:                             ; CODE XREF: VBNCB_unnamed_80002313+64¡üj
                                        ; VBNCB_unnamed_80002313+77¡üj
                mov     ecx, edx

loc_46F74D:                             ; CODE XREF: VBNCB_unnamed_80002313+89¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002313 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___144      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     edx, esi
                push    edi
                mov     edi, ecx
                and     [esp+50h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                shr     ecx, 4
                add     eax, ecx
                mov     [esp+50h+var_38], edx
                mov     [esp+50h+var_3C], eax
                movzx   eax, dl
                push    offset dword_40A9F4
                mov     [esp+54h+var_40], edi
                mov     ebx, [eax+edi-1Fh]
                mov     eax, [eax+edi-1Bh]
                mov     [esp+54h+var_14], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+54h+var_18], ebx
                mov     ecx, [edi+eax*8-188h]
                mov     eax, [edi+eax*8-184h]
                mov     [esp+54h+var_28], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0F0h
                mov     [esp+54h+var_30], ecx
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+54h+var_C], eax
                mov     eax, [esp+54h+var_3C]
                movzx   eax, al
                xor     eax, 9Eh
                mov     [esp+54h+var_10], ecx
                mov     eax, [ebx+eax*2]
                mov     ebx, [ebp+arg_4]
                mov     [esp+54h+var_24], eax
                mov     eax, edx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_3C]
                xor     ecx, 33h
                shr     eax, 8
                movzx   edx, al
                xor     eax, eax
                sub     edx, 16h
                add     edx, [edi+ecx*8]
                mov     [esp+54h+var_20], edx
                adc     eax, [edi+ecx*8+4]
                add     ebx, 0A8C15B28h
                xor     ebx, [esp+54h+var_38]
                mov     ecx, edi
                mov     edx, ebx
                mov     [esp+54h+var_1C], eax
                xor     edx, 8FAC6352h
                mov     [esp+54h+var_34], ebx
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_3C]
                mov     ecx, edx
                xor     ecx, ebx
                mov     eax, edx
                xor     eax, edx
                mov     ebx, esi
                xor     eax, [esp+50h+var_38]
                xor     ecx, edx
                sub     ebx, [ebp+arg_4]
                xor     ebx, eax
                mov     [esp+50h+var_2C], eax
                xor     ebx, [esp+50h+var_34]
                xor     ebx, 0FDF33D33h
                mov     [esp+50h+var_8], ecx
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0E6h
                movzx   eax, al
                cdq
                movzx   edi, bl
                xor     esi, esi
                sub     edi, 6Eh ; 'n'
                sub     edi, eax
                mov     eax, [ebp+arg_0]
                sbb     esi, edx
                add     edi, [esp+50h+var_30]
                mov     edx, [ebp+arg_4]
                adc     esi, [esp+50h+var_28]
                shr     eax, 4
                shl     edx, 4
                add     edx, eax
                mov     eax, ebx
                xor     eax, ecx
                xor     edx, ecx
                xor     eax, [esp+50h+var_38]
                xor     ecx, ecx
                xor     edx, [esp+50h+var_2C]
                mov     [esp+50h+var_28], eax
                xor     eax, 0D8150D71h
                or      ecx, eax
                mov     [esp+50h+var_30], edx
                mov     [edi], ecx
                add     edx, 0B250876h
                mov     ecx, [esp+50h+var_30]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                mov     ebx, [esp+50h+var_40]
                mov     edx, [esp+50h+var_24]
                movzx   eax, cl
                mov     [ebx+eax*8-578h], edx
                mov     edx, ebx
                and     dword ptr [edx+eax*8-574h], 0
                mov     eax, ecx
                mov     edx, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-5A8h], edx
                mov     edx, [esp+50h+var_1C]
                mov     [ebx+eax*8-5A4h], edx
                mov     eax, ecx
                shr     eax, 10h
                mov     edx, ebx
                mov     ebx, [esp+50h+var_3C]
                movzx   eax, al
                xor     eax, 0CAh
                shr     ecx, 18h
                xor     ecx, 0A9h
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                mov     eax, [esp+50h+var_18]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_14]
                mov     [ecx+edx+4], eax
                mov     eax, [esp+50h+var_28]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_10]
                xor     ecx, 7Dh
                pop     edi
                pop     esi
                pop     ebx
                mov     [edx+ecx*8-3A0h], eax
                mov     eax, [esp+44h+var_C]
                mov     [edx+ecx*8-39Ch], eax
                xor     eax, eax
                mov     ecx, [esp+44h+var_8]
                mov     edx, [esp+44h+var_2C]
                add     ecx, 0F8AE4CB5h
                add     edx, 168FEDF0h
                or      eax, ecx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___144      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__15      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                push    offset dword_40AC1C
                lea     ecx, [esi-3421AF6Ch]
                sub     esi, [ebp+arg_4]
                add     ecx, [ebp+arg_4]
                mov     edi, esi
                mov     eax, ecx
                mov     [esp+24h+var_C], esi
                shr     eax, 8
                xor     edi, 4236EFEFh
                movzx   eax, al
                xor     eax, 0E1h
                mov     edx, [ebx+eax*8]
                mov     eax, ecx
                shr     eax, 10h
                mov     [esp+24h+var_10], edx
                movzx   edx, cl
                movzx   ecx, al
                xor     edx, 0CFh
                xor     ecx, 34h
                mov     eax, [ebx+edx*8]
                mov     edx, [ebp+arg_0]
                mov     esi, [eax+ecx]
                mov     ecx, [ebp+arg_4]
                movzx   eax, di
                sub     eax, 0B07Ch
                shr     ecx, 4
                add     esi, eax
                mov     eax, edx
                shl     eax, 4
                add     eax, ecx
                mov     ecx, ebx
                mov     [esp+24h+var_14], eax
                mov     [esp+24h+var_8], eax
                lea     eax, [edx-3421AF6Ch]
                add     eax, [ebp+arg_4]
                xor     [esp+24h+var_14], eax
                mov     edx, [esp+24h+var_14]
                xor     edx, 0D6665A16h
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     ebx, [ebp+arg_4]
                lea     eax, [ecx-3421AF6Ch]
                add     eax, ebx
                lea     edx, [ecx-7B5D5FEAh]
                shl     ebx, 4
                xor     edx, edi
                shr     ecx, 4
                xor     edx, eax
                mov     eax, [esp+20h+var_10]
                add     ebx, ecx
                mov     ecx, [esp+20h+var_14]
                xor     ebx, ecx
                xor     ebx, edi
                mov     [esp+20h+var_14], ebx
                sub     eax, esi
                jz      short loc_46FA80
                xor     edx, 0B1BC8FBBh
                xor     ebx, 0F04E6B0Ah
                jmp     short loc_46FA9F
; ---------------------------------------------------------------------------

loc_46FA80:                             ; CODE XREF: vBng_h__15+D0¡üj
                mov     eax, [esp+20h+var_C]
                mov     ebx, [esp+20h+var_8]
                xor     eax, edx
                xor     ebx, [esp+20h+var_14]
                xor     eax, ecx
                xor     eax, 29584A16h
                xor     ebx, edx
                xor     ebx, 0D83ECD69h
                mov     edx, eax

loc_46FA9F:                             ; CODE XREF: vBng_h__15+DE¡üj
                pop     edi
                xor     ecx, ecx
                or      ecx, ebx
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__15      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__33      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                xor     ebx, 0C9216885h
                movzx   eax, bl
                push    esi
                push    edi
                push    offset dword_40AAB0
                mov     edx, [ecx+eax*8-678h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     edi, [ecx+eax*8-498h]
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0ACh
                mov     [esp+24h+var_8], edi
                mov     esi, [eax+edx]
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                lea     edi, [edx-3BE629BAh]
                add     edi, eax
                mov     [esp+24h+var_C], edi
                lea     edi, [edx-1A09F1B6h]
                xor     edi, ebx
                mov     [esp+24h+var_10], edi
                lea     edi, [edx+2A7FD8Fh]
                add     edi, eax
                lea     edx, [eax+2F9959C0h]
                xor     edi, [esp+24h+var_C]
                xor     edi, ebx
                xor     edx, edi
                mov     [esp+24h+var_4], edi
                xor     edx, [esp+24h+var_10]
                sub     edx, 0BE5CAC7h
                call    VBN_TransformContext
                mov     edi, [esp+20h+var_8]
                shr     ebx, 18h
                sub     edi, ebx
                sub     edi, esi
                add     edi, 1Eh
                jz      short loc_46FB6C
                mov     eax, [esp+20h+var_10]
                xor     edx, edx
                mov     esi, [esp+20h+var_C]
                add     eax, 48BF13D9h
                add     esi, 6AD05B21h
                or      edx, eax
                jmp     short loc_46FB96
; ---------------------------------------------------------------------------

loc_46FB6C:                             ; CODE XREF: vBng_h__33+A1¡üj
                mov     edx, [ebp+arg_4]
                xor     esi, esi
                mov     eax, [ebp+arg_0]
                mov     ecx, [esp+20h+var_4]
                shl     edx, 4
                add     ecx, 0B606BE75h
                shr     eax, 4
                add     edx, eax
                xor     edx, [esp+20h+var_10]
                xor     edx, [esp+20h+var_C]
                xor     edx, 2A2B2B6Bh
                or      esi, ecx

loc_46FB96:                             ; CODE XREF: vBng_h__33+BA¡üj
                pop     edi
                mov     eax, edx
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__33      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___53_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                mov     eax, esi
                mov     [ebp+var_C], ebx
                sub     eax, edx
                xor     eax, 0A1792D72h
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 73h
                push    edi
                push    offset dword_40C4A0
                mov     ecx, [eax+ebx]
                mov     edi, [eax+ebx+4]
                lea     eax, [edx+esi]
                mov     [ebp+var_14], eax
                add     eax, 0F92667A7h
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                mov     [ebp+var_10], eax
                lea     edx, [eax-4C12C750h]
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                xor     ecx, ecx
                shr     ebx, 4
                add     ebx, eax
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 0ABh
                xor     al, 0C1h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     edi, [ebp+arg_4]
                xor     edx, edx
                mov     [eax+1BCh], ecx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_14]
                shr     eax, 4
                add     ecx, 0E8AE4795h
                xor     ecx, [ebp+var_10]
                xor     ecx, [ebp+var_4]
                shl     edi, 4
                sub     ecx, 2E2B5F6Ch
                add     eax, edi
                xor     eax, ebx
                xor     eax, [ebp+var_10]
                pop     edi
                pop     esi
                xor     eax, 0FA96A568h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___53_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000204d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     edx, [ebp+arg_4]
                xor     eax, eax
                xor     eax, edx
                push    ebx
                push    esi
                mov     esi, ecx
                mov     [esp+2Ch+var_C], eax
                mov     ecx, [ebp+arg_0]
                mov     ebx, edx
                xor     ebx, ecx
                mov     [esp+2Ch+var_4], esi
                push    edi
                mov     eax, ebx
                lea     edi, [ecx-7FC9EC1Fh]
                shr     eax, 8
                add     edi, edx
                movzx   ecx, al
                movzx   edx, bl
                xor     edx, 89h
                mov     eax, [edx+esi]
                mov     edx, edi
                xor     edx, 5A9401D4h
                mov     esi, [eax+ecx+50h]
                mov     eax, esi
                sub     eax, edx
                mov     ecx, ebx
                mov     [esp+30h+var_10], eax
                cmp     edx, esi
                mov     eax, [ebp+arg_0]
                setnbe  [esp+30h+var_1D]
                xor     ecx, eax
                xor     ecx, [ebp+arg_4]
                mov     [esp+30h+var_1C], ecx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     eax, ecx
                xor     eax, edi
                xor     eax, ebx
                mov     ebx, [ebp+arg_4]
                mov     [esp+30h+var_14], eax
                mov     eax, [esp+30h+var_1C]
                xor     ecx, eax
                xor     ecx, edi
                mov     edi, [esp+30h+var_14]
                mov     [esp+30h+var_18], ecx
                lea     ecx, [ebx-1DF8B2DBh]
                xor     ecx, [esp+30h+var_18]
                xor     ecx, edi
                mov     [esp+30h+var_14], ecx
                cmp     edx, esi
                jbe     short loc_46FD3B
                mov     esi, eax
                xor     edx, edx
                lea     eax, [edi-6D4B0603h]
                xor     esi, 0B0F54A62h
                or      edx, eax
                jmp     short loc_46FD57
; ---------------------------------------------------------------------------

loc_46FD3B:                             ; CODE XREF: VBNCB_unnamed_8000204d+A5¡üj
                mov     edx, [ebp+arg_0]
                xor     esi, esi
                sub     edx, ebx
                xor     edx, edi
                xor     edx, eax
                mov     eax, [esp+30h+var_18]
                add     eax, 0C99F6265h
                xor     edx, 82B22A95h
                or      esi, eax

loc_46FD57:                             ; CODE XREF: VBNCB_unnamed_8000204d+B9¡üj
                cmp     [esp+30h+var_10], 0
                mov     edi, [esp+30h+var_4]
                mov     eax, [esp+30h+var_14]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 36h
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                mov     [edi+ecx*8-1E8h], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000204d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002163 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     eax, [edx-4026B546h]
                mov     [ebp+var_4], eax
                mov     ebx, edx
                xor     ebx, esi
                mov     [ebp+var_C], ecx
                xor     ebx, eax
                mov     ecx, edx
                mov     eax, esi
                shl     ecx, 4
                sub     esi, edx
                shr     eax, 4
                push    edi
                lea     edi, [edx-4E8230A9h]
                add     ecx, eax
                mov     edx, [ebp+var_4]
                xor     esi, edi
                xor     esi, edx
                xor     eax, eax
                xor     esi, 2BB0923Fh
                xor     ecx, ebx
                sub     esi, 0A51648Dh
                xor     ecx, edi
                or      eax, esi
                xor     ecx, 175D067Eh
                mov     esi, [ebp+var_C]
                mov     [ebp+var_4], eax
                movzx   eax, dl
                xor     eax, 41h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_46FE21
                shr     edx, 8
                movzx   eax, dl
                xor     eax, 99h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_46FE21
                xor     ecx, ecx
                xor     ebx, 5A15C9AFh
                xor     edi, 3DE154B0h
                or      ecx, ebx
                jmp     short loc_46FE24
; ---------------------------------------------------------------------------

loc_46FE21:                             ; CODE XREF: VBNCB_unnamed_80002163+6C¡üj
                                        ; VBNCB_unnamed_80002163+7D¡üj
                mov     edi, [ebp+var_4]

loc_46FE24:                             ; CODE XREF: VBNCB_unnamed_80002163+8F¡üj
                mov     edx, edi
                mov     eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002163 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___7_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                mov     ebx, ecx
                shl     eax, 4
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_C], ebx
                movzx   eax, cl
                xor     eax, 0D5h
                mov     [ebp+var_4], ecx
                push    esi
                lea     esi, [edx+4F4433B5h]
                push    edi
                mov     ecx, [eax+ebx]
                mov     edx, esi
                mov     edi, [eax+ebx+4]
                xor     edx, 36B2CBD5h
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                push    offset dword_40AD30
                mov     [ebp+var_10], esi
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ebx, [ebp+arg_0]
                lea     eax, [edx+4244D811h]
                add     edx, 74C8F702h
                xor     eax, [ebp+var_4]
                add     ebx, edx
                xor     ebx, eax
                mov     [ebp+var_14], eax
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 0A3h
                shr     eax, 8
                sub     al, 13h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                mov     ebx, [ebp+arg_4]
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_C]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ebx, 4
                add     eax, ebx
                mov     [ecx+1BCh], edx
                xor     eax, [ebp+var_10]
                xor     edx, edx
                xor     eax, [ebp+var_4]
                mov     ecx, [ebp+var_14]
                add     eax, 5525AAF9h
                pop     edi
                xor     ecx, 0AE09B8FFh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___7_stk    endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___172      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, edi
                sub     edx, esi
                mov     [esp+58h+var_48], ebx
                xor     edx, 7383DCEDh
                and     [esp+58h+var_4], 0
                movzx   eax, dl
                mov     [esp+58h+var_44], edx
                push    offset dword_40A898
                mov     ecx, [ebx+eax*8-628h]
                mov     eax, [ebx+eax*8-624h]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Ch
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     ebx, [eax+ebx]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_28], ebx
                mov     ecx, [eax+ecx-30h]
                mov     dword ptr [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx-2Ch]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     ecx, [ecx+eax*8-350h]
                mov     [esp+5Ch+var_C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8-34Ch]
                mov     ecx, esi
                mov     [esp+5Ch+var_8], eax
                mov     eax, edi
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     [esp+5Ch+var_38], ecx
                lea     edx, [ecx+3E2BDB39h]
                mov     ecx, [esp+5Ch+var_48]
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_44]
                lea     ecx, [edi-7CFA7534h]
                xor     ecx, [esp+58h+var_38]
                xor     edx, esi
                xor     ecx, [esp+58h+var_44]
                xor     edx, edi
                movzx   eax, dl
                xor     eax, 0CBh
                mov     [esp+58h+var_40], ecx
                add     eax, eax
                mov     [esp+58h+var_20], edx
                mov     ecx, edi
                xor     ecx, [esp+58h+var_40]
                xor     ecx, esi
                mov     eax, [ebx+eax*8]
                xor     ecx, edx
                mov     [esp+58h+var_10], eax
                mov     ebx, esi
                sub     ebx, edi
                mov     [esp+58h+var_14], ecx
                xor     ebx, edx
                lea     eax, [edi-563FDB82h]
                xor     ebx, [esp+58h+var_38]
                add     eax, esi
                xor     eax, ebx
                mov     [esp+58h+var_34], ebx
                xor     eax, [esp+58h+var_40]
                mov     ebx, ecx
                xor     ebx, [esp+58h+var_34]
                mov     [esp+58h+var_3C], eax
                xor     ebx, [esp+58h+var_44]
                xor     esi, esi
                xor     ebx, 72DF4582h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 2Fh ; '/'
                xor     al, 0DAh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                lea     edx, [ecx-169AEFDh]
                adc     esi, dword ptr [esp+58h+var_30+4]
                xor     eax, 0FAFDB864h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                shr     eax, 10h
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 0BFh
                mov     [eax+edx], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [eax+edx+4], ecx
                mov     eax, [esp+58h+var_20]
                mov     ecx, [esp+58h+var_48]
                shr     eax, 8
                xor     al, 94h
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                adc     edx, dword ptr [esp+58h+var_1C+4]
                shr     ebx, 18h
                mov     [ecx+ebx*8-5A0h], eax
                mov     [ecx+ebx*8-59Ch], edx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_14]
                xor     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_44]
                mov     ebx, [esp+58h+var_48]
                mov     edx, [esp+58h+var_10]
                movzx   eax, cl
                xor     eax, 0B8h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_40]
                shr     eax, 8
                xor     edx, 84DC4E27h
                movzx   eax, al
                shr     ecx, 10h
                mov     [ebx+eax*8-680h], edi
                mov     [ebx+eax*8-67Ch], esi
                movzx   eax, cl
                mov     ecx, [esp+58h+var_C]
                xor     eax, 12h
                pop     edi
                pop     esi
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [ebx+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_34]
                xor     ecx, 0F103FEE3h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___172      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___121      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                lea     eax, [edx+57EA420Bh]
                mov     esi, ecx
                add     eax, ebx
                mov     [esp+54h+var_4C], esi
                mov     [esp+54h+var_48], eax
                lea     ecx, [edx-19241210h]
                add     ecx, ebx
                movzx   eax, cl
                push    edi
                mov     [esp+58h+var_3C], ecx
                push    offset dword_40C680
                mov     esi, [eax+esi-35h]
                mov     dword ptr [esp+5Ch+var_38], esi
                mov     esi, [esp+5Ch+var_4C]
                mov     eax, [eax+esi-31h]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3Eh
                mov     edi, [eax+esi]
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 0EEh
                mov     edx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     dword ptr [esp+5Ch+var_18], edx
                mov     edx, [esp+5Ch+var_48]
                movzx   eax, dl
                mov     esi, [eax+esi+20h]
                mov     eax, edx
                mov     edx, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     edx, [eax+edx-9Ch]
                mov     [esp+5Ch+var_10], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx-98h]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     edx, [eax+edx+28h]
                mov     [esp+5Ch+var_24], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx+2Ch]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     eax, 4
                mov     [esp+5Ch+var_44], eax
                mov     eax, [ebp+arg_0]
                mov     edx, [esp+5Ch+var_44]
                shl     eax, 4
                add     edx, eax
                xor     edx, ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_44], edx
                add     edx, 0DBEAF0EEh
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_48]
                lea     ecx, [ebx+6F140BA8h]
                mov     edx, [esp+58h+var_3C]
                xor     ecx, eax
                shr     eax, 10h
                xor     ecx, edx
                xor     eax, 350Fh
                mov     [esp+58h+var_1C], ecx
                add     eax, esi
                mov     eax, [edi+eax*4]
                mov     [esp+58h+var_28], eax
                mov     eax, [ebp+arg_0]
                lea     edi, [eax+617574C5h]
                xor     edi, [esp+58h+var_44]
                xor     edi, [esp+58h+var_48]
                mov     [esp+58h+var_3C], edi
                mov     edi, eax
                add     eax, 0EEDA30F1h
                sub     edi, ebx
                xor     eax, [esp+58h+var_3C]
                xor     edi, ecx
                xor     eax, ecx
                xor     edi, [esp+58h+var_44]
                xor     edi, 6CD456BBh
                mov     [esp+58h+var_30], eax
                mov     ecx, edi
                mov     [esp+58h+var_8], edi
                xor     ecx, [esp+58h+var_3C]
                xor     ecx, edx
                xor     ecx, 6AB91AD3h
                mov     [esp+58h+var_40], ecx
                mov     ecx, eax
                xor     ecx, edi
                xor     ecx, [esp+58h+var_48]
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 87h
                add     al, 26h ; '&'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                mov     esi, [esp+58h+var_30]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                adc     edx, dword ptr [esp+58h+var_38+4]
                add     eax, 851F1E06h
                xor     ecx, ecx
                xor     esi, 342AAA23h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_4C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [esi+eax*8-5D8h], ebx
                mov     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_30]
                xor     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_48]
                mov     [esi+eax*8-5D4h], edx
                and     dword ptr [esi+ecx*8+0FCh], 0
                mov     eax, [esp+58h+var_28]
                mov     [esi+ecx*8+0F8h], eax
                mov     ecx, [esp+58h+var_24]
                movzx   eax, bl
                mov     [eax+esi-62h], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+esi-5Eh], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_1C]
                movzx   edx, al
                mov     eax, ebx
                dec     edx
                add     edx, dword ptr [esp+58h+var_18]
                adc     ecx, dword ptr [esp+58h+var_18+4]
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 10h
                mov     [esi+eax*8-6C8h], edx
                mov     edx, [esp+58h+var_3C]
                mov     [esi+eax*8-6C4h], ecx
                add     edx, 0D5A287ACh
                mov     ecx, [esp+58h+var_10]
                movzx   eax, bl
                mov     [esi+eax*8-5B8h], ecx
                mov     ecx, [esp+58h+var_C]
                mov     [esi+eax*8-5B4h], ecx
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                add     ecx, 7D2E986Ch
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___121      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___78_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                sub     edx, esi
                push    edi
                mov     edi, ecx
                push    offset sub_40A7A0
                lea     eax, [esi-31D3154Fh]
                mov     [ebp+var_8], edi
                mov     [ebp+var_C], eax
                movzx   eax, al
                xor     eax, 72h
                mov     ecx, [eax+edi]
                mov     ebx, [eax+edi+4]
                mov     eax, edx
                xor     eax, 690790BBh
                mov     [ebp+var_4], ecx
                xor     edx, eax
                mov     [ebp+var_10], eax
                lea     ecx, [esi-31D3154Fh]
                xor     edx, ecx
                mov     ecx, edi
                xor     edx, 6344AD65h
                call    VBN_TransformContext
                lea     ecx, [esi-31D3154Fh]
                mov     eax, ecx
                shr     ecx, 10h
                shr     eax, 8
                xor     cl, 2Bh
                xor     al, 0C4h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     edi, edx
                add     esi, [ebp+var_4]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                add     ecx, 0B847C4DEh
                add     eax, 5D29B459h
                xor     eax, [ebp+var_C]
                pop     edi
                pop     esi
                sub     eax, 1367DA71h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___78_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800020c5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                lea     eax, [edx-60B05E23h]
                mov     [ebp+var_8], eax
                mov     ebx, esi
                mov     [ebp+var_4], ecx
                mov     eax, edx
                mov     ecx, esi
                shl     eax, 4
                shr     ecx, 4
                xor     esi, edx
                add     ecx, eax
                shl     ebx, 4
                mov     eax, edx
                shr     eax, 4
                add     ebx, eax
                lea     eax, [edx-60B05E23h]
                xor     ebx, eax
                xor     edx, edx
                push    edi
                mov     edi, esi
                xor     esi, ebx
                xor     edi, ecx
                xor     esi, ecx
                xor     edi, eax
                xor     esi, 983C9A11h
                shr     eax, 8
                or      edx, esi
                mov     esi, [ebp+var_4]
                movzx   eax, al
                xor     eax, 0C5h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4704FD
                mov     eax, [ebp+var_8]
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-550h], 0
                jnz     short loc_4704FD
                xor     edx, edx
                lea     eax, [ebx-3304C4D4h]
                xor     ecx, 511E1440h
                or      edx, eax
                jmp     short loc_470503
; ---------------------------------------------------------------------------

loc_4704FD:                             ; CODE XREF: VBNCB_unnamed_800020c5+69¡üj
                                        ; VBNCB_unnamed_800020c5+79¡üj
                lea     ecx, [edi+3B543960h]

loc_470503:                             ; CODE XREF: VBNCB_unnamed_800020c5+8B¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020c5 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_1__stk     proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                sub     eax, edi
                mov     [ebp+var_4], esi
                lea     ecx, [edx-43ED18BCh]
                add     edx, 7322337Dh
                xor     edx, eax
                mov     [ebp+var_C], ecx
                lea     ebx, [edi-47F9B46Dh]
                mov     [ebp+var_8], edx
                xor     ebx, ecx
                movzx   ecx, al
                xor     ebx, eax
                mov     eax, ebx
                shr     eax, 8
                mov     esi, [esi+ecx*8-288h]
                xor     al, 0DDh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C64C
                mov     ecx, [eax+ecx*8-284h]
                sbb     ecx, edx
                xor     bl, 0AFh
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+arg_4]
                mov     esi, [ebp+var_C]
                shl     edx, 4
                shr     edi, 4
                add     edx, edi
                mov     [ebx+1BCh], ecx
                mov     edi, [ebp+var_8]
                mov     ecx, ebx
                xor     edx, edi
                xor     edx, esi
                add     edx, 325D939Ah
                call    VBN_TransformContext
                lea     ecx, [edi+1D6788B7h]
                xor     eax, eax
                pop     edi
                lea     edx, [esi-6E4D409Bh]
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__stk     endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___38       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                mov     [esp+54h+var_50], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                shl     edx, 4
                add     edx, eax
                and     [esp+5Ch+var_4], 0
                mov     eax, edx
                mov     [esp+5Ch+var_4C], edx
                shr     eax, 8
                lea     ebx, [esi+ecx]
                mov     ecx, [esp+5Ch+var_50]
                movzx   eax, al
                xor     eax, 99h
                shr     edx, 18h
                push    edi
                lea     edi, [ebx-510DB95Ch]
                mov     [esp+60h+var_3C], ebx
                xor     edx, 73h
                mov     [esp+60h+var_2C], edi
                mov     ecx, [eax+ecx]
                mov     [esp+60h+var_40], ecx
                mov     ecx, [esp+60h+var_50]
                push    offset dword_40C344
                mov     eax, [eax+ecx+4]
                mov     [esp+64h+var_44], eax
                mov     eax, edi
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+64h+var_50]
                mov     eax, [edx+eax]
                mov     eax, [eax+ecx-32h]
                mov     [esp+64h+var_8], eax
                mov     eax, [esp+64h+var_4C]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edi
                mov     edi, [esp+64h+var_50]
                xor     ecx, 5Ah
                shr     eax, 10h
                xor     al, 86h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+64h+var_24], eax
                adc     edx, [edi+ecx*8+4]
                mov     [esp+64h+var_20], edx
                lea     edx, [ebx-510DB95Ch]
                movzx   eax, dl
                add     ebx, 9677FD5Bh
                mov     ecx, eax
                mov     [esp+64h+var_C], eax
                xor     ecx, 5Ch
                xor     ebx, edx
                xor     ebx, [esp+64h+var_4C]
                mov     [esp+64h+var_34], ebx
                mov     eax, [ecx+edi]
                mov     [esp+64h+var_1C], eax
                mov     eax, [ecx+edi+4]
                mov     [esp+64h+var_18], eax
                mov     eax, [esp+64h+var_4C]
                movzx   eax, al
                mov     ecx, [edi+eax*8-498h]
                mov     eax, [edi+eax*8-494h]
                mov     [esp+64h+var_10], eax
                mov     eax, esi
                sub     eax, [ebp+arg_0]
                mov     [esp+64h+var_14], ecx
                mov     ecx, eax
                xor     ecx, [esp+64h+var_4C]
                xor     eax, edx
                mov     edx, eax
                mov     [esp+64h+var_48], ecx
                xor     edx, 0C11C4B53h
                mov     [esp+64h+var_38], eax
                mov     ecx, edi
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                xor     ecx, ebx
                xor     ecx, [esp+60h+var_48]
                xor     ecx, esi
                mov     eax, ecx
                mov     [esp+60h+var_30], ecx
                shr     eax, 8
                xor     cl, 57h
                add     al, 0Dh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [esp+60h+var_30]
                cdq
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [esp+60h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+60h+var_34]
                sbb     eax, edi
                add     ebx, [esp+60h+var_40]
                mov     edi, [esp+60h+var_50]
                adc     eax, [esp+60h+var_44]
                add     edx, 813622DAh
                xor     ecx, [esp+60h+var_38]
                xor     ecx, [esp+60h+var_4C]
                xor     edx, [esp+60h+var_38]
                xor     ecx, 3F4223D2h
                mov     [esp+60h+var_28], eax
                xor     edx, esi
                mov     [esp+60h+var_40], ecx
                xor     ecx, ecx
                mov     eax, [esp+60h+var_40]
                add     eax, 0E333FED8h
                mov     [esp+60h+var_44], edx
                or      ecx, eax
                xor     edx, 7AC45347h
                mov     [ebx], ecx
                mov     ecx, [esp+60h+var_28]
                mov     [ebx+4], edx
                mov     edx, [esp+60h+var_44]
                xor     edx, [esp+60h+var_30]
                xor     edx, [esp+60h+var_2C]
                xor     edx, [esp+60h+var_4C]
                movzx   eax, dl
                mov     [edi+eax*8-2CCh], ecx
                mov     ecx, [esp+60h+var_24]
                mov     [edi+eax*8-2D0h], ebx
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-608h], ecx
                mov     ecx, [esp+60h+var_20]
                mov     [edi+eax*8-604h], ecx
                mov     eax, edx
                mov     ecx, [esp+60h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 80h
                shr     edx, 18h
                xor     edx, 9Eh
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+60h+var_18]
                mov     [edi+eax*8+4], ecx
                mov     eax, [esp+60h+var_14]
                mov     [edx+edi], eax
                mov     eax, [esp+60h+var_10]
                mov     [edx+edi+4], eax
                mov     eax, [esp+60h+var_44]
                mov     edx, [esp+60h+var_48]
                movzx   eax, al
                movzx   ecx, dl
                xor     ecx, eax
                mov     eax, [esp+60h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_8]
                xor     ecx, [esp+60h+var_C]
                mov     [edi+ecx*8-3A0h], eax
                and     dword ptr [edi+ecx*8-39Ch], 0
                xor     esi, 599508E4h
                xor     eax, eax
                add     edx, 64C46BD6h
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___38       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___131_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                xor     eax, edx
                push    esi
                mov     esi, ecx
                mov     ecx, ebx
                sub     ecx, edx
                mov     [ebp+var_4], esi
                xor     eax, ecx
                mov     [ebp+var_8], eax
                mov     eax, edx
                shl     eax, 4
                push    edi
                lea     edi, [ebx+71EF8A9Dh]
                shr     ebx, 4
                add     ebx, eax
                xor     ebx, edi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                sub     al, 0Eh
                mov     esi, [ecx+esi+63h]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40AA30
                mov     ecx, [ecx+eax+67h]
                sbb     ecx, edx
                xor     bl, 95h
                movzx   eax, bl
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     edx, [ebp+arg_0]
                add     edx, 9FFCFFD8h
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [eax+1BCh], ecx
                sub     edx, 0CD7C4F6h
                mov     ecx, eax
                call    VBN_TransformContext
                lea     edx, [edi-5F590BD6h]
                xor     eax, eax
                pop     edi
                lea     ecx, [esi-526F3A5h]
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___131_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800023e5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     [esp+20h+var_14], eax
                mov     ebx, eax
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                and     [esp+24h+var_4], 0
                push    edi
                mov     edi, eax
                movzx   edx, bl
                mov     eax, esi
                shr     edi, 4
                shl     eax, 4
                xor     edx, 16h
                add     edi, eax
                mov     [esp+28h+var_10], ecx
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+28h+var_10]
                mov     eax, [edx+eax]
                mov     ecx, [eax+ecx-39h]
                mov     eax, edi
                xor     eax, 262C7408h
                mov     edx, ecx
                sub     edx, eax
                cmp     eax, ecx
                mov     [esp+28h+var_C], edx
                mov     edx, esi
                setnbe  [esp+28h+var_15]
                sub     [esp+28h+var_14], esi
                sub     edx, [ebp+arg_4]
                mov     esi, [esp+28h+var_14]
                xor     edx, ebx
                xor     esi, edi
                xor     edx, 99E713F8h
                xor     esi, ebx
                mov     ebx, [esp+28h+var_14]
                xor     ebx, edx
                xor     ebx, edi
                mov     [esp+28h+var_14], ebx
                mov     ebx, edi
                xor     ebx, [esp+28h+var_14]
                xor     ebx, esi
                mov     [esp+28h+var_8], ebx
                cmp     eax, ecx
                jbe     short loc_470997
                xor     edi, edi
                xor     esi, 0FBB26E2Ch
                xor     edx, 0F16A201Eh
                or      edi, esi
                jmp     short loc_4709AE
; ---------------------------------------------------------------------------

loc_470997:                             ; CODE XREF: VBNCB_unnamed_800023e5+93¡üj
                mov     eax, [esp+28h+var_14]
                xor     edi, esi
                xor     edi, edx
                xor     eax, 5F310DEEh
                xor     edx, edx
                sub     edi, 32A6B72Bh
                or      edx, eax

loc_4709AE:                             ; CODE XREF: VBNCB_unnamed_800023e5+A5¡üj
                mov     eax, [esp+28h+var_8]
                mov     esi, [esp+28h+var_10]
                cmp     [esp+28h+var_C], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-3C8h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_15]
                xor     ecx, 0D7h
                mov     [esi+ecx*8], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023e5 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f11 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                mov     [ebp+var_10], ecx
                mov     ecx, esi
                xor     ecx, edx
                shr     eax, 4
                mov     [ebp+var_4], ecx
                shl     ebx, 4
                add     ebx, eax
                mov     eax, edx
                xor     ebx, ecx
                shl     eax, 4
                mov     ecx, esi
                sub     esi, edx
                push    edi
                lea     edi, [edx-1640106h]
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_8], edi
                mov     edx, [ebp+var_8]
                xor     esi, ebx
                mov     eax, [ebp+var_4]
                xor     ecx, edi
                xor     esi, edx
                xor     ecx, eax
                xor     esi, 69C1AB2Ah
                shr     eax, 8
                xor     edi, edi
                movzx   eax, al
                or      edi, esi
                xor     ecx, 0D896A87Eh
                mov     esi, [ebp+var_10]
                cmp     byte ptr [esi+eax*8-378h], 0
                jnz     short loc_470A86
                mov     eax, [ebp+var_4]
                movzx   eax, al
                xor     eax, 0FCh
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_470A86
                xor     edi, edi
                lea     eax, [ebx-7BEB7CECh]
                lea     ecx, [edx-24F54976h]
                or      edi, eax

loc_470A86:                             ; CODE XREF: VBNCB_unnamed_80001f11+73¡üj
                                        ; VBNCB_unnamed_80001f11+84¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f11 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___126      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shl     eax, 4
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+50h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     ebx, ecx
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+50h+var_3C], edi
                mov     eax, ecx
                mov     [esp+50h+var_38], ebx
                xor     eax, edx
                mov     [esp+50h+var_44], eax
                movzx   eax, bl
                xor     eax, 2Ch
                push    offset dword_40A5B4
                mov     esi, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0ABh
                mov     dword ptr [esp+54h+var_30], esi
                mov     ebx, [edi+eax*8]
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 55h
                mov     esi, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+54h+var_10], eax
                mov     [esp+54h+var_14], esi
                mov     esi, [esp+54h+var_38]
                mov     eax, esi
                shr     eax, 10h
                movzx   eax, al
                mov     edi, [eax+edi-0A1h]
                mov     dword ptr [esp+54h+var_1C], edi
                mov     edi, [esp+54h+var_3C]
                mov     eax, [eax+edi-9Dh]
                mov     dword ptr [esp+54h+var_1C+4], eax
                mov     eax, ecx
                sub     eax, edx
                mov     edx, eax
                mov     [esp+54h+var_40], eax
                xor     edx, esi
                mov     eax, esi
                shr     eax, 18h
                movzx   esi, dx
                mov     [esp+54h+var_34], edx
                sub     esi, 7729h
                xor     edx, edx
                add     esi, [eax+edi+6Fh]
                mov     [esp+54h+var_24], esi
                adc     edx, [eax+edi+73h]
                mov     [esp+54h+var_20], edx
                mov     edx, [esp+54h+var_44]
                movzx   eax, dl
                xor     eax, 8Ah
                mov     esi, [edi+eax*8]
                lea     edi, [ecx-3BB02A71h]
                mov     ecx, [esp+54h+var_3C]
                xor     edi, edx
                xor     edi, [esp+54h+var_38]
                lea     edx, [edi-4DF3F0ABh]
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_44]
                mov     eax, ecx
                shr     eax, 10h
                mov     edx, ecx
                movzx   eax, al
                xor     eax, 40h
                add     eax, esi
                xor     edx, [esp+50h+var_34]
                mov     eax, [ebx+eax*4]
                mov     [esp+50h+var_28], eax
                mov     eax, [ebp+arg_4]
                xor     edx, ecx
                mov     ecx, [ebp+arg_0]
                add     eax, 0D08B6644h
                add     ecx, eax
                mov     ebx, [esp+50h+var_40]
                xor     ebx, edx
                mov     [esp+50h+var_C], edx
                xor     ecx, edi
                xor     ebx, edi
                xor     ecx, [esp+50h+var_34]
                xor     esi, esi
                mov     eax, ecx
                mov     [esp+50h+var_40], ebx
                xor     eax, edx
                mov     [esp+50h+var_8], ecx
                mov     edx, [esp+50h+var_38]
                xor     ebx, ecx
                xor     ebx, [esp+50h+var_44]
                xor     eax, edx
                xor     eax, 0A86211A4h
                xor     ebx, edx
                mov     [esp+50h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0E5h
                movzx   edi, bl
                movzx   eax, al
                sub     edi, 2Dh ; '-'
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                mov     edx, [esp+50h+var_40]
                adc     esi, dword ptr [esp+50h+var_30+4]
                add     eax, 64FAF609h
                xor     ecx, ecx
                xor     edx, 0CFB07074h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 36h
                and     dword ptr [edx+eax*8-3BCh], 0
                mov     [edx+eax*8-3C0h], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_44]
                mov     eax, [esp+50h+var_24]
                mov     [edx+ebx*8], eax
                mov     eax, [esp+50h+var_20]
                mov     [edx+ebx*8+4], eax
                mov     ebx, [esp+50h+var_3C]
                mov     edx, dword ptr [esp+50h+var_1C]
                movzx   eax, cl
                xor     eax, 0A9h
                mov     [eax+ebx], edx
                mov     edx, dword ptr [esp+50h+var_1C+4]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_C]
                shr     eax, 8
                add     edx, 0C51395FEh
                movzx   eax, al
                xor     eax, 0D0h
                shr     ecx, 10h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                movzx   eax, cl
                mov     ecx, [esp+50h+var_14]
                mov     [ebx+eax*8-490h], ecx
                mov     ecx, [esp+50h+var_10]
                mov     [ebx+eax*8-48Ch], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                pop     edi
                xor     ecx, 703BDB2Eh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___126      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___156      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var38 = DWord Ptr -38H
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                sub     eax, ebx
                mov     [esp+54h+var_48], eax
                lea     edx, [ebx+6CFC543Bh]
                xor     eax, 17628483h
                mov     [esp+54h+var_34], edx
                mov     [esp+54h+var_40], eax
                push    edi
                mov     edi, ecx
                movzx   eax, dl
                mov     [esp+58h+var_44], edi
                push    offset dword_40A78C
                mov     ecx, [edi+eax*8+88h]
                mov     eax, [edi+eax*8+8Ch]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     edi, [edi+eax*8-4B8h]
                mov     [esp+5Ch+var_1C], edi
                mov     eax, [ecx+eax*8-4B4h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+ecx+11h]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     eax, [eax+ecx+15h]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 18h
                xor     edx, 89CF0C3Dh
                xor     eax, 0F4h
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_28+4], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_34]
                lea     eax, [esi-21B2EC6h]
                mov     edx, [esp+58h+var_48]
                xor     eax, ecx
                xor     edx, [esp+58h+var_40]
                mov     [esp+58h+var_3C], eax
                xor     edx, ecx
                movzx   eax, al
                xor     edx, 521BBC24h
                xor     eax, 2
                mov     [esp+58h+var_8], edx
                mov     eax, [edi+eax*4]
                mov     edi, ebx
                mov     [esp+58h+var_20], eax
                mov     eax, esi
                shr     eax, 4
                shl     edi, 4
                add     edi, eax
                shr     ebx, 4
                xor     edi, [esp+58h+var_3C]
                xor     edi, [esp+58h+var_40]
                mov     eax, [esp+58h+var_48]
                shl     esi, 4
                xor     eax, edi
                add     ebx, esi
                mov     [esp+58h+var_4], edi
                xor     ebx, edx
                xor     eax, edx
                xor     ebx, [esp+58h+var_3C]
                xor     eax, 0F62F9F36h
                Mov [Esp + 58H + var38], Ebx
                xor     ebx, edi
                mov     [esp+58h+var_48], eax
                xor     ebx, ecx
                Mov Ecx, [Esp + 58H + var38]
                xor     ebx, 0DBCCD762h
                mov     eax, ecx
                movzx   edi, cl
                shr     eax, 8
                xor     esi, esi
                xor     al, 19h
                mov     [esp+58h+var_14], ebx
                movzx   eax, al
                sub     edi, 17h
                cdq
                sub     edi, eax
                lea     eax, [ebx-36688872h]
                mov     ebx, [esp+58h+var_48]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, [esp+58h+var_48]
                adc     esi, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                or      ecx, eax
                Xor Ebx, [Esp + 58H + var38]
                mov     eax, [esp+58h+var_3C]
                add     edx, 8CC4152Bh
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_34]
                shr     eax, 8
                xor     al, 66h
                mov     [edi], ecx
                movzx   eax, al
                mov     [edi+4], edx
                cdq
                add     eax, dword ptr [esp+58h+var_28]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_28+4]
                xor     ecx, 80h
                mov     dword ptr [esp+58h+var_30+4], esi
                mov     esi, [esp+58h+var_44]
                mov     [esi+ecx*8], eax
                mov     eax, esi
                mov     [eax+ecx*8+4], edx
                mov     edx, esi
                mov     esi, dword ptr [esp+58h+var_30+4]
                mov     eax, ebx
                shr     eax, 8
                mov     ecx, [esp+58h+var_20]
                movzx   eax, al
                xor     eax, 6Bh
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                pop     edi
                and     dword ptr [edx+eax*8-154h], 0
                mov     [edx+eax*8-158h], ecx
                mov     eax, [esp+54h+var_1C]
                mov     [ebx+edx-4Eh], eax
                mov     eax, [esp+54h+var_18]
                mov     [ebx+edx-4Ah], eax
                mov     eax, [esp+54h+var_40]
                movzx   ecx, al
                mov     eax, [esp+54h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_14]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_10]
                mov     [edx+ecx*8+0C8h], eax
                mov     eax, [esp+54h+var_C]
                mov     [edx+ecx*8+0CCh], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_4]
                mov     edx, [esp+54h+var_8]
                xor     ecx, 0E9C05FA6h
                add     edx, 707A85E9h
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___156      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___111_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                sub     eax, [ebp+arg_0]
                xor     edx, [ebp+arg_0]
                and     [ebp+var_C], 0
                push    ebx
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    esi
                xor     eax, 0F9h
                mov     [ebp+var_C], edx
                push    edi
                push    offset dword_40C6E0
                xor     edx, 22435CB7h
                mov     [ebp+var_8], ecx
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 0FCh
                shr     eax, 10h
                xor     eax, 6461h
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                mov     ebx, [ebp+arg_0]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     ecx, [ebp+var_4]
                lea     eax, [ebx+16BA3F7Fh]
                add     eax, [ebp+arg_4]
                xor     eax, [ebp+var_C]
                xor     eax, ecx
                xor     ecx, [ebp+arg_4]
                xor     ecx, ebx
                xor     eax, 0B05A77A8h
                pop     edi
                xor     ecx, 9A596472h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___111_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__16      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                sub     ebx, esi
                mov     [esp+1Ch+var_8], ecx
                mov     [esp+1Ch+var_4], ebx
                xor     ebx, 1B0109C5h
                movzx   eax, bl
                push    edi
                lea     edi, [esi+7DDC8CB4h]
                push    offset dword_40C220
                mov     edx, [eax+ecx-0Ch]
                mov     ecx, esi
                mov     eax, [ebp+arg_0]
                add     esi, 5F46B6DFh
                shl     ecx, 4
                xor     esi, edi
                shr     eax, 4
                xor     esi, ebx
                add     ecx, eax
                xor     ecx, ebx
                movzx   eax, cl
                mov     [esp+24h+var_10], ecx
                mov     ecx, [eax+edx-54h]
                mov     eax, [esp+24h+var_10]
                xor     ecx, edi
                shr     eax, 8
                xor     ecx, 9F7FEA46h
                movzx   eax, al
                xor     eax, 10h
                mov     [eax+edx], ecx
                mov     edx, esi
                mov     ecx, [esp+24h+var_8]
                xor     edx, 0DB11D327h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                xor     eax, eax
                mov     ebx, [esp+20h+var_4]
                add     edx, 7C8E8F65h
                xor     edx, [esp+20h+var_10]
                xor     ebx, esi
                xor     ebx, [esp+20h+var_10]
                xor     edx, edi
                pop     edi
                xor     ebx, 62ECEDDDh
                add     edx, 2B9A828Fh
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__16      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___88_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_C], 0
                push    ebx
                shr     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                lea     ecx, [edx-3D760D8Fh]
                mov     [ebp+var_4], esi
                mov     ebx, edi
                shl     ebx, 4
                add     ebx, eax
                lea     eax, [edx-4E4DED49h]
                add     eax, edi
                mov     [ebp+var_8], ebx
                xor     eax, ecx
                lea     ebx, [edi-0E8C15Dh]
                xor     ebx, [ebp+var_8]
                xor     ebx, ecx
                mov     [ebp+var_C], eax
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 95h
                movzx   eax, al
                mov     esi, [ecx+esi-53h]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C1D0
                mov     ecx, [ecx+eax-4Fh]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                sub     eax, 41h ; 'A'
                mov     edx, [ebp+arg_0]
                add     esi, eax
                adc     ecx, 0
                xor     edx, edi
                mov     edi, [ebp+var_8]
                mov     [ebx+1B8h], esi
                mov     esi, [ebp+var_C]
                xor     edx, esi
                xor     edx, edi
                mov     [ebx+1BCh], ecx
                add     edx, 1D8BF50Eh
                mov     ecx, ebx
                call    VBN_TransformContext
                xor     edi, 2440BD05h
                xor     esi, 171C49EFh
                xor     eax, eax
                mov     edx, edi
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___88_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___146      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                xor     edx, [ebp+arg_4]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                mov     esi, ecx
                and     [esp+4Ch+var_4], 0
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                add     eax, ecx
                mov     [esp+4Ch+var_3C], esi
                mov     [esp+4Ch+var_44], eax
                movzx   eax, dl
                xor     eax, 25h
                mov     [esp+4Ch+var_30], edx
                push    edi
                push    offset dword_40A49C
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+54h+var_10+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 84h
                mov     dword ptr [esp+54h+var_10], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_18], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 16h
                mov     [esp+54h+var_1C], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_24], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 96h
                mov     [esp+54h+var_38], ecx
                mov     ecx, [eax+esi]
                mov     esi, [eax+esi+4]
                mov     eax, [esp+54h+var_44]
                xor     eax, edx
                mov     [esp+54h+var_28], ecx
                mov     ecx, [esp+54h+var_3C]
                mov     [esp+54h+var_2C], eax
                lea     edx, [eax-483E58B6h]
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_44]
                add     ebx, 67B6AFBCh
                mov     edi, [esp+50h+var_44]
                movzx   eax, cl
                mov     ecx, [esp+50h+var_38]
                mov     eax, [ecx+eax*2+6]
                mov     ecx, [esp+50h+var_30]
                mov     [esp+50h+var_20], eax
                mov     eax, [esp+50h+var_2C]
                mov     edx, eax
                mov     [esp+50h+var_40], ecx
                xor     edx, ecx
                xor     [esp+50h+var_40], eax
                xor     [esp+50h+var_40], edi
                mov     edi, [ebp+arg_4]
                add     edi, ebx
                mov     [esp+50h+var_14], edx
                xor     edi, edx
                xor     edi, eax
                mov     eax, [esp+50h+var_44]
                xor     eax, [esp+50h+var_40]
                xor     eax, edx
                mov     [esp+50h+var_8], edi
                mov     edx, edi
                mov     [esp+50h+var_30], eax
                xor     edx, [esp+50h+var_40]
                mov     ebx, eax
                xor     edx, ecx
                xor     edx, 621FF2FBh
                mov     [esp+50h+var_34], edx
                xor     ebx, edi
                xor     edi, edi
                xor     ebx, [esp+50h+var_44]
                xor     ebx, ecx
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 1Bh
                add     al, 77h ; 'w'
                movzx   eax, al
                cdq
                sub     ecx, eax
                mov     eax, [esp+50h+var_34]
                sbb     edi, edx
                add     [esp+50h+var_28], ecx
                mov     edx, [esp+50h+var_30]
                adc     edi, esi
                mov     esi, [esp+50h+var_28]
                xor     eax, 36BEE9E1h
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, 0ADDD5C7Dh
                mov     eax, ebx
                shr     ebx, 18h
                mov     [esi], ecx
                xor     ebx, 0EAh
                mov     ecx, [esp+50h+var_38]
                mov     [esi+4], edx
                mov     edx, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+edx-9Bh], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [eax+edx-97h], ecx
                and     dword ptr [edx+ebx*8+4], 0
                mov     eax, [esp+50h+var_20]
                mov     [edx+ebx*8], eax
                mov     ebx, [esp+50h+var_34]
                xor     ebx, [esp+50h+var_30]
                xor     ebx, [esp+50h+var_2C]
                xor     ebx, [esp+50h+var_44]
                mov     ecx, [esp+50h+var_1C]
                movzx   eax, bl
                mov     [edx+eax*8-140h], ecx
                mov     ecx, [esp+50h+var_18]
                mov     [edx+eax*8-13Ch], ecx
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, ecx
                movzx   eax, al
                xor     eax, 92h
                mov     [edx+eax*8+4], edi
                mov     edi, [esp+50h+var_3C]
                mov     [edx+eax*8], esi
                mov     eax, [esp+50h+var_14]
                movzx   edx, al
                sub     edx, 6Fh ; 'o'
                add     edx, dword ptr [esp+50h+var_10]
                adc     ecx, dword ptr [esp+50h+var_10+4]
                shr     ebx, 10h
                movzx   eax, bl
                mov     [edi+eax*8-1C8h], edx
                mov     edx, [esp+50h+var_40]
                mov     [edi+eax*8-1C4h], ecx
                add     edx, 0F4E90D6Fh
                mov     ecx, [esp+50h+var_8]
                xor     eax, eax
                pop     edi
                add     ecx, 0D234DD64h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___146      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___38_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                xor     ebx, [ebp+arg_0]
                mov     [ebp+var_4], ecx
                mov     eax, ebx
                shr     eax, 8
                mov     ecx, ebx
                xor     al, 0D4h
                shr     ecx, 10h
                movzx   eax, al
                add     cl, 2Ah ; '*'
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                push    edi
                mov     edi, edx
                cdq
                sub     esi, eax
                movzx   eax, bl
                push    offset dword_40BF00
                sbb     edi, edx
                mov     edx, [ebp+arg_0]
                add     esi, [eax+ecx-27h]
                adc     edi, [eax+ecx-23h]
                add     edx, 0CD94E29Bh
                mov     eax, [ebp+arg_0]
                add     eax, 1A65B29Dh
                xor     edx, eax
                xor     edx, ebx
                xor     edx, 307395D5h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                xor     eax, ebx
                mov     [ecx+1B8h], esi
                mov     [ecx+1BCh], edi
                mov     ecx, [ebp+arg_0]
                xor     eax, ecx
                add     ecx, 1A65B29Dh
                xor     eax, 9ABFA1D6h
                pop     edi
                add     ecx, 8003D309h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___38_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___128_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 1Ch
                mov     edx, [ebp+arg_4]
                and     [ebp+var_18], 0
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                mov     eax, edi
                mov     [ebp+var_C], esi
                xor     eax, edx
                sub     edx, edi
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     [ebp+var_10], edx
                xor     edx, 2F8FB771h
                push    offset dword_40AD10
                mov     ecx, [eax+esi-17h]
                mov     ebx, [eax+esi-13h]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, edi
                sub     ecx, [ebp+arg_4]
                mov     [ebp+var_14], ecx
                xor     ecx, [ebp+var_4]
                xor     ecx, 314DAE09h
                mov     eax, ecx
                mov     [ebp+var_18], ecx
                shr     eax, 8
                xor     cl, 3Dh
                xor     eax, 0CC25h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                adc     edx, ebx
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+arg_4]
                mov     ecx, [ebp+var_14]
                xor     ecx, [ebp+var_18]
                xor     ecx, [ebp+var_10]
                shr     edx, 4
                xor     ecx, 6CF4489Bh
                shl     eax, 4
                sub     ecx, 7C6922E8h
                add     edx, eax
                xor     eax, eax
                xor     edx, [ebp+var_10]
                xor     edx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     edx, 98FA8295h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___128_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800021e3 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+28h+var_14], ecx
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                xor     edx, 73h
                movzx   ecx, al
                mov     eax, [esp+28h+var_14]
                xor     ecx, 54h
                mov     eax, [edx+eax]
                mov     ecx, [eax+ecx]
                lea     eax, [ebx-1D95AA2h]
                mov     edx, ecx
                sub     edx, eax
                cmp     eax, ecx
                mov     [esp+28h+var_8], edx
                lea     edx, [esi+edi]
                setnbe  [esp+28h+var_15]
                mov     [esp+28h+var_C], edx
                lea     esi, [edi+1C2502Bh]
                add     edx, 24820F33h
                xor     edx, ebx
                mov     [esp+28h+var_10], esi
                mov     esi, [ebp+arg_4]
                sub     edi, esi
                xor     edi, edx
                xor     edi, ebx
                xor     edi, 3375C41Ah
                lea     ebx, [esi-285EDCDEh]
                mov     esi, [esp+28h+var_10]
                xor     ebx, edi
                xor     ebx, esi
                mov     [esp+28h+var_10], ebx
                cmp     eax, ecx
                jbe     short loc_4715D4
                xor     eax, eax
                xor     esi, 66155AE5h
                xor     edx, 0A22F35ADh
                or      eax, esi
                jmp     short loc_4715F0
; ---------------------------------------------------------------------------

loc_4715D4:                             ; CODE XREF: VBNCB_unnamed_800021e3+90¡üj
                mov     eax, [esp+28h+var_C]
                xor     edi, 3ABDB853h
                add     eax, 520D6397h
                xor     eax, esi
                xor     eax, edx
                xor     edx, edx
                sub     eax, 4A6FAB1h
                or      edx, edi

loc_4715F0:                             ; CODE XREF: VBNCB_unnamed_800021e3+A2¡üj
                mov     ecx, [esp+28h+var_10]
                mov     esi, [esp+28h+var_14]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, cl
                setz    bl
                pop     edi
                mov     [esi+ecx*8-0D8h], bl
                mov     ecx, [esp+24h+var_10]
                mov     bl, [esp+24h+var_15]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0F8h
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021e3 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001faf proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                mov     [ebp+var_C], ecx
                lea     edx, [esi+0EFB7DAh]
                shl     ebx, 4
                mov     ecx, esi
                add     ebx, eax
                shr     ecx, 4
                mov     eax, edi
                xor     edi, esi
                mov     esi, [ebp+var_C]
                xor     edi, ebx
                shl     eax, 4
                add     ecx, eax
                mov     eax, ebx
                xor     eax, edi
                mov     [ebp+var_4], ecx
                xor     eax, [ebp+var_4]
                xor     edx, ecx
                add     eax, 12B1CD01h
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, ebx
                mov     al, bl
                sub     edx, 3C632A6Ah
                not     al
                movzx   eax, al
                cmp     byte ptr [esi+eax*8], 0
                mov     esi, [ebp+var_4]
                jnz     short loc_4716BD
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cmp     byte ptr [ebx+eax*8-1B0h], 0
                jnz     short loc_4716BD
                xor     ecx, ecx
                lea     eax, [edi-3FAFCC95h]
                lea     edx, [esi+174BF733h]
                or      ecx, eax

loc_4716BD:                             ; CODE XREF: VBNCB_unnamed_80001faf+68¡üj
                                        ; VBNCB_unnamed_80001faf+7B¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001faf endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___80_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, ecx
                shr     edx, 4
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shl     eax, 4
                add     edx, eax
                mov     [ebp+var_8], edi
                push    offset dword_40BBC0
                lea     eax, [ecx+204C0181h]
                sub     ecx, esi
                mov     ebx, ecx
                add     eax, esi
                xor     ebx, edx
                mov     [ebp+var_C], eax
                xor     ebx, 0C6CCAF60h
                mov     [ebp+var_10], ebx
                xor     ecx, [ebp+var_10]
                mov     ebx, [ebp+arg_0]
                xor     ecx, [ebp+var_C]
                xor     ebx, esi
                xor     ebx, eax
                xor     ecx, 6C5B9A96h
                movzx   eax, dl
                xor     ebx, edx
                mov     [ebp+var_4], ebx
                lea     edx, [ecx-44766030h]
                mov     ecx, [ebp+var_8]
                mov     ebx, [eax+edi+72h]
                mov     edi, [eax+edi+76h]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                shr     eax, 8
                add     al, 28h ; '('
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_4]
                xor     al, 0A9h
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_8]
                sbb     edx, esi
                add     eax, ebx
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_10]
                mov     edx, [ebp+var_C]
                xor     ecx, 6C9F25C5h
                pop     edi
                pop     esi
                add     edx, 0B538D88Bh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___80_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___155      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                mov     ebx, edi
                shl     edx, 4
                sub     ebx, esi
                add     edx, eax
                mov     [esp+58h+var_4C], ecx
                movzx   eax, dl
                xor     ebx, 0BE788B6Ch
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_44], edx
                push    offset dword_40AC90
                mov     ecx, [ecx+eax*8-568h]
                mov     dword ptr [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_48], ebx
                mov     eax, [ecx+eax*8-564h]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 63h
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-408h]
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-404h]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, edx
                shr     eax, 18h
                lea     edx, [ebx-0B34F8B1h]
                xor     eax, 0E1h
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_18], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_34]
                lea     ebx, [edi-6C1758E5h]
                add     ebx, esi
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bx
                xor     eax, 0B0C3h
                mov     [esp+58h+var_3C], ebx
                mov     eax, [eax+ecx]
                mov     ecx, edi
                mov     [esp+58h+var_20], eax
                xor     ecx, esi
                mov     eax, ecx
                shr     esi, 4
                xor     eax, [esp+58h+var_48]
                add     edi, edi
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_30], eax
                xor     ecx, [esp+58h+var_30]
                lea     eax, [esi+edi*8]
                xor     ecx, ebx
                mov     edx, eax
                mov     [esp+58h+var_24], ecx
                xor     edx, ebx
                xor     edx, [esp+58h+var_48]
                xor     eax, edx
                mov     [esp+58h+var_8], edx
                xor     eax, [esp+58h+var_30]
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0FBh
                xor     al, 0B5h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_38]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_2C]
                mov     dword ptr [esp+58h+var_2C], ebx
                adc     eax, dword ptr [esp+58h+var_2C+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_2C+4], eax
                xor     esi, 98BD9B94h
                mov     eax, [esp+58h+var_40]
                xor     edi, edi
                xor     eax, 6319BCD0h
                or      esi, edi
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_4C]
                mov     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                mov     [esi+eax*8-4F8h], ecx
                mov     [esi+eax*8-4F4h], edi
                mov     eax, ebx
                mov     ecx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 49h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [esi+eax*8+4], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_3C]
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 0A0h
                add     edx, dword ptr [esp+58h+var_14]
                adc     ecx, dword ptr [esp+58h+var_14+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E0h
                shr     ebx, 18h
                mov     [esi+eax*8+4], ecx
                mov     [esi+eax*8], edx
                mov     eax, dword ptr [esp+58h+var_2C]
                mov     [esi+ebx*8+90h], eax
                mov     eax, dword ptr [esp+58h+var_2C+4]
                mov     [esi+ebx*8+94h], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                xor     ecx, 0B9h
                mov     [ecx+esi-37h], eax
                mov     eax, [esp+58h+var_C]
                mov     [ecx+esi-33h], eax
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                mov     edx, [esp+58h+var_30]
                add     ecx, 1BC5C7Dh
                xor     edx, 0FC9B2213h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___155      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000217d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                add     ebx, 595F94CBh
                mov     [esp+20h+var_4], ecx
                push    esi
                movzx   esi, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                push    edi
                mov     eax, [esi+ecx-7]
                mov     edi, [ebp+arg_0]
                mov     esi, [ebp+arg_4]
                mov     ecx, esi
                shr     ecx, 4
                mov     edx, [eax+edx+21h]
                mov     eax, edi
                shl     eax, 4
                add     ecx, eax
                mov     [esp+28h+var_18], edi
                mov     eax, ecx
                mov     [esp+28h+var_8], edx
                xor     eax, 44B1A36h
                mov     [esp+28h+var_14], edx
                cmp     eax, edx
                mov     edx, [ebp+arg_4]
                setnbe  [esp+28h+var_19]
                sub     [esp+28h+var_18], edx
                xor     [esp+28h+var_18], ecx
                sub     esi, edi
                xor     [esp+28h+var_18], ebx
                xor     [esp+28h+var_18], 9394137Eh
                sub     [esp+28h+var_14], eax
                mov     [esp+28h+var_10], esi
                xor     esi, ebx
                mov     ebx, [esp+28h+var_10]
                xor     ebx, esi
                shr     edi, 4
                xor     ebx, ecx
                mov     ecx, edx
                shl     ecx, 4
                add     ecx, edi
                mov     edi, [esp+28h+var_18]
                xor     ecx, ebx
                xor     ecx, edi
                mov     [esp+28h+var_10], ecx
                cmp     eax, [esp+28h+var_8]
                jbe     short loc_471AC3
                xor     edx, edx
                lea     eax, [edi+12F92E99h]
                xor     esi, 0AFE72475h
                or      edx, eax
                jmp     short loc_471AE0
; ---------------------------------------------------------------------------

loc_471AC3:                             ; CODE XREF: VBNCB_unnamed_8000217d+9F¡üj
                mov     edx, [ebp+arg_4]
                xor     ebx, 3C92FDC8h
                add     edx, 22115CEh
                xor     edx, edi
                xor     edx, esi
                xor     esi, esi
                sub     edx, 65B1A2B0h
                or      esi, ebx

loc_471AE0:                             ; CODE XREF: VBNCB_unnamed_8000217d+B1¡üj
                mov     edi, [esp+28h+var_4]
                mov     al, [esp+28h+var_19]
                movzx   ecx, cl
                xor     ecx, 0B7h
                cmp     [esp+28h+var_14], 0
                setz    bl
                mov     [edi+ecx*8], al
                mov     eax, [esp+28h+var_10]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, esi
                mov     [edi+ecx*8-5B0h], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000217d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_h__stk     proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                sub     eax, esi
                mov     [ebp+var_14], ebx
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 20h
                push    edi
                mov     edi, [ebp+arg_4]
                shl     edi, 4
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     [ebp+var_C], eax
                mov     eax, esi
                shr     eax, 4
                add     edi, eax
                mov     [ebp+var_8], ecx
                mov     edx, edi
                mov     ecx, ebx
                push    offset dword_40C620
                xor     edx, 0BF68FC13h
                call    VBN_TransformContext
                mov     ecx, esi
                mov     ebx, edi
                xor     ecx, [ebp+arg_4]
                xor     ebx, [ebp+var_4]
                xor     ecx, ebx
                xor     ecx, edi
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                sub     esi, 4
                add     al, 66h ; 'f'
                xor     ecx, ecx
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_14]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, [ebp+var_C]
                xor     edx, edx
                mov     [eax+1B8h], esi
                xor     ebx, 0E0EE98CEh
                mov     [eax+1BCh], ecx
                mov     eax, [ebp+arg_0]
                add     eax, 0D0675CBBh
                xor     eax, edi
                xor     eax, [ebp+var_4]
                pop     edi
                xor     eax, 1534A25Ah
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__stk     endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___202      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                shl     edx, 4
                add     edx, eax
                and     [esp+44h+var_4], 0
                push    edi
                mov     edi, ecx
                movzx   eax, dl
                xor     eax, 7
                mov     [esp+48h+var_30], edi
                mov     [esp+48h+var_34], edx
                push    offset sub_40BCD0
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+4Ch+var_10], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 4
                mov     [esp+4Ch+var_14], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, esi
                sub     edi, [ebp+arg_4]
                mov     ebx, edi
                mov     dword ptr [esp+4Ch+var_2C], ecx
                mov     ecx, [esp+4Ch+var_30]
                xor     ebx, 0E9E1A7B6h
                mov     dword ptr [esp+4Ch+var_2C+4], eax
                mov     [esp+4Ch+var_18], ebx
                lea     edx, [ebx+27F7F43Eh]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                mov     ecx, edx
                shr     ecx, 4
                add     edx, 77FD8AEFh
                add     ecx, eax
                add     edx, esi
                xor     ecx, [esp+48h+var_34]
                xor     edx, ebx
                xor     edx, [esp+48h+var_34]
                mov     eax, esi
                xor     eax, [ebp+arg_4]
                xor     edi, edx
                xor     eax, ecx
                mov     [esp+48h+var_1C], ecx
                xor     edi, ecx
                mov     [esp+48h+var_C], edx
                mov     ecx, [ebp+arg_4]
                xor     eax, ebx
                sub     ecx, esi
                mov     [esp+48h+var_8], eax
                xor     ecx, eax
                xor     edi, 0F56C53D6h
                xor     ecx, edx
                mov     [esp+48h+var_24], edi
                mov     [esp+48h+var_38], ecx
                mov     ecx, edi
                xor     ecx, eax
                xor     ecx, [esp+48h+var_34]
                xor     ecx, 0C4E720D7h
                mov     eax, ecx
                mov     [esp+48h+var_20], ecx
                shr     eax, 8
                xor     cl, 7Fh
                sub     al, 1Ch
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+48h+var_2C]
                mov     eax, [esp+48h+var_38]
                adc     edx, dword ptr [esp+48h+var_2C+4]
                xor     ecx, ecx
                mov     edi, [esp+48h+var_24]
                xor     eax, 4B02434Dh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+48h+var_20]
                mov     eax, ecx
                shr     eax, 10h
                lea     esi, [edi+9C57627h]
                movzx   eax, al
                mov     [ebx+4], esi
                mov     esi, [esp+48h+var_30]
                shr     ecx, 18h
                xor     ecx, 34h
                mov     [eax+esi+61h], ebx
                mov     ebx, [esp+48h+var_1C]
                mov     [eax+esi+65h], edx
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0F4h
                movzx   eax, al
                cdq
                mov     [esi+ecx*8], eax
                mov     eax, [esp+48h+var_38]
                xor     eax, edi
                mov     [esi+ecx*8+4], edx
                xor     eax, [esp+48h+var_18]
                xor     edx, edx
                xor     eax, [esp+48h+var_34]
                mov     ecx, [esp+48h+var_14]
                mov     [esp+48h+var_38], eax
                movzx   eax, al
                xor     eax, 5
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+48h+var_10]
                mov     [esi+eax*8+4], ecx
                xor     eax, eax
                movzx   ecx, bl
                inc     eax
                add     ecx, 2
                call    __allshl
                mov     ecx, [esp+48h+var_38]
                mov     edx, [esp+48h+var_C]
                shr     ecx, 8
                add     edx, 9D34DFC4h
                movzx   ecx, cl
                xor     ecx, 7Fh
                pop     edi
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+44h+var_8]
                add     ecx, 890CA5C8h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___202      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___71_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                push    ebx
                and     [ebp+var_10], 0
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shr     ebx, 4
                shl     eax, 4
                add     ebx, eax
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_8], ebx
                mov     ebx, esi
                shr     eax, 4
                push    edi
                mov     edi, ecx
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_4], edi
                lea     ecx, [esi+3B7E45A0h]
                movzx   eax, cl
                xor     ebx, ecx
                mov     [ebp+var_C], ebx
                lea     ebx, [esi-36A664Dh]
                push    offset dword_40C590
                mov     edx, [eax+edi-10h]
                mov     edi, [eax+edi-0Ch]
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_10], edx
                xor     eax, esi
                mov     edx, [ebp+var_8]
                xor     ebx, edx
                xor     eax, [ebp+var_C]
                xor     ebx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, eax
                xor     edx, 0E8CBBFD4h
                call    VBN_TransformContext
                mov     eax, ebx
                xor     bl, 62h
                shr     eax, 8
                xor     al, 3Fh
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_10]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                mov     edx, [ebp+var_8]
                xor     ecx, 9157A217h
                pop     edi
                pop     esi
                add     edx, 7BF4338h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___71_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__12      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                and     [esp+14h+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                add     ebx, 52B19872h
                add     ebx, edi
                movzx   eax, bl
                xor     eax, 0EBh
                lea     esi, [edi-5388C845h]
                push    offset dword_40AB50
                mov     edx, [ecx+eax*8]
                mov     [esp+24h+var_10], edx
                lea     edx, [esi-30DB4308h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                add     edi, 262334DCh
                mov     edx, [ebp+arg_0]
                xor     edi, ebx
                xor     eax, edx
                add     edx, 4019281Fh
                mov     [esp+20h+var_8], eax
                xor     edx, edi
                xor     eax, esi
                xor     edx, esi
                xor     eax, ebx
                mov     ebx, [esp+20h+var_10]
                mov     [esp+20h+var_C], eax
                mov     esi, [esp+20h+var_C]
                movzx   eax, dl
                xor     eax, 0A7h
                mov     ecx, [eax+ebx]
                mov     eax, edx
                xor     ecx, esi
                shr     eax, 8
                xor     ecx, 5076273h
                movzx   eax, al
                mov     [eax+ebx-51h], ecx
                xor     eax, eax
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                mov     ecx, [esp+20h+var_8]
                xor     ebx, esi
                xor     ebx, edi
                xor     ecx, edx
                xor     ebx, 34DD5EC0h
                xor     ecx, esi
                pop     edi
                sub     ecx, 714B3462h
                pop     esi
                lea     edx, [ebx+195D3364h]
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__12      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___18_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                xor     ebx, edi
                mov     eax, ebx
                mov     [ebp+var_4], ecx
                shr     eax, 8
                xor     ecx, ecx
                movzx   esi, al
                mov     eax, ebx
                shr     eax, 10h
                sub     esi, 76h ; 'v'
                xor     al, 97h
                movzx   eax, al
                cdq
                sub     esi, eax
                movzx   eax, bl
                push    offset dword_40C560
                sbb     ecx, edx
                mov     edx, [ebp+var_4]
                add     esi, [eax+edx+58h]
                adc     ecx, [eax+edx+5Ch]
                mov     eax, [ebp+arg_4]
                mov     [edx+1B8h], esi
                mov     [edx+1BCh], ecx
                mov     ecx, [ebp+var_4]
                lea     edx, [eax+5E7AF199h]
                lea     esi, [eax+4620485Ah]
                xor     edx, esi
                xor     edx, ebx
                xor     edx, 8352BB95h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                add     edi, 7D0662D7h
                add     eax, edi
                xor     esi, 0D8C9E7A3h
                xor     eax, ebx
                xor     edx, edx
                pop     edi
                sub     eax, 3BE129F6h
                or      edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___18_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800021b5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     ebx, [edx-4DF0D4C6h]
                mov     eax, edi
                mov     [ebp+var_4], ecx
                shr     eax, 4
                mov     esi, edx
                shl     esi, 4
                add     esi, eax
                lea     ecx, [edi+1E57F809h]
                lea     eax, [edx-7A255CC8h]
                add     ecx, edx
                xor     eax, esi
                sub     edi, edx
                xor     eax, ebx
                xor     edx, edx
                xor     eax, 0C00DB55h
                xor     ecx, ebx
                or      edx, eax
                mov     [ebp+var_8], ecx
                xor     edi, ecx
                mov     eax, ebx
                mov     ecx, [ebp+var_4]
                xor     edi, esi
                shr     eax, 8
                xor     edi, 0B2479D92h
                movzx   eax, al
                cmp     byte ptr [ecx+eax*8-348h], 0
                mov     ecx, [ebp+var_8]
                jnz     short loc_47207B
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8-2B0h], 0
                jnz     short loc_47207B
                xor     edi, edi
                xor     ecx, 0F4C08643h
                xor     esi, 2545595Ch
                or      edi, ecx
                jmp     short loc_47207D
; ---------------------------------------------------------------------------

loc_47207B:                             ; CODE XREF: VBNCB_unnamed_800021b5+67¡üj
                                        ; VBNCB_unnamed_800021b5+77¡üj
                mov     esi, edx

loc_47207D:                             ; CODE XREF: VBNCB_unnamed_800021b5+89¡üj
                mov     eax, edi
                mov     edx, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021b5 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___82       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                add     eax, 1428CB43h
                and     [esp+4Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     eax, ebx
                mov     [esp+50h+var_48], eax
                push    esi
                mov     esi, ecx
                lea     edx, [ebx-69CD817Ch]
                mov     [esp+54h+var_44], esi
                mov     eax, edx
                mov     [esp+54h+var_34], edx
                shr     eax, 8
                movzx   eax, al
                push    edi
                push    offset dword_40A710
                mov     ecx, [eax+esi-5Fh]
                mov     eax, [eax+esi-5Bh]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 17h
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [eax+esi-2Bh]
                mov     eax, [eax+esi-27h]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     edi, [eax+esi-32h]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 96h
                mov     esi, [eax+esi]
                movzx   eax, dl
                xor     eax, 91h
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, [ebp+arg_4]
                add     eax, 7D9758ABh
                add     eax, ebx
                xor     eax, edx
                mov     edx, eax
                mov     [esp+5Ch+var_38], eax
                xor     edx, 0DAA64171h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, ebx
                mov     ecx, [esp+58h+var_34]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     eax, [esp+58h+var_48]
                xor     edx, eax
                shr     eax, 10h
                movzx   eax, al
                xor     edx, ecx
                xor     eax, 33h
                mov     [esp+58h+var_34], edx
                mov     edx, [ebp+arg_4]
                add     eax, esi
                mov     eax, [edi+eax*4]
                lea     edi, [ebx-33CD24E6h]
                add     edi, edx
                mov     [esp+58h+var_20], eax
                xor     edi, [esp+58h+var_38]
                xor     edi, [esp+58h+var_48]
                mov     [esp+58h+var_C], edi
                mov     eax, [ebp+arg_4]
                xor     edx, ebx
                xor     edx, [esp+58h+var_34]
                xor     esi, esi
                xor     edx, [esp+58h+var_38]
                shl     eax, 4
                shr     ebx, 4
                add     eax, ebx
                mov     [esp+58h+var_8], edx
                xor     eax, edi
                xor     eax, [esp+58h+var_34]
                mov     [esp+58h+var_40], eax
                mov     eax, edx
                mov     ebx, [esp+58h+var_40]
                xor     eax, edi
                xor     eax, ecx
                xor     ebx, edx
                xor     ebx, [esp+58h+var_48]
                xor     eax, 0FA9F5543h
                mov     [esp+58h+var_3C], eax
                xor     ebx, ecx
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0D1h
                add     al, 2Ah ; '*'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, [esp+58h+var_40]
                adc     esi, dword ptr [esp+58h+var_30+4]
                xor     eax, 84155D5Ah
                xor     ecx, ecx
                xor     edx, 6098695Ch
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_44]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 0BFh
                mov     [edx+eax*8-608h], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edx+eax*8-604h], ecx
                and     dword ptr [edx+ebx*8+4], 0
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_48]
                mov     eax, [esp+58h+var_20]
                mov     [edx+ebx*8], eax
                mov     ebx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_1C]
                movzx   eax, cl
                mov     [eax+ebx-0CBh], edx
                mov     edx, [esp+58h+var_18]
                mov     [eax+ebx-0C7h], edx
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B7h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                mov     eax, [esp+58h+var_34]
                xor     al, 0EEh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_14]
                adc     edx, dword ptr [esp+58h+var_14+4]
                shr     ecx, 10h
                movzx   ecx, cl
                mov     [ebx+ecx*8-28Ch], edx
                mov     edx, [esp+58h+var_C]
                mov     [ebx+ecx*8-290h], eax
                xor     edx, 0B1B18A64h
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                add     ecx, 0A477062Ch
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___82       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___51       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                mov     edx, edi
                mov     [esp+48h+var_38], esi
                sub     edx, ebx
                xor     edx, 0D4B21EE9h
                mov     eax, edx
                mov     [esp+48h+var_3C], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 19h
                push    offset dword_40C120
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+4Ch+var_C], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 38h
                mov     [esp+4Ch+var_10], ecx
                movzx   edx, dl
                xor     edx, 0C6h
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+4Ch+var_2C+4], eax
                lea     eax, [edi-4A92D9C6h]
                add     eax, ebx
                mov     dword ptr [esp+4Ch+var_2C], ecx
                mov     [esp+4Ch+var_30], eax
                movzx   eax, al
                mov     ecx, [eax+esi-17h]
                mov     eax, [eax+esi-13h]
                lea     esi, [edi-4A92D9C6h]
                mov     [esp+4Ch+var_1C], eax
                add     esi, ebx
                mov     [esp+4Ch+var_20], ecx
                mov     eax, esi
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+4Ch+var_38]
                xor     ecx, 42h
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx]
                mov     [esp+4Ch+var_24], eax
                mov     eax, [esp+4Ch+var_3C]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, esi
                mov     esi, [esp+4Ch+var_38]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                add     edx, 2Bh ; '+'
                add     edx, [esi+ecx*8+128h]
                mov     [esp+4Ch+var_18], edx
                adc     eax, [esi+ecx*8+12Ch]
                mov     ecx, ebx
                mov     [esp+4Ch+var_14], eax
                mov     eax, edi
                shl     ecx, 4
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+4Ch+var_38]
                mov     esi, eax
                mov     [esp+4Ch+var_34], eax
                xor     esi, [esp+4Ch+var_3C]
                mov     edx, esi
                xor     edx, 5AEBDD0Ch
                call    VBN_TransformContext
                mov     edx, [esp+48h+var_34]
                lea     eax, [edi+54BB2B21h]
                xor     eax, [esp+48h+var_30]
                mov     ecx, edx
                xor     eax, [esp+48h+var_3C]
                xor     ecx, esi
                xor     ecx, [esp+48h+var_30]
                mov     [esp+48h+var_8], eax
                mov     [esp+48h+var_4], ecx
                xor     edx, ecx
                lea     edi, [ebx+3019B6D3h]
                xor     edi, eax
                xor     edx, eax
                xor     edi, esi
                mov     [esp+48h+var_34], edx
                mov     ebx, edi
                xor     esi, esi
                xor     ebx, ecx
                xor     ebx, [esp+48h+var_3C]
                xor     ebx, 64372260h
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 7
                sub     al, 3Bh ; ';'
                movzx   eax, al
                cdq
                sub     ecx, eax
                mov     eax, [esp+48h+var_34]
                sbb     esi, edx
                add     dword ptr [esp+48h+var_2C], ecx
                lea     edx, [edi+19A5A44h]
                adc     esi, dword ptr [esp+48h+var_2C+4]
                add     eax, 394A857Eh
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, dword ptr [esp+48h+var_2C]
                mov     [eax], ecx
                mov     [eax+4], edx
                mov     eax, ebx
                mov     edx, [esp+48h+var_38]
                mov     ecx, [esp+48h+var_24]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 86h
                shr     ebx, 18h
                xor     ebx, 0D3h
                and     dword ptr [edx+eax*8+4], 0
                mov     [edx+eax*8], ecx
                mov     eax, [esp+48h+var_20]
                mov     [ebx+edx], eax
                mov     eax, [esp+48h+var_1C]
                mov     [ebx+edx+4], eax
                mov     edx, [esp+48h+var_34]
                mov     ebx, [esp+48h+var_38]
                xor     edx, edi
                xor     edx, [esp+48h+var_30]
                xor     edx, [esp+48h+var_3C]
                mov     ecx, [esp+48h+var_18]
                movzx   eax, dl
                pop     edi
                mov     [ebx+eax*8-450h], ecx
                mov     ecx, [esp+44h+var_14]
                mov     [ebx+eax*8-44Ch], ecx
                mov     eax, edx
                mov     ecx, [esp+44h+var_10]
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                mov     [ebx+eax*8-668h], ecx
                mov     ecx, [esp+44h+var_C]
                mov     [ebx+eax*8-664h], ecx
                mov     ecx, dword ptr [esp+44h+var_2C]
                movzx   eax, dl
                mov     edx, [esp+44h+var_8]
                add     edx, 7183481Ah
                mov     [ebx+eax*8+80h], ecx
                mov     ecx, [esp+44h+var_4]
                mov     [ebx+eax*8+84h], esi
                xor     ecx, 0E0639D95h
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___51       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___9        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                push    edi
                mov     edi, ecx
                lea     edx, [ebx-2027182Fh]
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+58h+var_48], edi
                movzx   eax, cl
                mov     [esp+58h+var_44], ecx
                mov     esi, [esp+58h+var_48]
                mov     [esp+58h+var_28], edx
                mov     ecx, [eax+edi-18h]
                mov     eax, [eax+edi-14h]
                mov     edi, [esp+58h+var_44]
                mov     dword ptr [esp+58h+var_34+4], eax
                mov     eax, edi
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0DEh
                mov     dword ptr [esp+58h+var_34], ecx
                mov     ecx, [esp+58h+var_48]
                push    offset dword_40BAC0
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_38], eax
                mov     eax, edx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_38]
                xor     ecx, 0A4h
                mov     eax, [eax+esi-47h]
                mov     eax, [ecx+eax]
                mov     [esp+5Ch+var_14], eax
                mov     eax, edi
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                sub     edx, 3
                add     edx, [esi+ecx*8-5C8h]
                mov     dword ptr [esp+5Ch+var_1C], edx
                mov     edx, esi
                mov     esi, [ebp+arg_4]
                adc     eax, [edx+ecx*8-5C4h]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, edi
                shr     eax, 18h
                xor     eax, 48h
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, esi
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                xor     ecx, edi
                mov     edx, ecx
                mov     [esp+5Ch+var_40], ecx
                mov     ecx, [esp+5Ch+var_48]
                xor     edx, 0F45D1767h
                call    VBN_TransformContext
                lea     edi, [ebx-37FAE978h]
                mov     ecx, ebx
                add     edi, esi
                lea     eax, [ebx-2027182Fh]
                xor     edi, eax
                xor     edi, [esp+58h+var_44]
                mov     [esp+58h+var_8], edi
                sub     ecx, esi
                lea     esi, [ebx-2027182Fh]
                mov     edx, ecx
                add     ebx, 0FA6193ABh
                xor     edx, [esp+58h+var_40]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_40]
                xor     edx, esi
                xor     edx, 0FDDB95C7h
                mov     eax, ebx
                xor     eax, edx
                mov     [esp+58h+var_4], edx
                xor     eax, [esp+58h+var_44]
                xor     ecx, edx
                xor     eax, 81382A14h
                xor     ecx, edi
                mov     [esp+58h+var_3C], eax
                xor     ecx, 0D061A86Bh
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                xor     esi, esi
                add     al, 39h ; '9'
                mov     [esp+58h+var_2C], ecx
                movzx   eax, al
                sub     edi, 93h
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                lea     edx, [ecx+0C640A77h]
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 0F61F8904h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_2C]
                mov     ecx, edx
                xor     ecx, ebx
                mov     ebx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_44]
                movzx   eax, cl
                mov     [ebx+eax*8-184h], esi
                mov     [ebx+eax*8-188h], edi
                mov     eax, ecx
                mov     esi, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 99h
                mov     [ebx+eax*8], esi
                mov     esi, [esp+58h+var_20]
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                mov     esi, dword ptr [esp+58h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0ADh
                shr     ecx, 18h
                mov     [ebx+eax*8], esi
                mov     esi, dword ptr [esp+58h+var_1C+4]
                mov     [ebx+eax*8+4], esi
                and     dword ptr [ebx+ecx*8-5D4h], 0
                mov     eax, [esp+58h+var_14]
                mov     [ebx+ecx*8-5D8h], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+58h+var_8]
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, [esp+58h+var_38]
                xor     edx, 1941A729h
                mov     [ecx+ebx-7Ah], eax
                mov     eax, [esp+58h+var_C]
                mov     [ecx+ebx-76h], eax
                mov     ecx, [esp+58h+var_4]
                xor     eax, eax
                pop     edi
                add     ecx, 155E314Fh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___9        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f63 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                and     [esp+24h+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     eax, esi
                mov     [esp+2Ch+var_1C], eax
                movzx   edx, al
                shr     eax, 8
                push    edi
                mov     edi, ecx
                movzx   ecx, ax
                mov     [esp+30h+var_C], edi
                mov     eax, [edx+edi-74h]
                mov     edi, esi
                mov     edx, [eax+ecx-715Ah]
                lea     eax, [esi+386088B0h]
                add     eax, ebx
                mov     [esp+30h+var_10], edx
                mov     ecx, eax
                xor     ecx, 0CDC46B95h
                cmp     ecx, edx
                setnbe  [esp+30h+var_1D]
                sub     edx, ecx
                mov     [esp+30h+var_8], edx
                sub     edi, ebx
                mov     edx, edi
                shr     ebx, 4
                xor     edx, [esp+30h+var_1C]
                xor     edx, 0E266098Dh
                mov     [esp+30h+var_18], edx
                lea     edx, [esi-7C5ECD44h]
                xor     edx, eax
                shl     esi, 4
                xor     edx, [esp+30h+var_1C]
                add     ebx, esi
                mov     [esp+30h+var_14], edx
                mov     edx, [esp+30h+var_1C]
                xor     edx, [esp+30h+var_18]
                xor     edx, eax
                mov     eax, [esp+30h+var_14]
                xor     ebx, edx
                mov     [esp+30h+var_1C], edx
                xor     ebx, eax
                mov     [esp+30h+var_14], ebx
                cmp     ecx, [esp+30h+var_10]
                jbe     short loc_47284D
                mov     edx, [esp+30h+var_18]
                xor     edi, edi
                xor     eax, 0F11A3A71h
                add     edx, 7EAE13D5h
                or      edi, eax
                jmp     short loc_47286C
; ---------------------------------------------------------------------------

loc_47284D:                             ; CODE XREF: VBNCB_unnamed_80001f63+A6¡üj
                xor     edi, eax
                xor     edx, edx
                xor     edi, [esp+30h+var_18]
                mov     eax, [esp+30h+var_1C]
                xor     edi, 4E8F3323h
                xor     eax, 0F8B4923h
                sub     edi, 57158DBCh
                or      edx, eax

loc_47286C:                             ; CODE XREF: VBNCB_unnamed_80001f63+BB¡üj
                mov     esi, [esp+30h+var_C]
                mov     al, [esp+30h+var_1D]
                movzx   ecx, bl
                xor     ecx, 18h
                cmp     [esp+30h+var_8], 0
                setz    bl
                mov     [esi+ecx*8], al
                mov     eax, [esp+30h+var_14]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 0E6h
                pop     edi
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f63 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___29_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                and     [ebp+var_10], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                push    esi
                mov     esi, ecx
                movzx   eax, bl
                xor     eax, 4Ch
                mov     [ebp+var_C], esi
                push    edi
                push    offset dword_40C670
                mov     [ebp+var_4], ebx
                mov     ecx, [eax+esi]
                mov     edi, [eax+esi+4]
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                mov     edx, eax
                mov     [ebp+var_8], ecx
                xor     edx, 66A1587Fh
                mov     [ebp+var_10], eax
                mov     ecx, esi
                call    VBN_TransformContext
                xor     ebx, ebx
                mov     eax, ebx
                shr     eax, 8
                add     al, 8
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_C]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                mov     esi, [ebp+arg_0]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                pop     edi
                lea     edx, [esi+68380F78h]
                sub     esi, [ebp+arg_4]
                xor     edx, [ebp+var_10]
                xor     esi, ebx
                xor     esi, [ebp+var_10]
                xor     edx, [ebp+var_4]
                xor     esi, 36435E8Ah
                add     edx, 60BFD909h
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___29_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002136 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shl     eax, 4
                mov     [ebp+var_4], ecx
                mov     ecx, esi
                shr     ebx, 4
                xor     esi, edx
                add     ebx, eax
                sub     ecx, edx
                xor     eax, eax
                add     esi, 64A345Bh
                or      eax, esi
                xor     ebx, ecx
                push    edi
                mov     [ebp+var_8], eax
                lea     edi, [edx-0D98DA8h]
                mov     edx, [ebp+var_4]
                xor     edi, ebx
                movzx   eax, cl
                xor     edi, ecx
                xor     eax, 28h
                sub     edi, 7709A1FFh
                cmp     byte ptr [edx+eax*8], 0
                jnz     short loc_4729DD
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0DEh
                cmp     byte ptr [edx+eax*8], 0
                jnz     short loc_4729DD
                xor     edi, edi
                lea     eax, [ebx-3FD96062h]
                xor     ecx, 2F3388BCh
                or      edi, eax
                jmp     short loc_4729E0
; ---------------------------------------------------------------------------

loc_4729DD:                             ; CODE XREF: VBNCB_unnamed_80002136+56¡üj
                                        ; VBNCB_unnamed_80002136+69¡üj
                mov     ecx, [ebp+var_8]

loc_4729E0:                             ; CODE XREF: VBNCB_unnamed_80002136+7B¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002136 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000220d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_4], ecx
                lea     edx, [esi-64AA6045h]
                mov     ecx, ebx
                sub     esi, [ebp+arg_4]
                lea     eax, [edx-49AD3509h]
                push    edi
                xor     edi, edi
                xor     esi, ebx
                or      edi, eax
                xor     esi, 0F76B0CCh
                mov     eax, ebx
                mov     [ebp+var_8], esi
                shr     eax, 8
                xor     ecx, esi
                mov     esi, [ebp+var_4]
                xor     ecx, edx
                movzx   eax, al
                xor     ecx, 4659A7A1h
                xor     eax, 87h
                cmp     byte ptr [esi+eax*8], 0
                mov     esi, [ebp+var_8]
                jnz     short loc_472A72
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8-2F8h], 0
                jnz     short loc_472A72
                xor     ecx, ecx
                xor     esi, 694F9DBh
                xor     edx, 349590A3h
                or      ecx, esi
                jmp     short loc_472A74
; ---------------------------------------------------------------------------

loc_472A72:                             ; CODE XREF: VBNCB_unnamed_8000220d+5E¡üj
                                        ; VBNCB_unnamed_8000220d+6E¡üj
                mov     edx, edi

loc_472A74:                             ; CODE XREF: VBNCB_unnamed_8000220d+80¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000220d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000213c proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                and     [esp+1Ch+var_4], 0
                push    ebx
                shl     eax, 4
                mov     ebx, ecx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shr     edx, 4
                mov     esi, edi
                xor     esi, [ebp+arg_0]
                add     eax, edx
                xor     esi, eax
                movzx   edx, al
                mov     [esp+28h+var_14], eax
                xor     edx, 6Fh
                shr     eax, 8
                movzx   ecx, al
                mov     [esp+28h+var_C], ebx
                mov     eax, [edx+ebx]
                mov     ebx, edi
                mov     edx, [eax+ecx+61h]
                lea     ecx, [esi+674A7BEAh]
                cmp     ecx, edx
                mov     eax, edx
                setnbe  [esp+28h+var_15]
                sub     ebx, [ebp+arg_0]
                sub     eax, ecx
                mov     [esp+28h+var_8], eax
                lea     eax, [edi-3733B81Ah]
                xor     ebx, eax
                lea     eax, [edi-4A982867h]
                mov     edi, [esp+28h+var_14]
                xor     ebx, esi
                xor     eax, edi
                xor     eax, esi
                mov     [esp+28h+var_10], eax
                xor     eax, ebx
                xor     eax, edi
                xor     eax, 6F158980h
                mov     [esp+28h+var_14], eax
                cmp     ecx, edx
                jbe     short loc_472B24
                lea     eax, [ebx+5D48F978h]
                xor     edx, edx
                or      edx, eax
                lea     esi, [edi-5B7F4D5h]
                mov     eax, [esp+28h+var_14]
                jmp     short loc_472B38
; ---------------------------------------------------------------------------

loc_472B24:                             ; CODE XREF: VBNCB_unnamed_8000213c+8C¡üj
                mov     esi, [esp+28h+var_10]
                xor     edx, edx
                xor     ebx, 4144C3D8h
                add     esi, 0DE836840h
                or      edx, ebx

loc_472B38:                             ; CODE XREF: VBNCB_unnamed_8000213c+A2¡üj
                mov     edi, [esp+28h+var_C]
                mov     bl, [esp+28h+var_15]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, al
                mov     [edi+ecx*8-118h], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, esi
                mov     [edi+ecx*8-428h], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000213c endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___197      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, ecx
                mov     ecx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+54h+var_44], edx
                lea     ebx, [esi+11BE9C30h]
                mov     [esp+54h+var_48], ecx
                movzx   eax, bl
                xor     eax, 56h
                mov     [esp+54h+var_34], ebx
                push    edi
                lea     edi, [esi+7C1BDBB2h]
                xor     edi, ebx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+58h+var_20+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+58h+var_20], ecx
                push    offset dword_40BE60
                mov     [esp+5Ch+var_18], edi
                mov     ecx, [eax+edx-9Dh]
                mov     eax, [eax+edx-99h]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [eax+edx+54h]
                mov     eax, [eax+edx+58h]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     [esp+5Ch+var_38], ecx
                mov     ecx, [eax+edx-57h]
                mov     eax, [eax+edx-53h]
                mov     edx, edi
                mov     [esp+5Ch+var_14], ecx
                xor     edx, 0BAD6B28Dh
                mov     ecx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_10], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_48]
                mov     edx, [ebp+arg_4]
                movzx   eax, cx
                mov     ecx, [esp+58h+var_38]
                mov     eax, [eax+ecx-615Fh]
                mov     ecx, [ebp+arg_4]
                mov     [esp+58h+var_28], eax
                add     ecx, 53E2C9BCh
                lea     eax, [esi-12A8E19Ch]
                add     ecx, esi
                add     eax, edx
                sub     edx, esi
                xor     eax, [esp+58h+var_48]
                xor     edx, edi
                xor     edx, [esp+58h+var_48]
                xor     eax, ebx
                xor     ecx, eax
                shl     esi, 4
                xor     ecx, edi
                mov     [esp+58h+var_24], eax
                mov     edi, [ebp+arg_4]
                shr     edi, 4
                add     edi, esi
                mov     [esp+58h+var_8], edx
                xor     edi, edx
                mov     [esp+58h+var_4], ecx
                xor     edi, eax
                mov     eax, ecx
                xor     eax, edx
                mov     [esp+58h+var_3C], edi
                xor     eax, ebx
                xor     eax, 0BD3957BCh
                mov     [esp+58h+var_40], eax
                mov     ebx, edi
                xor     esi, esi
                xor     ebx, ecx
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_34]
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 2Fh ; '/'
                sub     al, 28h ; '('
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, [esp+58h+var_3C]
                adc     esi, dword ptr [esp+58h+var_30+4]
                xor     eax, 0D5AA2FFBh
                xor     ecx, ecx
                xor     edx, 2958C4Dh
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_44]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F0h
                mov     [edx+eax*8], ecx
                mov     ecx, edx
                and     dword ptr [ecx+eax*8+4], 0
                mov     eax, [esp+58h+var_24]
                xor     al, 98h
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                adc     edx, dword ptr [esp+58h+var_20+4]
                shr     ebx, 18h
                mov     [ecx+ebx*8-0B8h], eax
                mov     [ecx+ebx*8-0B4h], edx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_18]
                xor     ecx, [esp+58h+var_48]
                mov     ebx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_14]
                movzx   eax, cl
                mov     [ebx+eax*8-420h], edx
                mov     edx, [esp+58h+var_10]
                mov     [ebx+eax*8-41Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_8]
                shr     eax, 8
                xor     edx, 43E0D1C7h
                movzx   eax, al
                xor     eax, 0D7h
                shr     ecx, 10h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                movzx   eax, cl
                mov     ecx, [esp+58h+var_38]
                pop     edi
                pop     esi
                mov     [eax+ebx-2Ch], ecx
                mov     ecx, [esp+50h+var_C]
                mov     [eax+ebx-28h], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                xor     ecx, 0AAE07111h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___197      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___64_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                sub     eax, [ebp+arg_0]
                push    esi
                mov     [ebp+var_4], eax
                mov     esi, ebx
                movzx   eax, al
                push    edi
                mov     edi, ecx
                shr     esi, 4
                push    offset dword_40BA90
                mov     [ebp+var_10], edi
                mov     ecx, [eax+edi-25h]
                mov     eax, [eax+edi-21h]
                mov     [ebp+var_C], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     esi, eax
                mov     [ebp+var_8], ecx
                mov     ecx, edi
                mov     [ebp+var_14], esi
                lea     edx, [esi-68265FDFh]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     edi, [ebp+var_4]
                xor     edi, ebx
                xor     edi, eax
                lea     ebx, [eax+7B10C330h]
                xor     ebx, edi
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 0EDh
                shr     eax, 8
                xor     al, 33h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_10]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, [ebp+var_C]
                xor     edi, 0CABC0263h
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+arg_0]
                mov     [ecx+1B8h], eax
                add     edx, 88F7537Ah
                mov     eax, [ebp+arg_4]
                add     eax, edx
                xor     edx, edx
                xor     eax, [ebp+var_14]
                xor     eax, [ebp+var_4]
                xor     eax, 8143F457h
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___64_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002302 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     [esp+24h+var_4], ecx
                push    edi
                mov     edi, [ebp+arg_0]
                lea     ebx, [esi-4C8BBEC7h]
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+28h+var_4]
                mov     eax, [edx+eax+7]
                mov     edx, esi
                xor     edx, edi
                mov     [esp+28h+var_14], edx
                mov     ecx, [eax+ecx-10h]
                xor     eax, eax
                xor     eax, esi
                mov     [esp+28h+var_10], ecx
                mov     [esp+28h+var_C], eax
                lea     eax, [edx+112C9831h]
                cmp     eax, ecx
                setnbe  [esp+28h+var_19]
                sub     [esp+28h+var_10], eax
                add     edi, 8122A121h
                xor     edx, ebx
                add     edi, esi
                xor     edi, [esp+28h+var_14]
                xor     edi, ebx
                mov     ebx, [esp+28h+var_14]
                mov     [esp+28h+var_18], ebx
                xor     [esp+28h+var_18], esi
                mov     ebx, [ebp+arg_0]
                xor     [esp+28h+var_18], ebx
                xor     [esp+28h+var_18], edx
                mov     ebx, [esp+28h+var_14]
                xor     ebx, [esp+28h+var_18]
                xor     ebx, edi
                mov     [esp+28h+var_14], ebx
                cmp     eax, ecx
                jbe     short loc_472F05
                xor     esi, esi
                xor     edi, 0BBB1ACFh
                xor     edx, 956F7030h
                or      esi, edi
                jmp     short loc_472F27
; ---------------------------------------------------------------------------

loc_472F05:                             ; CODE XREF: VBNCB_unnamed_80002302+91¡üj
                mov     eax, [ebp+arg_0]
                shl     esi, 4
                shr     eax, 4
                add     esi, eax
                mov     eax, [esp+28h+var_18]
                xor     esi, edi
                xor     eax, 7CF993C4h
                xor     esi, edx
                xor     edx, edx
                sub     esi, 393629ECh
                or      edx, eax

loc_472F27:                             ; CODE XREF: VBNCB_unnamed_80002302+A3¡üj
                mov     edi, [esp+28h+var_4]
                mov     al, [esp+28h+var_19]
                cmp     [esp+28h+var_10], 0
                movzx   ecx, bl
                setz    bl
                mov     [edi+ecx*8-190h], al
                mov     eax, [esp+28h+var_14]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, esi
                xor     ecx, 49h
                mov     [edi+ecx*8], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002302 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___96       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, ebx
                mov     [esp+54h+var_40], esi
                shr     ecx, 4
                lea     edx, [ebx-3506FF23h]
                add     ecx, eax
                mov     [esp+54h+var_1C], edx
                mov     eax, ecx
                mov     [esp+54h+var_48], ecx
                shr     eax, 10h
                movzx   eax, al
                push    edi
                push    offset dword_40C32C
                mov     ecx, [esi+eax*8-518h]
                mov     eax, [esi+eax*8-514h]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_38], ecx
                shr     edx, 18h
                sub     edx, 0A0h
                mov     ecx, [esi+eax*8-2C8h]
                mov     eax, [esi+eax*8-2C4h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 18h
                xor     eax, 0BEh
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, al
                mov     [esp+5Ch+var_14], ecx
                xor     ecx, ecx
                add     edx, [eax+esi]
                mov     dword ptr [esp+5Ch+var_2C], edx
                mov     edx, 0ABA43203h
                adc     ecx, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_2C+4], ecx
                lea     ecx, [ebx-3506FF23h]
                mov     eax, ecx
                shr     eax, 10h
                movzx   edi, al
                movzx   eax, cl
                xor     edi, 0A6h
                mov     ecx, [esp+5Ch+var_40]
                add     edi, [eax+esi+71h]
                xor     eax, eax
                shld    eax, edi, 2
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0A2h
                mov     esi, [esi+eax*8]
                call    VBN_TransformContext
                mov     eax, [esi+edi*4]
                mov     ecx, ebx
                mov     esi, [ebp+arg_0]
                mov     edx, ebx
                mov     [esp+58h+var_18], eax
                sub     ecx, esi
                lea     eax, [ebx-3506FF23h]
                xor     edx, esi
                xor     ecx, eax
                xor     edx, eax
                xor     ecx, [esp+58h+var_48]
                lea     eax, [esi+1E3572A7h]
                add     eax, ebx
                mov     [esp+58h+var_C], ecx
                xor     eax, ecx
                mov     [esp+58h+var_8], edx
                mov     [esp+58h+var_3C], eax
                sub     esi, ebx
                mov     ebx, esi
                mov     [esp+58h+var_44], esi
                xor     ebx, edx
                xor     ebx, ecx
                mov     ecx, eax
                xor     ecx, edx
                xor     ebx, 0B6DB61C5h
                xor     ecx, [esp+58h+var_48]
                xor     ecx, 72FF568Dh
                mov     [esp+58h+var_44], ebx
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     cl, 3
                xor     al, 56h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_44]
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                mov     edi, [esp+58h+var_40]
                adc     edx, dword ptr [esp+58h+var_38+4]
                xor     eax, 0FA2C8C86h
                xor     ecx, ecx
                add     esi, 0CA5ECA40h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_30]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 85h
                mov     [ebx+4], esi
                mov     esi, dword ptr [esp+58h+var_2C]
                shr     ecx, 18h
                xor     ecx, 0D6h
                mov     [edi+eax*8], esi
                mov     esi, dword ptr [esp+58h+var_2C+4]
                mov     [edi+eax*8+4], esi
                mov     esi, edi
                mov     eax, [esp+58h+var_24]
                pop     edi
                mov     [esi+ecx*8], eax
                mov     eax, [esp+54h+var_20]
                mov     [esi+ecx*8+4], eax
                mov     eax, [esp+54h+var_44]
                xor     eax, [esp+54h+var_3C]
                xor     eax, [esp+54h+var_1C]
                xor     eax, [esp+54h+var_48]
                mov     ecx, [esp+54h+var_18]
                mov     [esp+54h+var_44], eax
                movzx   eax, al
                mov     [esi+eax*8-404h], edx
                mov     edx, [esp+54h+var_44]
                mov     [esi+eax*8-408h], ebx
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 33h
                shr     edx, 10h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_14]
                movzx   eax, dl
                mov     edx, [esp+54h+var_C]
                add     edx, 0D442833Bh
                mov     [eax+esi-82h], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [eax+esi-7Eh], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 0FCD52D34h
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___96       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___9_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                shl     edx, 4
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                add     edx, eax
                mov     [ebp+var_4], esi
                push    edi
                mov     edi, ebx
                sub     ebx, ecx
                xor     edi, ecx
                mov     eax, ebx
                xor     eax, edx
                movzx   ecx, dl
                mov     [ebp+var_8], eax
                xor     ebx, edi
                xor     ebx, edx
                xor     ecx, 7Ah
                mov     eax, ebx
                shr     eax, 8
                add     al, 2Eh ; '.'
                mov     esi, [ecx+esi]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40A670
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                sub     eax, 0D2h
                mov     edx, [ebp+arg_4]
                add     esi, eax
                mov     eax, [ebp+arg_0]
                adc     ecx, 0
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                mov     [ebx+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [ebx+1BCh], ecx
                sub     edx, 5B7131FCh
                mov     ecx, ebx
                call    VBN_TransformContext
                xor     esi, 4C9813DCh
                lea     edx, [edi-7FD01BC5h]
                xor     eax, eax
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___9_stk    endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___114_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                sub     eax, [ebp+arg_0]
                mov     [ebp+var_8], eax
                movzx   eax, al
                push    edi
                mov     edi, ecx
                push    offset dword_40C130
                mov     [ebp+var_14], edi
                mov     ecx, [eax+edi+15h]
                mov     ebx, [eax+edi+19h]
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_C], ecx
                mov     ecx, esi
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     [ebp+var_4], ecx
                lea     edx, [ecx+11049740h]
                mov     ecx, edi
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                lea     edi, [esi-7F97BF72h]
                xor     edi, [ebp+var_8]
                xor     ecx, esi
                xor     ecx, edi
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 0Fh
                sub     esi, 0ABh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_14]
                sbb     ecx, edx
                add     esi, [ebp+var_C]
                adc     ecx, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_0]
                lea     ecx, [edi+7DA43001h]
                add     eax, 67507C22h
                xor     eax, [ebp+var_4]
                xor     eax, [ebp+var_8]
                pop     edi
                pop     esi
                sub     eax, 4FD70174h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___114_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___174_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                xor     eax, eax
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                xor     eax, ebx
                push    esi
                mov     esi, ecx
                mov     [ebp+var_8], eax
                mov     ecx, [ebp+arg_0]
                xor     edx, ecx
                push    edi
                mov     [ebp+var_4], esi
                push    offset dword_40C2E0
                lea     eax, [ecx+72AE1967h]
                add     eax, ebx
                lea     edi, [ecx+58BFBAFAh]
                xor     ebx, ecx
                mov     [ebp+var_8], eax
                xor     ebx, edx
                movzx   ecx, dl
                xor     ebx, eax
                xor     ecx, 0DFh
                xor     edi, edx
                mov     eax, ebx
                shr     eax, 8
                add     al, 34h ; '4'
                mov     esi, [ecx+esi]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 0EEh
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     edx, [ebp+arg_0]
                add     edx, 0EF860A0Dh
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, ebx
                mov     [eax+1B8h], esi
                xor     edx, 0BE28FD82h
                mov     ecx, eax
                call    VBN_TransformContext
                lea     ecx, [edi-0FCFD822h]
                xor     ebx, 28E019A1h
                pop     edi
                xor     eax, eax
                mov     edx, ebx
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___174_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800021c9 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                push    edi
                mov     [ebp+var_4], ecx
                mov     eax, esi
                mov     ecx, esi
                shl     eax, 4
                sub     ecx, edx
                mov     edi, edx
                shr     edi, 4
                sub     ebx, esi
                add     edi, eax
                xor     ecx, 2D989751h
                xor     esi, edx
                xor     edi, ebx
                mov     eax, ecx
                mov     [ebp+var_8], edi
                xor     eax, 5B6CB21Ch
                xor     edx, edx
                xor     esi, edi
                or      edx, eax
                mov     edi, [ebp+var_4]
                xor     esi, ecx
                movzx   eax, bl
                xor     esi, 2F68F441h
                xor     eax, 5Ah
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_473472
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8+10h], 0
                jnz     short loc_473472
                xor     esi, esi
                lea     eax, [edi-703DB593h]
                xor     ecx, 6EFD3C61h
                or      esi, eax
                jmp     short loc_473474
; ---------------------------------------------------------------------------

loc_473472:                             ; CODE XREF: VBNCB_unnamed_800021c9+5E¡üj
                                        ; VBNCB_unnamed_800021c9+6E¡üj
                mov     ecx, edx

loc_473474:                             ; CODE XREF: VBNCB_unnamed_800021c9+80¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021c9 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f8d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     [esp+2Ch+var_14], ecx
                shl     eax, 4
                push    edi
                mov     edi, [ebp+arg_4]
                lea     edx, [ebx-252953EBh]
                mov     ecx, edi
                mov     esi, edi
                sub     ecx, ebx
                shr     esi, 4
                xor     edx, ecx
                mov     [esp+30h+var_18], ecx
                add     esi, eax
                mov     [esp+30h+var_10], edx
                movzx   eax, cl
                movzx   ecx, dx
                xor     eax, 51h
                mov     edx, [esp+30h+var_14]
                xor     ecx, 0AB16h
                mov     eax, [eax+edx]
                mov     ecx, [eax+ecx]
                mov     eax, esi
                xor     eax, 0EB720656h
                mov     edx, ecx
                sub     edx, eax
                cmp     eax, ecx
                mov     [esp+30h+var_8], edx
                mov     edx, ebx
                setnbe  [esp+30h+var_1D]
                sub     edx, edi
                xor     edx, esi
                add     edi, 6B4494CBh
                xor     edx, [esp+30h+var_18]
                xor     edx, 0E927BFEBh
                mov     [esp+30h+var_C], edx
                lea     edx, [ebx+78277518h]
                mov     [esp+30h+var_1C], edx
                add     ebx, edi
                mov     edx, [esp+30h+var_10]
                xor     [esp+30h+var_1C], edx
                xor     [esp+30h+var_1C], esi
                mov     esi, [esp+30h+var_C]
                xor     ebx, esi
                mov     edi, [esp+30h+var_1C]
                xor     ebx, edx
                mov     edx, [esp+30h+var_18]
                mov     [esp+30h+var_C], ebx
                xor     ebx, edi
                xor     ebx, edx
                xor     ebx, 0CA5366DEh
                mov     [esp+30h+var_10], ebx
                cmp     eax, ecx
                jbe     short loc_473561
                xor     edx, edx
                xor     edi, 0D5CEB010h
                xor     esi, 0B103B6A2h
                or      edx, edi
                jmp     short loc_473578
; ---------------------------------------------------------------------------

loc_473561:                             ; CODE XREF: VBNCB_unnamed_80001f8d+BD¡üj
                mov     eax, [esp+30h+var_C]
                xor     edx, edi
                xor     edx, esi
                xor     eax, 0A18E1542h
                xor     esi, esi
                add     edx, 453C4E2Eh
                or      esi, eax

loc_473578:                             ; CODE XREF: VBNCB_unnamed_80001f8d+CF¡üj
                cmp     [esp+30h+var_8], 0
                mov     eax, [esp+30h+var_10]
                mov     edi, [esp+30h+var_14]
                setz    bl
                movzx   ecx, al
                xor     ecx, 0E2h
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                mov     [edi+ecx*8+0F0h], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f8d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___117      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                shl     edx, 4
                add     edx, eax
                mov     [esp+54h+var_48], esi
                push    edi
                lea     eax, [ecx-1AEABEABh]
                mov     [esp+58h+var_3C], edx
                add     eax, ebx
                mov     [esp+58h+var_4C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 6Bh
                push    offset dword_40BE90
                mov     edi, [eax+esi]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+esi+4Ah]
                mov     eax, [eax+esi+4Eh]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [esi+eax*8-668h]
                mov     eax, [esi+eax*8-664h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0EEh
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, [eax+esi]
                mov     eax, [esp+5Ch+var_4C]
                movzx   eax, al
                xor     eax, 24h
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                movzx   eax, dl
                xor     eax, 0FDh
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_14], eax
                mov     eax, [ebp+arg_4]
                xor     eax, ebx
                xor     eax, edx
                mov     edx, eax
                mov     [esp+5Ch+var_38], eax
                xor     edx, 1A40EDE4h
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_4C]
                mov     ecx, ebx
                sub     ecx, [ebp+arg_4]
                mov     edx, [esp+58h+var_3C]
                mov     [esp+58h+var_44], ecx
                xor     ecx, eax
                shr     eax, 10h
                xor     ecx, edx
                movzx   eax, al
                xor     ecx, 0B3130C45h
                xor     eax, 73h
                mov     [esp+58h+var_24], ecx
                add     eax, esi
                lea     esi, [ebx-768AEC79h]
                xor     esi, [esp+58h+var_38]
                mov     eax, [edi+eax*4]
                mov     [esp+58h+var_28], eax
                xor     esi, [esp+58h+var_4C]
                mov     edi, [esp+58h+var_44]
                mov     eax, [ebp+arg_4]
                xor     edi, ecx
                sub     eax, ebx
                xor     edi, [esp+58h+var_38]
                xor     eax, esi
                mov     [esp+58h+var_8], esi
                xor     eax, ecx
                xor     edi, 0CC1D8AD7h
                mov     [esp+58h+var_40], eax
                mov     eax, edi
                mov     ecx, [esp+58h+var_40]
                xor     eax, esi
                xor     eax, edx
                mov     [esp+58h+var_44], edi
                xor     eax, 9F2B0085h
                xor     ecx, edi
                xor     ecx, [esp+58h+var_4C]
                mov     [esp+58h+var_3C], eax
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 9Fh
                xor     al, 0D7h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_40]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     ecx, ecx
                xor     eax, 719DD90h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-759D2FE3h]
                mov     ecx, [esp+58h+var_2C]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 6Bh
                mov     [esi+eax*8-290h], ebx
                mov     ebx, [esp+58h+var_3C]
                mov     [esi+eax*8-28Ch], edx
                xor     ebx, edi
                mov     eax, [esp+58h+var_28]
                and     dword ptr [esi+ecx*8+4], 0
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_4C]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+58h+var_24]
                xor     eax, 2ED4h
                movzx   ecx, bl
                movzx   eax, ax
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                adc     edx, dword ptr [esp+58h+var_20+4]
                xor     ecx, 59h
                mov     [esi+ecx*8], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 79h
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_18]
                shr     ebx, 10h
                mov     [eax+esi], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [eax+esi+4], ecx
                movzx   eax, bl
                mov     ecx, [esp+58h+var_10]
                mov     edx, [esp+58h+var_8]
                mov     [esi+eax*8-308h], ecx
                xor     edx, 9E0E6AEEh
                mov     ecx, [esp+58h+var_C]
                mov     [esi+eax*8-304h], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_44]
                pop     edi
                xor     ecx, 4E0361A3h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___117      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___151      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     [esp+50h+var_48], ecx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ecx, esi
                shl     ecx, 4
                add     eax, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, [esp+54h+var_48]
                mov     [esp+54h+var_44], eax
                lea     ebx, [esi+71F8C038h]
                movzx   eax, bl
                xor     eax, 56h
                mov     [esp+54h+var_2C], ebx
                push    edi
                mov     edi, [esp+58h+var_48]
                push    offset dword_40C974
                mov     edx, [ecx+eax*8]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Eh
                mov     [esp+5Ch+var_18], edx
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     ecx, [esp+5Ch+var_44]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, cx
                mov     ecx, ebx
                xor     eax, 0FBF6h
                shr     ecx, 18h
                mov     eax, [eax+edx]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                sub     edx, 22h ; '"'
                add     edx, [edi+ecx*8-300h]
                mov     dword ptr [esp+5Ch+var_28], edx
                mov     edx, edi
                mov     edi, [ebp+arg_0]
                adc     eax, [edx+ecx*8-2FCh]
                mov     dword ptr [esp+5Ch+var_28+4], eax
                mov     eax, ebx
                shr     eax, 10h
                mov     ebx, esi
                movzx   eax, al
                shr     ebx, 4
                mov     ecx, [eax+edx+0Fh]
                mov     eax, [eax+edx+13h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edi
                shl     eax, 4
                add     ebx, eax
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_48]
                lea     eax, [esi+71F8C038h]
                xor     ebx, eax
                mov     [esp+5Ch+var_40], ebx
                lea     edx, [ebx-71D7F18Ch]
                call    VBN_TransformContext
                mov     eax, edi
                lea     edx, [edi+1CFC6D4Eh]
                xor     eax, esi
                lea     ecx, [esi+71F8C038h]
                xor     eax, [esp+58h+var_44]
                add     edx, esi
                xor     eax, ecx
                xor     edx, ebx
                mov     ecx, [esp+58h+var_44]
                xor     edx, ecx
                mov     [esp+58h+var_C], eax
                mov     ebx, ecx
                mov     [esp+58h+var_8], edx
                xor     ebx, eax
                xor     ecx, edx
                xor     ecx, eax
                xor     ebx, [esp+58h+var_40]
                mov     eax, ebx
                mov     [esp+58h+var_3C], ecx
                xor     eax, edx
                movzx   edi, bl
                lea     edx, [esi+71F8C038h]
                sub     edi, 0DEh
                xor     eax, edx
                xor     esi, esi
                xor     eax, 796EF1E6h
                mov     [esp+58h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                add     al, 34h ; '4'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 952543EFh
                xor     ecx, ecx
                xor     edx, 7C60EE6Dh
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_2C]
                mov     edx, [esp+58h+var_48]
                mov     ebx, dword ptr [esp+58h+var_28]
                movzx   eax, cl
                mov     [edx+eax*8-2E0h], ebx
                mov     ebx, dword ptr [esp+58h+var_28+4]
                mov     [edx+eax*8-2DCh], ebx
                mov     eax, ecx
                shr     eax, 8
                mov     ebx, edx
                movzx   eax, al
                mov     edx, [esp+58h+var_3C]
                mov     [ebx+eax*8+0ACh], esi
                mov     esi, [esp+58h+var_20]
                mov     [ebx+eax*8+0A8h], edi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0EEh
                shr     ecx, 18h
                xor     ecx, 47h
                mov     [ebx+eax*8], esi
                mov     esi, [esp+58h+var_1C]
                mov     [ebx+eax*8+4], esi
                mov     eax, [esp+58h+var_18]
                mov     [ecx+ebx], eax
                mov     eax, [esp+58h+var_14]
                mov     [ecx+ebx+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+58h+var_C]
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                xor     edx, 70D3E928h
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 0A2h
                and     dword ptr [ebx+ecx*8+4], 0
                mov     [ebx+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                xor     ecx, 8BE92B65h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___151      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___152      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, esi
                xor     ebx, [ebp+arg_4]
                and     [esp+5Ch+var_4], 0
                push    edi
                mov     edi, ecx
                mov     [esp+60h+var_48], ebx
                lea     edx, [esi+21ED7FEEh]
                mov     [esp+60h+var_50], edi
                add     edx, [ebp+arg_4]
                mov     eax, edx
                mov     [esp+60h+var_44], edx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40A3C0
                mov     ecx, [eax+edi-3]
                mov     eax, [eax+edi+1]
                mov     [esp+64h+var_24], eax
                movzx   eax, bl
                mov     [esp+64h+var_18], eax
                mov     [esp+64h+var_28], ecx
                mov     eax, [ecx+eax*4-268h]
                mov     ecx, edx
                mov     [esp+64h+var_38], eax
                mov     eax, ebx
                mov     ebx, [esp+64h+var_50]
                shr     eax, 8
                movzx   edi, al
                xor     eax, eax
                shr     ecx, 18h
                sub     edi, 63h ; 'c'
                add     edi, [ebx+ecx*8-660h]
                mov     dword ptr [esp+64h+var_10], edi
                mov     edi, ebx
                mov     ebx, [esp+64h+var_48]
                adc     eax, [edi+ecx*8-65Ch]
                mov     dword ptr [esp+64h+var_10+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0FCh
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+64h+var_34], ecx
                mov     ecx, [ebp+arg_4]
                mov     [esp+64h+var_30], eax
                mov     eax, ebx
                xor     eax, edx
                mov     [esp+64h+var_1C], eax
                lea     edi, [ecx-5E7175F9h]
                xor     edi, ebx
                xor     edi, edx
                lea     edx, [ecx-78AE310Fh]
                add     edx, esi
                mov     [esp+64h+var_8], edi
                xor     edx, eax
                shl     esi, 4
                mov     ecx, ebx
                xor     edx, ebx
                mov     ebx, [esp+64h+var_44]
                xor     ecx, edi
                xor     ecx, eax
                mov     [esp+64h+var_40], edx
                mov     eax, [ebp+arg_4]
                shr     eax, 4
                add     eax, esi
                mov     [esp+64h+var_3C], ecx
                mov     esi, [esp+64h+var_50]
                xor     eax, edx
                xor     eax, edi
                xor     ecx, edx
                mov     [esp+64h+var_4C], eax
                movzx   eax, bl
                xor     eax, 0D8h
                xor     ecx, ebx
                mov     [esp+64h+var_20], ecx
                mov     edx, ecx
                mov     edi, [esi+eax*8]
                mov     esi, [esi+eax*8+4]
                mov     ecx, [esp+64h+var_50]
                xor     edx, 898AF436h
                call    VBN_TransformContext
                mov     eax, [esp+60h+var_4C]
                movzx   ecx, al
                shr     eax, 8
                add     al, 7Fh
                mov     [esp+60h+var_14], ecx
                movzx   eax, al
                cdq
                lea     ebx, [ecx-24h]
                xor     ecx, ecx
                sub     ebx, eax
                sbb     ecx, edx
                mov     edx, [esp+60h+var_3C]
                add     ebx, edi
                adc     ecx, esi
                mov     esi, [esp+60h+var_40]
                xor     [esp+60h+var_4C], edx
                lea     eax, [edx-29DEE0AEh]
                mov     edx, [esp+60h+var_4C]
                xor     esi, 8F663C0Ch
                xor     edx, [esp+60h+var_48]
                xor     edi, edi
                xor     edx, [esp+60h+var_44]
                or      esi, edi
                mov     [esp+60h+var_2C], ecx
                xor     ecx, ecx
                or      ecx, eax
                movzx   eax, dl
                mov     [ebx], ecx
                xor     eax, 0C6h
                mov     ecx, [esp+60h+var_38]
                mov     [ebx+4], esi
                mov     esi, [esp+60h+var_50]
                mov     [esi+eax*8], ecx
                mov     [esi+eax*8+4], edi
                mov     eax, edx
                mov     ecx, [esp+60h+var_34]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0A8h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+60h+var_30]
                mov     [esi+eax*8+4], ecx
                mov     eax, edx
                mov     ecx, [esp+60h+var_2C]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                xor     edx, 24h
                mov     [esi+eax*8-84h], ecx
                mov     [esi+eax*8-88h], ebx
                mov     eax, [esp+60h+var_28]
                mov     [edx+esi], eax
                mov     eax, [esp+60h+var_24]
                mov     [edx+esi+4], eax
                mov     eax, [esp+60h+var_20]
                mov     edx, [esp+60h+var_1C]
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 0CAD4AD5Dh
                xor     ecx, eax
                mov     eax, dword ptr [esp+60h+var_10]
                xor     ecx, 72h
                xor     ecx, [esp+60h+var_18]
                xor     ecx, [esp+60h+var_14]
                mov     [esi+ecx*8-328h], eax
                mov     eax, dword ptr [esp+60h+var_10+4]
                mov     [esi+ecx*8-324h], eax
                xor     eax, eax
                mov     ecx, [esp+60h+var_8]
                add     ecx, 0DC06ED6h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___152      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___66_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                xor     edx, eax
                push    esi
                mov     esi, ecx
                mov     [ebp+var_8], edx
                mov     ecx, eax
                mov     [ebp+var_4], esi
                sub     ecx, ebx
                sub     ebx, eax
                xor     ebx, ecx
                mov     [ebp+var_C], ecx
                xor     ebx, edx
                movzx   ecx, dl
                xor     ebx, 31501AA4h
                xor     ecx, 60h
                push    edi
                lea     edi, [eax+6EFB2E9Dh]
                mov     eax, ebx
                shr     eax, 8
                xor     edi, edx
                mov     esi, [ecx+esi]
                xor     al, 0D7h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40A860
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 9Ch
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     edx, [ebp+var_8]
                xor     edx, edi
                xor     edx, ebx
                mov     [eax+1BCh], ecx
                sub     edx, 64B503BFh
                mov     [eax+1B8h], esi
                mov     ecx, eax
                call    VBN_TransformContext
                xor     ebx, 0C366B9CDh
                xor     edi, 5448B70Ah
                xor     eax, eax
                mov     edx, ebx
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___66_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___39_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     ebx, [eax-5A70C43Ah]
                mov     [ebp+var_4], ecx
                lea     esi, [eax+21359104h]
                add     ebx, edi
                push    offset dword_40A340
                lea     edx, [edi-705F20BFh]
                xor     ebx, edx
                lea     ecx, [edi+5790D29Bh]
                xor     ebx, ecx
                xor     esi, ecx
                mov     [ebp+var_8], esi
                mov     eax, ebx
                mov     esi, [ebp+var_4]
                shr     eax, 8
                sub     al, 16h
                movzx   ecx, cl
                movzx   eax, al
                cdq
                mov     esi, [ecx+esi-33h]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax-2Fh]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                lea     edx, [edi+36466F7h]
                sub     eax, 3Fh ; '?'
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                xor     edx, ebx
                mov     [eax+1B8h], esi
                lea     esi, [edi-705F20BFh]
                xor     edx, esi
                mov     [eax+1BCh], ecx
                add     edx, 3A1473F7h
                mov     ecx, eax
                call    VBN_TransformContext
                pop     edi
                xor     ebx, 9620C957h
                lea     edx, [esi+53B19109h]
                xor     eax, eax
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___39_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___140      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_4C], edi
                lea     ecx, [esi+2477A8C1h]
                add     ecx, ebx
                lea     edx, [esi+117FAD79h]
                mov     esi, [esp+58h+var_4C]
                mov     eax, ecx
                shr     eax, 8
                add     edx, ebx
                movzx   eax, al
                xor     eax, 25h
                mov     [esp+58h+var_48], ecx
                mov     [esp+58h+var_30], edx
                push    offset dword_40ACD0
                mov     edi, [eax+edi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, esi
                xor     eax, 41h
                mov     [esp+5Ch+var_24], edi
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, esi
                mov     esi, [ebp+arg_0]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_14], eax
                mov     eax, [edi+eax*4+168h]
                mov     edi, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_10], eax
                lea     eax, [esi+2477A8C1h]
                add     eax, ebx
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 71h
                movzx   edx, ax
                xor     eax, eax
                sub     edx, 0E8EAh
                add     edx, [edi+ecx*8]
                mov     dword ptr [esp+5Ch+var_2C], edx
                lea     edx, [esi+2477A8C1h]
                adc     eax, [edi+ecx*8+4]
                add     edx, ebx
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E1h
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ebx
                xor     eax, esi
                mov     [esp+5Ch+var_1C], ecx
                xor     eax, edx
                mov     ecx, edi
                mov     [esp+5Ch+var_44], eax
                lea     edx, [eax-6BB2FB1Ch]
                call    VBN_TransformContext
                lea     ecx, [esi+117FAD79h]
                mov     edx, ebx
                add     ecx, ebx
                shr     edx, 4
                lea     edi, [ebx+61F1A5F2h]
                lea     eax, [esi+2477A8C1h]
                xor     edi, ecx
                add     eax, ebx
                xor     edi, eax
                mov     eax, esi
                mov     [esp+58h+var_C], edi
                shl     eax, 4
                add     edx, eax
                add     ebx, 0AAB808D7h
                xor     edx, [esp+58h+var_44]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_44]
                xor     edx, ecx
                mov     eax, ebx
                mov     [esp+58h+var_8], edx
                xor     eax, edx
                lea     ecx, [esi-0ED79F02h]
                xor     eax, [esp+58h+var_48]
                xor     ecx, edx
                xor     eax, 80179BDFh
                xor     ecx, edi
                mov     [esp+58h+var_40], eax
                xor     esi, esi
                mov     eax, ebx
                mov     [esp+58h+var_34], ecx
                shr     eax, 8
                sub     eax, 39E5h
                movzx   edi, bl
                movzx   eax, ax
                sub     edi, 48h ; 'H'
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_3C]
                lea     edx, [ecx+684C11C9h]
                adc     esi, dword ptr [esp+58h+var_3C+4]
                add     eax, 0BB16B471h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_34]
                mov     ecx, edx
                xor     ecx, ebx
                mov     ebx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_48]
                movzx   eax, cl
                mov     [ebx+eax*8+0D4h], esi
                mov     [ebx+eax*8+0D0h], edi
                mov     eax, ecx
                mov     esi, dword ptr [esp+58h+var_2C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 9Dh
                mov     [ebx+eax*8], esi
                mov     esi, dword ptr [esp+58h+var_2C+4]
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [eax+ebx-9Fh], esi
                mov     esi, [esp+58h+var_20]
                mov     [eax+ebx-9Bh], esi
                mov     eax, [esp+58h+var_1C]
                mov     [ebx+ecx*8-0F8h], eax
                mov     eax, [esp+58h+var_18]
                mov     [ebx+ecx*8-0F4h], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+58h+var_C]
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                add     edx, 0CFC7191Ah
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, [esp+58h+var_14]
                and     dword ptr [ebx+ecx*8-6A4h], 0
                mov     [ebx+ecx*8-6A8h], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                add     ecx, 0B3800BDAh
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___140      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___202_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                and     [ebp+var_14], 0
                mov     edx, ecx
                mov     ecx, [ebp+arg_4]
                mov     eax, ecx
                xor     eax, [ebp+arg_0]
                push    ebx
                mov     [ebp+var_8], eax
                movzx   eax, al
                push    esi
                lea     esi, [ecx-65A6A28Dh]
                mov     [ebp+var_4], edx
                mov     ecx, [ebp+var_4]
                mov     ebx, [eax+edx-7Fh]
                push    edi
                mov     edi, [eax+edx-7Bh]
                mov     edx, esi
                push    offset dword_40BFD8
                xor     edx, 0F9F81CB4h
                mov     [ebp+var_10], esi
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ecx, edx
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                shl     edx, 4
                xor     ecx, [ebp+var_8]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     edx, eax
                mov     [ebp+var_14], ecx
                xor     edx, ecx
                xor     edx, esi
                mov     eax, edx
                mov     [ebp+var_C], edx
                mov     ecx, [ebp+var_C]
                shr     eax, 8
                add     al, 45h ; 'E'
                movzx   esi, cl
                movzx   eax, al
                xor     ecx, ecx
                cdq
                sub     esi, 13h
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_14]
                add     eax, 0E505C442h
                xor     eax, [ebp+var_10]
                xor     ecx, 0A87AA09Ch
                xor     eax, [ebp+var_8]
                pop     edi
                pop     esi
                add     eax, 59A955C5h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___202_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___41_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, ecx
                shl     eax, 4
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_10], esi
                movzx   eax, cl
                xor     eax, 0F4h
                mov     [ebp+var_4], ecx
                push    edi
                push    offset dword_40C9A0
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                mov     [ebp+var_C], eax
                mov     eax, ebx
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     edx, ecx
                mov     [ebp+var_14], ecx
                xor     edx, 0ABCFF31Ch
                mov     ecx, esi
                call    VBN_TransformContext
                sub     ebx, [ebp+arg_4]
                xor     ebx, [ebp+var_4]
                xor     ebx, 3F5778A9h
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 41h
                xor     al, 33h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, [ebp+var_C]
                xor     eax, eax
                mov     [ecx+1BCh], edx
                xor     ebx, 2AD2CF9Eh
                mov     edx, [ebp+arg_0]
                add     edx, 0B35B09E5h
                xor     edx, [ebp+var_14]
                xor     edx, [ebp+var_4]
                pop     edi
                add     edx, 681672A9h
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___41_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002194 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                and     [esp+1Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 0B760FB99h
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                add     ebx, edi
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     [esp+28h+var_C], esi
                mov     eax, [edx+esi+22h]
                mov     esi, [eax+ecx+4Ah]
                lea     ecx, [edi+1B1A99F3h]
                lea     edx, [ecx+0CAF43Dh]
                mov     eax, esi
                cmp     edx, esi
                setnbe  [esp+28h+var_15]
                sub     eax, edx
                mov     [esp+28h+var_8], eax
                mov     eax, edi
                shl     eax, 4
                mov     [esp+28h+var_10], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     [esp+28h+var_10], eax
                mov     eax, edi
                sub     eax, [ebp+arg_0]
                xor     [esp+28h+var_10], ebx
                xor     eax, ecx
                xor     eax, ebx
                mov     ebx, edi
                xor     ebx, [ebp+arg_0]
                mov     [esp+28h+var_14], ebx
                mov     ebx, [esp+28h+var_10]
                xor     [esp+28h+var_14], ebx
                xor     [esp+28h+var_14], ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 538C1C17h
                add     ecx, edi
                xor     ecx, [esp+28h+var_14]
                xor     ecx, eax
                mov     [esp+28h+var_10], ecx
                cmp     edx, esi
                jbe     short loc_4742C4
                xor     edi, edi
                lea     edx, [ebx+11C3916Ah]
                xor     eax, 4D7EE39Ch
                or      edi, eax
                jmp     short loc_4742DE
; ---------------------------------------------------------------------------

loc_4742C4:                             ; CODE XREF: VBNCB_unnamed_80002194+A1¡üj
                xor     edi, [ebp+arg_0]
                xor     edx, edx
                xor     edi, eax
                mov     eax, [esp+28h+var_14]
                xor     edi, ebx
                add     eax, 0A589CA9Fh
                add     edi, 7836151Eh
                or      edx, eax

loc_4742DE:                             ; CODE XREF: VBNCB_unnamed_80002194+B2¡üj
                mov     esi, [esp+28h+var_C]
                mov     al, [esp+28h+var_15]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, cl
                setz    bl
                mov     [esi+ecx*8-6A8h], al
                mov     eax, [esp+28h+var_10]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 0D1h
                pop     edi
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002194 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___10       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                sub     edx, edi
                mov     ebx, edx
                mov     [esp+58h+var_4C], esi
                xor     ebx, 31E8384Bh
                xor     edx, 0F06913BBh
                mov     eax, ebx
                mov     [esp+58h+var_48], edx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40A7EC
                mov     [esp+5Ch+var_38], ebx
                mov     ecx, [eax+esi+82h]
                mov     eax, [eax+esi+86h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0EEh
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_10+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_10], ecx
                mov     ecx, [eax+esi+92h]
                mov     eax, [eax+esi+96h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, dl
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [eax+esi-95h]
                mov     eax, [eax+esi-91h]
                mov     [esp+5Ch+var_20], eax
                movzx   eax, bl
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, edi
                shr     ecx, 4
                mov     esi, [eax+esi-3Dh]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     ecx, eax
                xor     ecx, ebx
                mov     [esp+5Ch+var_40], ecx
                lea     edx, [ecx-628553CCh]
                mov     ecx, [esp+5Ch+var_4C]
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_48]
                lea     edx, [edi-790159F0h]
                mov     eax, ecx
                xor     edx, ecx
                shr     eax, 8
                xor     edx, ebx
                movzx   eax, al
                xor     eax, 45h
                mov     [esp+58h+var_14], edx
                mov     eax, [eax+esi]
                mov     esi, [ebp+arg_0]
                add     esi, 0CBD962EEh
                mov     [esp+58h+var_2C], eax
                add     esi, edi
                xor     esi, [esp+58h+var_40]
                xor     esi, ecx
                mov     ecx, [ebp+arg_0]
                xor     ecx, edx
                mov     [esp+58h+var_8], esi
                xor     ecx, [esp+58h+var_40]
                xor     ecx, edi
                mov     [esp+58h+var_3C], ecx
                lea     ecx, [edi-320F518Dh]
                mov     eax, [esp+58h+var_3C]
                xor     ecx, esi
                xor     ecx, edx
                xor     eax, esi
                mov     [esp+58h+var_28], ecx
                xor     eax, ebx
                xor     esi, esi
                xor     eax, 9665EC9Eh
                mov     ebx, ecx
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_38]
                mov     [esp+58h+var_44], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 9Dh
                movzx   edi, bl
                movzx   eax, al
                add     edi, 0FFFFFF80h
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_44]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 40F0AFB7h
                xor     ecx, ecx
                xor     edx, 21784D0Dh
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_4C]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                and     dword ptr [edx+eax*8-1CCh], 0
                mov     [edx+eax*8-1D0h], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edx+ebx*8-358h], edi
                mov     edi, edx
                mov     edx, [esp+58h+var_44]
                xor     edx, [esp+58h+var_28]
                xor     edx, [esp+58h+var_40]
                xor     edx, [esp+58h+var_48]
                mov     [edi+ebx*8-354h], esi
                mov     esi, [esp+58h+var_14]
                movzx   eax, dl
                xor     esi, 0CBC81784h
                xor     eax, 0DEh
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [edi+eax*8+4], ecx
                mov     eax, edx
                mov     ecx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi+7], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [eax+edi+0Bh], ecx
                xor     ecx, ecx
                add     esi, dword ptr [esp+58h+var_10]
                adc     ecx, dword ptr [esp+58h+var_10+4]
                shr     edx, 10h
                movzx   eax, dl
                mov     edx, [esp+58h+var_8]
                xor     eax, 0D9h
                xor     edx, 62204F51h
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_3C]
                mov     [edi+eax*8], esi
                add     ecx, 0CF9D7AE9h
                pop     edi
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___10       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___190_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, ecx
                mov     [ebp+var_4], eax
                shr     [ebp+var_4], 4
                mov     ecx, edx
                xor     ecx, eax
                mov     [ebp+var_10], esi
                movzx   eax, cl
                push    edi
                mov     [ebp+var_8], ecx
                push    offset dword_40A4B0
                mov     ebx, [eax+esi-3Dh]
                mov     edi, [eax+esi-39h]
                mov     eax, edx
                shl     eax, 4
                add     edx, 0C3F9E372h
                add     [ebp+var_4], eax
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, esi
                xor     edx, 0CEB402F0h
                call    VBN_TransformContext
                mov     eax, [ebp+var_8]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_8]
                sub     esi, 95h
                shr     eax, 10h
                sub     eax, 714Eh
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_10]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+var_4]
                add     eax, 71D52029h
                xor     eax, [ebp+var_8]
                xor     ecx, 933AD3Ah
                pop     edi
                pop     esi
                xor     eax, 0C9998941h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___190_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___186      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                xor     ebx, eax
                mov     [esp+54h+var_4C], ecx
                lea     edx, [eax-53C83360h]
                and     [esp+54h+var_4], 0
                movzx   eax, bl
                xor     eax, 0E5h
                mov     [esp+54h+var_44], edx
                push    edi
                mov     [esp+58h+var_40], ebx
                push    offset dword_40C820
                mov     edi, [ecx+eax*8]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0DFh
                mov     [esp+5Ch+var_18], edi
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_10], eax
                add     eax, 0FFFFFF4Ah
                add     eax, eax
                mov     eax, [edi+eax*8]
                mov     edi, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 19h
                xor     al, 81h
                movzx   eax, al
                cdq
                add     eax, [ecx+edi]
                mov     [esp+5Ch+var_28], eax
                adc     edx, [ecx+edi+4]
                mov     ecx, ebx
                shr     ecx, 18h
                mov     ebx, esi
                xor     ecx, 1Ah
                shr     ebx, 4
                mov     [esp+5Ch+var_24], edx
                mov     eax, [ecx+edi]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [ecx+edi+4]
                mov     edi, [esp+5Ch+var_40]
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     ebx, eax
                xor     ebx, edi
                mov     edx, ebx
                mov     [esp+5Ch+var_3C], ebx
                xor     edx, 33F27031h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     edx, esi
                shl     edx, 4
                mov     ecx, esi
                sub     ecx, [ebp+arg_0]
                shr     eax, 4
                xor     ecx, ebx
                add     edx, eax
                mov     eax, [ebp+arg_0]
                xor     edx, [esp+58h+var_44]
                xor     edx, edi
                xor     ecx, [esp+58h+var_44]
                mov     [esp+58h+var_C], edx
                mov     [esp+58h+var_8], ecx
                sub     eax, esi
                xor     esi, esi
                mov     ebx, eax
                xor     eax, ecx
                xor     eax, edx
                xor     ebx, edx
                xor     ebx, [esp+58h+var_3C]
                xor     eax, 0D543F37Dh
                mov     [esp+58h+var_48], eax
                xor     ebx, 0AD4E7B2Bh
                mov     eax, ebx
                xor     eax, ecx
                xor     eax, edi
                movzx   edi, bl
                xor     eax, 9336553Dh
                sub     edi, 81h
                mov     [esp+58h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0C2h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_48]
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 7B5182B4h
                xor     ecx, ecx
                add     edx, 0B2C8065h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                mov     ebx, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_2C]
                movzx   eax, cl
                xor     eax, 79h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-288h], edx
                mov     edx, [esp+58h+var_24]
                mov     [ebx+eax*8-284h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 73h
                shr     ecx, 18h
                mov     [ebx+eax*8], edx
                mov     edx, [esp+58h+var_1C]
                mov     [ebx+eax*8+4], edx
                mov     eax, [esp+58h+var_18]
                mov     [ecx+ebx-24h], eax
                mov     eax, [esp+58h+var_14]
                mov     [ecx+ebx-20h], eax
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_C]
                movzx   ecx, al
                add     edx, 1AE4D5C2h
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                xor     eax, eax
                xor     ecx, [esp+58h+var_10]
                mov     [ebx+ecx*8-248h], edi
                mov     [ebx+ecx*8-244h], esi
                mov     ecx, [esp+58h+var_8]
                add     ecx, 5C2879DCh
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___186      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__1       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                xor     ebx, edi
                movzx   eax, bl
                xor     eax, 0C2h
                and     [esp+30h+var_4], 0
                push    offset dword_40C44C
                lea     esi, [edi-7C0AD3h]
                mov     [esp+34h+var_10], ecx
                xor     esi, ebx
                mov     edx, [eax+ecx]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EDh
                mov     [esp+34h+var_24], edx
                mov     edx, [ecx+eax*8]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+34h+var_8], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+34h+var_C], edx
                mov     eax, [eax+edx-0E3h]
                mov     edx, esi
                xor     edx, 9B2DD025h
                mov     [esp+34h+var_1C], eax
                call    VBN_TransformContext
                movzx   eax, bl
                mov     ecx, ebx
                shr     ecx, 18h
                sub     eax, 13h
                and     eax, [esp+30h+var_1C]
                sub     ecx, eax
                sub     ecx, 2
                mov     [esp+30h+var_20], ecx
                mov     ecx, [ebp+arg_4]
                lea     eax, [ecx-1B5CD626h]
                xor     eax, esi
                lea     edx, [ecx-0D5DD05Ah]
                xor     eax, ebx
                shr     ecx, 4
                mov     [esp+30h+var_18], eax
                xor     edx, ebx
                mov     eax, edi
                xor     edx, ebx
                shl     eax, 4
                add     ecx, eax
                mov     eax, [esp+30h+var_18]
                xor     ecx, edx
                xor     ecx, esi
                mov     esi, [esp+30h+var_20]
                mov     [esp+30h+var_14], ecx
                xor     ecx, eax
                xor     ecx, ebx
                xor     ecx, 80DE2C70h
                mov     [esp+30h+var_18], ecx
                cmp     [esp+30h+var_24], esi
                ja      short loc_474949
                xor     edi, edi
                add     eax, 0B13F2BC3h
                add     edx, 5603414Ch
                or      edi, eax
                jmp     short loc_474963
; ---------------------------------------------------------------------------

loc_474949:                             ; CODE XREF: vBng_h__1+D6¡üj
                sub     edi, [ebp+arg_4]
                xor     edi, eax
                mov     eax, [esp+30h+var_14]
                xor     edi, edx
                xor     eax, 38F1333Ch
                xor     edx, edx
                xor     edi, 22FAA70Bh
                or      edx, eax

loc_474963:                             ; CODE XREF: vBng_h__1+E7¡üj
                mov     ebx, [esp+30h+var_10]
                mov     esi, [esp+30h+var_24]
                movzx   eax, cl
                xor     eax, 0F9h
                and     dword ptr [eax+ebx+4], 0
                mov     [eax+ebx], esi
                mov     eax, ecx
                mov     esi, [esp+30h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 75h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+30h+var_1C]
                and     dword ptr [ecx+ebx+4Bh], 0
                mov     [ecx+ebx+47h], eax
                mov     eax, [esp+30h+var_18]
                mov     ecx, [esp+30h+var_C]
                shr     eax, 18h
                xor     eax, 0DCh
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+30h+var_8]
                mov     [ebx+eax*8+4], ecx
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__1       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___89       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shr     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, esi
                mov     [esp+58h+var_48], edi
                shl     ecx, 4
                add     ecx, eax
                mov     eax, ecx
                mov     [esp+58h+var_44], ecx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40C804
                mov     ebx, [edi+eax*8+0E8h]
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 2Bh
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                lea     eax, [esi+edx]
                mov     esi, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_34], eax
                mov     dword ptr [esp+5Ch+var_30], ecx
                lea     ecx, [eax-1D8ABBA8h]
                movzx   eax, cl
                mov     edx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_40], ecx
                mov     edi, [edi+eax*8-3E8h]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B3h
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0A1h
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     esi, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_44]
                movzx   eax, al
                mov     [esp+5Ch+var_24], ecx
                xor     ecx, ecx
                shr     esi, 18h
                sub     esi, 91h
                add     esi, [edx+eax*8-0F8h]
                mov     [esp+5Ch+var_18], esi
                mov     esi, edx
                adc     ecx, [esi+eax*8-0F4h]
                mov     eax, [ebp+arg_0]
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     esi, ecx
                mov     [esp+5Ch+var_38], ecx
                xor     esi, [esp+5Ch+var_44]
                mov     ecx, [esp+5Ch+var_48]
                mov     edx, esi
                xor     edx, 7DA1F337h
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_40]
                shr     eax, 10h
                movzx   eax, al
                add     eax, edi
                mov     edi, [ebp+arg_4]
                xor     edi, [ebp+arg_0]
                mov     eax, [ebx+eax*4+0D8h]
                mov     [esp+58h+var_1C], eax
                mov     edx, [esp+58h+var_38]
                mov     ecx, edi
                xor     ecx, [esp+58h+var_40]
                xor     edx, esi
                xor     ecx, [esp+58h+var_44]
                xor     edx, [esp+58h+var_40]
                mov     eax, [esp+58h+var_34]
                xor     edi, edx
                add     eax, 0D1D043A2h
                mov     [esp+58h+var_8], ecx
                xor     eax, ecx
                mov     [esp+58h+var_38], edx
                xor     eax, esi
                xor     edi, ecx
                mov     ecx, eax
                mov     [esp+58h+var_34], eax
                xor     ecx, edx
                mov     [esp+58h+var_3C], edi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, 3794F56Eh
                mov     eax, ecx
                mov     [esp+58h+var_28], ecx
                shr     eax, 8
                xor     cl, 0B8h
                sub     al, 0Ah
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+58h+var_34]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                xor     eax, 0FADB9416h
                xor     esi, 0D67F6B6Fh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_28]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_24]
                shr     ecx, 18h
                mov     [eax+edi-1], esi
                xor     ecx, 0AFh
                mov     esi, [esp+58h+var_20]
                mov     [eax+edi+3], esi
                mov     esi, edi
                mov     eax, [esp+58h+var_1C]
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_34]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                movzx   eax, cl
                mov     [esp+58h+var_3C], ecx
                mov     [esi+eax*8-370h], ebx
                mov     [esi+eax*8-36Ch], edx
                mov     eax, ecx
                mov     ecx, [esp+58h+var_18]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-5E8h], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [esi+eax*8-5E4h], ecx
                mov     eax, [esp+58h+var_3C]
                mov     ecx, [esp+58h+var_10]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Dh
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_C]
                mov     edx, [esp+58h+var_8]
                mov     [esi+eax*8+4], ecx
                xor     edx, 135AF7C7h
                mov     ecx, [esp+58h+var_38]
                xor     eax, eax
                pop     edi
                add     ecx, 2797431Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___89       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000224a proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                shl     eax, 4
                push    esi
                mov     esi, [ebp+arg_4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                push    edi
                shr     ecx, 4
                mov     edi, esi
                add     ecx, eax
                shl     edi, 4
                mov     eax, edx
                lea     ebx, [esi-21B523DEh]
                shr     eax, 4
                add     edx, 0BA7A57A9h
                add     edi, eax
                xor     ebx, ecx
                mov     [ebp+var_4], edi
                lea     eax, [esi-341C1E5Eh]
                xor     eax, [ebp+var_4]
                xor     edx, ebx
                mov     esi, [ebp+var_8]
                xor     edx, edi
                xor     eax, ecx
                xor     edi, edi
                xor     eax, 0AD057C0Ch
                add     edx, 3B1F385Eh
                or      edi, eax
                movzx   eax, cl
                cmp     byte ptr [esi+eax*8-30h], 0
                mov     esi, [ebp+var_4]
                jnz     short loc_474CCD
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [ebp+var_8]
                cmp     byte ptr [ecx+eax*8-4C8h], 0
                jnz     short loc_474CCD
                xor     edx, edx
                lea     edi, [esi-0E8E81A6h]
                xor     ebx, 8221380Eh
                or      edx, ebx

loc_474CCD:                             ; CODE XREF: VBNCB_unnamed_8000224a+68¡üj
                                        ; VBNCB_unnamed_8000224a+7B¡üj
                mov     eax, edx
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000224a endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___129_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                xor     eax, ecx
                mov     [ebp+var_C], esi
                mov     [ebp+var_4], eax
                movzx   eax, al
                lea     edx, [ecx+541E8754h]
                push    edi
                mov     [ebp+var_10], edx
                xor     edx, 4FEA15D3h
                mov     ecx, [eax+esi-30h]
                mov     ebx, [eax+esi-2Ch]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                push    offset dword_40ACB0
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                xor     al, 0C4h
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 72h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_4]
                adc     edx, ebx
                mov     [ecx+1BCh], edx
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     eax, ecx
                mov     ecx, [ebp+var_10]
                xor     eax, [ebp+var_4]
                add     ecx, 2AC919BFh
                pop     edi
                pop     esi
                xor     eax, 6D7FC5AFh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___129_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___184      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_0]
                xor     eax, ecx
                mov     [esp+58h+var_38], eax
                lea     ebx, [esi+4DAA3BD2h]
                movzx   eax, bl
                lea     edx, [esi+7867969Bh]
                mov     [esp+58h+var_48], ecx
                xor     edx, ebx
                mov     [esp+58h+var_44], edi
                mov     [esp+58h+var_40], edx
                xor     edx, 51ECD74Ah
                mov     ecx, [edi+eax*8-0C0h]
                mov     eax, [edi+eax*8-0BCh]
                mov     dword ptr [esp+58h+var_30+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F2h
                mov     dword ptr [esp+58h+var_30], ecx
                push    offset dword_40A8F0
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     ecx, [eax+edi+85h]
                mov     eax, [eax+edi+89h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     edi, [eax+edi-4Fh]
                mov     [esp+5Ch+var_10], edi
                mov     eax, [eax+ecx-4Bh]
                mov     [esp+5Ch+var_C], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_38]
                lea     ecx, [esi-37D3C397h]
                movzx   eax, dl
                xor     eax, 0Dh
                mov     eax, [edi+eax*8]
                mov     edi, esi
                mov     [esp+58h+var_28], eax
                mov     eax, [esp+58h+var_48]
                add     ecx, eax
                sub     [esp+58h+var_48], esi
                sub     edi, eax
                xor     ecx, edx
                xor     ecx, ebx
                mov     ebx, [esp+58h+var_40]
                xor     [esp+58h+var_48], ecx
                xor     edi, ebx
                xor     [esp+58h+var_48], ebx
                xor     edi, edx
                xor     [esp+58h+var_48], 3689FAD7h
                lea     ebx, [eax-8C40321h]
                mov     eax, [esp+58h+var_48]
                add     ebx, esi
                xor     eax, edi
                mov     [esp+58h+var_1C], ecx
                xor     ebx, edi
                mov     [esp+58h+var_8], edi
                xor     ebx, ecx
                lea     ecx, [esi+4DAA3BD2h]
                xor     eax, ecx
                xor     eax, 74C132F5h
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                xor     eax, [esp+58h+var_48]
                xor     eax, edx
                xor     eax, ecx
                mov     [esp+58h+var_34], eax
                xor     esi, esi
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 81h
                add     al, 4Ah ; 'J'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, [esp+58h+var_3C]
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 0BA51E70Fh
                xor     ecx, ecx
                xor     edx, 0A016B1DAh
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_38]
                mov     ebx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 3Eh
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], edx
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     edx, [esp+58h+var_24]
                mov     [ebx+eax*8-2C8h], edi
                mov     edi, ebx
                mov     ebx, [esp+58h+var_1C]
                mov     [edi+eax*8-2C4h], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [edi+eax*8-458h], edx
                mov     edx, [esp+58h+var_20]
                mov     [edi+eax*8-454h], edx
                mov     al, bl
                xor     al, 9
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_18]
                adc     edx, dword ptr [esp+58h+var_18+4]
                shr     ecx, 18h
                xor     ecx, 62h
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_40]
                mov     [edi+ecx*8+4], edx
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_8]
                movzx   eax, al
                add     edx, 0B2EA406h
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 7
                mov     [ecx+edi], eax
                mov     eax, [esp+58h+var_C]
                mov     [ecx+edi+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_48]
                pop     edi
                add     ecx, 55E791D5h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___184      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000242f proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_5C          = dword ptr -5Ch
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = qword ptr -14h
var_C           = qword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 5Ch
                xor     eax, eax
                mov     edx, ecx
                mov     ecx, [ebp+arg_4]
                xor     eax, ecx
                xor     eax, 0
                xor     eax, ecx
                mov     [esp+5Ch+var_4], eax
                push    ebx
                mov     ebx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                mov     [esp+64h+var_30], ebx
                xor     ebx, ecx
                mov     eax, [esp+64h+var_30]
                xor     ebx, esi
                movzx   eax, al
                push    edi
                mov     edi, ecx
                sub     edi, esi
                mov     ecx, [eax+edx+0Bh]
                mov     eax, [esp+68h+var_30]
                shr     eax, 8
                mov     [esp+68h+var_58], ecx
                movzx   ecx, al
                mov     [esp+68h+var_54], edi
                mov     eax, [edx+ecx*8-4C0h]
                mov     dword ptr [esp+68h+var_C], eax
                mov     eax, [edx+ecx*8-4BCh]
                xor     ecx, 78h
                mov     dword ptr [esp+68h+var_C+4], eax
                mov     eax, [esp+68h+var_30]
                shr     eax, 10h
                movzx   eax, al
                mov     edi, [eax+edx+0BAh]
                mov     eax, [eax+edx+0BEh]
                mov     dword ptr [esp+68h+var_1C+4], eax
                mov     eax, [esp+68h+var_30]
                shr     eax, 18h
                mov     dword ptr [esp+68h+var_1C], edi
                mov     edi, [eax+edx+85h]
                mov     eax, [eax+edx+89h]
                mov     [esp+68h+var_50], eax
                mov     eax, [ebp+arg_4]
                add     eax, 0B4C224A8h
                mov     [esp+68h+var_24], edi
                add     eax, esi
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_30]
                movzx   eax, al
                mov     edi, [eax+edx+93h]
                mov     eax, [eax+edx+97h]
                mov     edx, [ebp+arg_4]
                mov     dword ptr [esp+68h+var_14], edi
                lea     edi, [esi-4989C846h]
                add     edi, edx
                mov     dword ptr [esp+68h+var_14+4], eax
                shl     edx, 4
                mov     eax, ebx
                xor     eax, [esp+68h+var_30]
                shr     esi, 4
                xor     edi, eax
                add     edx, esi
                mov     [esp+68h+var_5C], eax
                mov     esi, [esp+68h+var_58]
                xor     edx, ebx
                mov     eax, [ecx+esi]
                xor     ecx, ecx
                mov     [esp+68h+var_38], eax
                lea     eax, [ebx+75E5AB11h]
                sub     [esp+68h+var_38], eax
                sbb     ecx, ecx
                xor     eax, eax
                inc     eax
                mov     [esp+68h+var_20], eax
                test    ecx, ecx
                jg      short loc_4750F3
                jl      short loc_4750EF
                cmp     [esp+68h+var_38], 0
                jnb     short loc_4750F3

loc_4750EF:                             ; CODE XREF: VBNCB_unnamed_8000242f+116¡üj
                mov     ecx, eax
                jmp     short loc_4750F5
; ---------------------------------------------------------------------------

loc_4750F3:                             ; CODE XREF: VBNCB_unnamed_8000242f+114¡üj
                                        ; VBNCB_unnamed_8000242f+11D¡üj
                xor     ecx, ecx

loc_4750F5:                             ; CODE XREF: VBNCB_unnamed_8000242f+121¡üj
                mov     eax, [esp+68h+var_2C]
                xor     ebx, eax
                xor     edx, eax
                movzx   eax, al
                mov     [esp+68h+var_34], edx
                mov     edx, [esp+68h+var_38]
                push    0
                mov     eax, [eax+esi+7Fh]
                mov     [esp+6Ch+var_3C], eax
                mov     eax, [esp+6Ch+var_2C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+esi+92h], edx
                mov     eax, edi
                xor     eax, [esp+6Ch+var_2C]
                xor     [esp+6Ch+var_54], eax
                mov     [esp+6Ch+var_38], eax
                mov     eax, [esp+6Ch+var_34]
                xor     eax, edi
                mov     edi, [esp+6Ch+var_34]
                mov     [esp+6Ch+var_44], eax
                xor     eax, [esp+6Ch+var_30]
                xor     eax, 0F40BBF0Ah
                mov     [esp+6Ch+var_48], eax
                mov     eax, [esp+6Ch+var_24]
                and     eax, 0FFFFFF00h
                mov     [esp+6Ch+var_4C], eax
                or      eax, ecx
                sub     [esp+6Ch+var_3C], eax
                mov     eax, edi
                mov     ecx, [esp+6Ch+var_3C]
                pop     edx
                sbb     edx, [esp+68h+var_50]
                add     eax, 75BACC8Ch
                sub     ecx, eax
                mov     [esp+68h+var_3C], ecx
                sbb     edx, 0
                test    edx, edx
                jg      short loc_47518C
                jl      short loc_475182
                test    ecx, ecx
                jnb     short loc_47518C

loc_475182:                             ; CODE XREF: VBNCB_unnamed_8000242f+1AC¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475191
; ---------------------------------------------------------------------------

loc_47518C:                             ; CODE XREF: VBNCB_unnamed_8000242f+1AA¡üj
                                        ; VBNCB_unnamed_8000242f+1B0¡üj
                and     [esp+68h+var_2C], 0

loc_475191:                             ; CODE XREF: VBNCB_unnamed_8000242f+1BA¡üj
                mov     edx, [esp+68h+var_54]
                mov     ecx, edx
                xor     [esp+68h+var_34], edx
                xor     edi, edx
                movzx   eax, dl
                shr     ecx, 8
                mov     [esp+68h+var_40], edi
                mov     edi, [esp+68h+var_3C]
                mov     [eax+esi+0Ah], edi
                mov     edi, [esp+68h+var_48]
                xor     edx, edi
                xor     [esp+68h+var_5C], edx
                xor     ebx, edi
                movzx   eax, cl
                mov     ecx, [esp+68h+var_4C]
                xor     eax, 18h
                or      ecx, [esp+68h+var_2C]
                mov     [esp+68h+var_54], edx
                xor     edx, edx
                push    0
                mov     eax, [eax+esi]
                mov     [esp+6Ch+var_30], eax
                mov     eax, edi
                sub     [esp+6Ch+var_30], ecx
                mov     ecx, [esp+6Ch+var_30]
                sbb     edx, [esp+6Ch+var_50]
                xor     eax, 1E6E0754h
                sub     ecx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_30], ecx
                cmp     edx, eax
                jg      short loc_475208
                jl      short loc_4751FE
                cmp     ecx, eax
                jnb     short loc_475208

loc_4751FE:                             ; CODE XREF: VBNCB_unnamed_8000242f+228¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47520C
; ---------------------------------------------------------------------------

loc_475208:                             ; CODE XREF: VBNCB_unnamed_8000242f+226¡üj
                                        ; VBNCB_unnamed_8000242f+22C¡üj
                mov     [esp+68h+var_2C], eax

loc_47520C:                             ; CODE XREF: VBNCB_unnamed_8000242f+236¡üj
                mov     edx, [esp+68h+var_40]
                mov     ecx, edx
                mov     [esp+68h+var_3C], eax
                xor     edi, edx
                movzx   eax, dl
                xor     ebx, edx
                mov     edx, [esp+68h+var_30]
                xor     eax, 0F8h
                push    0
                mov     [eax+esi], edx
                mov     edx, ecx
                mov     eax, [esp+6Ch+var_5C]
                xor     edx, eax
                xor     [esp+6Ch+var_44], eax
                xor     [esp+6Ch+var_38], edx
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+6Ch+var_4C]
                xor     eax, 4Fh
                or      ecx, [esp+6Ch+var_2C]
                mov     [esp+6Ch+var_40], edx
                xor     edx, edx
                mov     eax, [eax+esi]
                mov     [esp+6Ch+var_30], eax
                mov     eax, [esp+6Ch+var_50]
                or      eax, [esp+6Ch+var_3C]
                sub     [esp+6Ch+var_30], ecx
                mov     ecx, [esp+6Ch+var_30]
                sbb     edx, eax
                mov     eax, [esp+6Ch+var_5C]
                xor     eax, 3673AC35h
                sub     ecx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_30], ecx
                cmp     edx, eax
                jg      short loc_475291
                jl      short loc_475287
                cmp     ecx, eax
                jnb     short loc_475291

loc_475287:                             ; CODE XREF: VBNCB_unnamed_8000242f+2B1¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475295
; ---------------------------------------------------------------------------

loc_475291:                             ; CODE XREF: VBNCB_unnamed_8000242f+2AF¡üj
                                        ; VBNCB_unnamed_8000242f+2B5¡üj
                mov     [esp+68h+var_2C], eax

loc_475295:                             ; CODE XREF: VBNCB_unnamed_8000242f+2BF¡üj
                mov     edx, [esp+68h+var_30]
                mov     ecx, ebx
                xor     [esp+68h+var_5C], ebx
                xor     [esp+68h+var_44], ebx
                mov     [esp+68h+var_3C], eax
                shr     ecx, 8
                movzx   eax, bl
                xor     ebx, [esp+68h+var_38]
                xor     [esp+68h+var_34], ebx
                mov     [eax+esi-46h], edx
                xor     edx, edx
                mov     esi, [esp+68h+var_54]
                xor     esi, [esp+68h+var_38]
                movzx   eax, cx
                mov     ecx, [esp+68h+var_58]
                mov     eax, [eax+ecx-834h]
                mov     ecx, [esp+68h+var_4C]
                or      ecx, [esp+68h+var_2C]
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_50]
                or      eax, [esp+68h+var_3C]
                sub     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_38]
                sbb     edx, eax
                mov     eax, ecx
                xor     eax, 0D5559A26h
                sub     [esp+68h+var_30], eax
                sbb     edx, 0
                test    edx, edx
                mov     edx, [esp+68h+var_30]
                jg      short loc_475315
                jl      short loc_47530B
                test    edx, edx
                jnb     short loc_475315

loc_47530B:                             ; CODE XREF: VBNCB_unnamed_8000242f+335¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47531A
; ---------------------------------------------------------------------------

loc_475315:                             ; CODE XREF: VBNCB_unnamed_8000242f+333¡üj
                                        ; VBNCB_unnamed_8000242f+339¡üj
                and     [esp+68h+var_2C], 0

loc_47531A:                             ; CODE XREF: VBNCB_unnamed_8000242f+343¡üj
                mov     eax, [esp+68h+var_44]
                xor     ecx, eax
                xor     esi, eax
                mov     [esp+68h+var_38], ecx
                mov     ecx, [esp+68h+var_58]
                movzx   eax, al
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_2C]
                mov     [eax+ecx+5Ah], edx
                mov     eax, [esp+68h+var_34]
                mov     ecx, [esp+68h+var_44]
                mov     [esp+68h+var_3C], eax
                xor     [esp+68h+var_3C], ecx
                xor     edi, [esp+68h+var_3C]
                mov     [esp+68h+var_48], edi
                mov     edi, [esp+68h+var_40]
                xor     edi, eax
                mov     eax, ecx
                mov     ecx, [esp+68h+var_58]
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+ecx+69h]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_34]
                xor     eax, 162329F8h
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_4753A2
                jl      short loc_475398
                test    eax, eax
                jnb     short loc_4753A2

loc_475398:                             ; CODE XREF: VBNCB_unnamed_8000242f+3C2¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_4753A7
; ---------------------------------------------------------------------------

loc_4753A2:                             ; CODE XREF: VBNCB_unnamed_8000242f+3C0¡üj
                                        ; VBNCB_unnamed_8000242f+3C6¡üj
                and     [esp+68h+var_2C], 0

loc_4753A7:                             ; CODE XREF: VBNCB_unnamed_8000242f+3D0¡üj
                mov     eax, [esp+68h+var_54]
                mov     ecx, eax
                xor     [esp+68h+var_34], eax
                xor     edi, eax
                mov     edx, [esp+68h+var_58]
                mov     esi, [esp+68h+var_30]
                movzx   eax, al
                xor     eax, 8
                mov     [esp+68h+var_40], edi
                mov     edi, [esp+68h+var_48]
                xor     ebx, edi
                mov     [eax+edx], esi
                mov     eax, ecx
                mov     esi, [esp+68h+var_4C]
                xor     eax, edi
                xor     [esp+68h+var_5C], eax
                or      esi, [esp+68h+var_2C]
                shr     ecx, 8
                mov     [esp+68h+var_54], eax
                movzx   eax, cl
                mov     ecx, edx
                xor     eax, 3Fh
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                mov     eax, edi
                xor     eax, 0E2FD919Dh
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_475425
                jl      short loc_47541B
                test    eax, eax
                jnb     short loc_475425

loc_47541B:                             ; CODE XREF: VBNCB_unnamed_8000242f+445¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47542A
; ---------------------------------------------------------------------------

loc_475425:                             ; CODE XREF: VBNCB_unnamed_8000242f+443¡üj
                                        ; VBNCB_unnamed_8000242f+449¡üj
                and     [esp+68h+var_2C], 0

loc_47542A:                             ; CODE XREF: VBNCB_unnamed_8000242f+453¡üj
                mov     eax, [esp+68h+var_40]
                mov     ecx, eax
                mov     esi, [esp+68h+var_30]
                xor     edi, eax
                xor     ebx, eax
                mov     [esp+68h+var_48], edi
                movzx   eax, al
                mov     edi, ecx
                shr     ecx, 8
                mov     [eax+edx+4Fh], esi
                mov     eax, [esp+68h+var_5C]
                xor     edi, eax
                xor     [esp+68h+var_3C], eax
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_2C]
                xor     [esp+68h+var_38], edi
                movzx   eax, cl
                mov     ecx, edx
                xor     eax, 23h
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_5C]
                add     eax, 0B276D01Dh
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_4754A0
                jl      short loc_475496
                test    eax, eax
                jnb     short loc_4754A0

loc_475496:                             ; CODE XREF: VBNCB_unnamed_8000242f+4C0¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_4754A5
; ---------------------------------------------------------------------------

loc_4754A0:                             ; CODE XREF: VBNCB_unnamed_8000242f+4BE¡üj
                                        ; VBNCB_unnamed_8000242f+4C4¡üj
                and     [esp+68h+var_2C], 0

loc_4754A5:                             ; CODE XREF: VBNCB_unnamed_8000242f+4CE¡üj
                mov     esi, [esp+68h+var_30]
                mov     ecx, ebx
                xor     [esp+68h+var_5C], ebx
                xor     [esp+68h+var_3C], ebx
                movzx   eax, bl
                xor     ebx, [esp+68h+var_38]
                xor     [esp+68h+var_34], ebx
                shr     ecx, 8
                mov     [eax+edx-5Ch], esi
                mov     eax, [esp+68h+var_54]
                xor     eax, [esp+68h+var_38]
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_2C]
                mov     [esp+68h+var_54], eax
                movzx   eax, cl
                mov     ecx, edx
                xor     eax, 0F9h
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_38]
                add     eax, 6F9B7788h
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_47551D
                jl      short loc_475513
                test    eax, eax
                jnb     short loc_47551D

loc_475513:                             ; CODE XREF: VBNCB_unnamed_8000242f+53D¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475522
; ---------------------------------------------------------------------------

loc_47551D:                             ; CODE XREF: VBNCB_unnamed_8000242f+53B¡üj
                                        ; VBNCB_unnamed_8000242f+541¡üj
                and     [esp+68h+var_2C], 0

loc_475522:                             ; CODE XREF: VBNCB_unnamed_8000242f+54B¡üj
                mov     eax, [esp+68h+var_3C]
                mov     ecx, edx
                xor     [esp+68h+var_54], eax
                xor     [esp+68h+var_38], eax
                mov     edx, [esp+68h+var_30]
                movzx   eax, al
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_2C]
                xor     edi, [esp+68h+var_34]
                mov     [eax+ecx+0Fh], edx
                mov     eax, [esp+68h+var_34]
                xor     eax, [esp+68h+var_3C]
                mov     [esp+68h+var_44], eax
                mov     eax, [esp+68h+var_48]
                xor     eax, [esp+68h+var_44]
                mov     [esp+68h+var_48], eax
                mov     eax, [esp+68h+var_3C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 11h
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_34]
                add     eax, 8B89CF62h
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_4755A6
                jl      short loc_47559C
                test    eax, eax
                jnb     short loc_4755A6

loc_47559C:                             ; CODE XREF: VBNCB_unnamed_8000242f+5C6¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_4755AB
; ---------------------------------------------------------------------------

loc_4755A6:                             ; CODE XREF: VBNCB_unnamed_8000242f+5C4¡üj
                                        ; VBNCB_unnamed_8000242f+5CA¡üj
                and     [esp+68h+var_2C], 0

loc_4755AB:                             ; CODE XREF: VBNCB_unnamed_8000242f+5D4¡üj
                mov     ecx, [esp+68h+var_54]
                xor     edi, ecx
                xor     [esp+68h+var_34], ecx
                mov     edx, [esp+68h+var_58]
                mov     esi, [esp+68h+var_30]
                movzx   eax, cx
                xor     eax, 992Bh
                mov     [esp+68h+var_40], edi
                mov     edi, [esp+68h+var_48]
                xor     ecx, edi
                xor     [esp+68h+var_5C], ecx
                xor     ebx, edi
                mov     [esp+68h+var_54], ecx
                mov     ecx, edx
                mov     [eax+edx], esi
                mov     eax, edi
                mov     esi, [esp+68h+var_4C]
                xor     eax, 64057789h
                or      esi, [esp+68h+var_2C]
                mov     ecx, [ecx]
                mov     [esp+68h+var_2C], ecx
                xor     ecx, ecx
                sub     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_2C]
                sbb     ecx, ecx
                sub     eax, esi
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_475619
                jl      short loc_47560F
                test    eax, eax
                jnb     short loc_475619

loc_47560F:                             ; CODE XREF: VBNCB_unnamed_8000242f+639¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47561E
; ---------------------------------------------------------------------------

loc_475619:                             ; CODE XREF: VBNCB_unnamed_8000242f+637¡üj
                                        ; VBNCB_unnamed_8000242f+63D¡üj
                and     [esp+68h+var_2C], 0

loc_47561E:                             ; CODE XREF: VBNCB_unnamed_8000242f+647¡üj
                mov     ecx, [esp+68h+var_40]
                mov     esi, edx
                mov     edx, [esp+68h+var_5C]
                xor     edi, ecx
                xor     [esp+68h+var_44], edx
                xor     ebx, ecx
                push    0
                mov     [esi], eax
                mov     eax, ecx
                xor     ecx, edx
                movzx   eax, ax
                xor     [esp+6Ch+var_38], ecx
                xor     eax, 439Fh
                mov     [esp+6Ch+var_40], ecx
                xor     edx, edx
                mov     ecx, [esp+6Ch+var_4C]
                or      ecx, [esp+6Ch+var_2C]
                mov     eax, [eax+esi]
                mov     esi, eax
                sub     esi, ecx
                mov     ecx, [esp+6Ch+var_5C]
                mov     eax, ecx
                sbb     edx, [esp+6Ch+var_50]
                xor     eax, 93F57A54h
                sub     esi, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_30], esi
                mov     esi, [esp+68h+var_58]
                cmp     edx, eax
                jg      short loc_47568B
                jl      short loc_475681
                cmp     [esp+68h+var_30], eax
                jnb     short loc_47568B

loc_475681:                             ; CODE XREF: VBNCB_unnamed_8000242f+6A9¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47568F
; ---------------------------------------------------------------------------

loc_47568B:                             ; CODE XREF: VBNCB_unnamed_8000242f+6A7¡üj
                                        ; VBNCB_unnamed_8000242f+6AF¡üj
                mov     [esp+68h+var_2C], eax

loc_47568F:                             ; CODE XREF: VBNCB_unnamed_8000242f+6B9¡üj
                xor     [esp+68h+var_44], ebx
                xor     ecx, ebx
                mov     [esp+68h+var_48], eax
                mov     edx, ebx
                xor     edi, [esp+68h+var_44]
                movzx   eax, bl
                mov     [esp+68h+var_5C], ecx
                mov     ecx, [esp+68h+var_30]
                shr     edx, 8
                mov     [eax+esi+26h], ecx
                xor     ecx, ecx
                mov     eax, [esp+68h+var_38]
                xor     ebx, eax
                mov     esi, [esp+68h+var_44]
                xor     [esp+68h+var_34], ebx
                xor     esi, eax
                xor     eax, 59DC1AAAh
                mov     [esp+68h+var_30], esi
                mov     esi, [esp+68h+var_54]
                xor     esi, [esp+68h+var_30]
                mov     [esp+68h+var_38], eax
                mov     eax, [esp+68h+var_44]
                add     eax, 83928B44h
                or      ecx, eax
                movzx   eax, dl
                mov     edx, [esp+68h+var_58]
                mov     eax, [eax+edx+0C5h]
                xor     edx, edx
                sub     eax, ecx
                mov     ecx, [esp+68h+var_4C]
                mov     [esp+68h+var_3C], eax
                sbb     edx, [esp+68h+var_38]
                or      ecx, [esp+68h+var_2C]
                mov     eax, [esp+68h+var_50]
                or      eax, [esp+68h+var_48]
                sub     [esp+68h+var_3C], ecx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_47572B
                jl      short loc_475721
                cmp     [esp+68h+var_3C], eax
                jnb     short loc_47572B

loc_475721:                             ; CODE XREF: VBNCB_unnamed_8000242f+749¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47572F
; ---------------------------------------------------------------------------

loc_47572B:                             ; CODE XREF: VBNCB_unnamed_8000242f+747¡üj
                                        ; VBNCB_unnamed_8000242f+74F¡üj
                mov     [esp+68h+var_2C], eax

loc_47572F:                             ; CODE XREF: VBNCB_unnamed_8000242f+759¡üj
                mov     edx, [esp+68h+var_34]
                xor     edi, edx
                mov     ecx, [esp+68h+var_58]
                xor     [esp+68h+var_44], edx
                mov     [esp+68h+var_54], eax
                xor     [esp+68h+var_5C], esi
                movzx   eax, dl
                xor     eax, 0D0h
                mov     [esp+68h+var_48], edi
                mov     edi, [esp+68h+var_3C]
                mov     [eax+ecx], edi
                mov     eax, esi
                mov     edi, [esp+68h+var_40]
                xor     eax, edx
                xor     edi, eax
                shr     edx, 8
                mov     [esp+68h+var_38], eax
                movzx   eax, dl
                xor     edx, edx
                xor     eax, 0C8h
                mov     ecx, [eax+ecx]
                mov     eax, esi
                xor     eax, 8F10F4B8h
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_34], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_2C]
                or      eax, [esp+68h+var_54]
                sub     [esp+68h+var_34], ecx
                sbb     edx, eax
                test    edx, edx
                jg      short loc_4757B2
                jl      short loc_4757A8
                cmp     [esp+68h+var_34], 0
                jnb     short loc_4757B2

loc_4757A8:                             ; CODE XREF: VBNCB_unnamed_8000242f+7CF¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_4757B7
; ---------------------------------------------------------------------------

loc_4757B2:                             ; CODE XREF: VBNCB_unnamed_8000242f+7CD¡üj
                                        ; VBNCB_unnamed_8000242f+7D6¡üj
                and     [esp+68h+var_2C], 0

loc_4757B7:                             ; CODE XREF: VBNCB_unnamed_8000242f+7E0¡üj
                mov     edx, [esp+68h+var_48]
                mov     ecx, edx
                xor     [esp+68h+var_5C], edx
                xor     esi, edx
                xor     [esp+68h+var_30], edi
                movzx   eax, dx
                mov     edx, [esp+68h+var_58]
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_34]
                push    0
                mov     [eax+edx-0FC4Ah], esi
                mov     edx, ecx
                shr     ecx, 10h
                xor     edx, edi
                movzx   eax, cl
                xor     ebx, edx
                xor     ecx, ecx
                mov     [esp+6Ch+var_48], edx
                inc     ecx
                xor     edx, edx
                xor     eax, ecx
                mov     ecx, [esp+6Ch+var_58]
                mov     eax, [eax+ecx]
                mov     ecx, [esp+6Ch+var_4C]
                or      ecx, [esp+6Ch+var_2C]
                mov     [esp+6Ch+var_34], eax
                lea     eax, [edi+4BB842A7h]
                sub     [esp+6Ch+var_34], ecx
                mov     ecx, [esp+6Ch+var_34]
                sbb     edx, [esp+6Ch+var_50]
                sub     ecx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_34], ecx
                cmp     edx, eax
                jg      short loc_475838
                jl      short loc_47582E
                cmp     ecx, eax
                jnb     short loc_475838

loc_47582E:                             ; CODE XREF: VBNCB_unnamed_8000242f+858¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_47583C
; ---------------------------------------------------------------------------

loc_475838:                             ; CODE XREF: VBNCB_unnamed_8000242f+856¡üj
                                        ; VBNCB_unnamed_8000242f+85C¡üj
                mov     [esp+68h+var_2C], eax

loc_47583C:                             ; CODE XREF: VBNCB_unnamed_8000242f+866¡üj
                mov     edx, [esp+68h+var_5C]
                mov     ecx, edx
                xor     [esp+68h+var_30], edx
                xor     edi, edx
                mov     esi, [esp+68h+var_34]
                xor     [esp+68h+var_38], ebx
                mov     [esp+68h+var_3C], eax
                movzx   eax, dl
                mov     edx, [esp+68h+var_58]
                xor     eax, 92h
                push    0
                mov     [eax+edx], esi
                mov     edx, ecx
                shr     ecx, 8
                xor     edx, ebx
                xor     [esp+6Ch+var_44], edx
                movzx   eax, cx
                mov     ecx, [esp+6Ch+var_58]
                xor     eax, 3DA7h
                mov     [esp+6Ch+var_5C], edx
                xor     edx, edx
                mov     esi, [eax+ecx]
                mov     ecx, [esp+6Ch+var_4C]
                or      ecx, [esp+6Ch+var_2C]
                mov     eax, [esp+6Ch+var_50]
                or      eax, [esp+6Ch+var_3C]
                sub     esi, ecx
                sbb     edx, eax
                lea     eax, [ebx-47BC019Ch]
                sub     esi, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_2C], esi
                mov     esi, [esp+68h+var_54]
                cmp     edx, eax
                mov     edx, [esp+68h+var_2C]
                jg      short loc_4758C4
                jl      short loc_4758BA
                cmp     edx, eax
                jnb     short loc_4758C4

loc_4758BA:                             ; CODE XREF: VBNCB_unnamed_8000242f+8E4¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_4758C8
; ---------------------------------------------------------------------------

loc_4758C4:                             ; CODE XREF: VBNCB_unnamed_8000242f+8E2¡üj
                                        ; VBNCB_unnamed_8000242f+8E8¡üj
                mov     [esp+68h+var_2C], eax

loc_4758C8:                             ; CODE XREF: VBNCB_unnamed_8000242f+8F2¡üj
                mov     ecx, [esp+68h+var_58]
                mov     [esp+68h+var_40], eax
                mov     eax, [esp+68h+var_30]
                xor     ebx, eax
                xor     [esp+68h+var_38], eax
                movzx   eax, ax
                xor     eax, 3Bh
                mov     [esp+68h+var_3C], ebx
                mov     [eax+ecx], edx
                mov     edx, [esp+68h+var_44]
                mov     eax, edx
                xor     eax, [esp+68h+var_30]
                xor     [esp+68h+var_48], edx
                xor     esi, eax
                mov     [esp+68h+var_34], eax
                xor     edx, edx
                mov     eax, [esp+68h+var_30]
                shr     eax, 10h
                movzx   eax, al
                mov     ebx, [eax+ecx+56h]
                mov     ecx, [esp+68h+var_4C]
                or      ecx, [esp+68h+var_2C]
                mov     eax, [esp+68h+var_50]
                or      eax, [esp+68h+var_40]
                sub     ebx, ecx
                mov     ecx, [esp+68h+var_44]
                sbb     edx, eax
                lea     eax, [ecx-6671122Fh]
                sub     ebx, eax
                sbb     edx, 0
                test    edx, edx
                jg      short loc_475942
                jl      short loc_475938
                test    ebx, ebx
                jnb     short loc_475942

loc_475938:                             ; CODE XREF: VBNCB_unnamed_8000242f+962¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475947
; ---------------------------------------------------------------------------

loc_475942:                             ; CODE XREF: VBNCB_unnamed_8000242f+960¡üj
                                        ; VBNCB_unnamed_8000242f+966¡üj
                and     [esp+68h+var_2C], 0

loc_475947:                             ; CODE XREF: VBNCB_unnamed_8000242f+970¡üj
                mov     edx, [esp+68h+var_38]
                xor     ecx, edx
                xor     [esp+68h+var_48], edx
                xor     [esp+68h+var_5C], esi
                movzx   eax, dl
                xor     eax, 7Ch
                mov     [esp+68h+var_44], ecx
                mov     ecx, [esp+68h+var_58]
                mov     [eax+ecx], ebx
                mov     eax, esi
                xor     eax, edx
                shr     edx, 8
                xor     edi, eax
                mov     [esp+68h+var_38], eax
                movzx   eax, dl
                xor     edx, edx
                xor     eax, 0D6h
                mov     eax, [eax+ecx]
                mov     ecx, [esp+68h+var_4C]
                or      ecx, [esp+68h+var_2C]
                mov     [esp+68h+var_30], eax
                lea     eax, [esi-3648E6B9h]
                sub     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_30]
                sbb     edx, [esp+68h+var_50]
                sub     ecx, eax
                mov     [esp+68h+var_30], ecx
                sbb     edx, 0
                test    edx, edx
                jg      short loc_4759BB
                jl      short loc_4759B1
                test    ecx, ecx
                jnb     short loc_4759BB

loc_4759B1:                             ; CODE XREF: VBNCB_unnamed_8000242f+9DB¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_4759C0
; ---------------------------------------------------------------------------

loc_4759BB:                             ; CODE XREF: VBNCB_unnamed_8000242f+9D9¡üj
                                        ; VBNCB_unnamed_8000242f+9DF¡üj
                and     [esp+68h+var_2C], 0

loc_4759C0:                             ; CODE XREF: VBNCB_unnamed_8000242f+9E9¡üj
                mov     edx, [esp+68h+var_48]
                mov     ecx, edx
                mov     ebx, [esp+68h+var_30]
                xor     esi, edx
                xor     [esp+68h+var_5C], edx
                xor     [esp+68h+var_34], edi
                movzx   eax, dl
                xor     edx, edi
                shr     ecx, 8
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_58]
                mov     [esp+68h+var_48], edx
                push    0
                mov     [eax+esi-30h], ebx
                mov     ebx, [esp+6Ch+var_3C]
                movzx   eax, cl
                xor     ebx, edx
                mov     ecx, [esp+6Ch+var_4C]
                xor     eax, 16h
                or      ecx, [esp+6Ch+var_2C]
                xor     edx, edx
                mov     eax, [eax+esi]
                mov     [esp+6Ch+var_30], eax
                lea     eax, [edi+5DBB654Dh]
                sub     [esp+6Ch+var_30], ecx
                mov     ecx, [esp+6Ch+var_30]
                sbb     edx, [esp+6Ch+var_50]
                sub     ecx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_30], ecx
                cmp     edx, eax
                jg      short loc_475A3A
                jl      short loc_475A30
                cmp     ecx, eax
                jnb     short loc_475A3A

loc_475A30:                             ; CODE XREF: VBNCB_unnamed_8000242f+A5A¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475A3E
; ---------------------------------------------------------------------------

loc_475A3A:                             ; CODE XREF: VBNCB_unnamed_8000242f+A58¡üj
                                        ; VBNCB_unnamed_8000242f+A5E¡üj
                mov     [esp+68h+var_2C], eax

loc_475A3E:                             ; CODE XREF: VBNCB_unnamed_8000242f+A68¡üj
                mov     edx, [esp+68h+var_5C]
                mov     ecx, edx
                xor     [esp+68h+var_34], edx
                xor     edi, edx
                xor     [esp+68h+var_38], ebx
                mov     [esp+68h+var_3C], eax
                movzx   eax, dl
                mov     edx, [esp+68h+var_30]
                xor     eax, 0ABh
                mov     [eax+esi], edx
                mov     edx, ecx
                shr     ecx, 8
                xor     edx, ebx
                xor     [esp+68h+var_44], edx
                movzx   eax, cl
                mov     [esp+68h+var_5C], edx
                xor     edx, edx
                mov     ecx, [eax+esi+58h]
                mov     eax, ebx
                xor     eax, 0E51F9F00h
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      eax, [esp+68h+var_3C]
                or      ecx, [esp+68h+var_2C]
                sub     [esp+68h+var_30], ecx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                mov     edx, [esp+68h+var_30]
                jg      short loc_475AB8
                jl      short loc_475AAE
                cmp     edx, eax
                jnb     short loc_475AB8

loc_475AAE:                             ; CODE XREF: VBNCB_unnamed_8000242f+AD8¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475ABC
; ---------------------------------------------------------------------------

loc_475AB8:                             ; CODE XREF: VBNCB_unnamed_8000242f+AD6¡üj
                                        ; VBNCB_unnamed_8000242f+ADC¡üj
                mov     [esp+68h+var_2C], eax

loc_475ABC:                             ; CODE XREF: VBNCB_unnamed_8000242f+AE6¡üj
                mov     ecx, [esp+68h+var_34]
                xor     ebx, ecx
                xor     [esp+68h+var_38], ecx
                mov     [esp+68h+var_40], eax
                movzx   eax, cl
                mov     [esp+68h+var_3C], ebx
                mov     ebx, [esp+68h+var_54]
                mov     [eax+esi+0Ah], edx
                mov     edx, [esp+68h+var_44]
                mov     eax, edx
                mov     esi, [esp+68h+var_48]
                xor     eax, ecx
                xor     ebx, eax
                mov     [esp+68h+var_30], eax
                mov     eax, ecx
                mov     [esp+68h+var_54], ebx
                shr     eax, 10h
                xor     esi, edx
                movzx   ecx, al
                xor     edx, 0A0C00CCBh
                mov     eax, [esp+68h+var_34]
                xor     ecx, 35h
                sub     ecx, edx
                shr     eax, 8
                mov     edx, [esp+68h+var_58]
                movzx   eax, al
                mov     eax, [eax+edx-0Ah]
                xor     edx, edx
                sub     eax, ecx
                mov     ecx, [esp+68h+var_4C]
                mov     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_50]
                sbb     edx, edx
                or      eax, [esp+68h+var_40]
                or      ecx, [esp+68h+var_2C]
                sub     [esp+68h+var_34], ecx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                mov     edx, [esp+68h+var_34]
                jg      short loc_475B50
                jl      short loc_475B46
                cmp     edx, eax
                jnb     short loc_475B50

loc_475B46:                             ; CODE XREF: VBNCB_unnamed_8000242f+B70¡üj
                mov     [esp+68h+var_40], 1
                jmp     short loc_475B54
; ---------------------------------------------------------------------------

loc_475B50:                             ; CODE XREF: VBNCB_unnamed_8000242f+B6E¡üj
                                        ; VBNCB_unnamed_8000242f+B74¡üj
                mov     [esp+68h+var_40], eax

loc_475B54:                             ; CODE XREF: VBNCB_unnamed_8000242f+B7E¡üj
                mov     ecx, [esp+68h+var_38]
                xor     esi, ecx
                xor     [esp+68h+var_44], ecx
                xor     [esp+68h+var_5C], ebx
                mov     [esp+68h+var_28], eax
                movzx   eax, cl
                xor     eax, 31h
                mov     [esp+68h+var_48], esi
                mov     esi, [esp+68h+var_58]
                mov     [eax+esi], edx
                mov     eax, ebx
                xor     eax, ecx
                xor     edx, edx
                xor     edi, eax
                shr     ecx, 8
                mov     [esp+68h+var_34], eax
                movzx   eax, cl
                mov     ecx, [eax+esi-3Ah]
                mov     eax, ebx
                xor     eax, 0D54990E9h
                mov     ebx, ecx
                mov     ecx, [esp+68h+var_4C]
                sub     ebx, eax
                mov     eax, [esp+68h+var_50]
                sbb     edx, edx
                or      eax, [esp+68h+var_28]
                or      ecx, [esp+68h+var_40]
                sub     ebx, ecx
                mov     [esp+68h+var_2C], ebx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_475BC8
                jl      short loc_475BBE
                cmp     ebx, eax
                jnb     short loc_475BC8

loc_475BBE:                             ; CODE XREF: VBNCB_unnamed_8000242f+BE8¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475BCC
; ---------------------------------------------------------------------------

loc_475BC8:                             ; CODE XREF: VBNCB_unnamed_8000242f+BE6¡üj
                                        ; VBNCB_unnamed_8000242f+BEC¡üj
                mov     [esp+68h+var_28], eax

loc_475BCC:                             ; CODE XREF: VBNCB_unnamed_8000242f+BF6¡üj
                mov     [esp+68h+var_38], eax
                xor     edx, edx
                mov     eax, [esp+68h+var_48]
                mov     ebx, eax
                xor     [esp+68h+var_54], eax
                xor     [esp+68h+var_5C], eax
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 0E6h
                inc     eax
                call    __allshl
                mov     ecx, [esp+68h+var_2C]
                xor     edx, edx
                xor     [esp+68h+var_30], edi
                mov     [eax+esi], ecx
                mov     ecx, ebx
                shr     ebx, 8
                xor     ecx, edi
                xor     [esp+68h+var_3C], ecx
                movzx   eax, bl
                mov     [esp+68h+var_48], ecx
                mov     ecx, [esp+68h+var_4C]
                mov     ebx, [eax+esi+67h]
                lea     eax, [edi-0B064163h]
                sub     ebx, eax
                mov     eax, [esp+68h+var_50]
                sbb     edx, edx
                or      eax, [esp+68h+var_38]
                or      ecx, [esp+68h+var_28]
                sub     ebx, ecx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_475C48
                jl      short loc_475C3E
                cmp     ebx, eax
                jnb     short loc_475C48

loc_475C3E:                             ; CODE XREF: VBNCB_unnamed_8000242f+C68¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475C4C
; ---------------------------------------------------------------------------

loc_475C48:                             ; CODE XREF: VBNCB_unnamed_8000242f+C66¡üj
                                        ; VBNCB_unnamed_8000242f+C6C¡üj
                mov     [esp+68h+var_28], eax

loc_475C4C:                             ; CODE XREF: VBNCB_unnamed_8000242f+C76¡üj
                mov     edx, [esp+68h+var_5C]
                mov     ecx, edx
                xor     [esp+68h+var_30], edx
                xor     edi, edx
                mov     [esp+68h+var_2C], eax
                movzx   eax, dl
                shr     ecx, 8
                mov     [eax+esi+0C2h], ebx
                mov     ebx, [esp+68h+var_3C]
                xor     edx, ebx
                xor     [esp+68h+var_44], edx
                xor     [esp+68h+var_34], ebx
                movzx   eax, cx
                mov     [esp+68h+var_5C], edx
                xor     edx, edx
                mov     ecx, [eax+esi-0B9Bh]
                lea     eax, [ebx+2B83CFBCh]
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_38], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                or      eax, [esp+68h+var_2C]
                sub     [esp+68h+var_38], ecx
                mov     ecx, [esp+68h+var_38]
                sbb     edx, eax
                test    edx, edx
                jg      short loc_475CBE
                jl      short loc_475CB9
                test    ecx, ecx
                jnb     short loc_475CBE

loc_475CB9:                             ; CODE XREF: VBNCB_unnamed_8000242f+CE3¡üj
                xor     edx, edx
                inc     edx
                jmp     short loc_475CC0
; ---------------------------------------------------------------------------

loc_475CBE:                             ; CODE XREF: VBNCB_unnamed_8000242f+CE1¡üj
                                        ; VBNCB_unnamed_8000242f+CE7¡üj
                xor     edx, edx

loc_475CC0:                             ; CODE XREF: VBNCB_unnamed_8000242f+CEC¡üj
                mov     eax, [esp+68h+var_30]
                xor     ebx, eax
                xor     [esp+68h+var_34], eax
                movzx   eax, ax
                mov     [eax+esi-3943h], ecx
                mov     eax, [esp+68h+var_44]
                mov     ecx, eax
                xor     [esp+68h+var_48], eax
                xor     ecx, [esp+68h+var_30]
                mov     eax, [esp+68h+var_30]
                xor     [esp+68h+var_54], ecx
                mov     esi, [esp+68h+var_4C]
                shr     eax, 10h
                or      esi, edx
                movzx   eax, al
                xor     eax, 47h
                mov     [esp+68h+var_38], ecx
                mov     ecx, [esp+68h+var_58]
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_44]
                add     eax, 0DAD96839h
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_475D3B
                jl      short loc_475D31
                test    eax, eax
                jnb     short loc_475D3B

loc_475D31:                             ; CODE XREF: VBNCB_unnamed_8000242f+D5B¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475D40
; ---------------------------------------------------------------------------

loc_475D3B:                             ; CODE XREF: VBNCB_unnamed_8000242f+D59¡üj
                                        ; VBNCB_unnamed_8000242f+D5F¡üj
                and     [esp+68h+var_28], 0

loc_475D40:                             ; CODE XREF: VBNCB_unnamed_8000242f+D69¡üj
                mov     eax, [esp+68h+var_34]
                xor     [esp+68h+var_48], eax
                xor     [esp+68h+var_44], eax
                mov     ecx, [esp+68h+var_58]
                mov     edx, [esp+68h+var_30]
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_28]
                movzx   eax, al
                mov     [eax+ecx+9], edx
                mov     ecx, [esp+68h+var_34]
                mov     eax, [esp+68h+var_54]
                xor     [esp+68h+var_5C], eax
                mov     [esp+68h+var_30], eax
                mov     eax, ecx
                xor     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_58]
                xor     edi, [esp+68h+var_30]
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+ecx+2Ah]
                xor     ecx, ecx
                mov     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_54]
                xor     eax, 971EA609h
                sub     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_34]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_34], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_475DC2
                jl      short loc_475DB8
                test    eax, eax
                jnb     short loc_475DC2

loc_475DB8:                             ; CODE XREF: VBNCB_unnamed_8000242f+DE2¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475DC7
; ---------------------------------------------------------------------------

loc_475DC2:                             ; CODE XREF: VBNCB_unnamed_8000242f+DE0¡üj
                                        ; VBNCB_unnamed_8000242f+DE6¡üj
                and     [esp+68h+var_28], 0

loc_475DC7:                             ; CODE XREF: VBNCB_unnamed_8000242f+DF0¡üj
                mov     edx, [esp+68h+var_48]
                mov     ecx, edx
                xor     [esp+68h+var_54], edx
                xor     [esp+68h+var_5C], edx
                mov     esi, [esp+68h+var_34]
                xor     [esp+68h+var_38], edi
                movzx   eax, dl
                mov     edx, [esp+68h+var_58]
                xor     eax, 0BAh
                mov     [eax+edx], esi
                mov     edx, ecx
                shr     ecx, 8
                xor     edx, edi
                movzx   eax, cl
                xor     ebx, edx
                mov     ecx, [esp+68h+var_58]
                xor     eax, 0A8h
                mov     [esp+68h+var_48], edx
                xor     edx, edx
                mov     ecx, [eax+ecx]
                lea     eax, [edi+1F3EBEE9h]
                sub     ecx, eax
                mov     [esp+68h+var_34], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_34], ecx
                sbb     edx, [esp+68h+var_50]
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_475E40
                jl      short loc_475E36
                cmp     [esp+68h+var_34], eax
                jnb     short loc_475E40

loc_475E36:                             ; CODE XREF: VBNCB_unnamed_8000242f+E5E¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475E44
; ---------------------------------------------------------------------------

loc_475E40:                             ; CODE XREF: VBNCB_unnamed_8000242f+E5C¡üj
                                        ; VBNCB_unnamed_8000242f+E64¡üj
                mov     [esp+68h+var_28], eax

loc_475E44:                             ; CODE XREF: VBNCB_unnamed_8000242f+E6E¡üj
                mov     edx, [esp+68h+var_5C]
                mov     ecx, edx
                xor     [esp+68h+var_38], edx
                xor     edi, edx
                mov     esi, [esp+68h+var_34]
                xor     [esp+68h+var_30], ebx
                mov     [esp+68h+var_2C], eax
                movzx   eax, dl
                mov     edx, [esp+68h+var_58]
                mov     [eax+edx-0Dh], esi
                mov     edx, ecx
                shr     ecx, 8
                xor     edx, ebx
                xor     [esp+68h+var_44], edx
                movzx   eax, cl
                mov     ecx, [esp+68h+var_58]
                mov     [esp+68h+var_5C], edx
                xor     edx, edx
                mov     esi, [eax+ecx-21h]
                mov     eax, ebx
                mov     ecx, [esp+68h+var_4C]
                xor     eax, 0D7ECEF56h
                sub     esi, eax
                mov     eax, [esp+68h+var_50]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                or      eax, [esp+68h+var_2C]
                sub     esi, ecx
                mov     [esp+68h+var_28], esi
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_475EBC
                jl      short loc_475EB2
                cmp     esi, eax
                jnb     short loc_475EBC

loc_475EB2:                             ; CODE XREF: VBNCB_unnamed_8000242f+EDC¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_475EC0
; ---------------------------------------------------------------------------

loc_475EBC:                             ; CODE XREF: VBNCB_unnamed_8000242f+EDA¡üj
                                        ; VBNCB_unnamed_8000242f+EE0¡üj
                mov     [esp+68h+var_2C], eax

loc_475EC0:                             ; CODE XREF: VBNCB_unnamed_8000242f+EEA¡üj
                mov     edx, [esp+68h+var_38]
                xor     ebx, edx
                mov     ecx, [esp+68h+var_58]
                xor     [esp+68h+var_30], edx
                mov     esi, [esp+68h+var_28]
                mov     [esp+68h+var_34], eax
                movzx   eax, dl
                xor     eax, 36h
                mov     [esp+68h+var_3C], ebx
                mov     [eax+ecx], esi
                mov     eax, [esp+68h+var_44]
                xor     [esp+68h+var_48], eax
                mov     esi, [esp+68h+var_54]
                mov     [esp+68h+var_40], eax
                xor     [esp+68h+var_40], edx
                xor     esi, [esp+68h+var_40]
                shr     edx, 8
                movzx   eax, dl
                xor     edx, edx
                xor     eax, 0AAh
                mov     ebx, [eax+ecx]
                mov     eax, [esp+68h+var_44]
                mov     ecx, [esp+68h+var_4C]
                add     eax, 0E4AC3660h
                sub     ebx, eax
                mov     eax, [esp+68h+var_50]
                sbb     edx, edx
                or      ecx, [esp+68h+var_2C]
                or      eax, [esp+68h+var_34]
                sub     ebx, ecx
                sbb     edx, eax
                test    edx, edx
                jg      short loc_475F40
                jl      short loc_475F36
                test    ebx, ebx
                jnb     short loc_475F40

loc_475F36:                             ; CODE XREF: VBNCB_unnamed_8000242f+F60¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475F45
; ---------------------------------------------------------------------------

loc_475F40:                             ; CODE XREF: VBNCB_unnamed_8000242f+F5E¡üj
                                        ; VBNCB_unnamed_8000242f+F64¡üj
                and     [esp+68h+var_28], 0

loc_475F45:                             ; CODE XREF: VBNCB_unnamed_8000242f+F6E¡üj
                mov     edx, [esp+68h+var_30]
                mov     ecx, [esp+68h+var_58]
                xor     [esp+68h+var_48], edx
                xor     [esp+68h+var_44], edx
                xor     [esp+68h+var_5C], esi
                movzx   eax, dl
                xor     eax, 0CFh
                mov     [eax+ecx], ebx
                mov     eax, esi
                xor     eax, edx
                shr     edx, 8
                xor     edi, eax
                mov     [esp+68h+var_38], eax
                movzx   eax, dl
                xor     edx, edx
                xor     eax, 3Eh
                mov     ecx, [eax+ecx]
                mov     eax, esi
                xor     eax, 1C9D068Dh
                sub     ecx, eax
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_30], ecx
                sbb     edx, [esp+68h+var_50]
                test    edx, edx
                jg      short loc_475FB2
                jl      short loc_475FA8
                cmp     [esp+68h+var_30], 0
                jnb     short loc_475FB2

loc_475FA8:                             ; CODE XREF: VBNCB_unnamed_8000242f+FCF¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_475FB7
; ---------------------------------------------------------------------------

loc_475FB2:                             ; CODE XREF: VBNCB_unnamed_8000242f+FCD¡üj
                                        ; VBNCB_unnamed_8000242f+FD6¡üj
                and     [esp+68h+var_28], 0

loc_475FB7:                             ; CODE XREF: VBNCB_unnamed_8000242f+FE0¡üj
                mov     edx, [esp+68h+var_48]
                mov     ecx, edx
                mov     ebx, [esp+68h+var_30]
                xor     esi, edx
                xor     [esp+68h+var_5C], edx
                xor     [esp+68h+var_40], edi
                movzx   eax, dl
                xor     edx, edi
                xor     eax, 0E4h
                shr     ecx, 8
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_58]
                mov     [esp+68h+var_48], edx
                mov     [eax+esi], ebx
                mov     ebx, [esp+68h+var_3C]
                movzx   eax, cl
                xor     ebx, edx
                xor     edx, edx
                mov     ecx, [eax+esi-99h]
                mov     eax, edi
                xor     eax, 3280C6AFh
                sub     ecx, eax
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_30], ecx
                sbb     edx, [esp+68h+var_50]
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_476030
                jl      short loc_476026
                cmp     [esp+68h+var_30], eax
                jnb     short loc_476030

loc_476026:                             ; CODE XREF: VBNCB_unnamed_8000242f+104E¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_476034
; ---------------------------------------------------------------------------

loc_476030:                             ; CODE XREF: VBNCB_unnamed_8000242f+104C¡üj
                                        ; VBNCB_unnamed_8000242f+1054¡üj
                mov     [esp+68h+var_28], eax

loc_476034:                             ; CODE XREF: VBNCB_unnamed_8000242f+105E¡üj
                mov     edx, [esp+68h+var_5C]
                mov     ecx, edx
                xor     [esp+68h+var_40], edx
                xor     edi, edx
                xor     [esp+68h+var_38], ebx
                mov     [esp+68h+var_2C], eax
                movzx   eax, dl
                mov     edx, [esp+68h+var_30]
                mov     [eax+esi-14h], edx
                mov     edx, ecx
                shr     ecx, 8
                xor     edx, ebx
                xor     [esp+68h+var_44], edx
                movzx   eax, cl
                mov     ecx, [esp+68h+var_4C]
                xor     eax, 1Eh
                or      ecx, [esp+68h+var_28]
                mov     [esp+68h+var_5C], edx
                xor     edx, edx
                mov     eax, [eax+esi]
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_50]
                or      eax, [esp+68h+var_2C]
                sub     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_30]
                sbb     edx, eax
                mov     eax, ebx
                xor     eax, 3179A1D8h
                sub     ecx, eax
                mov     [esp+68h+var_30], ecx
                sbb     edx, 0
                test    edx, edx
                jg      short loc_4760AF
                jl      short loc_4760A5
                test    ecx, ecx
                jnb     short loc_4760AF

loc_4760A5:                             ; CODE XREF: VBNCB_unnamed_8000242f+10CF¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_4760B4
; ---------------------------------------------------------------------------

loc_4760AF:                             ; CODE XREF: VBNCB_unnamed_8000242f+10CD¡üj
                                        ; VBNCB_unnamed_8000242f+10D3¡üj
                and     [esp+68h+var_28], 0

loc_4760B4:                             ; CODE XREF: VBNCB_unnamed_8000242f+10DD¡üj
                mov     eax, [esp+68h+var_40]
                xor     ebx, eax
                mov     ecx, [esp+68h+var_38]
                mov     edx, [esp+68h+var_30]
                xor     ecx, eax
                movzx   eax, al
                xor     edi, ecx
                mov     [esp+68h+var_3C], ebx
                mov     ebx, [esp+68h+var_44]
                mov     [esp+68h+var_38], ecx
                mov     [eax+esi-2Fh], edx
                mov     eax, ebx
                xor     eax, [esp+68h+var_40]
                xor     [esp+68h+var_54], eax
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_28]
                mov     [esp+68h+var_34], eax
                mov     eax, ecx
                xor     eax, ebx
                xor     ecx, ecx
                xor     [esp+68h+var_48], eax
                xor     ebx, 0AB060527h
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_38]
                add     eax, 0F6E839CAh
                mov     [esp+68h+var_44], ebx
                mov     ebx, [esp+68h+var_58]
                or      ecx, eax
                mov     eax, [esp+68h+var_40]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 64h
                mov     ebx, [eax+ebx]
                xor     eax, eax
                sub     ebx, ecx
                sbb     eax, [esp+68h+var_44]
                sub     ebx, esi
                mov     [esp+68h+var_2C], ebx
                sbb     eax, [esp+68h+var_50]
                mov     ebx, [esp+68h+var_3C]
                mov     esi, [esp+68h+var_2C]
                test    eax, eax
                jg      short loc_476154
                jl      short loc_47614A
                test    esi, esi
                jnb     short loc_476154

loc_47614A:                             ; CODE XREF: VBNCB_unnamed_8000242f+1174¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_476159
; ---------------------------------------------------------------------------

loc_476154:                             ; CODE XREF: VBNCB_unnamed_8000242f+1172¡üj
                                        ; VBNCB_unnamed_8000242f+1178¡üj
                and     [esp+68h+var_28], 0

loc_476159:                             ; CODE XREF: VBNCB_unnamed_8000242f+1182¡üj
                mov     edx, [esp+68h+var_54]
                xor     edi, edx
                xor     [esp+68h+var_38], edx
                mov     ecx, edx
                movzx   eax, dl
                xor     eax, 4Eh
                shr     ecx, 8
                mov     [esp+68h+var_40], edi
                mov     edi, [esp+68h+var_58]
                mov     [eax+edi], esi
                mov     esi, [esp+68h+var_48]
                xor     edx, esi
                xor     [esp+68h+var_5C], edx
                xor     ebx, esi
                movzx   eax, cl
                xor     eax, 48h
                mov     [esp+68h+var_54], edx
                xor     edx, edx
                mov     ecx, [eax+edi]
                lea     eax, [esi-2E220C92h]
                sub     ecx, eax
                mov     [esp+68h+var_44], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_44], ecx
                sbb     edx, [esp+68h+var_50]
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_4761CA
                jl      short loc_4761C0
                cmp     [esp+68h+var_44], eax
                jnb     short loc_4761CA

loc_4761C0:                             ; CODE XREF: VBNCB_unnamed_8000242f+11E8¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_4761CE
; ---------------------------------------------------------------------------

loc_4761CA:                             ; CODE XREF: VBNCB_unnamed_8000242f+11E6¡üj
                                        ; VBNCB_unnamed_8000242f+11EE¡üj
                mov     [esp+68h+var_28], eax

loc_4761CE:                             ; CODE XREF: VBNCB_unnamed_8000242f+11F8¡üj
                mov     edx, [esp+68h+var_40]
                mov     ecx, edx
                mov     [esp+68h+var_2C], eax
                xor     ebx, edx
                movzx   eax, dl
                xor     esi, edx
                xor     eax, 81h
                mov     [esp+68h+var_3C], ebx
                mov     ebx, [esp+68h+var_44]
                shr     ecx, 8
                push    0
                mov     [eax+edi], ebx
                mov     eax, [esp+6Ch+var_5C]
                xor     edx, eax
                xor     [esp+6Ch+var_30], eax
                xor     [esp+6Ch+var_34], edx
                movzx   eax, cl
                mov     ecx, [esp+6Ch+var_4C]
                xor     eax, 0FDh
                or      ecx, [esp+6Ch+var_28]
                mov     [esp+6Ch+var_40], edx
                xor     edx, edx
                mov     ebx, [eax+edi]
                mov     eax, [esp+6Ch+var_50]
                or      eax, [esp+6Ch+var_2C]
                sub     ebx, ecx
                mov     ecx, [esp+6Ch+var_5C]
                sbb     edx, eax
                mov     eax, ecx
                xor     eax, 73DFE72Dh
                sub     ebx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_28], ebx
                mov     ebx, [esp+68h+var_3C]
                cmp     edx, eax
                jg      short loc_476255
                jl      short loc_47624B
                cmp     [esp+68h+var_28], eax
                jnb     short loc_476255

loc_47624B:                             ; CODE XREF: VBNCB_unnamed_8000242f+1273¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_476259
; ---------------------------------------------------------------------------

loc_476255:                             ; CODE XREF: VBNCB_unnamed_8000242f+1271¡üj
                                        ; VBNCB_unnamed_8000242f+1279¡üj
                mov     [esp+68h+var_2C], eax

loc_476259:                             ; CODE XREF: VBNCB_unnamed_8000242f+1283¡üj
                mov     [esp+68h+var_44], eax
                xor     edx, edx
                mov     eax, [esp+68h+var_3C]
                xor     ecx, eax
                xor     [esp+68h+var_30], eax
                mov     [esp+68h+var_5C], ecx
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 0ABh
                inc     eax
                call    __allshl
                mov     ecx, [esp+68h+var_28]
                xor     edx, edx
                shr     ebx, 8
                push    0
                mov     [eax+edi], ecx
                mov     ecx, [esp+6Ch+var_34]
                mov     eax, [esp+6Ch+var_3C]
                xor     [esp+6Ch+var_54], ecx
                xor     eax, ecx
                xor     [esp+6Ch+var_38], eax
                mov     ecx, [esp+6Ch+var_4C]
                or      ecx, [esp+6Ch+var_2C]
                mov     [esp+6Ch+var_3C], eax
                movzx   eax, bl
                xor     eax, 0F9h
                mov     ebx, [eax+edi]
                mov     eax, [esp+6Ch+var_50]
                or      eax, [esp+6Ch+var_44]
                sub     ebx, ecx
                mov     ecx, [esp+6Ch+var_34]
                sbb     edx, eax
                lea     eax, [ecx+0F1905Ch]
                sub     ebx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_2C], ebx
                cmp     edx, eax
                jg      short loc_4762E8
                jl      short loc_4762DE
                cmp     ebx, eax
                jnb     short loc_4762E8

loc_4762DE:                             ; CODE XREF: VBNCB_unnamed_8000242f+1308¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_4762EC
; ---------------------------------------------------------------------------

loc_4762E8:                             ; CODE XREF: VBNCB_unnamed_8000242f+1306¡üj
                                        ; VBNCB_unnamed_8000242f+130C¡üj
                mov     [esp+68h+var_28], eax

loc_4762EC:                             ; CODE XREF: VBNCB_unnamed_8000242f+1316¡üj
                mov     edx, [esp+68h+var_30]
                xor     ecx, edx
                mov     ebx, [esp+68h+var_54]
                mov     [esp+68h+var_44], eax
                xor     ebx, edx
                movzx   eax, dl
                xor     eax, 0EAh
                mov     [esp+68h+var_34], ecx
                mov     ecx, [esp+68h+var_2C]
                mov     [eax+edi], ecx
                mov     ecx, [esp+68h+var_38]
                mov     edi, [esp+68h+var_40]
                xor     ecx, edx
                xor     edi, [esp+68h+var_38]
                xor     esi, ecx
                shr     edx, 8
                mov     [esp+68h+var_2C], ecx
                mov     ecx, [esp+68h+var_58]
                movzx   eax, dl
                xor     edx, edx
                mov     ecx, [eax+ecx-3Bh]
                mov     eax, [esp+68h+var_38]
                xor     eax, 0EB3921DBh
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      eax, [esp+68h+var_44]
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_30], ecx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                mov     edx, [esp+68h+var_30]
                jg      short loc_476374
                jl      short loc_47636A
                cmp     edx, eax
                jnb     short loc_476374

loc_47636A:                             ; CODE XREF: VBNCB_unnamed_8000242f+1394¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_476378
; ---------------------------------------------------------------------------

loc_476374:                             ; CODE XREF: VBNCB_unnamed_8000242f+1392¡üj
                                        ; VBNCB_unnamed_8000242f+1398¡üj
                mov     [esp+68h+var_28], eax

loc_476378:                             ; CODE XREF: VBNCB_unnamed_8000242f+13A2¡üj
                xor     [esp+68h+var_38], ebx
                xor     edi, ebx
                mov     [esp+68h+var_44], eax
                mov     ecx, ebx
                movzx   eax, bl
                xor     ebx, esi
                xor     [esp+68h+var_5C], ebx
                xor     eax, 10h
                shr     ecx, 8
                mov     [esp+68h+var_40], edi
                mov     edi, [esp+68h+var_58]
                mov     [esp+68h+var_54], ebx
                mov     ebx, [esp+68h+var_3C]
                xor     ebx, esi
                mov     [eax+edi], edx
                xor     edx, edx
                movzx   eax, cl
                mov     ecx, [esp+68h+var_4C]
                xor     eax, 0E2h
                or      ecx, [esp+68h+var_28]
                push    0
                mov     eax, [eax+edi]
                mov     [esp+6Ch+var_30], eax
                mov     eax, [esp+6Ch+var_50]
                or      eax, [esp+6Ch+var_44]
                sub     [esp+6Ch+var_30], ecx
                mov     ecx, [esp+6Ch+var_30]
                sbb     edx, eax
                lea     eax, [esi-19C1170Ah]
                sub     ecx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_30], ecx
                cmp     edx, eax
                jg      short loc_4763F8
                jl      short loc_4763EE
                cmp     ecx, eax
                jnb     short loc_4763F8

loc_4763EE:                             ; CODE XREF: VBNCB_unnamed_8000242f+1418¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_4763FC
; ---------------------------------------------------------------------------

loc_4763F8:                             ; CODE XREF: VBNCB_unnamed_8000242f+1416¡üj
                                        ; VBNCB_unnamed_8000242f+141C¡üj
                mov     [esp+68h+var_28], eax

loc_4763FC:                             ; CODE XREF: VBNCB_unnamed_8000242f+1426¡üj
                mov     edx, [esp+68h+var_40]
                mov     ecx, edx
                xor     esi, edx
                mov     [esp+68h+var_3C], eax
                movzx   eax, dl
                xor     ebx, edx
                xor     edx, [esp+68h+var_5C]
                xor     [esp+68h+var_34], edx
                shr     ecx, 8
                mov     [esp+68h+var_48], esi
                mov     esi, [esp+68h+var_30]
                mov     [eax+edi+2Eh], esi
                mov     esi, [esp+68h+var_2C]
                xor     esi, [esp+68h+var_5C]
                movzx   eax, cl
                mov     [esp+68h+var_40], edx
                xor     edx, edx
                mov     ecx, [eax+edi+25h]
                mov     eax, [esp+68h+var_5C]
                add     eax, 0E5388492h
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                or      eax, [esp+68h+var_3C]
                sub     [esp+68h+var_30], ecx
                sbb     edx, eax
                test    edx, edx
                mov     edx, [esp+68h+var_30]
                jg      short loc_476478
                jl      short loc_47646E
                test    edx, edx
                jnb     short loc_476478

loc_47646E:                             ; CODE XREF: VBNCB_unnamed_8000242f+1498¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_47647D
; ---------------------------------------------------------------------------

loc_476478:                             ; CODE XREF: VBNCB_unnamed_8000242f+1496¡üj
                                        ; VBNCB_unnamed_8000242f+149C¡üj
                and     [esp+68h+var_28], 0

loc_47647D:                             ; CODE XREF: VBNCB_unnamed_8000242f+14A6¡üj
                xor     [esp+68h+var_5C], ebx
                mov     ecx, ebx
                movzx   eax, bl
                xor     esi, ebx
                xor     ebx, [esp+68h+var_34]
                xor     [esp+68h+var_38], ebx
                shr     ecx, 8
                mov     [eax+edi+0B2h], edx
                xor     edx, edx
                movzx   eax, cl
                mov     [esp+68h+var_2C], esi
                mov     esi, [esp+68h+var_54]
                xor     esi, [esp+68h+var_34]
                mov     ecx, [eax+edi+0CDh]
                mov     eax, [esp+68h+var_34]
                add     eax, 704C439Bh
                mov     [esp+68h+var_3C], ebx
                sub     ecx, eax
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_30], ecx
                sbb     edx, [esp+68h+var_50]
                test    edx, edx
                mov     edx, [esp+68h+var_30]
                jg      short loc_4764EA
                jl      short loc_4764E5
                test    edx, edx
                jnb     short loc_4764EA

loc_4764E5:                             ; CODE XREF: VBNCB_unnamed_8000242f+150F¡üj
                xor     ebx, ebx
                inc     ebx
                jmp     short loc_4764EC
; ---------------------------------------------------------------------------

loc_4764EA:                             ; CODE XREF: VBNCB_unnamed_8000242f+150D¡üj
                                        ; VBNCB_unnamed_8000242f+1513¡üj
                xor     ebx, ebx

loc_4764EC:                             ; CODE XREF: VBNCB_unnamed_8000242f+1518¡üj
                mov     ecx, [esp+68h+var_2C]
                xor     esi, ecx
                xor     [esp+68h+var_34], ecx
                movzx   eax, cl
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_48]
                push    0
                mov     [eax+edi-13h], edx
                mov     edx, [esp+6Ch+var_38]
                mov     edi, [esp+6Ch+var_40]
                xor     edx, ecx
                xor     edi, [esp+6Ch+var_38]
                xor     esi, edx
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+6Ch+var_58]
                xor     eax, 8Ch
                mov     [esp+6Ch+var_30], edx
                xor     edx, edx
                mov     eax, [eax+ecx]
                mov     ecx, [esp+6Ch+var_4C]
                mov     [esp+6Ch+var_44], eax
                or      ecx, ebx
                sub     [esp+6Ch+var_44], ecx
                mov     eax, [esp+6Ch+var_38]
                sbb     edx, [esp+6Ch+var_50]
                xor     eax, 0FD6F5522h
                mov     ecx, [esp+6Ch+var_44]
                sub     ecx, eax
                pop     eax
                sbb     edx, eax
                mov     [esp+68h+var_44], ecx
                cmp     edx, eax
                jg      short loc_47656B
                jl      short loc_476561
                cmp     ecx, eax
                jnb     short loc_47656B

loc_476561:                             ; CODE XREF: VBNCB_unnamed_8000242f+158B¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_47656F
; ---------------------------------------------------------------------------

loc_47656B:                             ; CODE XREF: VBNCB_unnamed_8000242f+1589¡üj
                                        ; VBNCB_unnamed_8000242f+158F¡üj
                mov     [esp+68h+var_28], eax

loc_47656F:                             ; CODE XREF: VBNCB_unnamed_8000242f+1599¡üj
                mov     edx, [esp+68h+var_54]
                mov     ecx, edx
                mov     ebx, [esp+68h+var_44]
                xor     edi, edx
                xor     [esp+68h+var_38], edx
                mov     [esp+68h+var_2C], eax
                movzx   eax, dl
                xor     edx, esi
                xor     [esp+68h+var_5C], edx
                xor     eax, 97h
                shr     ecx, 8
                mov     [esp+68h+var_40], edi
                mov     edi, [esp+68h+var_58]
                mov     [esp+68h+var_54], edx
                xor     edx, edx
                mov     [eax+edi], ebx
                mov     ebx, [esp+68h+var_3C]
                movzx   eax, cl
                xor     ebx, esi
                xor     eax, 55h
                mov     ecx, [eax+edi]
                mov     eax, esi
                xor     eax, 9381CCD3h
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_3C], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      eax, [esp+68h+var_2C]
                or      ecx, [esp+68h+var_28]
                sub     [esp+68h+var_3C], ecx
                sbb     edx, eax
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_4765F1
                jl      short loc_4765E7
                cmp     [esp+68h+var_3C], eax
                jnb     short loc_4765F1

loc_4765E7:                             ; CODE XREF: VBNCB_unnamed_8000242f+160F¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_4765F5
; ---------------------------------------------------------------------------

loc_4765F1:                             ; CODE XREF: VBNCB_unnamed_8000242f+160D¡üj
                                        ; VBNCB_unnamed_8000242f+1615¡üj
                mov     [esp+68h+var_28], eax

loc_4765F5:                             ; CODE XREF: VBNCB_unnamed_8000242f+161F¡üj
                mov     edx, [esp+68h+var_40]
                mov     ecx, edx
                xor     esi, edx
                mov     [esp+68h+var_2C], eax
                movzx   eax, dl
                xor     ebx, edx
                shr     ecx, 8
                mov     [esp+68h+var_48], esi
                mov     esi, [esp+68h+var_3C]
                mov     [eax+edi-0A5h], esi
                mov     eax, [esp+68h+var_5C]
                xor     edx, eax
                xor     [esp+68h+var_30], eax
                xor     [esp+68h+var_34], edx
                mov     esi, [esp+68h+var_4C]
                movzx   eax, cl
                xor     eax, 3Fh
                mov     [esp+68h+var_40], edx
                xor     edx, edx
                mov     ecx, [eax+edi]
                mov     eax, [esp+68h+var_5C]
                add     eax, 82ABD2F0h
                sub     ecx, eax
                mov     eax, [esp+68h+var_50]
                mov     [esp+68h+var_3C], ecx
                mov     ecx, esi
                sbb     edx, edx
                or      ecx, [esp+68h+var_28]
                or      eax, [esp+68h+var_2C]
                sub     [esp+68h+var_3C], ecx
                sbb     edx, eax
                test    edx, edx
                mov     edx, [esp+68h+var_3C]
                jg      short loc_476676
                jl      short loc_47666C
                test    edx, edx
                jnb     short loc_476676

loc_47666C:                             ; CODE XREF: VBNCB_unnamed_8000242f+1696¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_47667B
; ---------------------------------------------------------------------------

loc_476676:                             ; CODE XREF: VBNCB_unnamed_8000242f+1694¡üj
                                        ; VBNCB_unnamed_8000242f+169A¡üj
                and     [esp+68h+var_28], 0

loc_47667B:                             ; CODE XREF: VBNCB_unnamed_8000242f+16A4¡üj
                xor     [esp+68h+var_5C], ebx
                mov     ecx, ebx
                xor     [esp+68h+var_30], ebx
                or      esi, [esp+68h+var_28]
                movzx   eax, bl
                xor     ebx, [esp+68h+var_34]
                xor     eax, 83h
                xor     [esp+68h+var_38], ebx
                shr     ecx, 8
                mov     [esp+68h+var_3C], ebx
                mov     ebx, [esp+68h+var_34]
                mov     [eax+edi], edx
                mov     edi, [esp+68h+var_54]
                xor     edi, [esp+68h+var_34]
                movzx   eax, cl
                mov     ecx, [esp+68h+var_58]
                mov     eax, [eax+ecx-8Fh]
                xor     ecx, ecx
                mov     [esp+68h+var_44], eax
                lea     eax, [ebx-4F89E8C4h]
                sub     [esp+68h+var_44], eax
                mov     eax, [esp+68h+var_44]
                sbb     ecx, ecx
                sub     eax, esi
                mov     [esp+68h+var_44], eax
                sbb     ecx, [esp+68h+var_50]
                test    ecx, ecx
                jg      short loc_4766F1
                jl      short loc_4766E7
                test    eax, eax
                jnb     short loc_4766F1

loc_4766E7:                             ; CODE XREF: VBNCB_unnamed_8000242f+1711¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_4766F6
; ---------------------------------------------------------------------------

loc_4766F1:                             ; CODE XREF: VBNCB_unnamed_8000242f+170F¡üj
                                        ; VBNCB_unnamed_8000242f+1715¡üj
                and     [esp+68h+var_28], 0

loc_4766F6:                             ; CODE XREF: VBNCB_unnamed_8000242f+171F¡üj
                mov     eax, [esp+68h+var_30]
                xor     edi, eax
                mov     ecx, [esp+68h+var_58]
                xor     ebx, eax
                mov     edx, [esp+68h+var_44]
                movzx   eax, al
                xor     eax, 94h
                mov     [esp+68h+var_34], ebx
                mov     ebx, [esp+68h+var_38]
                mov     esi, [esp+68h+var_4C]
                or      esi, [esp+68h+var_28]
                mov     [eax+ecx], edx
                mov     eax, ebx
                xor     eax, [esp+68h+var_30]
                xor     ecx, ecx
                xor     [esp+68h+var_48], eax
                mov     [esp+68h+var_2C], eax
                mov     eax, edi
                xor     eax, ebx
                mov     [esp+68h+var_54], edi
                mov     edi, [esp+68h+var_40]
                xor     ebx, 0AB060527h
                xor     edi, eax
                mov     [esp+68h+var_44], eax
                mov     eax, [esp+68h+var_54]
                xor     [esp+68h+var_5C], eax
                xor     eax, 4433A393h
                or      ecx, eax
                mov     [esp+68h+var_38], ebx
                mov     eax, [esp+68h+var_30]
                mov     ebx, [esp+68h+var_58]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 83h
                mov     ebx, [eax+ebx]
                xor     eax, eax
                sub     ebx, ecx
                sbb     eax, [esp+68h+var_38]
                sub     ebx, esi
                mov     [esp+68h+var_28], ebx
                sbb     eax, [esp+68h+var_50]
                test    eax, eax
                jg      short loc_476798
                jl      short loc_47678E
                test    ebx, ebx
                jnb     short loc_476798

loc_47678E:                             ; CODE XREF: VBNCB_unnamed_8000242f+17B8¡üj
                mov     [esp+68h+var_38], 1
                jmp     short loc_47679D
; ---------------------------------------------------------------------------

loc_476798:                             ; CODE XREF: VBNCB_unnamed_8000242f+17B6¡üj
                                        ; VBNCB_unnamed_8000242f+17BC¡üj
                and     [esp+68h+var_38], 0

loc_47679D:                             ; CODE XREF: VBNCB_unnamed_8000242f+17C6¡üj
                mov     edx, [esp+68h+var_48]
                mov     ecx, edx
                mov     ebx, [esp+68h+var_58]
                xor     [esp+68h+var_54], edx
                xor     [esp+68h+var_5C], edx
                mov     esi, [esp+68h+var_28]
                xor     [esp+68h+var_34], edi
                movzx   eax, dl
                xor     edx, edi
                shr     ecx, 8
                mov     [esp+68h+var_48], edx
                mov     [eax+ebx-83h], esi
                mov     ebx, [esp+68h+var_3C]
                movzx   eax, cl
                xor     ebx, edx
                mov     ecx, [esp+68h+var_58]
                xor     edx, edx
                mov     ecx, [eax+ecx-72h]
                lea     eax, [edi+4A79398Bh]
                sub     ecx, eax
                mov     [esp+68h+var_30], ecx
                mov     ecx, [esp+68h+var_4C]
                sbb     edx, edx
                or      ecx, [esp+68h+var_38]
                sub     [esp+68h+var_30], ecx
                sbb     edx, [esp+68h+var_50]
                xor     eax, eax
                cmp     edx, eax
                jg      short loc_476813
                jl      short loc_476809
                cmp     [esp+68h+var_30], eax
                jnb     short loc_476813

loc_476809:                             ; CODE XREF: VBNCB_unnamed_8000242f+1831¡üj
                mov     [esp+68h+var_28], 1
                jmp     short loc_476817
; ---------------------------------------------------------------------------

loc_476813:                             ; CODE XREF: VBNCB_unnamed_8000242f+182F¡üj
                                        ; VBNCB_unnamed_8000242f+1837¡üj
                mov     [esp+68h+var_28], eax

loc_476817:                             ; CODE XREF: VBNCB_unnamed_8000242f+1841¡üj
                mov     edx, [esp+68h+var_5C]
                mov     ecx, edx
                xor     [esp+68h+var_34], edx
                xor     edi, edx
                mov     esi, [esp+68h+var_30]
                xor     [esp+68h+var_44], ebx
                mov     [esp+68h+var_38], eax
                movzx   eax, dl
                mov     edx, [esp+68h+var_58]
                xor     eax, 0FDh
                mov     [eax+edx], esi
                mov     edx, ecx
                shr     ecx, 8
                xor     edx, ebx
                xor     [esp+68h+var_2C], edx
                movzx   eax, cx
                mov     ecx, [esp+68h+var_58]
                xor     eax, 0EC13h
                mov     [esp+68h+var_5C], edx
                xor     edx, edx
                mov     esi, [eax+ecx]
                mov     ecx, [esp+68h+var_4C]
                or      ecx, [esp+68h+var_28]
                mov     eax, [esp+68h+var_50]
                or      eax, [esp+68h+var_38]
                sub     esi, ecx
                sbb     edx, eax
                lea     eax, [ebx-4A0D7AB7h]
                sub     esi, eax
                mov     [esp+68h+var_28], esi
                sbb     edx, 0
                test    edx, edx
                jg      short loc_476890
                jl      short loc_47688B
                test    esi, esi
                jnb     short loc_476890

loc_47688B:                             ; CODE XREF: VBNCB_unnamed_8000242f+18B5¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_476892
; ---------------------------------------------------------------------------

loc_476890:                             ; CODE XREF: VBNCB_unnamed_8000242f+18B3¡üj
                                        ; VBNCB_unnamed_8000242f+18B9¡üj
                xor     eax, eax

loc_476892:                             ; CODE XREF: VBNCB_unnamed_8000242f+18BE¡üj
                mov     edx, [esp+68h+var_34]
                xor     ebx, edx
                mov     ecx, [esp+68h+var_58]
                xor     [esp+68h+var_44], edx
                mov     esi, [esp+68h+var_28]
                mov     [esp+68h+var_3C], eax
                movzx   eax, dl
                mov     [eax+ecx+50h], esi
                mov     eax, [esp+68h+var_2C]
                xor     eax, edx
                mov     esi, [esp+68h+var_58]
                xor     [esp+68h+var_54], eax
                mov     edx, [esp+68h+var_2C]
                mov     [esp+68h+var_38], eax
                mov     eax, [esp+68h+var_44]
                xor     edi, eax
                mov     ecx, eax
                mov     [esp+68h+var_40], edi
                xor     ecx, edx
                add     eax, 774484F8h
                xor     [esp+68h+var_48], ecx
                add     edx, 0F92E5F79h
                mov     [esp+68h+var_30], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, [esp+68h+var_34]
                shr     eax, 8
                movzx   eax, al
                mov     edi, [eax+esi+0BCh]
                xor     eax, eax
                sub     edi, ecx
                mov     [esp+68h+var_34], edi
                mov     ecx, [esp+68h+var_34]
                sbb     eax, edx
                mov     edx, [esp+68h+var_3C]
                xor     edi, edi
                or      edx, [esp+68h+var_4C]
                or      edi, [esp+68h+var_50]
                sub     ecx, edx
                mov     [esp+68h+var_34], ecx
                sbb     eax, edi
                test    eax, eax
                jg      short loc_47692E
                jl      short loc_476929
                test    ecx, ecx
                jnb     short loc_47692E

loc_476929:                             ; CODE XREF: VBNCB_unnamed_8000242f+1953¡üj
                xor     edi, edi
                inc     edi
                jmp     short loc_476930
; ---------------------------------------------------------------------------

loc_47692E:                             ; CODE XREF: VBNCB_unnamed_8000242f+1951¡üj
                                        ; VBNCB_unnamed_8000242f+1957¡üj
                xor     edi, edi

loc_476930:                             ; CODE XREF: VBNCB_unnamed_8000242f+195C¡üj
                mov     eax, [esp+68h+var_54]
                mov     ecx, eax
                xor     [esp+68h+var_44], eax
                mov     edx, [esp+68h+var_40]
                xor     edx, eax
                mov     [esp+68h+var_2C], edi
                movzx   eax, al
                xor     edi, edi
                mov     [esp+68h+var_3C], edi
                mov     edi, [esp+68h+var_34]
                mov     [eax+esi+78h], edi
                mov     esi, ecx
                mov     eax, [esp+68h+var_3C]
                or      eax, [esp+68h+var_50]
                mov     edi, [esp+68h+var_4C]
                or      [esp+68h+var_2C], edi
                mov     edi, [esp+68h+var_48]
                xor     esi, edi
                xor     [esp+68h+var_5C], esi
                xor     ebx, edi
                shr     ecx, 8
                mov     [esp+68h+var_3C], eax
                movzx   eax, cl
                mov     ecx, [esp+68h+var_58]
                xor     eax, 0D7h
                mov     [esp+68h+var_54], esi
                mov     eax, [eax+ecx]
                xor     ecx, ecx
                mov     [esp+68h+var_34], eax
                lea     eax, [edi-4629E050h]
                sub     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_34]
                sbb     ecx, ecx
                sub     eax, [esp+68h+var_2C]
                mov     [esp+68h+var_34], eax
                sbb     ecx, [esp+68h+var_3C]
                test    ecx, ecx
                jg      short loc_4769BE
                jl      short loc_4769B9
                test    eax, eax
                jnb     short loc_4769BE

loc_4769B9:                             ; CODE XREF: VBNCB_unnamed_8000242f+19E3¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_4769C0
; ---------------------------------------------------------------------------

loc_4769BE:                             ; CODE XREF: VBNCB_unnamed_8000242f+19E1¡üj
                                        ; VBNCB_unnamed_8000242f+19E7¡üj
                xor     eax, eax

loc_4769C0:                             ; CODE XREF: VBNCB_unnamed_8000242f+19EC¡üj
                mov     edi, [esp+68h+var_58]
                mov     ecx, edx
                xor     [esp+68h+var_48], edx
                xor     ebx, edx
                mov     esi, [esp+68h+var_34]
                mov     [esp+68h+var_28], eax
                movzx   eax, dl
                xor     eax, 0ECh
                shr     ecx, 8
                mov     [eax+edi], esi
                mov     eax, [esp+68h+var_5C]
                xor     edx, eax
                xor     [esp+68h+var_30], eax
                xor     [esp+68h+var_38], edx
                mov     esi, [esp+68h+var_54]
                movzx   eax, cl
                mov     ecx, edi
                xor     eax, 0E9h
                mov     [esp+68h+var_40], edx
                xor     edx, edx
                or      edx, [esp+68h+var_50]
                mov     edi, [eax+ecx]
                xor     ecx, ecx
                mov     eax, [esp+68h+var_28]
                or      eax, [esp+68h+var_4C]
                sub     edi, eax
                mov     eax, [esp+68h+var_5C]
                sbb     ecx, edx
                add     eax, 0E2A65376h
                sub     edi, eax
                mov     [esp+68h+var_28], edi
                sbb     ecx, 0
                test    ecx, ecx
                jg      short loc_476A3A
                jl      short loc_476A35
                test    edi, edi
                jnb     short loc_476A3A

loc_476A35:                             ; CODE XREF: VBNCB_unnamed_8000242f+1A5F¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_476A3C
; ---------------------------------------------------------------------------

loc_476A3A:                             ; CODE XREF: VBNCB_unnamed_8000242f+1A5D¡üj
                                        ; VBNCB_unnamed_8000242f+1A63¡üj
                xor     eax, eax

loc_476A3C:                             ; CODE XREF: VBNCB_unnamed_8000242f+1A68¡üj
                mov     edi, [esp+68h+var_58]
                mov     ecx, ebx
                mov     edx, [esp+68h+var_28]
                xor     [esp+68h+var_5C], ebx
                xor     [esp+68h+var_30], ebx
                mov     [esp+68h+var_2C], eax
                movzx   eax, bx
                xor     eax, 7F28h
                shr     ecx, 10h
                mov     [eax+edi], edx
                mov     edi, [esp+68h+var_38]
                xor     esi, edi
                movzx   eax, cl
                xor     ebx, edi
                mov     ecx, [esp+68h+var_58]
                xor     [esp+68h+var_44], ebx
                mov     [esp+68h+var_3C], ebx
                mov     edx, [eax+ecx+0EDh]
                xor     ecx, ecx
                lea     eax, [edi-0BDBFD78h]
                mov     edi, [esp+68h+var_48]
                sub     edx, eax
                mov     eax, [esp+68h+var_2C]
                sbb     ecx, ecx
                or      eax, [esp+68h+var_4C]
                xor     ebx, ebx
                or      ebx, [esp+68h+var_50]
                sub     edx, eax
                mov     [esp+68h+var_2C], edx
                mov     edx, [esp+68h+var_40]
                sbb     ecx, ebx
                test    ecx, ecx
                mov     ecx, [esp+68h+var_2C]
                jg      short loc_476ABB
                jl      short loc_476AB6
                test    ecx, ecx
                jnb     short loc_476ABB

loc_476AB6:                             ; CODE XREF: VBNCB_unnamed_8000242f+1AE0¡üj
                xor     ebx, ebx
                inc     ebx
                jmp     short loc_476ABD
; ---------------------------------------------------------------------------

loc_476ABB:                             ; CODE XREF: VBNCB_unnamed_8000242f+1ADE¡üj
                                        ; VBNCB_unnamed_8000242f+1AE4¡üj
                xor     ebx, ebx

loc_476ABD:                             ; CODE XREF: VBNCB_unnamed_8000242f+1AE9¡üj
                mov     eax, [esp+68h+var_30]
                xor     esi, eax
                xor     [esp+68h+var_38], eax
                xor     edx, [esp+68h+var_44]
                movzx   eax, al
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_58]
                mov     [eax+esi+0F0h], ecx
                mov     eax, [esp+68h+var_30]
                mov     ecx, [esp+68h+var_44]
                xor     ecx, [esp+68h+var_30]
                shr     eax, 8
                xor     edi, ecx
                movzx   eax, al
                mov     [esp+68h+var_34], ecx
                xor     ecx, ecx
                mov     eax, [eax+esi+2Ch]
                mov     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_44]
                add     eax, 8348CF36h
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_30]
                sbb     ecx, ecx
                or      ebx, [esp+68h+var_4C]
                xor     esi, esi
                or      esi, [esp+68h+var_50]
                sub     eax, ebx
                mov     [esp+68h+var_30], eax
                sbb     ecx, esi
                mov     esi, [esp+68h+var_58]
                test    ecx, ecx
                jg      short loc_476B3C
                jl      short loc_476B32
                test    eax, eax
                jnb     short loc_476B3C

loc_476B32:                             ; CODE XREF: VBNCB_unnamed_8000242f+1B5C¡üj
                xor     eax, eax
                inc     eax
                and     [esp+68h+var_2C], 0
                jmp     short loc_476B42
; ---------------------------------------------------------------------------

loc_476B3C:                             ; CODE XREF: VBNCB_unnamed_8000242f+1B5A¡üj
                                        ; VBNCB_unnamed_8000242f+1B60¡üj
                xor     eax, eax
                and     [esp+68h+var_2C], eax

loc_476B42:                             ; CODE XREF: VBNCB_unnamed_8000242f+1B6A¡üj
                mov     ebx, [esp+68h+var_30]
                mov     [esp+68h+var_28], eax
                mov     eax, [esp+68h+var_54]
                mov     ecx, eax
                xor     [esp+68h+var_44], eax
                xor     edx, eax
                movzx   eax, al
                xor     eax, 53h
                mov     [eax+esi], ebx
                mov     esi, ecx
                mov     ebx, [esp+68h+var_3C]
                xor     esi, edi
                xor     [esp+68h+var_5C], esi
                xor     ebx, edi
                shr     ecx, 8
                movzx   eax, cx
                mov     ecx, [esp+68h+var_58]
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_28]
                mov     eax, [eax+ecx-0D293h]
                xor     ecx, ecx
                mov     [esp+68h+var_30], eax
                lea     eax, [edi+700ABF72h]
                sub     [esp+68h+var_30], eax
                mov     eax, [esp+68h+var_2C]
                sbb     ecx, ecx
                or      eax, [esp+68h+var_50]
                or      esi, [esp+68h+var_4C]
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_30]
                sub     eax, esi
                mov     [esp+68h+var_30], eax
                sbb     ecx, [esp+68h+var_2C]
                test    ecx, ecx
                jg      short loc_476BC5
                jl      short loc_476BC0
                test    eax, eax
                jnb     short loc_476BC5

loc_476BC0:                             ; CODE XREF: VBNCB_unnamed_8000242f+1BEA¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_476BC7
; ---------------------------------------------------------------------------

loc_476BC5:                             ; CODE XREF: VBNCB_unnamed_8000242f+1BE8¡üj
                                        ; VBNCB_unnamed_8000242f+1BEE¡üj
                xor     eax, eax

loc_476BC7:                             ; CODE XREF: VBNCB_unnamed_8000242f+1BF3¡üj
                mov     esi, [esp+68h+var_30]
                xor     edi, edx
                mov     [esp+68h+var_28], eax
                mov     ecx, edx
                mov     [esp+68h+var_48], edi
                xor     ebx, edx
                mov     edi, [esp+68h+var_58]
                movzx   eax, dl
                shr     ecx, 8
                mov     [eax+edi-5Eh], esi
                mov     eax, [esp+68h+var_5C]
                xor     edx, eax
                xor     [esp+68h+var_34], eax
                xor     [esp+68h+var_38], edx
                movzx   eax, cl
                mov     ecx, edi
                xor     eax, 3Ah
                xor     edi, edi
                or      edi, [esp+68h+var_50]
                mov     esi, [eax+ecx]
                xor     ecx, ecx
                mov     eax, [esp+68h+var_28]
                or      eax, [esp+68h+var_4C]
                sub     esi, eax
                mov     eax, [esp+68h+var_5C]
                sbb     ecx, edi
                xor     eax, 0A921125h
                sub     esi, eax
                mov     [esp+68h+var_28], esi
                sbb     ecx, 0
                test    ecx, ecx
                jg      short loc_476C35
                jl      short loc_476C30
                test    esi, esi
                jnb     short loc_476C35

loc_476C30:                             ; CODE XREF: VBNCB_unnamed_8000242f+1C5A¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_476C37
; ---------------------------------------------------------------------------

loc_476C35:                             ; CODE XREF: VBNCB_unnamed_8000242f+1C58¡üj
                                        ; VBNCB_unnamed_8000242f+1C5E¡üj
                xor     eax, eax

loc_476C37:                             ; CODE XREF: VBNCB_unnamed_8000242f+1C63¡üj
                mov     edi, [esp+68h+var_58]
                mov     ecx, ebx
                mov     esi, [esp+68h+var_28]
                xor     [esp+68h+var_5C], ebx
                xor     [esp+68h+var_34], ebx
                mov     [esp+68h+var_2C], eax
                movzx   eax, bl
                xor     eax, 4Dh
                shr     ecx, 8
                mov     [eax+edi], esi
                mov     edi, [esp+68h+var_38]
                xor     ebx, edi
                mov     esi, [esp+68h+var_54]
                xor     [esp+68h+var_44], ebx
                xor     esi, edi
                movzx   eax, cl
                mov     ecx, [esp+68h+var_58]
                xor     eax, 0C6h
                mov     [esp+68h+var_3C], ebx
                mov     ecx, [eax+ecx]
                mov     eax, edi
                mov     [esp+68h+var_30], ecx
                xor     eax, 0E4682A6Fh
                mov     edi, [esp+68h+var_30]
                xor     ecx, ecx
                sub     edi, eax
                mov     eax, [esp+68h+var_2C]
                sbb     ecx, ecx
                or      eax, [esp+68h+var_4C]
                xor     ebx, ebx
                or      ebx, [esp+68h+var_50]
                sub     edi, eax
                mov     [esp+68h+var_30], edi
                mov     edi, [esp+68h+var_48]
                sbb     ecx, ebx
                test    ecx, ecx
                mov     ecx, [esp+68h+var_30]
                jg      short loc_476CBE
                jl      short loc_476CB9
                test    ecx, ecx
                jnb     short loc_476CBE

loc_476CB9:                             ; CODE XREF: VBNCB_unnamed_8000242f+1CE3¡üj
                xor     ebx, ebx
                inc     ebx
                jmp     short loc_476CC0
; ---------------------------------------------------------------------------

loc_476CBE:                             ; CODE XREF: VBNCB_unnamed_8000242f+1CE1¡üj
                                        ; VBNCB_unnamed_8000242f+1CE7¡üj
                xor     ebx, ebx

loc_476CC0:                             ; CODE XREF: VBNCB_unnamed_8000242f+1CEC¡üj
                mov     eax, [esp+68h+var_34]
                xor     esi, eax
                xor     [esp+68h+var_38], eax
                or      ebx, [esp+68h+var_4C]
                xor     edx, [esp+68h+var_44]
                movzx   eax, al
                mov     [esp+68h+var_54], esi
                mov     esi, [esp+68h+var_58]
                push    0
                mov     [eax+esi-92h], ecx
                mov     eax, [esp+6Ch+var_34]
                mov     ecx, [esp+6Ch+var_44]
                xor     ecx, [esp+6Ch+var_34]
                shr     eax, 8
                xor     edi, ecx
                movzx   eax, ax
                xor     eax, 0EAFAh
                mov     [esp+6Ch+var_30], ecx
                xor     ecx, ecx
                mov     eax, [eax+esi]
                xor     esi, esi
                or      esi, [esp+6Ch+var_50]
                sub     eax, ebx
                mov     [esp+6Ch+var_2C], eax
                mov     eax, [esp+6Ch+var_44]
                sbb     ecx, esi
                mov     esi, [esp+6Ch+var_58]
                xor     eax, 55B3468Eh
                sub     [esp+6Ch+var_2C], eax
                pop     ebx
                sbb     ecx, ebx
                cmp     ecx, ebx
                jg      short loc_476D3F
                jl      short loc_476D36
                cmp     [esp+68h+var_2C], ebx
                jnb     short loc_476D3F

loc_476D36:                             ; CODE XREF: VBNCB_unnamed_8000242f+1D5E¡üj
                xor     eax, eax
                inc     eax
                mov     [esp+68h+var_28], eax
                jmp     short loc_476D43
; ---------------------------------------------------------------------------

loc_476D3F:                             ; CODE XREF: VBNCB_unnamed_8000242f+1D5C¡üj
                                        ; VBNCB_unnamed_8000242f+1D64¡üj
                mov     [esp+68h+var_28], ebx

loc_476D43:                             ; CODE XREF: VBNCB_unnamed_8000242f+1D6D¡üj
                mov     eax, [esp+68h+var_54]
                mov     ecx, eax
                xor     [esp+68h+var_44], eax
                xor     edx, eax
                movzx   eax, ax
                xor     eax, 46E3h
                mov     [esp+68h+var_34], ebx
                mov     ebx, [esp+68h+var_2C]
                mov     [esp+68h+var_40], edx
                mov     edx, [esp+68h+var_34]
                or      edx, [esp+68h+var_50]
                mov     [eax+esi], ebx
                mov     esi, ecx
                mov     ebx, [esp+68h+var_3C]
                xor     esi, edi
                xor     [esp+68h+var_5C], esi
                xor     ebx, edi
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+68h+var_58]
                xor     eax, 58h
                mov     [esp+68h+var_54], esi
                mov     [esp+68h+var_34], edx
                mov     esi, [eax+ecx]
                xor     ecx, ecx
                mov     eax, [esp+68h+var_28]
                or      eax, [esp+68h+var_4C]
                sub     esi, eax
                mov     eax, edi
                sbb     ecx, edx
                mov     edx, [esp+68h+var_40]
                xor     eax, 9556AF76h
                sub     esi, eax
                mov     [esp+68h+var_34], esi
                sbb     ecx, 0
                test    ecx, ecx
                jg      short loc_476DC5
                jl      short loc_476DC0
                test    esi, esi
                jnb     short loc_476DC5

loc_476DC0:                             ; CODE XREF: VBNCB_unnamed_8000242f+1DEA¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_476DC7
; ---------------------------------------------------------------------------

loc_476DC5:                             ; CODE XREF: VBNCB_unnamed_8000242f+1DE8¡üj
                                        ; VBNCB_unnamed_8000242f+1DEE¡üj
                xor     eax, eax

loc_476DC7:                             ; CODE XREF: VBNCB_unnamed_8000242f+1DF3¡üj
                mov     esi, [esp+68h+var_58]
                xor     edi, edx
                mov     [esp+68h+var_28], eax
                mov     ecx, edx
                xor     eax, eax
                mov     [esp+68h+var_48], edi
                mov     edi, [esp+68h+var_34]
                xor     ebx, edx
                mov     [esp+68h+var_2C], eax
                movzx   eax, dl
                shr     ecx, 8
                mov     [eax+esi+15h], edi
                mov     eax, [esp+68h+var_2C]
                or      eax, [esp+68h+var_50]
                mov     edi, [esp+68h+var_28]
                or      edi, [esp+68h+var_4C]
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_5C]
                xor     edx, eax
                xor     [esp+68h+var_30], eax
                xor     [esp+68h+var_38], edx
                movzx   eax, cl
                mov     ecx, esi
                xor     eax, 26h
                mov     esi, [eax+ecx]
                xor     ecx, ecx
                mov     eax, [esp+68h+var_5C]
                xor     eax, 93C83CFCh
                sub     esi, eax
                sbb     ecx, ecx
                sub     esi, edi
                mov     [esp+68h+var_28], esi
                sbb     ecx, [esp+68h+var_2C]
                test    ecx, ecx
                jg      short loc_476E42
                jl      short loc_476E3D
                test    esi, esi
                jnb     short loc_476E42

loc_476E3D:                             ; CODE XREF: VBNCB_unnamed_8000242f+1E67¡üj
                xor     eax, eax
                inc     eax
                jmp     short loc_476E44
; ---------------------------------------------------------------------------

loc_476E42:                             ; CODE XREF: VBNCB_unnamed_8000242f+1E65¡üj
                                        ; VBNCB_unnamed_8000242f+1E6B¡üj
                xor     eax, eax

loc_476E44:                             ; CODE XREF: VBNCB_unnamed_8000242f+1E70¡üj
                mov     esi, [esp+68h+var_58]
                mov     ecx, ebx
                mov     edi, [esp+68h+var_28]
                xor     [esp+68h+var_5C], ebx
                xor     [esp+68h+var_30], ebx
                mov     [esp+68h+var_34], eax
                xor     eax, eax
                mov     [esp+68h+var_2C], eax
                movzx   eax, bl
                mov     [eax+esi-55h], edi
                mov     esi, ecx
                mov     eax, [esp+68h+var_2C]
                or      eax, [esp+68h+var_50]
                xor     esi, [esp+68h+var_44]
                mov     edi, [esp+68h+var_34]
                or      edi, [esp+68h+var_4C]
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_38]
                xor     ebx, eax
                xor     [esp+68h+var_54], eax
                xor     esi, eax
                shr     ecx, 8
                movzx   eax, cl
                xor     ecx, ecx
                xor     eax, 2Bh
                mov     [esp+68h+var_40], esi
                mov     esi, [esp+68h+var_58]
                mov     [esp+68h+var_3C], ebx
                mov     ebx, [eax+esi]
                mov     eax, [esp+68h+var_38]
                xor     eax, 0C713E7B4h
                sub     ebx, eax
                sbb     ecx, ecx
                sub     ebx, edi
                mov     edi, [esp+68h+var_48]
                sbb     ecx, [esp+68h+var_2C]
                xor     eax, eax
                cmp     ecx, eax
                jg      short loc_476ED4
                jl      short loc_476ECA
                cmp     ebx, eax
                jnb     short loc_476ED4

loc_476ECA:                             ; CODE XREF: VBNCB_unnamed_8000242f+1EF4¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_476ED8
; ---------------------------------------------------------------------------

loc_476ED4:                             ; CODE XREF: VBNCB_unnamed_8000242f+1EF2¡üj
                                        ; VBNCB_unnamed_8000242f+1EF8¡üj
                mov     [esp+68h+var_2C], eax

loc_476ED8:                             ; CODE XREF: VBNCB_unnamed_8000242f+1F02¡üj
                mov     ecx, [esp+68h+var_54]
                mov     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_30]
                xor     ecx, eax
                xor     [esp+68h+var_38], eax
                xor     edi, eax
                movzx   eax, al
                mov     [eax+esi+15h], ebx
                mov     eax, [esp+68h+var_2C]
                or      eax, [esp+68h+var_4C]
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_34]
                or      eax, [esp+68h+var_50]
                mov     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_30]
                shr     eax, 8
                movzx   eax, al
                mov     ebx, [eax+esi-1Fh]
                xor     eax, eax
                sub     ebx, dword ptr [esp+68h+var_1C]
                sbb     eax, dword ptr [esp+68h+var_1C+4]
                sub     ebx, [esp+68h+var_2C]
                sbb     eax, [esp+68h+var_34]
                test    eax, eax
                jg      short loc_476F3F
                jl      short loc_476F35
                test    ebx, ebx
                jnb     short loc_476F3F

loc_476F35:                             ; CODE XREF: VBNCB_unnamed_8000242f+1F5F¡üj
                mov     [esp+68h+var_2C], 1
                jmp     short loc_476F44
; ---------------------------------------------------------------------------

loc_476F3F:                             ; CODE XREF: VBNCB_unnamed_8000242f+1F5D¡üj
                                        ; VBNCB_unnamed_8000242f+1F63¡üj
                and     [esp+68h+var_2C], 0

loc_476F44:                             ; CODE XREF: VBNCB_unnamed_8000242f+1F6D¡üj
                mov     eax, [esp+68h+var_30]
                and     [esp+68h+var_34], 0
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+esi-12h], ebx
                mov     eax, [esp+68h+var_2C]
                or      eax, [esp+68h+var_4C]
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_34]
                or      eax, [esp+68h+var_50]
                mov     [esp+68h+var_34], eax
                mov     eax, [esp+68h+var_30]
                shr     eax, 18h
                mov     ebx, [eax+esi+0Eh]
                xor     eax, eax
                sub     ebx, [esp+68h+var_2C]
                sbb     eax, [esp+68h+var_34]
                sub     ebx, dword ptr [esp+68h+var_14]
                sbb     eax, dword ptr [esp+68h+var_14+4]
                test    eax, eax
                jg      short loc_476FA0
                jl      short loc_476F96
                test    ebx, ebx
                jnb     short loc_476FA0

loc_476F96:                             ; CODE XREF: VBNCB_unnamed_8000242f+1FC0¡üj
                xor     eax, eax
                inc     eax
                and     [esp+68h+var_2C], 0
                jmp     short loc_476FA6
; ---------------------------------------------------------------------------

loc_476FA0:                             ; CODE XREF: VBNCB_unnamed_8000242f+1FBE¡üj
                                        ; VBNCB_unnamed_8000242f+1FC4¡üj
                xor     eax, eax
                and     [esp+68h+var_2C], eax

loc_476FA6:                             ; CODE XREF: VBNCB_unnamed_8000242f+1FCE¡üj
                mov     [esp+68h+var_28], eax
                mov     eax, [esp+68h+var_40]
                xor     edi, eax
                xor     edx, eax
                movzx   eax, al
                mov     [eax+esi-50h], ebx
                mov     eax, [esp+68h+var_2C]
                or      eax, [esp+68h+var_50]
                mov     ebx, [esp+68h+var_28]
                or      ebx, [esp+68h+var_4C]
                mov     [esp+68h+var_2C], eax
                mov     eax, [esp+68h+var_40]
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+esi-84h]
                mov     [esp+68h+var_30], eax
                xor     eax, eax
                mov     esi, [esp+68h+var_30]
                sub     esi, ebx
                sbb     eax, [esp+68h+var_2C]
                sub     esi, dword ptr [esp+68h+var_C]
                mov     [esp+68h+var_30], esi
                sbb     eax, dword ptr [esp+68h+var_C+4]
                xor     ebx, ebx
                mov     esi, [esp+68h+var_58]
                cmp     eax, ebx
                jg      short loc_477015
                jl      short loc_47700C
                cmp     [esp+68h+var_30], ebx
                jnb     short loc_477015

loc_47700C:                             ; CODE XREF: VBNCB_unnamed_8000242f+2034¡üj
                xor     eax, eax
                inc     eax
                mov     [esp+68h+var_28], eax
                jmp     short loc_477019
; ---------------------------------------------------------------------------

loc_477015:                             ; CODE XREF: VBNCB_unnamed_8000242f+2032¡üj
                                        ; VBNCB_unnamed_8000242f+203A¡üj
                mov     [esp+68h+var_28], ebx

loc_477019:                             ; CODE XREF: VBNCB_unnamed_8000242f+2043¡üj
                mov     eax, [esp+68h+var_40]
                xor     edx, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 2Eh
                mov     [esp+68h+var_2C], ebx
                mov     ebx, [esp+68h+var_30]
                mov     [eax+esi], ebx
                mov     eax, edi
                mov     ebx, [esp+68h+var_3C]
                xor     eax, ecx
                xor     [esp+68h+var_5C], eax
                xor     ebx, edi
                movzx   eax, cl
                xor     edi, 0BE8C2DDBh
                mov     ecx, [esp+68h+var_40]
                sub     eax, edi
                shr     ecx, 18h
                sub     eax, 0FFh
                xor     ecx, 0DBh
                mov     edi, [ecx+esi]
                xor     ecx, ecx
                mov     esi, [esp+68h+var_2C]
                sub     edi, eax
                mov     eax, [esp+68h+var_28]
                sbb     ecx, ecx
                or      esi, [esp+68h+var_50]
                or      eax, [esp+68h+var_4C]
                sub     edi, eax
                mov     [esp+68h+var_2C], esi
                sbb     ecx, esi
                mov     esi, [esp+68h+var_58]
                test    ecx, ecx
                jg      short loc_47708D
                jl      short loc_477092
                test    edi, edi
                jb      short loc_477092

loc_47708D:                             ; CODE XREF: VBNCB_unnamed_8000242f+20B5¡üj
                and     [esp+68h+var_20], 0

loc_477092:                             ; CODE XREF: VBNCB_unnamed_8000242f+20B7¡üj
                                        ; VBNCB_unnamed_8000242f+20BB¡üj
                mov     ecx, [esp+68h+var_5C]
                xor     ebx, edx
                movzx   eax, cl
                xor     eax, 1Bh
                mov     [eax+esi], edi
                mov     eax, ecx
                mov     edi, [esp+68h+var_24]
                lea     ecx, [edx-4FF9CCB1h]
                shr     eax, 8
                and     edi, 0FFFFFF00h
                or      edi, [esp+68h+var_20]
                movzx   eax, ax
                mov     eax, [eax+esi-0D0C8h]
                sub     eax, edi
                mov     edi, esi
                add     ecx, eax
                mov     eax, [esp+68h+var_5C]
                shr     eax, 18h
                mov     [eax+edi+0D2h], ecx
                xor     eax, eax
                mov     ecx, [esp+68h+var_38]
                xor     ecx, [esp+68h+var_5C]
                xor     ecx, edx
                lea     edx, [ebx+8B96723h]
                pop     edi
                xor     ecx, 38618F63h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000242f endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___196      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                mov     [esp+44h+var_44], ecx
                mov     ecx, edx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                xor     ecx, esi
                and     [esp+4Ch+var_4], 0
                sub     ebx, esi
                mov     eax, esi
                shr     eax, 4
                xor     ecx, ebx
                push    edi
                mov     edi, edx
                mov     [esp+50h+var_3C], ecx
                mov     ecx, [esp+50h+var_44]
                shl     edi, 4
                add     edi, eax
                mov     [esp+50h+var_34], ebx
                mov     eax, ebx
                mov     [esp+50h+var_24], edi
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+ecx+3Bh]
                mov     [esp+50h+var_2C], ecx
                mov     ecx, [esp+50h+var_44]
                mov     eax, [eax+ecx+3Fh]
                mov     [esp+50h+var_C], eax
                lea     eax, [esi+61FF44F8h]
                add     eax, edx
                mov     ecx, [esp+50h+var_3C]
                xor     eax, edi
                mov     esi, [esp+50h+var_44]
                xor     eax, ebx
                movzx   ecx, cl
                mov     [esp+50h+var_38], eax
                add     ecx, 3Eh ; '>'
                mov     eax, [esp+50h+var_2C]
                mov     [esp+50h+var_30], ecx
                xor     ecx, ecx
                mov     edx, [esp+50h+var_30]
                mov     eax, [eax+edi+362021FDh]
                mov     [esp+50h+var_10], eax
                mov     eax, ebx
                shr     eax, 18h
                add     edx, [esi+eax*8-4D0h]
                mov     [esp+50h+var_30], edx
                mov     edx, esi
                mov     esi, [ebp+arg_0]
                adc     ecx, [edx+eax*8-4CCh]
                movzx   eax, bl
                xor     eax, 0EDh
                mov     [esp+50h+var_8], ecx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     [esp+50h+var_14], eax
                lea     eax, [esi+7EDD8077h]
                xor     eax, [esp+50h+var_3C]
                xor     eax, edi
                mov     [esp+50h+var_18], ecx
                mov     [esp+50h+var_28], eax
                mov     eax, ebx
                xor     edi, [esp+50h+var_28]
                xor     edi, [esp+50h+var_38]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 39h
                mov     ecx, [eax+edx]
                mov     ebx, [eax+edx+4]
                mov     edx, [ebp+arg_4]
                add     edx, 0D902A644h
                mov     [esp+50h+var_20], ecx
                add     esi, edx
                mov     edx, [esp+50h+var_34]
                xor     esi, [esp+50h+var_38]
                xor     esi, [esp+50h+var_3C]
                mov     eax, esi
                xor     eax, [esp+50h+var_28]
                xor     eax, edx
                xor     eax, 82D9B579h
                mov     [esp+50h+var_1C], eax
                mov     ecx, edi
                xor     ecx, esi
                xor     eax, edi
                xor     eax, [esp+50h+var_3C]
                mov     [esp+50h+var_40], ecx
                mov     ecx, [esp+50h+var_24]
                xor     eax, ecx
                xor     [esp+50h+var_40], ecx
                xor     [esp+50h+var_40], edx
                mov     edx, eax
                mov     ecx, [esp+50h+var_44]
                xor     edx, 0ECDA6ACCh
                push    offset dword_40C1E0
                mov     [esp+54h+var_24], eax
                call    VBN_TransformContext
                xor     esi, 0CA81E027h
                xor     edi, 0F4A4E97Fh
                mov     [esp+50h+var_34], esi
                xor     esi, esi
                mov     eax, [esp+50h+var_34]
                or      esi, edi
                add     esi, [esp+50h+var_20]
                mov     edi, [esp+50h+var_1C]
                adc     eax, ebx
                xor     ecx, ecx
                mov     ebx, [esp+50h+var_40]
                mov     [esp+50h+var_34], eax
                mov     eax, ebx
                xor     eax, 0F5192CC5h
                lea     edx, [edi-4FBFA568h]
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, ebx
                xor     ecx, edi
                mov     [esi+4], edx
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_3C]
                mov     edi, [esp+50h+var_44]
                mov     edx, [esp+50h+var_34]
                movzx   eax, cl
                xor     eax, 5Fh
                mov     [edi+eax*8+4], edx
                mov     [edi+eax*8], esi
                mov     eax, ecx
                mov     edx, [esp+50h+var_18]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-420h], edx
                mov     edx, [esp+50h+var_14]
                mov     [edi+eax*8-41Ch], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_10]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F0h
                shr     ecx, 18h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], edx
                mov     eax, [esp+50h+var_2C]
                mov     edx, [esp+50h+var_28]
                mov     [ecx+edi-1Ah], eax
                mov     eax, [esp+50h+var_C]
                mov     [ecx+edi-16h], eax
                mov     eax, [esp+50h+var_38]
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_24]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_30]
                mov     [edi+ecx*8-168h], eax
                mov     eax, [esp+50h+var_8]
                mov     [edi+ecx*8-164h], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_38]
                xor     ecx, 1B4A194Eh
                xor     edx, 751F763h
                pop     edi
                pop     esi
                or      eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___196      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___184_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                lea     ecx, [edx+64CBE8B0h]
                add     ecx, esi
                mov     [ebp+var_4], edi
                movzx   eax, cl
                push    offset dword_40C610
                mov     ebx, [eax+edi-13h]
                mov     eax, [eax+edi-0Fh]
                lea     edi, [edx+587694CFh]
                mov     [ebp+var_C], ebx
                add     edi, esi
                mov     [ebp+var_10], eax
                mov     ebx, esi
                mov     eax, edx
                shl     ebx, 4
                shr     eax, 4
                xor     edi, ecx
                add     ebx, eax
                mov     [ebp+var_8], ebx
                mov     ebx, edx
                xor     edx, esi
                sub     ebx, esi
                xor     ebx, [ebp+var_8]
                xor     edx, edi
                xor     edx, [ebp+var_8]
                xor     ebx, ecx
                mov     ecx, [ebp+var_4]
                sub     edx, 16E7F6F5h
                xor     ebx, 6DFB8D22h
                call    VBN_TransformContext
                mov     eax, ebx
                xor     bl, 81h
                shr     eax, 8
                sub     al, 23h ; '#'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, [ebp+var_10]
                mov     [ecx+1B8h], eax
                xor     eax, eax
                mov     [ecx+1BCh], edx
                lea     ecx, [edi+7CDC96FBh]
                mov     edx, [ebp+var_8]
                pop     edi
                pop     esi
                xor     edx, 0BB520105h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___184_stk  endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___153_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                sub     eax, edx
                push    ebx
                mov     [ebp+var_4], eax
                push    esi
                mov     esi, ecx
                movzx   eax, al
                xor     eax, 76h
                mov     [ebp+var_C], esi
                push    edi
                push    offset dword_40C9D0
                lea     edx, [edx-2FF9FA27h]
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                add     al, 7Fh
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 5Ch
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+arg_0]
                mov     [ecx+1BCh], edx
                mov     eax, ebx
                sub     eax, [ebp+arg_4]
                xor     edx, edx
                pop     edi
                lea     ecx, [ebx+2D75EAF5h]
                xor     eax, ecx
                mov     ecx, [ebp+var_4]
                xor     eax, ecx
                xor     ecx, [ebp+arg_4]
                xor     ecx, ebx
                xor     eax, 0BBD08779h
                xor     ecx, 7EEF7993h
                sub     eax, 0BAC9C51h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___153_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___35_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                push    offset dword_40AD00
                mov     [ebp+var_8], ebx
                lea     eax, [esi+1BE40158h]
                movzx   eax, al
                lea     edx, [esi+6DCF55C0h]
                xor     edx, 5AC862BEh
                mov     ecx, [eax+ebx+56h]
                mov     edi, [eax+ebx+5Ah]
                mov     [ebp+var_4], ecx
                mov     ecx, ebx
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_0]
                lea     eax, [esi+1BE40158h]
                add     ebx, 0E076C4DBh
                xor     ecx, ecx
                xor     ebx, eax
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 3Eh ; '>'
                xor     eax, 0A3Fh
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, [ebp+var_4]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                mov     ecx, [ebp+arg_4]
                pop     edi
                lea     esi, [ecx+6DCF55C0h]
                lea     eax, [ecx+1BE40158h]
                lea     edx, [ecx+1E1F949Fh]
                add     ecx, 28512A03h
                xor     ecx, ebx
                xor     edx, esi
                xor     ecx, esi
                xor     edx, eax
                xor     eax, eax
                xor     ecx, 43207FE8h
                pop     esi
                xor     edx, 381A56D4h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___35_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___99       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, ecx
                shl     edx, 4
                mov     ecx, [ebp+arg_0]
                xor     eax, ecx
                mov     [esp+4Ch+var_40], eax
                shr     eax, 8
                movzx   eax, al
                xor     eax, 9Dh
                mov     [esp+4Ch+var_3C], esi
                push    edi
                and     [esp+50h+var_4], 0
                push    offset dword_40C78C
                mov     ebx, [eax+esi]
                mov     eax, [esp+54h+var_40]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 95h
                mov     esi, [esi+eax*8]
                mov     dword ptr [esp+54h+var_30], esi
                mov     esi, [esp+54h+var_3C]
                mov     edi, esi
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, ecx
                shr     eax, 4
                add     edx, eax
                movzx   eax, dl
                mov     [esp+54h+var_38], edx
                mov     edx, [eax+esi-42h]
                mov     eax, [eax+esi-3Eh]
                mov     dword ptr [esp+54h+var_28+4], eax
                mov     eax, [esp+54h+var_40]
                shr     eax, 18h
                xor     eax, 20h
                mov     dword ptr [esp+54h+var_28], edx
                mov     esi, [edi+eax*8]
                mov     eax, [esp+54h+var_38]
                shr     eax, 8
                movzx   eax, al
                mov     edx, [edi+eax*8-398h]
                mov     eax, [edi+eax*8-394h]
                mov     [esp+54h+var_1C], eax
                mov     eax, [esp+54h+var_40]
                movzx   eax, al
                xor     eax, 2
                mov     [esp+54h+var_20], edx
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                lea     edi, [ecx+576CF739h]
                xor     edi, [esp+54h+var_40]
                mov     ecx, [esp+54h+var_3C]
                mov     [esp+54h+var_14], edx
                mov     [esp+54h+var_10], eax
                lea     edx, [edi+0F652270h]
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_38]
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                lea     esi, [ecx+1A2F7D71h]
                mov     eax, [ebx+eax*4-80h]
                mov     [esp+50h+var_18], eax
                mov     eax, [ebp+arg_0]
                sub     edx, eax
                lea     ebx, [eax-726BEFCh]
                mov     eax, edx
                add     ebx, ecx
                xor     eax, edi
                xor     ebx, [esp+50h+var_38]
                xor     ebx, [esp+50h+var_40]
                xor     eax, [esp+50h+var_38]
                xor     esi, ebx
                mov     [esp+50h+var_C], ebx
                xor     esi, edi
                mov     [esp+50h+var_8], eax
                xor     edx, eax
                xor     edi, edi
                xor     edx, ebx
                mov     ebx, esi
                xor     ebx, eax
                mov     [esp+50h+var_34], edx
                xor     ebx, [esp+50h+var_40]
                xor     ebx, 621BE90Ah
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 95h
                xor     eax, 5DA0h
                movzx   eax, ax
                cdq
                sub     ecx, eax
                mov     eax, [esp+50h+var_34]
                sbb     edi, edx
                add     dword ptr [esp+50h+var_30], ecx
                mov     edx, esi
                adc     edi, dword ptr [esp+50h+var_30+4]
                add     eax, 11F0026h
                xor     ecx, ecx
                xor     edx, 0A635EA17h
                or      ecx, eax
                mov     eax, dword ptr [esp+50h+var_30]
                mov     [eax], ecx
                mov     [eax+4], edx
                mov     eax, [esp+50h+var_38]
                mov     ecx, [esp+50h+var_3C]
                shr     eax, 18h
                xor     al, 0EBh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+50h+var_28]
                adc     edx, dword ptr [esp+50h+var_28+4]
                shr     ebx, 18h
                xor     ebx, 6Fh
                mov     [ecx+ebx*8], eax
                mov     eax, ecx
                mov     ecx, [esp+50h+var_20]
                mov     [eax+ebx*8+4], edx
                mov     edx, [esp+50h+var_34]
                mov     ebx, [esp+50h+var_3C]
                xor     edx, esi
                xor     edx, [esp+50h+var_38]
                xor     edx, [esp+50h+var_40]
                movzx   eax, dl
                xor     eax, 20h
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+50h+var_1C]
                mov     [ebx+eax*8+4], ecx
                mov     eax, edx
                mov     ecx, [esp+50h+var_18]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [ebx+eax*8-264h], 0
                mov     [ebx+eax*8-268h], ecx
                mov     eax, edx
                mov     ecx, dword ptr [esp+50h+var_30]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 8Fh
                shr     edx, 18h
                xor     edx, 50h
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [ebx+eax*8+4], edi
                add     ecx, 3B5F8F93h
                mov     eax, [esp+50h+var_14]
                mov     [edx+ebx], eax
                mov     eax, [esp+50h+var_10]
                mov     [edx+ebx+4], eax
                xor     eax, eax
                mov     edx, [esp+50h+var_C]
                pop     edi
                pop     esi
                xor     edx, 0E35C1201h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___99       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___147      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                and     [esp+50h+var_4], 0
                mov     ebx, ecx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                xor     edx, edi
                movzx   eax, dl
                mov     [esp+58h+var_4C], edx
                mov     [esp+58h+var_48], ebx
                mov     esi, [eax+ebx+4Eh]
                mov     eax, [eax+ebx+52h]
                mov     [esp+58h+var_3C], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+58h+var_18], esi
                mov     ecx, [ebx+eax*8+28h]
                mov     eax, [ebx+eax*8+2Ch]
                mov     dword ptr [esp+58h+var_34], ecx
                mov     dword ptr [esp+58h+var_34+4], eax
                xor     eax, eax
                movzx   ecx, dl
                inc     eax
                xor     ecx, 42h
                xor     edx, edx
                call    __allshl
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [esp+58h+var_4C]
                add     ebx, esi
                mov     [esp+58h+var_28], ebx
                adc     eax, [esp+58h+var_3C]
                mov     [esp+58h+var_24], eax
                mov     eax, [esp+58h+var_48]
                shr     edx, 8
                movzx   ecx, dl
                xor     dl, 0C0h
                push    offset dword_40AB00
                mov     eax, [eax+ecx*8-290h]
                mov     dword ptr [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_48]
                mov     eax, [eax+ecx*8-28Ch]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, [ebx]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 10h
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, 88h
                cdq
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                add     ebx, [ecx+edx]
                adc     eax, [ecx+edx+4]
                mov     ecx, edi
                mov     [esp+5Ch+var_2C], eax
                mov     eax, [ebp+arg_4]
                shl     ecx, 4
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, eax
                mov     [esp+5Ch+var_44], eax
                xor     esi, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_14], esi
                lea     edx, [esi-47DEBC05h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     eax, [edi-42FFB758h]
                add     eax, ecx
                mov     edx, ecx
                xor     eax, [esp+58h+var_4C]
                sub     edx, edi
                xor     eax, [esp+58h+var_4C]
                xor     edx, esi
                xor     edx, [esp+58h+var_4C]
                mov     [esp+58h+var_C], eax
                mov     [esp+58h+var_8], edx
                shl     ecx, 4
                shr     edi, 4
                add     ecx, edi
                xor     ecx, eax
                xor     ecx, esi
                xor     esi, esi
                mov     [esp+58h+var_40], ecx
                mov     ecx, [esp+58h+var_44]
                xor     ecx, edx
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                xor     eax, edx
                mov     [esp+58h+var_44], ecx
                xor     eax, [esp+58h+var_4C]
                mov     ecx, [esp+58h+var_40]
                xor     eax, 0D1A7DCBFh
                mov     [esp+58h+var_38], eax
                mov     eax, [esp+58h+var_40]
                shr     eax, 8
                sub     al, 39h ; '9'
                movzx   edi, cl
                movzx   eax, al
                sub     edi, 3Ch ; '<'
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_44]
                adc     esi, dword ptr [esp+58h+var_34+4]
                xor     eax, 9A6EE755h
                xor     ecx, ecx
                xor     edx, 0B0675FAh
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_4C]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                movzx   eax, cl
                mov     [edx+eax*8+68h], ebx
                mov     ebx, [esp+58h+var_48]
                mov     edx, [esp+58h+var_2C]
                mov     [ebx+eax*8+6Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 35h
                mov     [ebx+eax*8], edx
                mov     edx, [esp+58h+var_24]
                mov     [ebx+eax*8+4], edx
                mov     eax, ecx
                mov     edx, dword ptr [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0D1h
                mov     [ebx+eax*8-378h], edx
                mov     edx, dword ptr [esp+58h+var_20+4]
                mov     [ebx+eax*8-374h], edx
                mov     eax, [esp+58h+var_18]
                mov     [ecx+ebx], eax
                mov     eax, [esp+58h+var_3C]
                mov     [ecx+ebx+4], eax
                mov     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_14]
                xor     ecx, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_C]
                movzx   eax, cl
                shr     ecx, 8
                mov     [ebx+eax*8-578h], edi
                mov     [ebx+eax*8-574h], esi
                movzx   eax, cl
                mov     ecx, [esp+58h+var_10]
                xor     eax, 0EAh
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 91CC487Dh
                add     edx, 5968375Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___147      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000105c proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx
                sub     ebx, [ebp+arg_0]
                mov     eax, ebx
                mov     [esp+20h+var_18], ebx
                shr     eax, 8
                movzx   eax, al
                push    esi
                push    edi
                mov     [esp+28h+var_1C], edx
                mov     ecx, [eax+edx-0BBh]
                mov     eax, [eax+edx-0B7h]
                mov     [esp+28h+var_4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Eh
                mov     [esp+28h+var_8], ecx
                push    offset dword_40BCDC
                mov     ecx, [edx+eax*8]
                mov     eax, ebx
                mov     ebx, [ebp+arg_4]
                shr     eax, 18h
                shl     ebx, 4
                mov     [esp+2Ch+var_14], ecx
                mov     esi, [eax+edx+0Eh]
                mov     edi, [eax+edx+12h]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     ebx, eax
                mov     eax, [esp+2Ch+var_18]
                movzx   edx, al
                mov     eax, [esp+2Ch+var_1C]
                xor     edx, 43h
                movzx   ecx, bl
                xor     ecx, 98h
                mov     [esp+2Ch+var_10], ebx
                mov     ebx, [esp+2Ch+var_14]
                mov     eax, [eax+edx*8]
                mov     [ecx+ebx], eax
                mov     eax, [esp+2Ch+var_1C]
                mov     eax, [eax+edx*8+4]
                mov     edx, ebx
                mov     ebx, [esp+2Ch+var_10]
                mov     [ecx+edx+4], eax
                mov     eax, ebx
                mov     ecx, [esp+2Ch+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 29h
                mov     [eax+edx], esi
                mov     esi, [ebp+arg_0]
                sub     esi, [ebp+arg_4]
                xor     esi, [esp+2Ch+var_18]
                xor     esi, 956E37C9h
                mov     [eax+edx+4], edi
                lea     edx, [esi-77DB9A34h]
                call    VBN_TransformContext
                mov     edx, [esp+28h+var_14]
                xor     ebx, ebx
                xor     ebx, [esp+28h+var_18]
                mov     edi, [esp+28h+var_8]
                movzx   eax, bl
                mov     [eax+edx-51h], edi
                mov     edi, [esp+28h+var_4]
                mov     [eax+edx-4Dh], edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                mov     eax, [ebp+arg_0]
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                lea     ecx, [edi+716B5DF9h]
                xor     edx, esi
                xor     ecx, ebx
                xor     edx, [esp+28h+var_10]
                xor     ecx, esi
                xor     edx, 174F1DA1h
                xor     eax, eax
                xor     ecx, 0C18235FDh
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000105c endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___200      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                mov     eax, edi
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                mov     [esp+58h+var_44], esi
                mov     eax, [ebp+arg_4]
                sub     eax, edi
                mov     [esp+58h+var_48], eax
                movzx   eax, bl
                push    offset dword_40A8FC
                mov     ecx, [esi+eax*8-208h]
                mov     eax, [esi+eax*8-204h]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, [esi+eax*8-3E8h]
                mov     eax, [esi+eax*8-3E4h]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F9h
                mov     dword ptr [esp+5Ch+var_1C], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     [esp+5Ch+var_2C], ecx
                mov     edx, [eax+esi+14h]
                mov     eax, [eax+esi+18h]
                lea     esi, [edi-5E21E2AAh]
                mov     [esp+5Ch+var_10], eax
                xor     esi, ebx
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, al
                mov     [esp+5Ch+var_14], edx
                mov     edx, esi
                xor     edx, 0B40F43E0h
                mov     [esp+5Ch+var_24], esi
                mov     eax, [ecx+eax*4-20h]
                mov     ecx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_C], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_48]
                mov     eax, ebx
                sub     edi, [ebp+arg_4]
                xor     eax, edx
                xor     eax, ebx
                mov     ecx, ebx
                xor     ecx, esi
                mov     [esp+58h+var_20], eax
                xor     ecx, edx
                xor     edx, eax
                xor     edi, ecx
                mov     [esp+58h+var_8], ecx
                xor     edi, eax
                xor     edx, esi
                xor     edi, 0FD1F32C0h
                mov     [esp+58h+var_4], edx
                mov     eax, edx
                mov     [esp+58h+var_34], edi
                xor     eax, ecx
                mov     ecx, edi
                xor     ecx, edx
                xor     eax, ebx
                xor     ecx, [esp+58h+var_48]
                xor     eax, 8D6DB8F7h
                xor     ecx, ebx
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     al, 0C5h
                xor     cl, 3Ch
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_3C]
                mov     edi, [esp+58h+var_34]
                adc     edx, dword ptr [esp+58h+var_3C+4]
                xor     ecx, ecx
                xor     eax, 4CE1082Eh
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi+41DD2290h]
                mov     ecx, [esp+58h+var_30]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_44]
                movzx   eax, al
                xor     eax, 0CCh
                shr     ecx, 18h
                mov     [esi+eax*8], ebx
                mov     ebx, [esp+58h+var_40]
                mov     [esi+eax*8+4], edx
                xor     ebx, edi
                mov     eax, [esp+58h+var_2C]
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_48]
                mov     [ecx+esi+1Eh], eax
                mov     eax, [esp+58h+var_28]
                mov     [ecx+esi+22h], eax
                mov     eax, [esp+58h+var_20]
                xor     al, 36h
                movzx   ecx, bl
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                pop     edi
                adc     edx, dword ptr [esp+54h+var_1C+4]
                xor     ecx, 0E3h
                mov     [esi+ecx*8], eax
                mov     eax, ebx
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+54h+var_14]
                mov     edx, [esp+54h+var_8]
                shr     eax, 8
                xor     edx, 98578981h
                movzx   eax, al
                xor     eax, 66h
                shr     ebx, 10h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+54h+var_C]
                movzx   eax, bl
                and     dword ptr [esi+eax*8-50Ch], 0
                mov     [esi+eax*8-510h], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_4]
                xor     ecx, 318E8CE5h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___200      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___22_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, edx
                sub     ebx, eax
                push    esi
                mov     esi, ecx
                mov     [ebp+var_8], ebx
                lea     ecx, [eax-414537B9h]
                mov     [ebp+var_4], esi
                lea     ebx, [edx+61C5048Eh]
                xor     ebx, [ebp+var_8]
                xor     ebx, ecx
                push    edi
                lea     edi, [eax+92A730Bh]
                mov     eax, ebx
                xor     edi, ecx
                shr     eax, 8
                movzx   ecx, cl
                add     al, 60h ; '`'
                xor     ecx, 0E3h
                movzx   eax, al
                cdq
                push    offset dword_40AD90
                mov     esi, [ecx+esi]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 0FDh
                movzx   eax, bl
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                lea     edx, [edi-4DF8DA40h]
                mov     [eax+1BCh], ecx
                mov     ecx, eax
                mov     [eax+1B8h], esi
                call    VBN_TransformContext
                mov     edx, [ebp+var_8]
                xor     edi, 9160862Bh
                xor     eax, eax
                xor     edx, 0D5791891h
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___22_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___49_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                shl     eax, 4
                mov     ecx, esi
                mov     [ebp+var_8], edi
                shr     ecx, 4
                lea     ebx, [edx-5D5C0B6Fh]
                add     ecx, eax
                mov     eax, esi
                sub     eax, edx
                mov     [ebp+var_4], eax
                lea     eax, [edx+23E3CF2Ch]
                xor     ebx, [ebp+var_4]
                lea     edx, [esi-5C3206CCh]
                add     eax, esi
                xor     ebx, ecx
                xor     eax, ecx
                mov     [ebp+var_C], eax
                xor     edx, [ebp+var_C]
                xor     edx, [ebp+var_4]
                movzx   eax, cl
                xor     edx, 47F791F3h
                push    offset dword_40A970
                mov     ecx, [eax+edi-50h]
                mov     edi, [eax+edi-4Ch]
                mov     [ebp+var_10], ecx
                mov     ecx, [ebp+var_8]
                call    VBN_TransformContext
                mov     eax, ebx
                xor     bl, 2Eh
                shr     eax, 8
                sub     al, 7Bh ; '{'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_8]
                sbb     edx, esi
                add     eax, [ebp+var_10]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                mov     edx, [ebp+var_4]
                xor     ecx, 4E6C4DC4h
                pop     edi
                pop     esi
                xor     edx, 69B1F3AEh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___49_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___97_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                xor     eax, ebx
                mov     [ebp+var_4], ecx
                mov     [ebp+var_8], eax
                lea     edx, [ebx-6041BD20h]
                push    edi
                mov     edi, ebx
                movzx   ecx, dl
                mov     eax, esi
                shl     edi, 4
                shr     eax, 4
                xor     ecx, 0CCh
                add     edi, eax
                shr     ebx, 4
                shl     esi, 4
                mov     eax, edi
                xor     eax, edx
                add     ebx, esi
                xor     ebx, [ebp+var_8]
                mov     esi, [ebp+var_4]
                xor     ebx, edx
                mov     [ebp+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                xor     eax, 654Bh
                mov     esi, [ecx+esi]
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40ABD0
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 0D8h
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_C]
                xor     edi, esi
                xor     edi, ebx
                mov     [eax+1BCh], ecx
                xor     edi, 413F75F5h
                mov     ecx, eax
                mov     edx, edi
                call    VBN_TransformContext
                xor     esi, 0D8733C87h
                lea     edx, [ebx+9FAC0A6h]
                xor     eax, eax
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___97_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___178      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     edx, edi
                and     [esp+50h+var_4], 0
                shl     edx, 4
                add     edx, eax
                mov     [esp+50h+var_40], esi
                mov     eax, edi
                mov     [esp+50h+var_34], edx
                xor     eax, ebx
                mov     [esp+50h+var_3C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [eax+esi+3Ah]
                mov     eax, [eax+esi+3Eh]
                mov     esi, [esp+50h+var_3C]
                mov     [esp+50h+var_10], eax
                movzx   eax, si
                mov     [esp+50h+var_14], ecx
                mov     eax, [eax+ecx-0A0D7h]
                mov     [esp+50h+var_8], eax
                mov     eax, esi
                shr     eax, 10h
                movzx   esi, al
                xor     eax, eax
                movzx   ecx, dl
                add     esi, 3Ah ; ':'
                mov     edx, [esp+50h+var_40]
                xor     ecx, 0DFh
                add     esi, [ecx+edx]
                mov     dword ptr [esp+50h+var_1C], esi
                mov     esi, edx
                mov     edx, [esp+50h+var_34]
                adc     eax, [ecx+esi+4]
                mov     dword ptr [esp+50h+var_1C+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 64h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+50h+var_20], eax
                lea     eax, [ebx-29243A90h]
                add     eax, edi
                mov     [esp+50h+var_24], ecx
                xor     eax, [esp+50h+var_3C]
                mov     ecx, ebx
                xor     eax, edx
                lea     ebx, [edi-2DF3AE1Bh]
                sub     ecx, edi
                mov     [esp+50h+var_2C], eax
                xor     ecx, edx
                mov     eax, edx
                shr     eax, 10h
                xor     ecx, 3FC7AC16h
                xor     ebx, ecx
                mov     [esp+50h+var_30], ecx
                xor     ebx, [esp+50h+var_3C]
                mov     edi, esi
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0D3h
                movzx   eax, al
                mov     esi, [edi+ecx*8-3E8h]
                mov     edi, [edi+ecx*8-3E4h]
                cdq
                sub     esi, eax
                mov     al, bl
                sbb     edi, edx
                xor     al, 8Dh
                movzx   eax, al
                cdq
                add     esi, eax
                adc     edi, edx
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     eax, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_2C]
                xor     eax, ebx
                xor     eax, [esp+50h+var_2C]
                xor     ecx, [esp+50h+var_30]
                mov     [esp+50h+var_28], eax
                mov     eax, ecx
                xor     eax, ebx
                mov     [esp+50h+var_38], ecx
                xor     eax, [esp+50h+var_34]
                mov     ecx, [esp+50h+var_40]
                mov     edx, eax
                push    offset dword_40A920
                xor     edx, 5AC61D1Fh
                mov     [esp+54h+var_C], eax
                call    VBN_TransformContext
                mov     ebx, [esp+50h+var_28]
                xor     ecx, ecx
                mov     edx, [esp+50h+var_38]
                mov     eax, ebx
                xor     eax, 0C84BDFCEh
                xor     edx, 0F362A1ABh
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, ebx
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_34]
                mov     [esi+4], edx
                mov     edx, [esp+50h+var_40]
                movzx   eax, cl
                mov     [edx+eax*8+8], esi
                mov     esi, edx
                mov     edx, [esp+50h+var_24]
                mov     [esi+eax*8+0Ch], edi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                pop     edi
                mov     [esi+eax*8-570h], edx
                mov     edx, [esp+4Ch+var_20]
                mov     [esi+eax*8-56Ch], edx
                mov     eax, ecx
                mov     edx, dword ptr [esp+4Ch+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 5Bh
                mov     [esi+eax*8-4A8h], edx
                mov     edx, dword ptr [esp+4Ch+var_1C+4]
                mov     [esi+eax*8-4A4h], edx
                mov     eax, [esp+4Ch+var_14]
                mov     edx, [esp+4Ch+var_30]
                mov     [ecx+esi], eax
                mov     eax, [esp+4Ch+var_10]
                mov     [ecx+esi+4], eax
                mov     eax, [esp+4Ch+var_C]
                movzx   ecx, al
                mov     eax, [esp+4Ch+var_3C]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, dl
                xor     ecx, eax
                xor     edx, 484B7173h
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+4Ch+var_8]
                xor     ecx, 93h
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_2C]
                add     ecx, 0D782C7h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___178      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___91       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                and     [esp+48h+var_4], 0
                mov     eax, ebx
                mov     [esp+48h+var_38], edx
                xor     eax, [ebp+arg_4]
                mov     [esp+48h+var_44], eax
                push    esi
                mov     esi, ecx
                movzx   eax, dl
                xor     eax, 57h
                mov     [esp+4Ch+var_40], esi
                push    edi
                push    offset dword_40C41C
                mov     edi, [esi+eax*8]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+esi-12h]
                mov     eax, [eax+esi-0Eh]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0A5h
                mov     dword ptr [esp+54h+var_34], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+54h+var_28+4], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 38h
                mov     dword ptr [esp+54h+var_28], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_18], eax
                mov     eax, edx
                shr     eax, 8
                mov     edx, 0FC68F403h
                movzx   eax, al
                mov     [esp+54h+var_1C], ecx
                mov     ecx, [esp+54h+var_40]
                mov     esi, [eax+esi-0Fh]
                mov     eax, [esp+54h+var_44]
                movzx   eax, al
                xor     eax, 0B2h
                mov     ecx, [ecx+eax*8]
                mov     [esp+54h+var_14], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+54h+var_10], eax
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_38]
                mov     ecx, edx
                mov     eax, [esp+50h+var_44]
                xor     ecx, eax
                shr     eax, 10h
                xor     ecx, edx
                movzx   eax, al
                xor     eax, 0D7h
                mov     [esp+50h+var_2C], ecx
                add     eax, esi
                mov     eax, [edi+eax*4]
                lea     edi, [ebx+541A3443h]
                mov     [esp+50h+var_20], eax
                mov     eax, [ebp+arg_4]
                mov     esi, eax
                sub     esi, ebx
                add     edi, eax
                xor     esi, [esp+50h+var_44]
                xor     edi, ecx
                shl     eax, 4
                shr     ebx, 4
                mov     [esp+50h+var_C], esi
                add     eax, ebx
                mov     [esp+50h+var_8], edi
                xor     eax, esi
                xor     eax, ecx
                mov     [esp+50h+var_38], eax
                mov     eax, edi
                mov     ebx, [esp+50h+var_38]
                xor     eax, esi
                xor     eax, edx
                xor     ebx, edi
                xor     ebx, [esp+50h+var_44]
                xor     eax, 992888F6h
                mov     [esp+50h+var_3C], eax
                xor     ebx, edx
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                xor     esi, esi
                sub     al, 24h ; '$'
                sub     edi, 0ECh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                mov     edx, [esp+50h+var_38]
                adc     esi, dword ptr [esp+50h+var_34+4]
                xor     eax, 29378922h
                xor     ecx, ecx
                mov     dword ptr [esp+50h+var_34+4], esi
                or      ecx, eax
                mov     esi, [esp+50h+var_40]
                mov     eax, [esp+50h+var_2C]
                xor     edx, 0DD14F27Ch
                mov     [edi], ecx
                xor     al, 0DFh
                mov     [edi+4], edx
                mov     ecx, ebx
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+50h+var_28]
                adc     edx, dword ptr [esp+50h+var_28+4]
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 1Dh
                shr     ebx, 18h
                xor     ebx, 0E6h
                mov     [esi+ecx*8], eax
                mov     eax, esi
                mov     [eax+ecx*8+4], edx
                mov     ecx, esi
                mov     eax, [esp+50h+var_20]
                mov     edx, [esp+50h+var_1C]
                and     dword ptr [ecx+ebx*8+4], 0
                mov     [ecx+ebx*8], eax
                mov     ebx, esi
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_44]
                mov     esi, dword ptr [esp+50h+var_34+4]
                movzx   eax, cl
                mov     [eax+ebx-0C2h], edx
                mov     edx, [esp+50h+var_18]
                mov     [eax+ebx-0BEh], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_14]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 6Ah
                shr     ecx, 10h
                mov     [ebx+eax*8], edx
                mov     edx, [esp+50h+var_10]
                mov     [ebx+eax*8+4], edx
                mov     edx, [esp+50h+var_C]
                movzx   eax, cl
                add     edx, 0E5270D77h
                mov     ecx, [esp+50h+var_8]
                xor     ecx, 8993710Bh
                mov     [ebx+eax*8-528h], edi
                mov     [ebx+eax*8-524h], esi
                xor     eax, eax
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___91       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___103      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ebx, [ebp+arg_0]
                mov     ecx, edx
                mov     [esp+54h+var_48], esi
                sub     ecx, [ebp+arg_0]
                sub     ebx, edx
                mov     eax, ecx
                mov     [esp+54h+var_44], ecx
                shr     eax, 8
                xor     ebx, 1C4848D5h
                movzx   eax, al
                push    edi
                mov     edi, [esp+58h+var_48]
                mov     [esp+58h+var_40], ebx
                mov     esi, [esi+eax*8+18h]
                mov     [esp+58h+var_18], esi
                mov     esi, [esp+58h+var_48]
                push    offset dword_40BDA0
                mov     eax, [esi+eax*8+1Ch]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 53h
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     esi, ebx
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [esp+5Ch+var_44]
                movzx   eax, al
                mov     [esp+5Ch+var_20], ecx
                xor     ecx, ecx
                shr     esi, 18h
                sub     esi, 39h ; '9'
                add     esi, [edi+eax*8-188h]
                mov     [esp+5Ch+var_10], esi
                mov     esi, edi
                adc     ecx, [esi+eax*8-184h]
                mov     eax, ebx
                shr     eax, 8
                mov     [esp+5Ch+var_C], ecx
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C9h
                movzx   esi, bl
                mov     ecx, [ecx+edi+25h]
                add     ecx, eax
                shl     edx, 4
                mov     eax, edi
                mov     [esp+5Ch+var_8], esi
                mov     edi, [ebp+arg_0]
                mov     eax, [esi+eax+59h]
                mov     eax, [eax+ecx*4]
                mov     ecx, edi
                shr     ecx, 4
                add     ecx, edx
                mov     [esp+5Ch+var_4], eax
                mov     edx, [esp+5Ch+var_44]
                mov     eax, ecx
                xor     eax, edx
                xor     ecx, ebx
                xor     ecx, edx
                mov     [esp+5Ch+var_3C], eax
                mov     eax, edx
                mov     [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, edx
                xor     esi, [esp+5Ch+var_40]
                shr     eax, 18h
                mov     edx, esi
                xor     eax, 8Ah
                xor     edx, 0D8C1402Ah
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     ebx, [eax+ecx+4]
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_44]
                lea     eax, [edi+2A89ED34h]
                xor     ecx, [esp+58h+var_34]
                xor     eax, esi
                xor     eax, [esp+58h+var_34]
                xor     ecx, [esp+58h+var_3C]
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                xor     eax, esi
                mov     [esp+58h+var_24], ecx
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_28], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 29h
                add     eax, 4851h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_30], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_30]
                sub     edx, esi
                mov     esi, [esp+58h+var_38]
                sbb     eax, edi
                add     edx, [esp+58h+var_2C]
                mov     edi, [esp+58h+var_48]
                adc     eax, ebx
                mov     ebx, [esp+58h+var_28]
                mov     [esp+58h+var_2C], eax
                xor     ecx, ecx
                mov     eax, ebx
                xor     esi, 0D7E9DA44h
                xor     eax, 7E0B49DCh
                or      ecx, eax
                mov     [edx], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_24]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     [edx+4], esi
                mov     esi, [esp+58h+var_20]
                movzx   eax, cl
                xor     eax, 0B4h
                mov     [eax+edi], esi
                mov     esi, [esp+58h+var_1C]
                mov     [eax+edi+4], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_18]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 89h
                mov     [edi+eax*8], esi
                mov     esi, [esp+58h+var_14]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_10]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0C0h
                mov     [edi+eax*8-470h], esi
                mov     esi, [esp+58h+var_C]
                mov     [edi+eax*8-46Ch], esi
                mov     eax, [esp+58h+var_2C]
                mov     [edi+ecx*8+4], eax
                mov     [edi+ecx*8], edx
                mov     edx, [esp+58h+var_3C]
                movzx   eax, dl
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_4]
                xor     ecx, 0E2h
                xor     ecx, [esp+58h+var_8]
                and     dword ptr [edi+ecx*8+4], 0
                add     edx, 0E4757FF9h
                mov     [edi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_34]
                pop     edi
                xor     ecx, 0BBC93C07h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___103      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___92_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                mov     [ebp+var_8], esi
                xor     edx, [ebp+arg_0]
                push    edi
                lea     eax, [ecx-58E6043Dh]
                add     edx, 237158D9h
                mov     [ebp+var_4], eax
                mov     ecx, esi
                movzx   eax, al
                xor     eax, 97h
                push    offset dword_40A8E0
                mov     ebx, [eax+esi]
                mov     edi, [eax+esi+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 1Eh
                shr     eax, 10h
                add     al, 1Ah
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                mov     edx, [ebp+arg_4]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                add     edx, 45DEE6A5h
                xor     edx, [ebp+var_4]
                mov     [eax+1BCh], ecx
                add     edx, 204A9252h
                xor     ecx, ecx
                xor     eax, eax
                xor     ecx, [ebp+var_4]
                pop     edi
                sub     ecx, 111A3569h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___92_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___143_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shl     edx, 4
                add     eax, edx
                mov     edx, ebx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     eax, [ebp+var_4]
                push    esi
                push    edi
                mov     edi, ecx
                mov     [ebp+var_C], edx
                movzx   ecx, al
                shr     eax, 10h
                xor     al, 0Fh
                mov     [ebp+var_8], edi
                movzx   eax, al
                mov     esi, [ecx+edi-57h]
                mov     edi, [ecx+edi-53h]
                cdq
                mov     ecx, [ebp+var_8]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     edi, edx
                shr     eax, 8
                xor     al, 4Eh
                movzx   eax, al
                cdq
                add     esi, eax
                push    offset dword_40A520
                adc     edi, edx
                mov     edx, [ebp+arg_0]
                add     ebx, 0CBAFF6A3h
                add     edx, ebx
                mov     ebx, [ebp+var_C]
                xor     edx, ebx
                xor     edx, [ebp+var_4]
                xor     edx, 0FCF011FEh
                call    VBN_TransformContext
                mov     eax, [ebp+var_8]
                xor     ebx, 835D6FC4h
                xor     edx, edx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                xor     eax, eax
                pop     edi
                sub     eax, 1BD8BF56h
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___143_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___81_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                sub     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                mov     eax, edx
                xor     eax, 18EDDB79h
                xor     edx, 18905AE0h
                push    ebx
                mov     [ebp+var_4], eax
                push    esi
                mov     esi, ecx
                movzx   eax, al
                xor     eax, 0BAh
                mov     [ebp+var_10], edx
                push    edi
                push    offset dword_40AC00
                xor     edx, 5D8C758Fh
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0BDh
                shr     ecx, 10h
                movzx   eax, al
                sub     cl, 71h ; 'q'
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     ebx, [ebp+arg_0]
                mov     esi, [ebp+arg_4]
                xor     esi, ebx
                mov     [eax+1BCh], edi
                xor     esi, [ebp+var_10]
                xor     eax, eax
                xor     esi, [ebp+var_4]
                lea     edx, [ebx+36C486A9h]
                xor     edx, [ebp+var_4]
                xor     esi, 9408A0DDh
                pop     edi
                sub     edx, 6A0DD84Ah
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___81_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800023e3 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, edx
                shl     eax, 4
                lea     esi, [edx+0E7AC147h]
                shr     edi, 4
                lea     ebx, [edx-5733337Ch]
                mov     [ebp+var_8], ecx
                sub     edx, [ebp+arg_0]
                add     edi, eax
                mov     ecx, edx
                mov     [ebp+var_4], esi
                xor     edx, [ebp+var_4]
                xor     edi, ebx
                xor     ecx, edi
                xor     edx, ebx
                xor     ecx, esi
                xor     edx, 16C77DF7h
                xor     esi, esi
                mov     eax, ebx
                shr     eax, 8
                or      esi, edx
                mov     edx, [ebp+var_8]
                add     ecx, 24931D3Dh
                movzx   eax, al
                cmp     byte ptr [edx+eax*8-468h], 0
                jnz     short loc_478901
                movzx   eax, bl
                cmp     byte ptr [edx+eax*8-4E8h], 0
                jnz     short loc_478901
                mov     esi, [ebp+var_4]
                lea     eax, [edi+58CE5165h]
                xor     ecx, ecx
                add     esi, 3636B91Bh
                or      ecx, eax

loc_478901:                             ; CODE XREF: VBNCB_unnamed_800023e3+5F¡üj
                                        ; VBNCB_unnamed_800023e3+6C¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023e3 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___176_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                push    offset dword_40C290
                mov     [ebp+var_10], ebx
                lea     eax, [edi+3ED79957h]
                add     eax, esi
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                mov     [ebp+var_C], eax
                mov     eax, edi
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     [ebp+var_14], ecx
                lea     edx, [ecx+3794A2A1h]
                mov     ecx, ebx
                call    VBN_TransformContext
                shl     edi, 4
                xor     ecx, ecx
                shr     esi, 4
                add     edi, esi
                mov     ebx, edi
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 4Ah ; 'J'
                sub     al, 35h ; '5'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_10]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, [ebp+var_C]
                xor     edi, ebx
                xor     edi, [ebp+var_14]
                xor     edx, edx
                mov     [eax+1B8h], esi
                xor     edi, 0B53C2877h
                mov     [eax+1BCh], ecx
                mov     eax, [ebp+var_4]
                xor     eax, 0F99771E6h
                or      edx, eax
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___176_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___115      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                lea     ebx, [eax-1BB7F060h]
                mov     esi, ecx
                shr     eax, 4
                lea     ecx, [edx-62EE86F0h]
                add     ebx, edx
                mov     [esp+4Ch+var_38], ecx
                shl     edx, 4
                add     eax, edx
                mov     [esp+4Ch+var_40], ebx
                mov     edx, eax
                mov     [esp+4Ch+var_44], eax
                movzx   eax, cl
                xor     edx, ecx
                push    edi
                mov     [esp+50h+var_3C], esi
                mov     [esp+50h+var_30], edx
                add     edx, 0A19BDEFFh
                mov     edi, [eax+esi-7Eh]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                push    offset dword_40BDF4
                mov     ecx, [eax+esi+70h]
                mov     eax, [eax+esi+74h]
                mov     [esp+54h+var_1C], eax
                movzx   eax, bl
                mov     [esp+54h+var_20], ecx
                mov     ecx, [eax+esi-8Ch]
                mov     eax, [eax+esi-88h]
                mov     dword ptr [esp+54h+var_18+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 16h
                mov     dword ptr [esp+54h+var_18], ecx
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     eax, [esp+54h+var_38]
                shr     eax, 18h
                xor     eax, 0ACh
                mov     [esp+54h+var_24], ecx
                mov     ecx, [esp+54h+var_3C]
                mov     esi, [eax+esi]
                mov     eax, [esp+54h+var_38]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 1Fh
                mov     ecx, [eax+ecx]
                mov     [esp+54h+var_C], ecx
                mov     ecx, [esp+54h+var_3C]
                mov     eax, [eax+ecx+4]
                mov     [esp+54h+var_8], eax
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_44]
                xor     edx, edx
                xor     eax, [esp+50h+var_40]
                xor     eax, [esp+50h+var_38]
                mov     [esp+50h+var_2C], eax
                mov     eax, [esp+50h+var_40]
                shr     eax, 10h
                movzx   ecx, al
                xor     eax, eax
                xor     ecx, 98h
                inc     eax
                call    __allshl
                mov     edx, [ebp+arg_4]
                add     eax, esi
                mov     eax, [edi+eax*4]
                lea     ecx, [edx-4B7D0278h]
                mov     edi, [esp+50h+var_44]
                xor     ecx, [esp+50h+var_30]
                xor     ecx, [esp+50h+var_40]
                xor     edi, [esp+50h+var_2C]
                xor     edi, [esp+50h+var_30]
                mov     [esp+50h+var_10], eax
                mov     [esp+50h+var_28], ecx
                mov     [esp+50h+var_44], edi
                sub     edx, [ebp+arg_0]
                xor     esi, esi
                xor     edx, ecx
                xor     edx, [esp+50h+var_2C]
                mov     eax, edx
                mov     [esp+50h+var_34], edx
                mov     ecx, [esp+50h+var_34]
                shr     eax, 8
                sub     al, 52h ; 'R'
                movzx   edi, cl
                movzx   eax, al
                sub     edi, 0EEh
                cdq
                sub     edi, eax
                mov     eax, ecx
                sbb     esi, edx
                add     edi, [esp+50h+var_24]
                adc     esi, ebx
                xor     eax, [esp+50h+var_44]
                xor     eax, [esp+50h+var_40]
                xor     ecx, ecx
                xor     eax, [esp+50h+var_38]
                mov     ebx, [esp+50h+var_44]
                xor     ebx, [esp+50h+var_28]
                xor     ebx, [esp+50h+var_38]
                mov     [esp+50h+var_38], eax
                xor     ebx, 2EA701CDh
                xor     eax, 4D0FCADCh
                mov     [esp+50h+var_24], ebx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_3C]
                lea     edx, [ebx+77A0403h]
                xor     ebx, [esp+50h+var_34]
                xor     ebx, [esp+50h+var_30]
                xor     ebx, [esp+50h+var_40]
                mov     [edi+4], edx
                movzx   eax, bl
                xor     eax, 0C9h
                mov     [ecx+eax*8], edi
                mov     edi, ecx
                mov     ecx, [esp+50h+var_20]
                mov     [edi+eax*8+4], esi
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 51h
                mov     [eax+edi], ecx
                mov     ecx, [esp+50h+var_1C]
                mov     [eax+edi+4], ecx
                xor     ecx, ecx
                mov     eax, [esp+50h+var_2C]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-50h]
                add     edx, dword ptr [esp+50h+var_18]
                adc     ecx, dword ptr [esp+50h+var_18+4]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 79h
                mov     [edi+eax*8-0ECh], ecx
                mov     [edi+eax*8-0F0h], edx
                mov     eax, [esp+50h+var_10]
                and     dword ptr [edi+ebx*8+4], 0
                mov     edx, [esp+50h+var_28]
                mov     [edi+ebx*8], eax
                mov     eax, [esp+50h+var_30]
                movzx   ecx, al
                mov     eax, [esp+50h+var_24]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                xor     ecx, esi
                xor     edx, 0DAA27A9h
                mov     [edi+ecx*8-5A0h], eax
                mov     eax, [esp+50h+var_8]
                mov     [edi+ecx*8-59Ch], eax
                mov     ecx, [esp+50h+var_44]
                xor     eax, eax
                pop     edi
                add     ecx, 23C49888h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___115      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___183      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     edx, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                xor     ebx, edi
                mov     [esp+58h+var_4C], ecx
                mov     eax, ebx
                shr     eax, 8
                sub     edx, edi
                movzx   eax, al
                xor     edx, 0A6AD2481h
                xor     eax, 68h
                mov     esi, [esp+58h+var_4C]
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_44], edx
                mov     [esp+58h+var_40], ebx
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+58h+var_34], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+58h+var_34+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, [eax+ecx+7Eh]
                mov     eax, [eax+esi+82h]
                mov     [esp+58h+var_18], eax
                movzx   eax, dx
                mov     [esp+58h+var_1C], ecx
                mov     eax, [eax+ecx-8D61h]
                mov     [esp+58h+var_28], eax
                mov     eax, edx
                shr     eax, 10h
                xor     al, 9Dh
                movzx   ecx, bl
                movzx   eax, al
                cdq
                add     eax, [ecx+esi-20h]
                mov     [esp+58h+var_14], eax
                mov     eax, esi
                adc     edx, [ecx+eax-1Ch]
                mov     ecx, ebx
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 9Eh
                mov     [esp+58h+var_10], edx
                mov     eax, [eax+ecx*8]
                mov     [esp+58h+var_24], eax
                mov     eax, esi
                mov     esi, [ebp+arg_0]
                mov     eax, [eax+ecx*8+4]
                mov     ecx, [ebp+arg_4]
                mov     [esp+58h+var_20], eax
                mov     eax, edi
                sub     eax, esi
                shr     ecx, 4
                mov     edx, eax
                xor     eax, [esp+58h+var_44]
                xor     eax, ebx
                xor     edx, ebx
                mov     [esp+58h+var_38], eax
                mov     ebx, edi
                shl     ebx, 4
                mov     eax, esi
                shr     eax, 4
                add     ebx, eax
                shl     esi, 4
                mov     edi, ebx
                mov     [esp+58h+var_3C], edx
                add     ecx, esi
                xor     edi, edx
                xor     ecx, [esp+58h+var_38]
                xor     edi, [esp+58h+var_44]
                xor     ecx, edx
                xor     ebx, edi
                mov     [esp+58h+var_2C], ecx
                xor     ebx, [esp+58h+var_38]
                xor     ecx, edi
                xor     ecx, [esp+58h+var_40]
                mov     [esp+58h+var_48], ebx
                mov     edx, ecx
                mov     [esp+58h+var_C], ecx
                mov     ecx, [esp+58h+var_4C]
                xor     edx, 0AE57B578h
                push    offset dword_40BA1C
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_48]
                shr     eax, 8
                add     al, 8
                movzx   ebx, bl
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     [esp+58h+var_8], ebx
                mov     esi, edx
                mov     eax, ebx
                cdq
                mov     ebx, eax
                sub     ebx, ecx
                sbb     edx, esi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     esi, [esp+58h+var_2C]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     edi, 2C451ED0h
                xor     ecx, ecx
                lea     eax, [esi+621E5D68h]
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, esi
                mov     [ebx+4], edi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                mov     edi, [esp+58h+var_4C]
                mov     esi, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 3Fh
                mov     [esp+58h+var_48], ecx
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], esi
                mov     eax, ecx
                mov     ecx, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0A8h
                mov     esi, [esp+58h+var_1C]
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_48]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 17h
                shr     ecx, 18h
                mov     [eax+edi], esi
                mov     esi, [esp+58h+var_18]
                mov     [eax+edi+4], esi
                mov     eax, [esp+58h+var_14]
                mov     [edi+ecx*8-380h], eax
                mov     eax, [esp+58h+var_10]
                mov     [edi+ecx*8-37Ch], eax
                mov     eax, [esp+58h+var_C]
                movzx   ecx, al
                mov     eax, [esp+58h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                xor     eax, eax
                xor     ecx, 5Dh
                xor     ecx, [esp+58h+var_8]
                mov     [edi+ecx*8-654h], edx
                mov     edx, [esp+58h+var_3C]
                mov     [edi+ecx*8-658h], ebx
                add     edx, 0F4AAFE4Fh
                mov     ecx, [esp+58h+var_38]
                xor     ecx, 719DABD7h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___183      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___83_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], esi
                xor     edi, ebx
                lea     edx, [ecx-333556A2h]
                lea     eax, [ecx+4068B92Dh]
                add     eax, ebx
                shr     ebx, 4
                xor     eax, edx
                mov     [ebp+var_8], eax
                mov     eax, ecx
                shl     eax, 4
                add     ebx, eax
                movzx   ecx, dl
                xor     ebx, edi
                xor     ecx, 77h
                xor     ebx, edx
                mov     eax, ebx
                shr     eax, 8
                mov     esi, [ecx+esi]
                sub     al, 47h ; 'G'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C3D0
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 0BFh
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+arg_4]
                sub     edx, [ebp+arg_0]
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [ebx+1BCh], ecx
                sub     edx, 4BBEEDA0h
                mov     ecx, ebx
                call    VBN_TransformContext
                lea     edx, [edi+4C285D38h]
                xor     eax, eax
                pop     edi
                lea     ecx, [esi+22265A6Ch]
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___83_stk   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_gfree_     proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                mov     ebx, ecx
                mov     ecx, [ebp+arg_4]
                xor     ecx, [ebp+arg_0]
                movzx   eax, cl
                xor     eax, 0D9h
                mov     [ebp+var_4], ebx
                push    esi
                push    edi
                mov     [ebp+var_8], ecx
                mov     edx, [eax+ebx]
                mov     esi, [eax+ebx+4]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [ebp+var_C], edx
                mov     edi, [eax+ebx+19h]
                mov     ebx, [eax+ebx+1Dh]
                mov     eax, ecx
                mov     ecx, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                mov     [ebp+var_10], edi
                mov     [ebp+var_14], ebx
                push    dword ptr [eax+ecx+66h] ; Memory
                Call crt_free
                mov     edi, [ebp+var_8]
                mov     ebx, [ebp+var_4]
                pop     ecx
                mov     ecx, [ebp+var_C]
                mov     eax, [ecx]
                mov     edx, [ecx+4]
                add     ecx, 8
                adc     esi, 0
                shr     edi, 18h
                xor     edi, 0F5h
                mov     [ebp+var_8], edi
                mov     [edi+ebx], ecx
                mov     ecx, edi
                mov     edi, ebx
                mov     [ecx+edi+4], esi
                mov     esi, ebx
                mov     ecx, [ebp+arg_0]
                mov     edi, [ebp+var_10]
                add     cl, 26h ; '&'
                mov     ebx, [ebp+var_14]
                movzx   ecx, cl
                mov     [ecx+esi+1Eh], edi
                pop     edi
                mov     [ecx+esi+22h], ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_gfree_     endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___72_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, ecx
                mov     ecx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                sub     ecx, esi
                mov     eax, ecx
                mov     [ebp+var_4], edx
                xor     eax, 62FC6D87h
                xor     ecx, 0E3665B43h
                mov     [ebp+var_C], eax
                movzx   eax, al
                xor     eax, 0B1h
                mov     [ebp+var_8], ecx
                push    edi
                push    offset dword_40A830
                mov     ebx, [eax+edx]
                mov     edi, [eax+edx+4]
                lea     edx, [ecx+4657AC27h]
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_C]
                mov     ecx, [ebp+arg_0]
                xor     eax, esi
                xor     eax, ecx
                add     esi, 0E2F2C3A7h
                add     ecx, esi
                mov     [ebp+var_10], eax
                xor     ecx, eax
                xor     ecx, [ebp+var_8]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                sub     al, 44h ; 'D'
                sub     esi, 0ADh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_10]
                add     eax, 88D42934h
                xor     eax, [ebp+var_8]
                xor     ecx, 0F5041136h
                xor     eax, [ebp+var_C]
                pop     edi
                pop     esi
                xor     eax, 0A2CA57F1h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___72_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___116_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                mov     ecx, esi
                sub     ecx, edx
                mov     [ebp+var_C], edi
                xor     ecx, 6B1BF40h
                movzx   eax, cl
                xor     eax, 48h
                push    offset dword_40C300
                mov     ebx, [eax+edi]
                mov     edi, [eax+edi+4]
                lea     eax, [edx-18F3BB5Ah]
                mov     [ebp+var_8], eax
                mov     eax, edx
                shr     eax, 4
                sub     edx, esi
                xor     edx, [ebp+var_8]
                mov     [ebp+var_4], eax
                xor     edx, ecx
                mov     eax, esi
                add     edx, 33DA6448h
                shl     eax, 4
                add     [ebp+var_4], eax
                xor     [ebp+var_4], ecx
                mov     ecx, [ebp+var_C]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     esi, 4
                add     ecx, esi
                xor     ecx, [ebp+var_4]
                xor     ecx, [ebp+var_8]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 65h ; 'e'
                sub     esi, 46h ; 'F'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                mov     edx, [ebp+var_8]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                add     edx, 0CBF630C4h
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_4]
                pop     edi
                xor     ecx, 439759ADh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___116_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___155_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     eax, [ebp+arg_0]
                and     [ebp+var_14], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                shl     eax, 4
                push    esi
                shr     ebx, 4
                mov     esi, ecx
                add     ebx, eax
                mov     [ebp+var_4], esi
                movzx   eax, bl
                xor     eax, 11h
                mov     [ebp+var_10], ebx
                push    edi
                push    offset dword_40A800
                mov     ecx, [eax+esi]
                mov     edi, [eax+esi+4]
                mov     esi, [ebp+arg_4]
                add     esi, 3A33A246h
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+var_4]
                mov     edx, esi
                xor     edx, 8D12C0E0h
                mov     [ebp+var_C], esi
                call    VBN_TransformContext
                mov     eax, ebx
                xor     eax, ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                xor     ebx, eax
                mov     [ebp+var_14], eax
                xor     ebx, esi
                xor     ebx, 0E6800809h
                mov     eax, ebx
                xor     bl, 0A1h
                shr     eax, 8
                xor     eax, 0B277h
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                xor     eax, [ebp+var_C]
                xor     eax, [ebp+var_10]
                mov     [ecx+1BCh], edx
                xor     eax, 0FCAE412Fh
                mov     ecx, [ebp+var_14]
                xor     edx, edx
                pop     edi
                xor     ecx, 1BD2B32Eh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___155_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___124      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                sub     eax, edx
                and     [esp+50h+var_4], 0
                mov     [esp+50h+var_48], eax
                sub     edx, ebx
                push    esi
                mov     esi, ecx
                mov     [esp+54h+var_44], edx
                mov     ecx, eax
                mov     [esp+54h+var_4C], esi
                xor     ecx, 935CD031h
                mov     eax, ecx
                mov     [esp+54h+var_40], ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 16h
                push    edi
                push    offset dword_40C7F8
                mov     edi, [eax+esi]
                mov     eax, ecx
                shr     eax, 18h
                mov     [esp+5Ch+var_3C], edi
                mov     edi, [esp+5Ch+var_4C]
                mov     ecx, [eax+esi-32h]
                mov     eax, [eax+esi-2Eh]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_40]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     esi, [esi+eax*8-5C8h]
                movzx   eax, dl
                mov     edx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_18], eax
                xor     eax, 2Bh
                mov     edx, [edx+eax*8]
                mov     [esp+5Ch+var_14], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8+4]
                mov     [esp+5Ch+var_10], eax
                movzx   eax, cl
                mov     ecx, [edx+eax*8-500h]
                mov     eax, [edx+eax*8-4FCh]
                mov     [esp+5Ch+var_28], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                mov     [esp+5Ch+var_2C], ecx
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_44]
                xor     ecx, 74h
                shr     eax, 18h
                xor     al, 5Eh
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8+4]
                mov     ecx, edi
                mov     eax, [ebp+arg_4]
                xor     eax, ebx
                mov     [esp+5Ch+var_1C], edx
                xor     eax, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_38], eax
                lea     edx, [eax-6543C7C6h]
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_44]
                mov     edi, [esp+58h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Ah
                add     eax, esi
                mov     eax, [edi+eax*4]
                mov     edi, [ebp+arg_4]
                mov     [esp+58h+var_24], eax
                lea     eax, [edi+ebx]
                lea     edx, [eax-0D234A3Eh]
                xor     edx, [esp+58h+var_44]
                lea     ecx, [eax-10496858h]
                xor     edx, [esp+58h+var_40]
                xor     esi, esi
                shr     ebx, 4
                shl     edi, 4
                add     edi, ebx
                mov     [esp+58h+var_C], edx
                mov     ebx, [esp+58h+var_48]
                xor     edi, [esp+58h+var_38]
                xor     ebx, edx
                xor     ebx, [esp+58h+var_38]
                xor     edi, [esp+58h+var_44]
                xor     ebx, 6C7D17D9h
                xor     ecx, edi
                mov     [esp+58h+var_48], ebx
                mov     eax, [esp+58h+var_48]
                xor     ecx, edx
                shr     eax, 8
                xor     ebx, edi
                xor     ebx, [esp+58h+var_40]
                xor     al, 0EEh
                mov     [esp+58h+var_3C], ecx
                mov     ecx, [esp+58h+var_48]
                movzx   eax, al
                cdq
                mov     [esp+58h+var_8], edi
                movzx   edi, cl
                sub     edi, 59h ; 'Y'
                sub     edi, eax
                mov     eax, ebx
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_3C]
                adc     esi, dword ptr [esp+58h+var_34+4]
                xor     eax, 0D661DCA3h
                xor     ecx, ecx
                add     edx, 9879DA3h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_4C]
                movzx   eax, cl
                mov     [edx+eax*8-430h], edi
                mov     edi, edx
                mov     edx, [esp+58h+var_3C]
                mov     [edi+eax*8-42Ch], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_2C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-3Ah], esi
                mov     esi, [esp+58h+var_28]
                mov     [eax+edi-36h], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 7Ah
                and     dword ptr [edi+eax*8-364h], 0
                mov     [edi+eax*8-368h], esi
                mov     eax, [esp+58h+var_20]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_1C]
                mov     [edi+ecx*8+4], eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                movzx   ecx, bl
                xor     ecx, eax
                movzx   eax, dl
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, 87h
                xor     ecx, [esp+58h+var_18]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_10]
                mov     edx, [esp+58h+var_C]
                mov     [edi+ecx*8+4], eax
                add     edx, 21F514B9h
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 7703F8CBh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___124      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___3        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     eax, edi
                and     [esp+50h+var_4], 0
                xor     eax, [ebp+arg_0]
                mov     ebx, edi
                mov     [esp+50h+var_44], eax
                xor     edx, edx
                shr     eax, 8
                movzx   eax, al
                shl     ebx, 4
                mov     [esp+50h+var_40], esi
                mov     ecx, [esi+eax*8-510h]
                mov     eax, [esi+eax*8-50Ch]
                mov     [esp+50h+var_1C], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     ebx, eax
                mov     [esp+50h+var_20], ecx
                movzx   eax, bl
                mov     [esp+50h+var_24], ebx
                mov     ecx, [esi+eax*8-630h]
                mov     eax, [esi+eax*8-62Ch]
                mov     dword ptr [esp+50h+var_38+4], eax
                mov     eax, ebx
                shr     eax, 8
                mov     dword ptr [esp+50h+var_38], ecx
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 79h ; 'y'
                inc     eax
                call    __allshl
                mov     ecx, [esp+50h+var_44]
                shr     ecx, 18h
                push    offset dword_40AB70
                mov     ecx, [ecx+esi+3Ah]
                mov     eax, [eax+ecx]
                mov     ecx, [esp+54h+var_44]
                mov     [esp+54h+var_10], eax
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 58h
                movzx   ecx, cl
                movzx   eax, al
                cdq
                add     eax, [ecx+esi+70h]
                mov     [esp+54h+var_30], eax
                adc     edx, [ecx+esi+74h]
                mov     ecx, [esp+54h+var_44]
                shr     ecx, 10h
                movzx   eax, cl
                xor     eax, 0BEh
                mov     [esp+54h+var_2C], edx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                lea     esi, [edi+1CFEFC28h]
                xor     esi, [esp+54h+var_44]
                mov     [esp+54h+var_18], ecx
                mov     edx, esi
                mov     ecx, [esp+54h+var_40]
                xor     edx, 0B3E0EC94h
                mov     [esp+54h+var_14], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                mov     eax, ebx
                add     edx, 0A642BFADh
                xor     eax, esi
                xor     edx, ebx
                xor     eax, ebx
                xor     edx, [esp+50h+var_44]
                mov     ecx, edi
                mov     ebx, [ebp+arg_0]
                sub     ecx, ebx
                xor     ecx, edx
                mov     [esp+50h+var_C], edx
                xor     ecx, esi
                mov     [esp+50h+var_8], eax
                mov     [esp+50h+var_28], ecx
                sub     ebx, edi
                xor     esi, esi
                xor     ebx, eax
                xor     ebx, edx
                xor     ebx, 8AF4556Ch
                mov     [esp+50h+var_3C], ebx
                mov     ebx, ecx
                xor     ebx, eax
                xor     ebx, [esp+50h+var_44]
                xor     ebx, 0C3BFF878h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 83h
                add     eax, 130Ch
                movzx   eax, ax
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_38]
                lea     edx, [ecx-233B0913h]
                adc     esi, dword ptr [esp+50h+var_38+4]
                xor     eax, 4308F240h
                xor     ecx, ecx
                shr     ebx, 18h
                or      ecx, eax
                mov     eax, [esp+50h+var_30]
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_40]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_28]
                xor     edx, [esp+50h+var_24]
                xor     edx, [esp+50h+var_44]
                mov     [ecx+ebx*8-510h], eax
                mov     eax, [esp+50h+var_2C]
                mov     [ecx+ebx*8-50Ch], eax
                mov     ebx, ecx
                mov     ecx, [esp+50h+var_20]
                movzx   eax, dl
                xor     eax, 17h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 36h
                pop     edi
                pop     esi
                mov     [eax+ebx], ecx
                mov     ecx, [esp+48h+var_1C]
                mov     [eax+ebx+4], ecx
                mov     eax, edx
                mov     ecx, [esp+48h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                xor     edx, 52h
                mov     [ebx+eax*8-0E0h], ecx
                mov     ecx, [esp+48h+var_14]
                mov     [ebx+eax*8-0DCh], ecx
                and     dword ptr [ebx+edx*8+4], 0
                mov     eax, [esp+48h+var_10]
                mov     ecx, [esp+48h+var_8]
                mov     [ebx+edx*8], eax
                add     ecx, 0AA2FAE6Fh
                mov     edx, [esp+48h+var_C]
                xor     eax, eax
                add     edx, 0D9199264h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___3        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___81       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, edi
                sub     eax, esi
                mov     [esp+50h+var_44], ecx
                mov     [esp+50h+var_40], eax
                and     [esp+50h+var_4], 0
                lea     ebx, [edi-71B8B3DBh]
                mov     eax, ebx
                mov     [esp+50h+var_2C], ebx
                shr     eax, 18h
                lea     edx, [edi-23C671DCh]
                mov     edi, [esp+50h+var_44]
                add     edx, esi
                xor     edx, ebx
                mov     [esp+50h+var_3C], edx
                mov     ecx, [ecx+eax*8-1D8h]
                mov     [esp+50h+var_1C], ecx
                mov     ecx, [esp+50h+var_44]
                mov     eax, [ecx+eax*8-1D4h]
                mov     [esp+50h+var_18], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0Bh
                mov     ecx, [eax+ecx]
                mov     [esp+50h+var_28], ecx
                mov     ecx, [esp+50h+var_44]
                mov     eax, [eax+ecx+4]
                mov     [esp+50h+var_24], eax
                mov     al, dl
                xor     al, 60h
                movzx   ecx, bl
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8+0E8h]
                mov     [esp+50h+var_14], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8+0ECh]
                mov     eax, [esp+50h+var_40]
                mov     ecx, eax
                shr     ecx, 8
                shr     eax, 10h
                mov     [esp+50h+var_10], edx
                mov     edx, edi
                mov     edi, [ebp+arg_4]
                movzx   ecx, cl
                xor     ecx, 4Ch
                mov     ecx, [ecx+edx]
                add     ecx, eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     eax, [edx+eax*8+20h]
                mov     edx, edi
                shl     edx, 4
                mov     eax, [eax+ecx*4-2B1D0h]
                mov     ecx, [esp+50h+var_40]
                mov     [esp+50h+var_20], eax
                mov     eax, esi
                shr     eax, 4
                mov     esi, edi
                add     edx, eax
                shr     esi, 4
                xor     edx, [esp+50h+var_40]
                xor     edx, ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                mov     [esp+50h+var_30], edx
                shl     eax, 4
                xor     ebx, edx
                add     esi, eax
                xor     ebx, edi
                mov     eax, esi
                xor     eax, [esp+50h+var_3C]
                xor     eax, ecx
                xor     ebx, [esp+50h+var_3C]
                mov     [esp+50h+var_8], eax
                xor     esi, eax
                mov     [esp+50h+var_38], ebx
                xor     ebx, eax
                movzx   ecx, cl
                lea     eax, [edi-71B8B3DBh]
                xor     ecx, 0EAh
                mov     edi, [esp+50h+var_44]
                xor     ebx, eax
                xor     ebx, 0B35AAF6Bh
                xor     esi, edx
                mov     eax, ebx
                mov     [esp+50h+var_34], ebx
                shr     eax, 8
                mov     edi, [ecx+edi]
                add     al, 28h ; '('
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_44]
                push    offset dword_40A43C
                mov     ecx, [ecx+eax+4]
                mov     al, bl
                sbb     ecx, edx
                mov     ebx, esi
                xor     al, 0C5h
                movzx   eax, al
                cdq
                add     edi, eax
                mov     eax, esi
                adc     ecx, edx
                xor     ebx, [esp+54h+var_38]
                xor     ebx, [esp+54h+var_40]
                xor     eax, 8772F7B5h
                mov     edx, [esp+54h+var_38]
                xor     ebx, [esp+54h+var_2C]
                xor     edx, 109EEDE8h
                mov     [esp+54h+var_C], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+54h+var_44]
                mov     [edi+4], edx
                lea     edx, [ebx-1E9091CFh]
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_34]
                mov     edx, [esp+50h+var_44]
                xor     ecx, esi
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_40]
                mov     esi, [esp+50h+var_28]
                movzx   eax, cl
                xor     eax, 95h
                mov     [eax+edx], esi
                mov     esi, [esp+50h+var_24]
                mov     [eax+edx+4], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [edx+eax*8-370h], esi
                mov     esi, edx
                and     dword ptr [esi+eax*8-36Ch], 0
                mov     eax, ecx
                mov     esi, [esp+50h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [edx+eax*8+0A0h], esi
                mov     esi, [esp+50h+var_18]
                mov     [edx+eax*8+0A4h], esi
                mov     esi, edx
                mov     eax, [esp+50h+var_14]
                mov     [esi+ecx*8-4D8h], eax
                mov     eax, [esp+50h+var_10]
                mov     [esi+ecx*8-4D4h], eax
                mov     eax, [esp+50h+var_3C]
                movzx   ecx, al
                mov     eax, [esp+50h+var_30]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                mov     edx, [esp+50h+var_34]
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+50h+var_30]
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                xor     ecx, 63h
                add     edx, 0D5E95FFh
                mov     [esi+ecx*8+4], eax
                xor     eax, eax
                mov     [esi+ecx*8], edi
                mov     ecx, [esp+50h+var_8]
                pop     edi
                add     ecx, 0DA0AD4E2h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___81       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___87       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                push    edi
                mov     edi, ecx
                shr     edx, 4
                mov     ecx, ebx
                mov     [esp+58h+var_48], edi
                shl     ecx, 4
                add     ecx, eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     edx, eax
                mov     [esp+58h+var_44], ecx
                movzx   eax, cl
                xor     eax, 9Ch
                mov     [esp+58h+var_4C], edx
                push    offset dword_40ABE4
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_1C], edx
                mov     edx, [edi+eax*8-538h]
                mov     dword ptr [esp+5Ch+var_38], edx
                mov     edx, edi
                mov     eax, [edx+eax*8-534h]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     edi, [edx+eax*8-4E0h]
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 94h
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+5Ch+var_28+4], eax
                mov     dword ptr [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_4C]
                movzx   eax, cl
                xor     eax, 33h
                mov     esi, [eax+edx]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 5Fh
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     edx, 16850D03h
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_C], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     edx, ebx
                sub     edx, ecx
                add     ebx, 3500FF8Eh
                xor     edx, [esp+58h+var_4C]
                xor     edx, [esp+58h+var_44]
                movzx   eax, dl
                mov     [esp+58h+var_14], eax
                add     eax, edi
                mov     [esp+58h+var_2C], edx
                mov     eax, [esi+eax*4-0FCh]
                mov     esi, [esp+58h+var_44]
                mov     edi, esi
                xor     edi, [esp+58h+var_4C]
                mov     [esp+58h+var_20], eax
                lea     eax, [ecx-16474FF4h]
                add     ecx, ebx
                mov     [esp+58h+var_8], edi
                xor     eax, edx
                xor     ecx, edi
                mov     [esp+58h+var_3C], eax
                xor     ecx, edx
                xor     eax, edi
                mov     [esp+58h+var_30], ecx
                xor     eax, esi
                xor     eax, 5D1EF173h
                mov     [esp+58h+var_44], eax
                mov     eax, ecx
                xor     eax, [esp+58h+var_3C]
                xor     eax, [esp+58h+var_4C]
                xor     eax, esi
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0EEh
                sub     eax, 6395h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_44]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_38]
                adc     eax, dword ptr [esp+58h+var_38+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_38+4], eax
                xor     esi, 0B3AEA5CCh
                mov     eax, [esp+58h+var_40]
                xor     edi, edi
                xor     eax, 4CBD11D8h
                or      esi, edi
                or      ecx, eax
                mov     eax, [esp+58h+var_2C]
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_4C]
                shr     eax, 8
                xor     al, 4
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_48]
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_28]
                mov     [esp+58h+var_30], ecx
                adc     edx, dword ptr [esp+58h+var_28+4]
                movzx   ecx, cl
                xor     ecx, 2Bh
                mov     [esi+ecx*8], eax
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_30]
                mov     eax, ecx
                mov     edx, dword ptr [esp+58h+var_38+4]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-0E4h], edx
                mov     edx, [esp+58h+var_20]
                mov     [esi+eax*8-0E8h], ebx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 91h
                mov     [esi+eax*8+98h], edx
                mov     [esi+eax*8+9Ch], edi
                mov     eax, [esp+58h+var_1C]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                mov     [esi+ecx*8+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, [esp+58h+var_14]
                mov     [ecx+esi-2Ah], eax
                mov     eax, [esp+58h+var_C]
                mov     edx, [esp+58h+var_8]
                mov     [ecx+esi-26h], eax
                add     edx, 71665440h
                mov     ecx, [esp+58h+var_3C]
                xor     eax, eax
                add     ecx, 0DE0B0473h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___87       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___188      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                add     ebx, 9BE506F7h
                xor     edx, edi
                mov     [esp+50h+var_44], ecx
                mov     eax, edx
                and     [esp+50h+var_4], 0
                shr     eax, 10h
                add     ebx, edi
                movzx   eax, al
                xor     eax, 0AFh
                mov     [esp+50h+var_40], edx
                push    offset dword_40C38C
                mov     [esp+54h+var_28], ebx
                mov     esi, [ecx+eax*8]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+54h+var_20], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0B8h
                mov     [esp+54h+var_24], esi
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+54h+var_34], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+54h+var_34+4], eax
                movzx   eax, bl
                xor     eax, 0AAh
                movzx   ecx, dl
                xor     ecx, 50h
                mov     eax, [esi+eax*4]
                mov     esi, [esp+54h+var_44]
                mov     [esp+54h+var_2C], eax
                mov     eax, ebx
                shr     eax, 8
                xor     eax, 70B5h
                movzx   eax, ax
                cdq
                add     eax, [ecx+esi]
                mov     [esp+54h+var_1C], eax
                adc     edx, [ecx+esi+4]
                mov     ecx, [esp+54h+var_40]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esp+54h+var_18], edx
                mov     eax, [ecx+esi-0B8h]
                mov     [esp+54h+var_14], eax
                mov     eax, [ecx+esi-0B4h]
                lea     esi, [edi+3067AFE5h]
                xor     esi, [esp+54h+var_40]
                mov     ecx, [esp+54h+var_44]
                mov     [esp+54h+var_10], eax
                lea     edx, [esi+4482EB61h]
                call    VBN_TransformContext
                mov     edx, edi
                mov     eax, edi
                sub     edx, [ebp+arg_4]
                mov     ecx, edx
                shr     eax, 4
                xor     ecx, ebx
                xor     edx, esi
                xor     ecx, [esp+50h+var_40]
                xor     edx, ebx
                mov     ebx, [ebp+arg_4]
                xor     ecx, 63D994C6h
                shl     ebx, 4
                xor     edx, 8E63ECEAh
                add     ebx, eax
                mov     [esp+50h+var_C], ecx
                xor     ebx, ecx
                mov     [esp+50h+var_8], edx
                lea     eax, [edi-2A5DB8D3h]
                xor     ebx, esi
                xor     eax, edx
                mov     [esp+50h+var_38], ebx
                xor     eax, ecx
                mov     [esp+50h+var_3C], eax
                xor     ebx, edx
                xor     esi, esi
                xor     ebx, [esp+50h+var_40]
                xor     ebx, 93304597h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 33h ; '3'
                sub     eax, 550Bh
                movzx   eax, ax
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                mov     edx, [esp+50h+var_38]
                adc     esi, dword ptr [esp+50h+var_34+4]
                add     eax, 2203D525h
                xor     ecx, ecx
                shr     ebx, 18h
                or      ecx, eax
                add     edx, 3A2FB62Ch
                mov     eax, [esp+50h+var_2C]
                xor     ebx, 50h
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_44]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_24]
                and     dword ptr [ecx+ebx*8+4], 0
                mov     [ecx+ebx*8], eax
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_28]
                xor     ecx, [esp+50h+var_40]
                mov     ebx, [esp+50h+var_44]
                movzx   eax, cl
                mov     [ebx+eax*8-60h], edi
                mov     [ebx+eax*8-5Ch], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                pop     edi
                pop     esi
                mov     [eax+ebx-0B0h], edx
                mov     edx, [esp+48h+var_20]
                mov     [eax+ebx-0ACh], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0F7h
                mov     [ebx+eax*8-380h], edx
                mov     edx, [esp+48h+var_18]
                mov     [ebx+eax*8-37Ch], edx
                mov     eax, [esp+48h+var_14]
                mov     edx, [esp+48h+var_C]
                mov     [ebx+ecx*8], eax
                add     edx, 8E3F63A8h
                mov     eax, [esp+48h+var_10]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+48h+var_8]
                add     ecx, 7793F6Dh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___188      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___27       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, esi
                shl     ebx, 4
                mov     eax, edi
                shr     eax, 4
                add     ebx, eax
                mov     [esp+50h+var_44], edx
                lea     eax, [edi-1EA2C3A2h]
                mov     [esp+50h+var_34], ebx
                mov     [esp+50h+var_38], eax
                lea     ecx, [edi+7C215373h]
                movzx   eax, al
                xor     ecx, ebx
                mov     [esp+50h+var_3C], ecx
                mov     ecx, [edx+eax*8-5A0h]
                mov     eax, [edx+eax*8-59Ch]
                mov     edx, ebx
                mov     dword ptr [esp+50h+var_30+4], eax
                lea     eax, [edi-1EA2C3A2h]
                shr     eax, 8
                mov     dword ptr [esp+50h+var_30], ecx
                movzx   ecx, ax
                mov     eax, [esp+50h+var_44]
                xor     ecx, 1C5Ah
                shr     edx, 18h
                xor     edx, 39h
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx]
                mov     [esp+50h+var_28], eax
                lea     eax, [edi-1EA2C3A2h]
                mov     edi, [esp+50h+var_44]
                shr     eax, 18h
                xor     al, 0C8h
                movzx   ecx, bl
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-2D8h]
                mov     [esp+50h+var_24], eax
                mov     eax, edi
                mov     edi, [ebp+arg_0]
                adc     edx, [eax+ecx*8-2D4h]
                mov     ecx, ebx
                shr     ecx, 10h
                movzx   ecx, cl
                mov     [esp+50h+var_20], edx
                mov     edx, eax
                mov     eax, [edx+ecx*8-590h]
                mov     [esp+50h+var_1C], eax
                mov     eax, [edx+ecx*8-58Ch]
                mov     [esp+50h+var_18], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [eax+edx+99h]
                mov     eax, [eax+edx+9Dh]
                lea     edx, [edi-1EA2C3A2h]
                mov     [esp+50h+var_8], ecx
                mov     ecx, esi
                sub     ecx, edi
                shr     esi, 4
                xor     ecx, edx
                mov     [esp+50h+var_4], eax
                xor     ecx, ebx
                mov     ebx, edi
                shl     ebx, 4
                add     edi, 0B75E3D1h
                add     ebx, esi
                mov     [esp+50h+var_14], ecx
                mov     esi, ebx
                xor     ebx, ecx
                xor     ebx, [esp+50h+var_3C]
                xor     esi, edx
                xor     esi, [esp+50h+var_3C]
                xor     edi, esi
                mov     [esp+50h+var_40], esi
                xor     edi, ecx
                mov     ecx, [esp+50h+var_44]
                mov     edx, edi
                push    offset dword_40A9E0
                xor     edx, 0E1DB96ADh
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_34]
                mov     eax, ebx
                xor     eax, esi
                xor     eax, ecx
                mov     [esp+50h+var_34], eax
                mov     edx, eax
                xor     edx, 635342ACh
                mov     eax, edi
                xor     eax, ebx
                mov     [esp+50h+var_C], edx
                xor     eax, [esp+50h+var_38]
                xor     eax, ecx
                mov     ecx, eax
                mov     [esp+50h+var_10], eax
                mov     al, dl
                xor     ecx, 0B9ECC9D5h
                xor     al, 0DEh
                movzx   eax, al
                cdq
                mov     esi, eax
                lea     eax, [ebx-4491A711h]
                sub     esi, ecx
                mov     ebx, [esp+50h+var_14]
                sbb     edx, 0
                add     esi, dword ptr [esp+50h+var_30]
                adc     edx, dword ptr [esp+50h+var_30+4]
                xor     ecx, ecx
                or      ecx, eax
                xor     [esp+50h+var_40], 79F1D406h
                mov     eax, [esp+50h+var_40]
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_3C]
                mov     [esi+4], eax
                xor     ecx, edi
                xor     ecx, [esp+50h+var_38]
                mov     edi, [esp+50h+var_44]
                xor     ecx, 635342ACh
                movzx   eax, cl
                xor     eax, 0C0h
                mov     [edi+eax*8+4], edx
                mov     [edi+eax*8], esi
                mov     eax, ecx
                mov     edx, [esp+50h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 88h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_24]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 7Ch
                shr     ecx, 18h
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_20]
                mov     [edi+eax*8+4], edx
                mov     eax, [esp+50h+var_1C]
                mov     edx, [esp+50h+var_3C]
                mov     [edi+ecx*8-428h], eax
                mov     eax, [esp+50h+var_18]
                mov     [edi+ecx*8-424h], eax
                movzx   eax, bl
                movzx   ecx, dl
                xor     ecx, eax
                mov     eax, [esp+50h+var_10]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                mov     [ecx+edi-44h], eax
                mov     eax, [esp+50h+var_4]
                mov     [ecx+edi-40h], eax
                pop     edi
                xor     ebx, 0C86DFA1Eh
                xor     eax, eax
                add     edx, 0EBB092F0h
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___27       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___131      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, [ebp+arg_0]
                add     ebx, ecx
                push    edi
                mov     [esp+58h+var_4C], esi
                push    offset dword_40A5A8
                lea     edx, [ecx+49E6F876h]
                lea     eax, [ebx+70A16CAh]
                mov     [esp+5Ch+var_48], edx
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B0h
                mov     edi, [eax+esi]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 18h
                mov     esi, [eax+esi]
                mov     dword ptr [esp+5Ch+var_40], esi
                mov     esi, [esp+5Ch+var_4C]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_40+4], eax
                lea     eax, [ebx+70A16CAh]
                movzx   eax, al
                mov     esi, [esi+eax*8-320h]
                mov     dword ptr [esp+5Ch+var_2C], esi
                mov     esi, [esp+5Ch+var_4C]
                mov     eax, [esi+eax*8-31Ch]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                movzx   eax, dl
                mov     edx, esi
                xor     eax, 11h
                mov     esi, [eax+edx]
                lea     eax, [ebx+70A16CAh]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 24h
                mov     edx, [edx+eax*8]
                mov     [esp+5Ch+var_18], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8+4]
                mov     [esp+5Ch+var_14], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E4h
                mov     edx, [eax+edx]
                mov     [esp+5Ch+var_20], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [ebp+arg_4]
                xor     eax, ecx
                mov     ecx, [esp+5Ch+var_4C]
                xor     eax, [esp+5Ch+var_48]
                mov     edx, eax
                mov     [esp+5Ch+var_44], eax
                xor     edx, 3EB40E65h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     eax, [ebx+70A16CAh]
                lea     ecx, [edx-73A16C9h]
                xor     ecx, eax
                shr     eax, 10h
                xor     ecx, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 1Eh
                mov     [esp+58h+var_30], ecx
                add     eax, esi
                mov     esi, edx
                mov     edx, [ebp+arg_0]
                shl     esi, 4
                mov     eax, [edi+eax*4]
                mov     [esp+58h+var_10], eax
                mov     eax, edx
                shr     eax, 4
                add     esi, eax
                shl     edx, 4
                xor     esi, [esp+58h+var_44]
                lea     edi, [ebx+70A16CAh]
                xor     esi, edi
                lea     eax, [ebx-6FC0EB3Ah]
                mov     edi, [ebp+arg_4]
                xor     eax, esi
                xor     eax, ecx
                shr     edi, 4
                add     edi, edx
                mov     [esp+58h+var_38], eax
                mov     edx, [esp+58h+var_48]
                xor     edi, ecx
                xor     edi, [esp+58h+var_44]
                mov     ecx, edi
                mov     [esp+58h+var_C], esi
                xor     ecx, esi
                mov     [esp+58h+var_8], edi
                xor     ecx, edx
                xor     ecx, 0CCCE27B4h
                mov     [esp+58h+var_48], ecx
                mov     ecx, eax
                xor     ecx, edi
                lea     eax, [ebx+70A16CAh]
                xor     ecx, eax
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_34], ecx
                shr     eax, 8
                xor     cl, 0Fh
                sub     al, 8
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_48]
                sub     ebx, esi
                mov     esi, [esp+58h+var_38]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_40]
                adc     edx, dword ptr [esp+58h+var_40+4]
                add     eax, 0AA168490h
                xor     ecx, ecx
                xor     esi, 763250C6h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_34]
                mov     eax, esi
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0EEh
                mov     [ecx+eax*8], ebx
                mov     ebx, ecx
                mov     [ebx+eax*8+4], edx
                mov     eax, [esp+58h+var_30]
                movzx   ecx, al
                xor     eax, eax
                mov     edx, [esp+58h+var_20]
                sub     ecx, 9Bh
                add     ecx, dword ptr [esp+58h+var_2C]
                adc     eax, dword ptr [esp+58h+var_2C+4]
                shr     esi, 18h
                mov     [ebx+esi*8-2C0h], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_24]
                mov     [ebx+esi*8-2BCh], eax
                movzx   eax, cl
                xor     eax, 77h
                mov     [eax+ebx], edx
                mov     edx, [esp+58h+var_1C]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                shr     eax, 8
                mov     edx, [esp+58h+var_18]
                movzx   eax, al
                xor     eax, 93h
                shr     ecx, 10h
                pop     edi
                pop     esi
                mov     [ebx+eax*8], edx
                mov     edx, [esp+50h+var_14]
                mov     [ebx+eax*8+4], edx
                mov     edx, [esp+50h+var_C]
                movzx   eax, cl
                xor     edx, 9FF7C8E5h
                mov     ecx, [esp+50h+var_10]
                and     dword ptr [ebx+eax*8-4ACh], 0
                mov     [ebx+eax*8-4B0h], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                add     ecx, 0B98A8DDBh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___131      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800022fc proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     [ebp+var_C], ecx
                xor     ebx, esi
                mov     ecx, edx
                mov     [ebp+var_4], ebx
                mov     eax, esi
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                lea     eax, [esi+29EBCDEFh]
                push    edi
                mov     edi, ecx
                xor     edi, ebx
                lea     ebx, [edx+6ACD9E5Bh]
                xor     eax, edi
                xor     edx, edx
                xor     eax, ecx
                add     ebx, esi
                mov     esi, [ebp+var_C]
                xor     eax, 9E92B8ADh
                or      edx, eax
                xor     ebx, ecx
                mov     eax, [ebp+var_4]
                xor     ebx, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 80h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_47A318
                mov     eax, [ebp+var_4]
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-260h], 0
                jnz     short loc_47A318
                xor     edx, edx
                xor     edi, 0E5342032h
                xor     ecx, 0C96E45FDh
                or      edx, edi
                jmp     short loc_47A31E
; ---------------------------------------------------------------------------

loc_47A318:                             ; CODE XREF: VBNCB_unnamed_800022fc+64¡üj
                                        ; VBNCB_unnamed_800022fc+74¡üj
                lea     ecx, [ebx+6C23D66Fh]

loc_47A31E:                             ; CODE XREF: VBNCB_unnamed_800022fc+86¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022fc endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___177      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                push    edi
                mov     edi, [ebp+arg_0]
                sub     eax, edi
                mov     [esp+50h+var_3C], eax
                mov     [esp+50h+var_40], ecx
                push    offset dword_40A2C0
                lea     ebx, [edi-21973DCh]
                mov     edi, [esp+54h+var_40]
                add     ebx, esi
                movzx   eax, bl
                xor     eax, 0E4h
                mov     [esp+54h+var_38], ebx
                mov     edx, [eax+ecx]
                mov     eax, [eax+ecx+4]
                mov     [esp+54h+var_C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C0h
                mov     [esp+54h+var_10], edx
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+54h+var_24], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+54h+var_24+4], eax
                mov     eax, [esp+54h+var_3C]
                movzx   eax, al
                xor     eax, 0BEh
                mov     eax, [edx+eax*8]
                mov     [esp+54h+var_14], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_3C]
                shr     eax, 8
                xor     al, 2Ah
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-298h]
                mov     [esp+54h+var_8], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8-294h]
                mov     ecx, ebx
                shr     ecx, 18h
                mov     [esp+54h+var_4], edx
                mov     eax, [eax+ecx*8-178h]
                mov     [esp+54h+var_1C], eax
                mov     eax, edi
                mov     edi, [ebp+arg_0]
                mov     eax, [eax+ecx*8-174h]
                mov     ecx, esi
                mov     [esp+54h+var_18], eax
                mov     eax, edi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     eax, [esi+104312D3h]
                xor     eax, [esp+54h+var_3C]
                xor     ecx, ebx
                xor     eax, ebx
                mov     [esp+54h+var_34], ecx
                mov     ebx, edi
                mov     [esp+54h+var_28], eax
                sub     ebx, esi
                mov     esi, ebx
                xor     esi, ecx
                mov     ecx, [esp+54h+var_40]
                xor     esi, [esp+54h+var_3C]
                xor     esi, 9BAC71AEh
                lea     edx, [esi+4BC73D3Dh]
                call    VBN_TransformContext
                xor     ebx, [esp+50h+var_28]
                lea     ecx, [edi-3B28935Fh]
                xor     ebx, [esp+50h+var_34]
                xor     ecx, esi
                xor     ebx, 0D0757D10h
                xor     ecx, [esp+50h+var_28]
                mov     eax, ebx
                mov     [esp+50h+var_30], ecx
                xor     eax, esi
                movzx   edi, bl
                xor     eax, [esp+50h+var_38]
                sub     edi, 4Fh ; 'O'
                xor     eax, 7587DA43h
                xor     esi, esi
                mov     [esp+50h+var_2C], eax
                mov     eax, ebx
                shr     eax, 8
                add     al, 36h ; '6'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_2C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_24]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_24+4]
                add     eax, 7AEA80D4h
                xor     ecx, ecx
                xor     edx, 5EF476A5h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_30]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                mov     ebx, [esp+50h+var_40]
                mov     edx, [esp+50h+var_1C]
                movzx   eax, cl
                mov     [ebx+eax*8-610h], edx
                mov     edx, [esp+50h+var_18]
                mov     [ebx+eax*8-60Ch], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_14]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 90h
                mov     [ebx+eax*8], edx
                mov     edx, ebx
                and     dword ptr [edx+eax*8+4], 0
                mov     eax, ecx
                mov     edx, [esp+50h+var_10]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3Ah
                shr     ecx, 18h
                xor     ecx, 5Ah
                mov     [eax+ebx], edx
                mov     edx, [esp+50h+var_C]
                mov     [eax+ebx+4], edx
                mov     eax, ebx
                mov     edx, [esp+50h+var_34]
                mov     ebx, [esp+50h+var_3C]
                mov     [eax+ecx*8], edi
                mov     edi, eax
                movzx   eax, dl
                xor     edx, 0C3B6E3F7h
                mov     [edi+ecx*8+4], esi
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, 0CBh
                mov     [edi+ecx*8], eax
                mov     eax, [esp+50h+var_4]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_28]
                xor     ecx, 9145F6B9h
                pop     edi
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___177      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800023a6 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                push    edi
                mov     edi, eax
                mov     [ebp+var_4], ecx
                mov     ecx, edx
                lea     ebx, [edx+0A72ADD5h]
                xor     ecx, eax
                mov     esi, edx
                shr     eax, 4
                sub     edi, edx
                shl     esi, 4
                xor     edi, ebx
                add     esi, eax
                xor     edi, 214D3933h
                lea     eax, [edx-724E66Fh]
                mov     [ebp+var_8], edi
                xor     eax, ecx
                xor     edx, edx
                xor     eax, ebx
                xor     esi, edi
                mov     edi, [ebp+var_4]
                xor     eax, 3A40355Bh
                or      edx, eax
                xor     esi, ecx
                mov     eax, ebx
                xor     esi, 0EA1CC6F4h
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [edi+eax*8+0E8h], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_47A603
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 93h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47A603
                xor     esi, esi
                xor     edi, 0F7498170h
                xor     ecx, 0AC16508Bh
                or      esi, edi
                jmp     short loc_47A605
; ---------------------------------------------------------------------------

loc_47A603:                             ; CODE XREF: VBNCB_unnamed_800023a6+6E¡üj
                                        ; VBNCB_unnamed_800023a6+7F¡üj
                mov     ecx, edx

loc_47A605:                             ; CODE XREF: VBNCB_unnamed_800023a6+91¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023a6 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__6       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                and     [esp+20h+var_4], 0
                mov     ecx, [ebp+arg_0]
                mov     [esp+20h+var_C], edi
                push    offset dword_40BDE0
                lea     ebx, [ecx+2BCBFE3Fh]
                add     ebx, esi
                movzx   eax, bl
                mov     edx, [eax+edi-12h]
                mov     eax, esi
                sub     eax, ecx
                mov     edi, ecx
                mov     [esp+24h+var_8], eax
                xor     edi, esi
                xor     eax, ebx
                shr     esi, 4
                mov     [esp+24h+var_10], eax
                movzx   eax, al
                xor     eax, 51h
                lea     ecx, [edi+727C05CBh]
                xor     ecx, [eax+edx]
                mov     eax, [esp+24h+var_10]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D9h
                mov     [eax+edx], ecx
                mov     eax, [ebp+arg_0]
                mov     ecx, [esp+24h+var_C]
                shl     eax, 4
                add     esi, eax
                xor     esi, edi
                xor     esi, ebx
                lea     edx, [esi-741F0E18h]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                xor     eax, eax
                mov     ebx, [esp+20h+var_8]
                add     edx, 0DA608E88h
                xor     edx, [esp+20h+var_10]
                xor     ebx, esi
                xor     ebx, [esp+20h+var_10]
                xor     edx, edi
                pop     edi
                xor     ebx, 0B066B032h
                sub     edx, 4A29DE2Ch
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__6       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___36       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                add     ebx, esi
                push    edi
                mov     edi, ecx
                mov     [esp+50h+var_3C], edi
                lea     eax, [ebx-142160E2h]
                mov     [esp+50h+var_44], eax
                lea     ecx, [ebx+2C60413Ah]
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ecx
                shr     eax, 8
                mov     [esp+50h+var_30], ecx
                movzx   ecx, al
                mov     eax, [edi+edx*8-260h]
                xor     ecx, 96h
                mov     eax, [eax+ecx]
                mov     [esp+50h+var_1C], eax
                lea     eax, [ebx-142160E2h]
                movzx   ecx, al
                lea     eax, [ebx+2C60413Ah]
                shr     eax, 10h
                xor     ecx, 0A0h
                xor     al, 0B2h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+50h+var_18], eax
                adc     edx, [edi+ecx*8+4]
                lea     ecx, [ebx-142160E2h]
                shr     ecx, 18h
                xor     ecx, 16h
                mov     [esp+50h+var_14], edx
                lea     edx, [ebx+2C60413Ah]
                add     ebx, 84BACE1Fh
                mov     eax, [ecx+edi]
                mov     [esp+50h+var_2C], eax
                mov     eax, [ecx+edi+4]
                mov     [esp+50h+var_28], eax
                movzx   eax, dl
                mov     [esp+50h+var_C], eax
                xor     eax, 54h
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, esi
                mov     [esp+50h+var_20], eax
                mov     [esp+50h+var_24], ecx
                mov     ecx, [ebp+arg_0]
                sub     edi, ecx
                sub     ecx, esi
                mov     eax, edi
                xor     eax, [esp+50h+var_44]
                mov     esi, ecx
                xor     esi, eax
                mov     [esp+50h+var_10], eax
                xor     ecx, edx
                xor     esi, edx
                xor     ecx, [esp+50h+var_44]
                xor     esi, 21B80BB8h
                xor     ecx, 0C4F91D2Ah
                mov     [esp+50h+var_40], esi
                xor     ebx, esi
                mov     [esp+50h+var_4], ecx
                xor     ebx, ecx
                xor     edi, ecx
                xor     edi, eax
                mov     [esp+50h+var_34], ebx
                movzx   eax, bl
                mov     [esp+50h+var_38], eax
                mov     eax, [esp+50h+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                mov     ebx, [esp+50h+var_3C]
                shr     eax, 8
                xor     al, 0C9h
                movzx   eax, al
                cdq
                mov     esi, [ecx+ebx-3Ch]
                mov     ecx, [ecx+ebx-38h]
                sub     esi, eax
                mov     eax, [esp+50h+var_38]
                mov     ebx, edi
                sbb     ecx, edx
                add     eax, 0FFFFFFD9h
                add     esi, eax
                push    offset dword_40BDAC
                adc     ecx, 0
                xor     ebx, [esp+54h+var_40]
                xor     ebx, [esp+54h+var_44]
                xor     ebx, 50A6C5AAh
                mov     [esp+54h+var_8], ecx
                mov     ecx, [esp+54h+var_3C]
                lea     edx, [ebx+2B884FF7h]
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_40]
                lea     eax, [edi-0A0E841h]
                xor     ecx, ecx
                xor     edx, 60436125h
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_34]
                xor     ecx, edi
                mov     [esi+4], edx
                xor     ecx, [esp+50h+var_30]
                xor     ecx, [esp+50h+var_44]
                mov     edi, [esp+50h+var_3C]
                mov     edx, [esp+50h+var_2C]
                movzx   eax, cl
                xor     eax, 70h
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_28]
                mov     [edi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_24]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-3], edx
                mov     edx, [esp+50h+var_20]
                mov     [eax+edi+1], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 42h
                shr     ecx, 18h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], edx
                mov     eax, [esp+50h+var_18]
                mov     edx, [esp+50h+var_10]
                mov     [edi+ecx*8-90h], eax
                mov     eax, [esp+50h+var_14]
                mov     [edi+ecx*8-8Ch], eax
                movzx   eax, bl
                movzx   ecx, dl
                add     edx, 0CF440CBBh
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, [esp+50h+var_C]
                xor     ecx, [esp+50h+var_38]
                mov     [edi+ecx*8+14Ch], eax
                xor     eax, eax
                mov     [edi+ecx*8+148h], esi
                mov     ecx, [esp+50h+var_4]
                pop     edi
                xor     ecx, 4A2FD6FCh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___36       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___17_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     ebx, edi
                mov     [ebp+var_4], esi
                xor     ebx, eax
                add     eax, 82D4C30Dh
                add     eax, edi
                movzx   ecx, bl
                mov     [ebp+var_8], eax
                xor     ecx, 0E6h
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 0A2h
                mov     esi, [ecx+esi]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40A420
                mov     ecx, [ecx+eax+4]
                mov     eax, ebx
                sbb     ecx, edx
                shr     eax, 8
                movzx   eax, al
                mov     edx, edi
                sub     eax, 0B0h
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                shl     edx, 4
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                mov     [eax+1BCh], ecx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_4]
                shr     eax, 4
                add     edx, eax
                xor     edx, esi
                xor     edx, ebx
                add     edx, 3831C1BDh
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                xor     esi, 0C44B244Eh
                sub     eax, edi
                xor     edx, edx
                xor     eax, ebx
                pop     edi
                xor     eax, 0ED3FEEB0h
                or      edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___17_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_1__3_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                mov     ebx, ecx
                mov     ecx, edx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     ecx, 4
                xor     edx, esi
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_10], edx
                movzx   eax, cl
                add     edx, 591028BFh
                mov     [ebp+var_4], ecx
                push    edi
                push    offset dword_40AAE0
                mov     ecx, [ebx+eax*8-190h]
                mov     edi, [ebx+eax*8-18Ch]
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                mov     [ebp+var_C], ebx
                call    VBN_TransformContext
                lea     ebx, [esi-0F6986E4h]
                xor     ecx, ecx
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 0BBh
                xor     al, 65h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+arg_0]
                pop     edi
                pop     esi
                lea     edx, [ecx+5C11088Fh]
                add     ecx, 0CD759614h
                xor     edx, [ebp+var_10]
                xor     ecx, ebx
                xor     ecx, [ebp+var_10]
                xor     edx, [ebp+var_4]
                xor     ecx, 9F98C5B1h
                sub     edx, 7956B5DEh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__3_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___195      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                mov     [esp+54h+var_48], ecx
                mov     ecx, esi
                mov     edx, [esp+54h+var_48]
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                shr     ecx, 4
                shl     ebx, 4
                add     ebx, eax
                mov     eax, edi
                shl     eax, 4
                add     ecx, eax
                movzx   eax, bl
                mov     [esp+58h+var_44], ecx
                push    offset dword_40C8A0
                mov     ecx, [eax+edx+69h]
                mov     eax, [eax+edx+6Dh]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B5h
                mov     dword ptr [esp+5Ch+var_2C], ecx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 2Fh
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_10+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_10], ecx
                mov     ecx, [eax+edx+28h]
                mov     eax, [eax+edx+2Ch]
                mov     [esp+5Ch+var_20], eax
                lea     eax, [edi+3B33CD1h]
                xor     eax, ebx
                mov     [esp+5Ch+var_40], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     edx, eax
                xor     edx, 84CB8F0Dh
                mov     [esp+5Ch+var_34], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_44]
                mov     ecx, [esp+58h+var_40]
                movzx   eax, dl
                xor     eax, 57h
                mov     eax, [ecx+eax*4]
                lea     ecx, [edi-3AC92603h]
                xor     ecx, edx
                mov     [esp+58h+var_8], eax
                mov     edx, esi
                lea     eax, [edi-37645DBAh]
                sub     edx, edi
                xor     ecx, ebx
                xor     edx, [esp+58h+var_34]
                add     eax, esi
                xor     edx, [esp+58h+var_44]
                mov     [esp+58h+var_30], edx
                mov     edx, ebx
                xor     eax, [esp+58h+var_30]
                xor     edx, ecx
                xor     edx, [esp+58h+var_34]
                xor     eax, ecx
                mov     [esp+58h+var_14], ecx
                mov     ecx, edx
                xor     ecx, [esp+58h+var_30]
                xor     ecx, ebx
                mov     [esp+58h+var_4], edx
                mov     [esp+58h+var_3C], eax
                xor     ecx, 0C98B3F65h
                mov     [esp+58h+var_38], ecx
                mov     ecx, eax
                xor     ecx, edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, ebx
                mov     eax, ecx
                mov     [esp+58h+var_24], ecx
                shr     eax, 8
                xor     cl, 4Ah
                inc     al
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_38]
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_2C]
                mov     edi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_2C+4]
                xor     ecx, ecx
                xor     eax, 4D573572h
                add     esi, 0A19B4050h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_24]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_40]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [eax+edi-49h], esi
                mov     esi, [esp+58h+var_20]
                mov     [eax+edi-45h], esi
                mov     esi, edi
                pop     edi
                mov     [esi+ecx*8-688h], ebx
                mov     ebx, [esp+54h+var_38]
                xor     ebx, [esp+54h+var_3C]
                xor     ebx, [esp+54h+var_34]
                xor     ebx, [esp+54h+var_44]
                mov     [esi+ecx*8-684h], edx
                mov     ecx, [esp+54h+var_1C]
                movzx   eax, bl
                mov     [esi+eax*8-428h], ecx
                mov     ecx, [esp+54h+var_18]
                mov     [esi+eax*8-424h], ecx
                mov     ecx, ebx
                mov     eax, [esp+54h+var_14]
                xor     eax, 4348h
                movzx   eax, ax
                cdq
                add     eax, dword ptr [esp+54h+var_10]
                adc     edx, dword ptr [esp+54h+var_10+4]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0F1h
                shr     ebx, 10h
                mov     [esi+ecx*8], eax
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+54h+var_8]
                mov     edx, [esp+54h+var_30]
                movzx   eax, bl
                add     edx, 0F9A3FDD8h
                xor     eax, 74h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_4]
                add     ecx, 5E97CBDh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___195      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___149_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                shr     eax, 4
                mov     ecx, esi
                mov     [ebp+var_4], edi
                shl     ecx, 4
                sub     esi, edx
                add     ecx, eax
                mov     [ebp+var_10], esi
                lea     eax, [edx-6B24BD0Fh]
                mov     edx, esi
                mov     [ebp+var_8], eax
                mov     eax, esi
                xor     edx, [ebp+var_8]
                xor     eax, ecx
                mov     [ebp+var_C], eax
                xor     edx, ecx
                movzx   eax, cl
                add     edx, 169FD982h
                mov     ecx, [ebp+var_4]
                push    offset dword_40C350
                mov     ebx, [eax+edi+41h]
                mov     edi, [eax+edi+45h]
                call    VBN_TransformContext
                mov     ecx, esi
                xor     ecx, [ebp+var_C]
                xor     ecx, [ebp+var_8]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 23h
                sub     esi, 0Ah
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                mov     edx, [ebp+var_8]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                add     edx, 9DA0C8DAh
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                pop     edi
                xor     ecx, 55A8F0ACh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___149_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__27      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, [ebp+arg_0]
                push    offset dword_40C73C
                lea     ebx, [esi+19A47F16h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     edx, [ecx+eax*8-128h]
                movzx   eax, bl
                mov     ebx, [eax+ecx-66h]
                lea     eax, [esi+19A47F16h]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 96h
                mov     esi, [eax+edx]
                mov     eax, edi
                mov     edx, [ebp+arg_4]
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                mov     [esp+1Ch+var_8], edx
                xor     edx, 9C29B6EBh
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, edi
                mov     ecx, [ebp+arg_4]
                add     edi, 2D354A24h
                xor     edi, [esp+18h+var_8]
                sub     ebx, esi
                shl     eax, 4
                xor     esi, esi
                shr     edx, 4
                add     edx, eax
                lea     eax, [ecx+19A47F16h]
                xor     edi, eax
                mov     [esp+18h+var_4], edx
                xor     edx, eax
                shr     eax, 18h
                xor     eax, 48h
                cmp     ebx, eax
                jz      short loc_47AE19
                xor     edx, 5C0F938Eh
                lea     eax, [edi+429565FEh]
                jmp     short loc_47AE38
; ---------------------------------------------------------------------------

loc_47AE19:                             ; CODE XREF: vBng_h__27+99¡üj
                mov     eax, [esp+18h+var_4]
                add     ecx, 0D53250F7h
                xor     ecx, edx
                xor     eax, edi
                xor     ecx, [esp+18h+var_8]
                xor     eax, edx
                xor     eax, 0A8E744ABh
                lea     edx, [ecx-5D7CDACAh]

loc_47AE38:                             ; CODE XREF: vBng_h__27+A7¡üj
                or      esi, eax
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__27 EndP