.Const
_RTL_CRITICAL_SECTION struc ; (sizeof=0x18, align=0x4, copyof_15)
                                        ; XREF: .data:g_encryptionLock/r
DebugInfo       dd ?                    ; offset
LockCount       dd ?
RecursionCount  dd ?
OwningThread    dd ?                    ; offset
LockSemaphore   dd ?                    ; offset
SpinCount       dd ?
_RTL_CRITICAL_SECTION EndS
.Data?

.Data
___guard_check_icall_fptr DD Offset guard_check_icall_nop
off_408A5C      DD Offset dword_468B14
                DD Offset dword_468B2C
                word_4B2380     dw 0                    ; DATA XREF: ___report_gsfailure+3C¡üw
                                        ; ___report_rangecheckfailure+36¡üw
                align 4
dword_4B2384    dd 0                    ; DATA XREF: ___report_gsfailure+28¡üw
                                        ; ___report_rangecheckfailure+22¡üw
dword_4B2388    dd 0                    ; DATA XREF: ___report_gsfailure+22¡üw
                                        ; ___report_rangecheckfailure+1C¡üw
dword_4B238C    dd 0                    ; DATA XREF: ___report_gsfailure+1C¡üw
                                        ; ___report_rangecheckfailure+16¡üw
dword_4B2390    dd 0                    ; DATA XREF: ___report_gsfailure+16¡üw
                                        ; ___report_rangecheckfailure+10¡üw
dword_4B2394    dd 0                    ; DATA XREF: ___report_gsfailure+10¡üw
                                        ; ___report_rangecheckfailure+A¡üw
dword_4B2398    DD 0                    ; DATA XREF:___report_gsfailure + B¡üw
word_4B23B0     DW 0
word_4B23A4     DW 0
dword_4B23A8    dd 0                    ; DATA XREF: ___report_gsfailure+59¡üw
                                        ; ___report_rangecheckfailure+53¡üw
dword_4B23AC    DD 0
word_4B237C     dw 0                    ; DATA XREF: ___report_gsfailure+43¡üw
                                        ; ___report_rangecheckfailure+3D¡üw
                Align 10H
word_4B2378     dw 0                    ; DATA XREF: ___report_gsfailure+4A¡üw
                                        ; ___report_rangecheckfailure+44¡üw
                Align 4
word_4B2374     dw 0                    ; DATA XREF: ___report_gsfailure+51¡üw
                                        ; ___report_rangecheckfailure+4B¡üw
                Align 4
dword_4B239C    dd 0                    ; DATA XREF: ___report_gsfailure+62¡üw
dword_4B23A0    dd 0                    ; DATA XREF: ___report_gsfailure+6A¡üw
dword_4B22E8    DD 0
dword_4B22A4    DD 0
dword_4B2298    DD 0
dword_4B229C    DD 0
dword_4B22A8    DD 0
dword_4B22AC    DD 0
dword_40BBFC    DD 0CC45135H, 0C098A8A8H, 1E13B455H
aBt             DB ' bT*', 0             ; DATA XREF:vBng___59 + 5E¡ýo
dword_40BC50    DD 60BEE92AH, 593E3B09H, 68A54164H
dword_40A550    DD 25310C2CH, 7BBD974BH, 5909E73AH
dword_40A500    DD 4312DE32H, 92CE32EEH, 0E1389619H, 0
off_40BB5C      dd offset a43c111821dfa8d+23h
                                        ; DATA XREF: vBng___72+58¡ýo
                                        ; "\u2D00\u3900¡¡\u3700êÀ\u2D00\u3400\u3600\u3100êÀ\u3100êÀ‘Ù\u3100êÀêÀ\u3400ÅÊ"
                DD 56666DD4H, 0BE3D6404H, 2 Dup(0)
dword_40BC90    DD 0CADEDD33H, 5EF07A9DH, 75D5A1D9H
dword_468B2C    DD 1042011H, 65030402H, 60864801H, 300B0609H, 302FH
dword_468B14    DD 42013H, 4020105H, 48016503H, 6096086H, 3031300DH, 0
a43c111821dfa8d db '43c11182-1dfa-8d0b-907f-461f1fb1ff4e',0
                Align 4



___defaultmatherr dd 1                  ; DATA XREF: pre_c_init+A4¡ür
___security_cookie dd 0BB40E64Eh        ; DATA XREF: .text:00408AA4¡üo
                                        ; g_chkMacroETWProvider+6¡ür ...
___security_cookie_complement dd 44BF19B1h
                                        ; DATA XREF: ___report_gsfailure+D6¡ür
                                        ; ___report_gsfailure+F8¡ür ...
                Align 10H







funcs_4A3C99    DD Offset VBNCB_unnamed_8000200a, Offset vBng___184_stk
                                        ; DATA XREF: VBN_MainLoop+D9¡ýr
                dd offset vBng___30_stk, offset vBng___170_stk, offset vBng___105_stk
                dd offset VBNCB_unnamed_80001fa1, offset vBng___155, offset VBNCB_unnamed_8000210e
                dd offset vBng___198, offset vBng___119_stk, offset VBNCB_unnamed_800023e5
                dd offset vBng___42, offset VBNCB_unnamed_80002327, offset vBng___57
                dd offset vBng_1__7, offset vBng___27, offset vBng___169
                dd offset vBng_1__3, offset vBng___22, offset VBNCB_unnamed_800020f5
                dd offset vBng___44_stk, offset vBng___78, offset vBng___201_stk
                dd offset vBng___52_stk, offset vBng___20_stk, offset VBNCB_unnamed_80002369
                dd offset vBng___98_stk, offset vBng___142, offset vBng__
                dd offset VBNCB_unnamed_800021dd, offset vBng___118, offset VBNCB_unnamed_80001f46
                dd offset vBng___128_stk, offset vBng___183_stk, offset vBng___125_stk
                dd offset vBng___195_stk, offset vBng___156, offset vBng___101
                dd offset vBng___115, offset VBNCB_unnamed_800020cb, offset vBng_1__1_stk
                dd offset vBng___138, offset vBng___40_stk, offset vBng___153_stk
                dd offset vBng___112, offset VBNCB_unnamed_80002136, offset vBng___104_stk
                dd offset VBNCB_unnamed_80002226, offset vBng___97_stk
                dd offset vBng___151_stk, offset vBng___176_stk, offset vBng___173
                dd offset vBng___79_stk, offset vBng_stk, offset vBng___116_stk
                dd offset VBNCB_unnamed_80001f31, offset vBng___5, offset vBng___37_stk
                dd offset vBng___76, offset vBng___201, offset vBng___105
                dd offset VBNCB_unnamed_8000233e, offset vBng___203, offset vBng___188
                dd offset vBng___78_stk, offset vBng___169_stk, offset vBng___14_stk
                dd offset vBng___59, offset vBng___5, offset vBng_h__26
                dd offset vBng___121, offset vBng___34, offset vBng___98_stk
                dd offset vBng___45_stk, offset VBNCB_unnamed_800020cb
                dd offset vBng___156, offset vBng_h__8, offset VBNCB_unnamed_80001ff1
                dd offset vBng___145, offset VBNCB_unnamed_800023e3, offset vBng___171
                dd offset vBng___199, offset vBng___197, offset vBng___134_stk
                dd offset vBng___170, offset vBng___163, offset vBng___3_stk
                dd offset VBNCB_unnamed_8000220d, offset vBng___108_stk
                dd offset vBng___130_stk, offset vBng___74, offset vBng___100
                dd offset VBNCB_unnamed_80002060, offset vBng___186_stk
                dd offset vBng___48, offset VBNCB_unnamed_80001f17, offset vBng___63_stk
                dd offset vBng___147, offset vBng___8_stk, offset vBng___96_stk
                dd offset vBng___56, offset vBng_h__21, offset vBng___148_stk
                dd offset vBng___110_stk, offset vBng___6_stk, offset vBng___135
                dd offset vBng_h__12, offset vBng___89_stk, offset vBng_h__6
                dd offset vBng_h__13, offset vBng___60, offset vBng___77_stk
                dd offset vBng___201, offset vBng___12, offset VBNCB_unnamed_800020f5
                dd offset vBng___130_stk, offset vBng___164_stk, offset VBNCB_unnamed_8000105c
                dd offset vBng___189_stk, offset vBng___173_stk, offset vBng___113_stk
                dd offset vBng___144, offset vBng___161_stk, offset vBng___31
                dd offset VBNCB_unnamed_8000204d, offset vBng___100_stk
                dd offset vBng___73, offset vBng_h__1, offset vBng___71
                dd offset vBng___144, offset vBng___159, offset vBng___129_stk
                dd offset VBNCB_unnamed_80002128, offset VBNCB_unnamed_800023ac
                dd offset VBNCB_unnamed_80002302, offset vBng___188_stk
                dd offset vBng_h__17, offset vBng___48, offset vBng___88_stk
                dd offset VBNCB_unnamed_80001ff1, offset vBng___6, offset vBng___160_stk
                dd offset VBNCB_unnamed_80002237, offset vBng___140, offset vBng___13_stk
                dd offset vBng_1__6, offset vBng_1__3, offset vBng___165_stk
                dd offset vBng_h__39, offset vBng_h__8, offset vBng___192_stk
                dd offset vBng___36, offset vBng___150_stk, offset VBNCB_unnamed_80002313
                dd offset vBng___149, offset VBNCB_unnamed_80001f87, offset vBng___177
                dd offset vBng_1, offset VBNCB_unnamed_80001f9b, offset vBng_h__15
                dd offset vBng___99, offset VBNCB_unnamed_800021b5, offset vBng___129
                dd offset vBng___146_stk, offset vBng___103_stk, offset VBNCB_unnamed_80002250
                dd offset vBng___159, offset vBng___201_stk, offset vBng___23_stk
                dd offset VBNCB_unnamed_80001f76, offset vBng___143, offset vBng_1__4
                dd offset vBng___stk, offset vBng___16_stk, offset vBng___191_stk
                dd offset VBNCB_unnamed_8000106b, offset vBng___195, offset vBng___162_stk
                dd offset VBNCB_unnamed_80002399, offset vBng___98, offset VBNCB_unnamed_8000209a
                dd offset VBNCB_unnamed_8000232d, offset VBNCB_unnamed_80002213
                dd offset vBng___122_stk, offset vBng___45, offset vBng___101
                dd offset VBNCB_unnamed_800020dc, offset vBng___70_stk
                dd offset vBng___120_stk, offset vBng___199, offset vBng___128_stk
                dd offset vBng_h__15, offset vBng___177, offset vBng_h__17
                dd offset vBng_h__25, offset vBng___67, offset vBng___28_stk
                dd offset vBng___82, offset vBng___66_stk, offset vBng___114
                dd offset VBNCB_unnamed_80002066, offset vBng___155_stk
                dd offset vBng___30_stk, offset vBng___196, offset vBng___64
                dd offset vBng___122_stk, offset vBng___158, offset vBng_h__3_stk
                dd offset vBng___198, offset vBng___185_stk, offset vBng_h__29
                dd offset vBng___171, offset vBng___39_stk, offset vBng___59
                dd offset vBng___92, offset VBNCB_unnamed_80002382, offset VBNCB_unnamed_80002163
                dd offset vBng___193_stk, offset vBng___68, offset vBng___186
                dd offset vBng___200, offset vBng___119, offset VBNCB_unnamed_800023a6
                dd offset vBng___63_stk, offset vBng___19_stk, offset vBng___97
                dd offset vBng___200_stk, offset vBng___16, offset vBng___77
                dd offset VBNCB_unnamed_800021cf, offset vBng___7, offset vBng___148_stk
                dd offset vBng___84_stk, offset VBNCB_unnamed_800023d2
                dd offset vBng_h__28, offset vBng___144_stk, offset VBNCB_unnamed_80001f37
                dd offset VBNCB_unnamed_800023e5, offset vBng___167_stk
                dd offset vBng___17_stk, offset vBng___48, offset vBng___156_stk
                dd offset vBng___69, offset VBNCB_unnamed_80002319, offset vBng___107
                dd offset vBng_h__30, offset VBNCB_unnamed_8000240a, offset vBng___139
                dd offset vBng_stk, offset vBng___111_stk, offset vBng___107_stk
                dd offset vBng___39_stk, offset VBNCB_unnamed_8000242f
                dd offset VBNCB_unnamed_80002036, offset VBNCB_unnamed_80001f11
                dd offset vBng___191, offset vBng___8, offset VBNCB_unnamed_80001efe
                dd offset vBng___50, offset vBng___83_stk, offset vBng_h__22
                dd offset VBNCB_unnamed_8000210e, offset vBng___9, offset VBNCB_unnamed_800020c5
                dd offset vBng___185, offset VBNCB_unnamed_800022cf, offset vBng___166
                dd offset vBng___104, offset vBng___185, offset VBNCB_unnamed_800022ad
                dd offset vBng___29_stk, offset vBng___187_stk, offset vBng___97_stk
                dd offset vBng___68_stk, offset vBng___109_stk, offset VBNCB_unnamed_800022bb
                dd offset VBNCB_unnamed_80002250, offset vBng_h__4, offset vBng___112_stk
                dd offset vBng___137_stk, offset vBng___160_stk, offset vBng___166_stk
                dd offset vBng___182, offset VBNCB_unnamed_800022a7, offset VBNCB_unnamed_800020cb
                dd offset vBng___119, offset vBng___144_stk, offset vBng___161_stk
                dd offset vBng___179_stk, offset vBng___106_stk, offset vBng___27_stk
                dd offset vBng___184, offset vBng___6_stk, offset vBng___16_stk
                dd offset vBng___17_stk, offset vBng___31_stk, offset vBng___155
                dd offset vBng___151, offset VBNCB_unnamed_800020b7, offset VBNCB_unnamed_80001ef8
                dd offset vBng___141, offset VBNCB_unnamed_80002030, offset vBng_h__38
                dd offset vBng___12_stk, offset vBng___200_stk, offset vBng___145_stk
                dd offset VBNCB_unnamed_80002194, offset vBng___58_stk
                dd offset vBng___76_stk, offset vBng___200_stk, offset VBNCB_unnamed_80001f70
                dd offset vBng___186_stk, offset VBNCB_unnamed_80002237
                dd offset vBng___124_stk, offset vBng___118, offset VBNCB_unnamed_80002290
                dd offset vBng___181_stk, offset vBng___1_stk, offset VBNCB_unnamed_80001f9b
                dd offset VBNCB_unnamed_800020a0, offset vBng___17, offset VBNCB_unnamed_800022fc
                dd offset VBNCB_unnamed_80002030, offset vBng_h__19, offset vBng___36_stk
                dd offset vBng___173_stk, offset vBng___91, offset VBNCB_unnamed_800022fc
                dd offset vBng___89_stk, offset vBng___167_stk, offset VBNCB_unnamed_8000232d
                dd offset vBng___75, offset VBNCB_unnamed_8000217d, offset VBNCB_unnamed_80002155
                dd offset vBng___23_stk, offset vBng___117, offset VBNCB_unnamed_800021cf
                dd offset vBng___85, offset vBng___125, offset vBng___164_stk
                dd offset VBNCB_unnamed_800022ad, offset VBNCB_unnamed_80002263
                dd offset vBng___94, offset vBng___201_stk, offset vBng___72
                dd offset vBng_h__40, offset VBNCB_unnamed_800022e3, offset vBng___13_stk
                dd offset vBng___124_stk, offset vBng_1__5, offset vBng___147_stk
                dd offset vBng___58_stk, offset vBng___174_stk, offset vBng_h__2
                dd offset vBng___84_stk, offset vBng_h__19, offset vBng___96
                dd offset VBNCB_unnamed_800021c9, offset vBng___57_stk
                dd offset vBng___179, offset vBng_h__21, offset vBng___92_stk
                dd offset vBng___162_stk, offset vBng___138, offset vBng___190_stk
                dd offset vBng___171_stk, offset VBNCB_unnamed_800022d5
                dd offset vBng___22, offset VBNCB_unnamed_800022c1, offset VBNCB_unnamed_8000208d
                dd offset vBng___58, offset vBng___42, offset vBng___35_stk
                dd offset vBng___105, offset vBng___197, offset vBng___8
                dd offset vBng___195, offset vBng___115_stk, offset vBng___94_stk
                dd offset vBng___36, offset vBng___175_stk, offset vBng___172
                dd offset vBng___94_stk, offset vBng___49, offset vBng___11
                dd offset VBNCB_unnamed_8000217d, offset vBng_h__34, offset vBng___61
                dd offset VBNCB_unnamed_80002393, offset vBng_1__6, offset vBng___153
                dd offset vBng___181, offset vBng___98, offset VBNCB_unnamed_800022c1
                dd offset vBng___134_stk, offset vBng___74_stk, offset VBNCB_unnamed_80002047
                dd offset vBng___45_stk, offset vBng_h__stk, offset vBng_h__6
                dd offset vBng_h__37, offset vBng___79, offset vBng___35_stk
                dd offset vBng___99_stk, offset vBng___92_stk, offset vBng___50_stk
                dd offset vBng___97_stk, offset vBng___28, offset vBng_1__2
                dd offset vBng___125, offset vBng___68, offset vBng___95
                dd offset vBng___178_stk, offset VBNCB_unnamed_800023e5
                dd offset vBng___6, offset vBng___60_stk, offset vBng_h__20
                dd offset vBng___40_stk, offset vBng___61_stk, offset vBng___93
                dd offset vBng___139_stk, offset vBng___66_stk, offset vBng___39
                dd offset vBng___193, offset vBng___104, offset vBng___17
                dd offset vBng___201_stk, offset vBng___53_stk, offset vBng___111
                dd offset VBNCB_unnamed_8000208d, offset VBNCB_unnamed_8000237c
                dd offset vBng___3_stk, offset VBNCB_unnamed_80002327
                dd offset vBng___158_stk, offset VBNCB_unnamed_80001efe
                dd offset vBng___195_stk, offset vBng___116, offset vBng___87
                dd offset VBNCB_unnamed_80001faf, offset vBng___93_stk
                dd offset vBng___32_stk, offset vBng___202_stk, offset vBng___178_stk
                dd offset vBng___116_stk, offset vBng___154, offset vBng___162
                dd offset vBng___90_stk, offset vBng___199_stk, offset vBng___2_stk
                dd offset vBng___15_stk, offset vBng___43_stk, offset VBNCB_unnamed_80002066
                dd offset vBng___196_stk, offset vBng_h__33, offset vBng___69
                dd offset vBng___114, offset vBng___61, offset vBng___142
                dd offset VBNCB_unnamed_8000235d, offset vBng_h__3_stk
                dd offset vBng___87, offset vBng___169, offset vBng___154_stk
                dd offset vBng___100_stk, offset vBng_h__35, offset vBng___92
                dd offset vBng___133, offset vBng___35, offset vBng___24
                dd offset vBng___126, offset vBng___38, offset VBNCB_unnamed_8000213c
                dd offset vBng___82_stk, offset vBng___31, offset vBng___7
                dd offset vBng___193_stk, offset vBng___130, offset vBng___73
                dd offset vBng___55_stk, offset vBng___7, offset vBng___147_stk
                dd offset vBng___105, offset vBng___50, offset vBng___106
                dd offset VBNCB_unnamed_8000233e, offset VBNCB_unnamed_8000204d
                dd offset vBng___71_stk, offset vBng_h__1, offset vBng___65
                dd offset vBng___188, offset VBNCB_unnamed_800022bb, offset vBng_h__28
                dd offset VBNCB_unnamed_8000237c, offset VBNCB_unnamed_800022bb
                dd offset VBNCB_unnamed_800023e3, offset vBng___73, offset vBng___195_stk
                dd offset VBNCB_unnamed_800023f8, offset VBNCB_unnamed_8000105c
                dd offset vBng___30, offset vBng_h_, offset vBng_h_, offset vBng___178
                dd offset vBng_h__11, offset vBng_h__25, offset vBng___51_stk
                dd offset VBNCB_unnamed_800021f4, offset vBng___72, offset vBng___166_stk
                dd offset VBNCB_unnamed_80002319, offset VBNCB_unnamed_80002269
                dd offset vBng_1_stk, offset vBng___134, offset vBng___137
                dd offset VBNCB_unnamed_8000235d, offset vBng___2_stk
                dd offset vBng_1_, offset vBng___80_stk, offset VBNCB_unnamed_8000105c
                dd offset vBng___143, offset VBNCB_unnamed_80002313, offset vBng___182
                dd offset vBng___117_stk, offset VBNCB_unnamed_80001f37
                dd offset vBng___167_stk, offset vBng___33, offset VBNCB_unnamed_800022cf
                dd offset vBng_h__31, offset vBng___30_stk, offset vBng___26
                dd offset vBng___158_stk, offset vBng___57, offset vBng___169_stk
                dd offset vBng___200_stk, offset VBNCB_unnamed_800022d5
                dd offset vBng___66, offset vBng___167, offset vBng___76
                dd offset vBng___31, offset VBNCB_unnamed_80002408, offset VBNCB_unnamed_80002074
                dd offset vBng_h__2, offset VBNCB_unnamed_80001f70, offset vBng___52
                dd offset vBng___109, offset VBNCB_unnamed_80001f87, offset vBng___98_stk
                dd offset vBng___42_stk, offset VBNCB_unnamed_80002263
                dd offset vBng___117_stk, offset VBNCB_unnamed_8000232d
                dd offset vBng___68, offset vBng___95, offset vBng___167
                dd offset vBng___14_stk, offset vBng___157, offset vBng_h__37
                dd offset VBNCB_unnamed_80002220, offset vBng___159, offset vBng___174
                dd offset vBng___26, offset vBng_h__9, offset VBNCB_unnamed_80001f21
                dd offset vBng___86_stk, offset vBng_h__24, offset vBng___196
                dd offset VBNCB_unnamed_80002177, offset vBng___48, offset vBng_h__23
                dd offset VBNCB_unnamed_80002344, offset VBNCB_unnamed_8000232d
                dd offset vBng_h__33, offset VBNCB_unnamed_80001fa1, offset vBng___188
                dd offset vBng___79, offset vBng___87, offset vBng___39_stk
                dd offset VBNCB_unnamed_80002047, offset vBng_h__36, offset vBng___149
                dd offset VBNCB_unnamed_800022a7, offset VBNCB_unnamed_800022fc
                dd offset vBng___176_stk, offset vBng___92, offset vBng___23
                dd offset vBng___78_stk, offset vBng___53, offset VBNCB_unnamed_80002122
                dd offset VBNCB_unnamed_80002036, offset vBng___54, offset VBNCB_unnamed_80002036
                dd offset vBng___22, offset vBng_h__12, offset vBng___194_stk
                dd offset vBng___124, offset vBng___141_stk, offset vBng___97_stk
                dd offset VBNCB_unnamed_80002023, offset VBNCB_unnamed_80002155
                dd offset vBng___92_stk, offset vBng___159_stk, offset vBng_h__9
                dd offset vBng___191_stk, offset vBng___96_stk, offset vBng_h__22
                dd offset vBng___81, offset vBng___198_stk, offset vBng___195
                dd offset VBNCB_unnamed_800020b1, offset vBng___113_stk
                dd offset vBng___199_stk, offset vBng___137, offset VBNCB_unnamed_8000242f
                dd offset vBng___128_stk, offset vBng_h__19, offset vBng___55_stk
                dd offset vBng___168_stk, offset vBng_h__3, offset vBng___62
                dd offset vBng___163, offset vBng___1, offset vBng___74_stk
                dd offset vBng___4, offset vBng_h__10, offset vBng___185
                dd offset vBng___127, offset vBng___72_stk, offset vBng_1__4
                dd offset VBNCB_unnamed_800023d2, offset vBng___37, offset vBng___33_stk
                dd offset vBng___146, offset vBng___163_stk, offset vBng___132
                dd offset vBng_h__28, offset vBng___142_stk, offset vBng___149_stk
                dd offset vBng___186_stk, offset vBng___81_stk, offset VBNCB_unnamed_80002296
                dd offset vBng___21, offset vBng___181, offset vBng___142_stk
                dd offset vBng___41_stk, offset vBng___27, offset VBNCB_unnamed_80002128
                dd offset vBng_h__3, offset vBng___110_stk, offset vBng___104
                dd offset vBng___40, offset vBng___146, offset vBng___38
                dd offset vBng___126_stk, offset vBng___63_stk, offset VBNCB_unnamed_800023d2
                dd offset vBng___41_stk, offset VBNCB_unnamed_80002282
                dd offset vBng___160_stk, offset vBng___19, offset vBng___1_stk
                dd offset vBng___8, offset VBNCB_unnamed_8000218e, offset vBng___103_stk
                dd offset VBNCB_unnamed_8000241f, offset VBNCB_unnamed_8000241d
                dd offset VBNCB_unnamed_80001ee5, offset vBng___147, offset vBng___117_stk
                dd offset VBNCB_unnamed_800023f8, offset VBNCB_unnamed_80002163
                dd offset vBng___110, offset vBng___123, offset vBng___108_stk
                dd offset vBng___115_stk, offset vBng___65, offset vBng___203
                dd offset vBng___183, offset vBng___8_stk, offset vBng___63
                dd offset vBng___44_stk, offset VBNCB_unnamed_8000224a
                dd offset vBng___6_stk, offset vBng___133_stk, offset vBng___2
                dd offset VBNCB_unnamed_80002004, offset vBng___80_stk
                dd offset vBng___131_stk, offset vBng_h__6, offset vBng_gfree_
                dd offset vBng___118_stk, offset vBng___174_stk, offset vBng___13_stk
                dd offset vBng___25_stk, offset VBNCB_unnamed_800020dc
                dd offset vBng___142_stk, offset VBNCB_unnamed_80002382
                dd offset VBNCB_unnamed_8000209a, offset vBng___56, offset vBng___172
                dd offset vBng_h__32, offset vBng___122_stk, offset vBng___34
                dd offset vBng___9_stk, offset vBng___184_stk, offset vBng_h__20
                dd offset VBNCB_unnamed_80002177, offset vBng___12_stk
                dd offset VBNCB_unnamed_8000242f, offset VBNCB_unnamed_80001fdd
                dd offset vBng___17, offset vBng___177_stk, offset vBng___142
                dd offset VBNCB_unnamed_8000235d, offset vBng___14, offset vBng___154_stk
                dd offset VBNCB_unnamed_80001ee5, offset vBng___57, offset vBng___156_stk
                dd offset vBng_h__3, offset VBNCB_unnamed_800022e3, offset vBng___157_stk
                dd offset vBng___71, offset vBng___105_stk, offset vBng___183_stk
                dd offset vBng_2, offset vBng___111, offset vBng___150_stk
                dd offset vBng___10, offset vBng___66_stk, offset VBNCB_unnamed_80001efe
                dd offset vBng___102_stk, offset vBng___172_stk, offset vBng_h__8
                dd offset VBNCB_unnamed_80002357, offset vBng___24, offset vBng_h__14
                dd offset vBng___152, offset vBng___113_stk, offset VBNCB_unnamed_80001fd7
                dd offset vBng___55_stk, offset vBng___75, offset vBng___44_stk
                dd offset vBng___135, offset VBNCB_unnamed_80002369, offset VBNCB_unnamed_800020cb
                dd offset VBNCB_unnamed_80001f27, offset VBNCB_unnamed_800023a6
                dd offset vBng___121_stk, offset VBNCB_unnamed_80001f21
                dd offset vBng___168_stk, offset vBng___86_stk, offset vBng___118_stk
                dd offset vBng___131, offset vBng___116, offset vBng___38_stk
                dd offset VBNCB_unnamed_80002319, offset vBng___88, offset vBng___99_stk
                dd offset VBNCB_unnamed_8000233e, offset vBng___20_stk
                dd offset vBng___38, offset vBng_h_, offset vBng_h__39
                dd offset vBng_h__37, offset vBng___165_stk, offset vBng___70
                dd offset vBng___51, offset vBng___109_stk, offset vBng___191_stk
                dd offset vBng___191, offset vBng___58, offset vBng___95_stk
                dd offset vBng___38_stk, offset vBng___71, offset vBng___12
                dd offset VBNCB_unnamed_80001f31, offset vBng___149, offset VBNCB_unnamed_80002087
                dd offset vBng___47, offset vBng___129, offset vBng___171_stk
                dd offset vBng___59, offset VBNCB_unnamed_80001f46, offset vBng___141
                dd offset vBng___188_stk, offset vBng_h__32, offset vBng___93
                dd offset vBng___183, offset vBng___102_stk, offset vBng___161
                dd offset VBNCB_unnamed_800022e9, offset vBng_h_, offset vBng___123
                dd offset vBng___197_stk, offset VBNCB_unnamed_8000240a
                dd offset VBNCB_unnamed_800023bd, offset vBng___197_stk
                dd offset vBng___174_stk, offset vBng___153_stk, offset vBng___120
                dd offset vBng___168_stk, offset vBng___5_stk, offset vBng___9_stk
                dd offset VBNCB_unnamed_800021e3, offset vBng_h__19, offset vBng___126
                dd offset vBng___18, offset VBNCB_unnamed_80001f5d, offset vBng___182_stk
                dd offset vBng___60_stk, offset vBng___34_stk, offset vBng___144_stk
                dd offset VBNCB_unnamed_8000241d, offset VBNCB_unnamed_80001f11
                dd offset vBng___11_stk, offset VBNCB_unnamed_80002a6f
                dd offset vBng___181_stk, offset VBNCB_unnamed_80001f9b
                dd offset vBng___113_stk, offset vBng___199, offset VBNCB_unnamed_80001ff1
                dd offset vBng___43, offset vBng___78_stk, offset vBng___13_stk
                dd offset VBNCB_unnamed_80002399, offset vBng___105_stk
                dd offset vBng_1_stk, offset vBng_1__2, offset VBNCB_unnamed_80002155
                dd offset vBng___4, offset vBng___168, offset vBng_h__11
                dd offset VBNCB_unnamed_800021f4, offset vBng___146, offset vBng___151_stk
                dd offset vBng___148, offset vBng___18_stk, offset vBng___58_stk
                dd offset VBNCB_unnamed_800021bb, offset vBng___42_stk
                dd offset vBng___67, offset VBNCB_unnamed_8000233e, offset VBNCB_unnamed_80002114
                dd offset vBng___122, offset vBng_h__3, offset vBng___90_stk
                dd offset vBng___50_stk, offset vBng___1_stk, offset vBng___162_stk
                dd offset vBng___16, offset vBng___181_stk, offset vBng___58
                dd offset vBng___91_stk, offset vBng___185, offset vBng___57
                dd offset vBng___66, offset vBng___169_stk, offset vBng_1__stk
                dd offset vBng___131, offset vBng___194, offset vBng___184
                dd offset VBNCB_unnamed_8000241d, offset vBng_1__7, offset vBng___32
                dd offset vBng___153_stk, offset vBng___40_stk, offset vBng___42_stk
                dd offset vBng___43_stk, offset vBng_h__32, offset vBng___59_stk
                dd offset VBNCB_unnamed_80002194, offset vBng___177_stk
                dd offset vBng___202, offset vBng___73_stk, offset vBng___80
                dd offset vBng___83, offset vBng___94, offset VBNCB_unnamed_80001faf
                dd offset vBng___175_stk, offset vBng___56, offset vBng___150
                dd offset vBng___178_stk, offset vBng___157, offset vBng___170_stk
                dd offset vBng___62_stk, offset VBNCB_unnamed_80001fdd
                dd offset vBng___201, offset vBng___32, offset VBNCB_unnamed_80002194
                dd offset vBng_h__13, offset vBng___78_stk, offset VBNCB_unnamed_800020f5
                dd offset vBng__, offset vBng___113, offset vBng___126
                dd offset vBng___198, offset vBng___169, offset vBng___83_stk
                dd offset vBng___83_stk, offset vBng___198_stk, offset VBNCB_unnamed_800023bf
                dd offset vBng___203, offset vBng___198, offset vBng___18_stk
                dd offset vBng___111, offset vBng___179, offset vBng___86
                dd offset vBng___56_stk, offset VBNCB_unnamed_8000242f
                dd offset vBng___188, offset vBng___134, offset vBng___25
                dd offset VBNCB_unnamed_800023bf, offset vBng___112, offset VBNCB_unnamed_8000223d
                dd offset vBng___99_stk, offset vBng___49_stk, offset VBNCB_unnamed_800023a6
                dd offset vBng___171_stk, offset vBng___197_stk, offset vBng_1__1_stk
                dd offset VBNCB_unnamed_800021cf, offset VBNCB_unnamed_800021bb
                dd offset vBng___93_stk, offset vBng___163, offset vBng___110_stk
                dd offset VBNCB_unnamed_800021e3, offset vBng___97, offset vBng___100
                dd offset vBng_h__14, offset vBng___68_stk, offset vBng___43_stk
                dd offset VBNCB_unnamed_80002128, offset vBng___181_stk
                dd offset vBng___29, offset vBng___194_stk, offset vBng___93_stk
                dd offset vBng___28, offset VBNCB_unnamed_800023f8, offset vBng___82
                dd offset vBng___106_stk, offset vBng___90, offset vBng___145_stk
                dd offset vBng_h__20, offset vBng___11_stk, offset VBNCB_unnamed_8000236f
                dd offset vBng_h__22, offset vBng___96_stk, offset VBNCB_unnamed_80002036
                dd offset VBNCB_unnamed_8000200a, offset vBng___147_stk
                dd offset vBng___111, offset vBng_h__7, offset vBng_h__stk
                dd offset vBng___52_stk, offset vBng___130, offset vBng___176
                dd offset vBng___135, offset VBNCB_unnamed_8000208d, offset vBng_1__6
                dd offset vBng___125_stk, offset vBng___72_stk, offset vBng___149_stk
                dd offset VBNCB_unnamed_80001f76, offset vBng___116, offset VBNCB_unnamed_80002269
                dd offset vBng___21_stk, offset vBng___198_stk, offset vBng___165
                dd offset vBng___184, offset vBng_h__24, offset vBng___69_stk
                dd offset vBng___86, offset vBng___165_stk, offset vBng_h__29
                dd offset vBng___104_stk, offset vBng___47_stk, offset vBng___2
                dd offset VBNCB_unnamed_80001f17, offset vBng___196, offset VBNCB_unnamed_80002213
                dd offset vBng___41_stk, offset vBng___189, offset VBNCB_unnamed_800021a7
                dd offset vBng___79_stk, offset VBNCB_unnamed_8000223d
                dd offset vBng___139, offset vBng___131, offset vBng___129
                dd offset vBng___11, offset vBng___6, offset vBng___160
                dd offset vBng___204, offset vBng___83_stk, offset vBng_h__31
                dd offset VBNCB_unnamed_8000106b, offset vBng___47, offset vBng___137_stk
                dd offset VBNCB_unnamed_80002237, offset vBng___32_stk
                dd offset vBng_h__7, offset vBng___55, offset VBNCB_unnamed_80002004
                dd offset vBng___69, offset vBng_h__10, offset vBng___162
                dd offset vBng___168_stk, offset vBng___39, offset VBNCB_unnamed_80002296
                dd offset VBNCB_unnamed_80002369, offset vBng___45_stk
                dd offset vBng_h__1, offset vBng___91, offset VBNCB_unnamed_80002087
                dd offset vBng___190_stk, offset vBng___4, offset vBng___153
                dd offset VBNCB_unnamed_800020e2, offset vBng___55, offset vBng___120
                dd offset vBng___157_stk, offset vBng_h__2, offset vBng___189_stk
                dd offset vBng___165, offset vBng___133_stk, offset VBNCB_unnamed_80002213
                dd offset VBNCB_unnamed_8000241f, offset vBng___93, offset vBng___80
                dd offset vBng___136_stk, offset vBng___141_stk, offset vBng___76
                dd offset VBNCB_unnamed_80002313, offset vBng___13, offset vBng___114
                dd offset vBng___171, offset vBng___30_stk, offset VBNCB_unnamed_800021a7
                dd offset vBng___73, offset vBng___122, offset vBng___160
                dd offset VBNCB_unnamed_8000224a, offset VBNCB_unnamed_80001f76
                dd offset vBng___180, offset vBng___15, offset vBng___25_stk
                dd offset vBng___90_stk, offset VBNCB_unnamed_800020c5
                dd offset VBNCB_unnamed_800020fb, offset vBng___95, offset VBNCB_unnamed_80001ee5
                dd offset VBNCB_unnamed_800021f4, offset vBng___7_stk
                dd offset VBNCB_unnamed_800023d0, offset vBng___161_stk
                dd offset vBng___55, offset vBng___109, offset vBng___197_stk
                dd offset vBng___33_stk, offset vBng___52_stk, offset vBng___132
                dd offset vBng___190, offset vBng___174, offset vBng___182
                dd offset vBng___128_stk, offset vBng___41, offset vBng___77
                dd offset vBng___30, offset VBNCB_unnamed_80001feb, offset vBng___130_stk
                dd offset vBng___85, offset vBng___85_stk, offset vBng___88_stk
                dd offset vBng___123, offset vBng___10, offset vBng___109
                dd offset vBng___84, offset vBng___49_stk, offset vBng___3
                dd offset vBng___53_stk, offset VBNCB_unnamed_800021dd
                dd offset vBng___49_stk, offset VBNCB_unnamed_8000105c
                dd offset vBng___29_stk, offset VBNCB_unnamed_800021fa
                dd offset vBng_h__5, offset VBNCB_unnamed_80001ec8, offset vBng___117
                dd offset vBng___193, offset vBng___110, offset vBng___98_stk
                dd offset vBng___14_stk, offset vBng___109_stk, offset VBNCB_unnamed_8000207a
                dd offset vBng___93_stk, offset vBng___91, offset vBng___1_stk
                dd offset vBng___80_stk, offset VBNCB_unnamed_80002114
                dd offset vBng___110_stk, offset vBng___108_stk, offset vBng___162_stk
                dd offset vBng___195_stk, offset VBNCB_unnamed_800020f5
                dd offset VBNCB_unnamed_80001feb, offset vBng___14_stk
                dd offset VBNCB_unnamed_80002382, offset VBNCB_unnamed_80001f8d
                dd offset vBng___38_stk, offset vBng___140_stk, offset vBng___91_stk
                dd offset vBng___107, offset vBng_h__6, offset vBng___99
                dd offset VBNCB_unnamed_80002369, offset vBng___124, offset vBng___197
                dd offset vBng___136, offset VBNCB_unnamed_8000210e, offset vBng___21
                dd offset vBng_h__21, offset vBng_h__36, offset VBNCB_unnamed_80001f4c
                dd offset vBng___49, offset vBng___94, offset vBng___83
                dd offset vBng___64_stk, offset vBng___192, offset vBng___74_stk
                dd offset vBng_h__12, offset vBng___64, offset vBng___16_stk
                dd offset vBng___stk, offset vBng___36_stk, offset vBng_1
                dd offset vBng___3, offset vBng___138_stk, offset vBng_h__30
                dd offset VBNCB_unnamed_800022ad, offset vBng_1__7, offset vBng___19_stk
                dd offset vBng___173_stk, offset vBng___175, offset vBng___108
                dd offset vBng___124_stk, offset vBng_h__26, offset vBng_h__16
                dd offset VBNCB_unnamed_80002060, offset vBng___9, offset VBNCB_unnamed_80002290
                dd offset vBng_h__5, offset vBng___107_stk, offset VBNCB_unnamed_80002302
                dd offset VBNCB_unnamed_8000227c, offset vBng___157_stk
                dd offset vBng___155, offset vBng___185_stk, offset vBng___52_stk
                dd offset vBng___179_stk, offset vBng___99, offset vBng___103
                dd offset vBng___179, offset vBng_h__2_stk, offset VBNCB_unnamed_8000223d
                dd offset vBng_1__3, offset vBng___193_stk, offset vBng___51
                dd offset vBng_h__16, offset vBng___120_stk, offset vBng___35
                dd offset vBng___61_stk, offset vBng___126_stk, offset VBNCB_unnamed_800021a1
                dd offset vBng___119_stk, offset vBng___62_stk, offset vBng___44
                dd offset vBng___145, offset vBng___194, offset vBng___121
                dd offset VBNCB_unnamed_80001fb5, offset vBng___75, offset vBng___141
                dd offset vBng___83, offset VBNCB_unnamed_80002004, offset vBng___51
                dd offset VBNCB_unnamed_800023d0, offset vBng___151, offset vBng___73_stk
                dd offset VBNCB_unnamed_80002250, offset VBNCB_unnamed_8000236f
                dd offset vBng___189, offset vBng___199_stk, offset vBng___55_stk
                dd offset VBNCB_unnamed_80002023, offset VBNCB_unnamed_80001faf
                dd offset vBng___102, offset vBng___64, offset vBng___90_stk
                dd offset vBng___114_stk, offset vBng___145, offset vBng___9_stk
                dd offset vBng___49, offset vBng_h__34, offset vBng___152_stk
                dd offset vBng___13, offset VBNCB_unnamed_800023bd, offset vBng___107_stk
                dd offset VBNCB_unnamed_80001fb5, offset vBng___161_stk
                dd offset vBng___52, offset VBNCB_unnamed_800020a0, offset vBng___43
                dd offset vBng___66, offset VBNCB_unnamed_80002114, offset vBng___171_stk
                dd offset vBng___160, offset vBng_h__2, offset vBng___181
                dd offset vBng___77, offset vBng___183_stk, offset vBng___82
                dd offset vBng___2, offset vBng___70_stk, offset vBng___54_stk
                dd offset VBNCB_unnamed_80001f31, offset VBNCB_unnamed_80002399
                dd offset VBNCB_unnamed_80002408, offset VBNCB_unnamed_80002a6f
                dd offset vBng___102_stk, offset vBng___53, offset vBng_0
                dd offset vBng___24_stk, offset vBng___136, offset vBng___20_stk
                dd offset vBng___184_stk, offset vBng___5_stk, offset VBNCB_unnamed_80002290
                dd offset vBng___14, offset vBng_h__24, offset vBng___121_stk
                dd offset VBNCB_unnamed_800021b5, offset VBNCB_unnamed_800023f8
                dd offset VBNCB_unnamed_8000214f, offset vBng___204, offset VBNCB_unnamed_80001f5d
                dd offset vBng___127, offset VBNCB_unnamed_8000227c, offset vBng___41
                dd offset vBng___40, offset vBng_h__4, offset VBNCB_unnamed_800023bf
                dd offset VBNCB_unnamed_80002250, offset vBng___162, offset VBNCB_unnamed_80001f37
                dd offset vBng___79, offset vBng___121_stk, offset vBng___104_stk
                dd offset vBng___156, offset vBng___104, offset vBng___150_stk
                dd offset VBNCB_unnamed_800023ac, offset vBng___120, offset VBNCB_unnamed_80001fc3
                dd offset vBng___34, offset vBng___168, offset vBng___60
                dd offset vBng___5_stk, offset vBng_1__5, offset vBng___7_stk
                dd offset vBng___26_stk, offset vBng___187_stk, offset vBng___9
                dd offset vBng___115, offset VBNCB_unnamed_8000218e, offset vBng___21
                dd offset vBng___86_stk, offset VBNCB_unnamed_80002399
                dd offset VBNCB_unnamed_80002226, offset vBng___69, offset vBng___58_stk
                dd offset vBng_1__5, offset vBng___5_stk, offset vBng_h__stk
                dd offset vBng___74, offset vBng___143, offset vBng___122_stk
                dd offset vBng___48_stk, offset vBng_h__33, offset vBng___124
                dd offset vBng___118, offset VBNCB_unnamed_800021a1, offset vBng___173
                dd offset VBNCB_unnamed_800022e9, offset VBNCB_unnamed_80001f63
                dd offset vBng___46_stk, offset vBng___167, offset vBng___83
                dd offset vBng___203, offset vBng___51_stk, offset vBng___stk
                dd offset VBNCB_unnamed_80001f4c, offset vBng___135, offset vBng___172_stk
                dd offset vBng_h__33, offset vBng___86, offset vBng___108
                dd offset vBng___21, offset VBNCB_unnamed_80002302, offset vBng___26_stk
                dd offset vBng___160, offset VBNCB_unnamed_8000236f, offset VBNCB_unnamed_800021c9
                dd offset vBng___70, offset vBng___87, offset vBng___177
                dd offset vBng___136_stk, offset vBng___132_stk, offset VBNCB_unnamed_80002408
                dd offset VBNCB_unnamed_800020fb, offset VBNCB_unnamed_80001f8d
                dd offset VBNCB_unnamed_80002313, offset vBng___44, offset vBng_1__3_stk
                dd offset vBng___18, offset vBng___37_stk, offset VBNCB_unnamed_80002030
                dd offset vBng_h__23, offset vBng___82_stk, offset vBng___176_stk
                dd offset vBng___183, offset vBng___71_stk, offset vBng___186
                dd offset vBng___186, offset vBng___67, offset VBNCB_unnamed_80001fb5
                dd offset VBNCB_unnamed_800020dc, offset vBng___37_stk
                dd offset vBng___185_stk, offset vBng_h__34, offset vBng___96
                dd offset vBng___42, offset vBng___129_stk, offset VBNCB_unnamed_80001f63
                dd offset vBng___96, offset vBng___119_stk, offset VBNCB_unnamed_800023bf
                dd offset vBng___29_stk, offset vBng___16, offset vBng___17
                dd offset vBng___88, offset vBng_1__stk, offset vBng___112
                dd offset vBng___17_stk, offset vBng___102_stk, offset VBNCB_unnamed_80002087
                dd offset vBng___106_stk, offset VBNCB_unnamed_80001f63
                dd offset vBng___158, offset VBNCB_unnamed_80001f8d, offset vBng___31_stk
                dd offset vBng___53_stk, offset vBng_h__12, offset vBng___127_stk
                dd offset vBng___179_stk, offset vBng___149_stk, offset vBng___165
                dd offset vBng___101, offset vBng___89, offset vBng_h__11
                dd offset VBNCB_unnamed_8000213c, offset vBng___92_stk
                dd offset vBng___32_stk, offset vBng___141_stk, offset vBng___102
                dd offset VBNCB_unnamed_80001feb, offset VBNCB_unnamed_800022e3
                dd offset vBng___154_stk, offset vBng___77_stk, offset vBng_h__15
                dd offset vBng___193, offset VBNCB_unnamed_80002269, offset vBng___114
                dd offset VBNCB_unnamed_800021b5, offset vBng___91_stk
                dd offset vBng___51_stk, offset VBNCB_unnamed_80001fc9
                dd offset vBng___151_stk, offset vBng___152_stk, offset vBng___132_stk
                dd offset vBng___188_stk, offset vBng___159_stk, offset VBNCB_unnamed_8000217d
                dd offset vBng___85_stk, offset vBng___13, offset vBng___180
                dd offset VBNCB_unnamed_800022cf, offset vBng___10_stk
                dd offset vBng___200, offset vBng___177, offset vBng_1__1_stk
                dd offset VBNCB_unnamed_80002163, offset VBNCB_unnamed_80001ee5
                dd offset vBng___85_stk, offset vBng___148, offset VBNCB_unnamed_800022a7
                dd offset VBNCB_unnamed_8000204d, offset vBng___98, offset vBng_h__37
                dd offset vBng_h__36, offset vBng___121, offset vBng___104_stk
                dd offset vBng___150, offset vBng___186_stk, offset vBng___22_stk
                dd offset VBNCB_unnamed_80002169, offset vBng_2, offset vBng___164
                dd offset VBNCB_unnamed_80001fc3, offset vBng___10_stk
                dd offset VBNCB_unnamed_8000201d, offset vBng___17_stk
                dd offset VBNCB_unnamed_80001fd7, offset vBng___196_stk
                dd offset vBng___23_stk, offset vBng___112, offset vBng___65_stk
                dd offset vBng___33_stk, offset vBng___24_stk, offset vBng___111_stk
                dd offset vBng___115, offset vBng_h__38, offset VBNCB_unnamed_80002357
                dd offset vBng___139, offset vBng___24_stk, offset vBng___142
                dd offset vBng__, offset vBng___176, offset VBNCB_unnamed_800023e3
                dd offset vBng___75_stk, offset vBng___167_stk, offset vBng___137
                dd offset vBng___172, offset vBng___69_stk, offset vBng___20
                dd offset vBng___79_stk, offset vBng___123_stk, offset vBng_h__23
                dd offset vBng_h__40, offset vBng___40, offset vBng___101_stk
                dd offset vBng___28_stk, offset vBng___48_stk, offset VBNCB_unnamed_80002302
                dd offset vBng___60, offset vBng___68_stk, offset vBng___193
                dd offset VBNCB_unnamed_8000209a, offset vBng___102, offset vBng___37_stk
                dd offset vBng___143_stk, offset VBNCB_unnamed_80001f9b
                dd offset vBng___89, offset vBng_1__4, offset vBng_h__4
                dd offset vBng___180_stk, offset vBng___48_stk, offset VBNCB_unnamed_80002282
                dd offset vBng___147_stk, offset vBng___148, offset vBng___190_stk
                dd offset vBng___100, offset vBng___182_stk, offset vBng___72
                dd offset vBng___76, offset vBng___93, offset vBng___158_stk
                dd offset vBng_h__10, offset vBng___78, offset vBng___89
                dd offset vBng_1__3_stk, offset VBNCB_unnamed_80002327
                dd offset VBNCB_unnamed_80002a6f, offset vBng___33, offset VBNCB_unnamed_8000106b
                dd offset vBng___85, offset vBng___46_stk, offset VBNCB_unnamed_800022d5
                dd offset VBNCB_unnamed_800022e3, offset vBng___39_stk
                dd offset vBng___127_stk, offset VBNCB_unnamed_8000240a
                dd offset VBNCB_unnamed_800023ac, offset VBNCB_unnamed_80002169
                dd offset vBng___15, offset vBng___133_stk, offset vBng___170_stk
                dd offset vBng___132, offset vBng_0, offset vBng_h__30
                dd offset vBng___19_stk, offset vBng___55, offset vBng___136
                dd offset vBng___163, offset vBng___94, offset VBNCB_unnamed_800020b1
                dd offset vBng___117, offset vBng_h__25, offset vBng___94_stk
                dd offset vBng___106, offset vBng___166_stk, offset vBng___59_stk
                dd offset vBng___36, offset vBng___115_stk, offset vBng___202_stk
                dd offset vBng___155_stk, offset vBng_h__40, offset VBNCB_unnamed_80001f4c
                dd offset vBng___20, offset VBNCB_unnamed_80002194, offset vBng_h__4
                dd offset vBng___194, offset vBng___194, offset vBng___163_stk
                dd offset vBng___46, offset vBng___46, offset vBng___66_stk
                dd offset vBng___158, offset vBng___156, offset vBng___80
                dd offset vBng_h__39, offset vBng___202, offset vBng___77_stk
                dd offset vBng___152_stk, offset vBng___187, offset vBng___170
                dd offset VBNCB_unnamed_800022bb, offset vBng___25_stk
                dd offset vBng___170, offset vBng_1__stk, offset vBng___3_stk
                dd offset vBng___22_stk, offset VBNCB_unnamed_80001f63
                dd offset vBng_h__25, offset vBng_h__16, offset vBng___132
                dd offset vBng___27_stk, offset vBng___182, offset VBNCB_unnamed_800020e2
                dd offset vBng___65_stk, offset VBNCB_unnamed_800022c1
                dd offset vBng___144, offset vBng___152_stk, offset VBNCB_unnamed_800020c5
                dd offset vBng___180_stk, offset vBng___107, offset vBng___129_stk
                dd offset vBng___12, offset vBng___86_stk, offset vBng___16_stk
                dd offset vBng___76_stk, offset vBng___28, offset vBng___115_stk
                dd offset vBng___84_stk, offset vBng___175, offset vBng_1_
                dd offset VBNCB_unnamed_80002023, offset VBNCB_unnamed_8000204d
                dd offset vBng_h__9, offset vBng___47, offset vBng___169_stk
                dd offset vBng___116_stk, offset VBNCB_unnamed_80002393
                dd offset VBNCB_unnamed_800020b7, offset vBng___18_stk
                dd offset vBng___165_stk, offset vBng___166, offset vBng_1_
                dd offset vBng_1__5, offset vBng_h__36, offset VBNCB_unnamed_800021dd
                dd offset vBng___174_stk, offset vBng___150, offset vBng___43
                dd offset vBng_h__24, offset vBng___196_stk, offset vBng___172
                dd offset vBng_h__31, offset vBng___175_stk, offset vBng___87_stk
                dd offset VBNCB_unnamed_80002344, offset vBng___74, offset vBng___180_stk
                dd offset vBng___133, offset vBng___95, offset vBng___133
                dd offset vBng___173_stk, offset vBng___44, offset VBNCB_unnamed_800023d0
                dd offset VBNCB_unnamed_80001fc3, offset vBng___14, offset VBNCB_unnamed_800022e9
                dd offset vBng___8_stk, offset vBng___84, offset vBng___89_stk
                dd offset VBNCB_unnamed_80002a6f, offset vBng___69_stk
                dd offset vBng___47, offset vBng___81, offset vBng___33
                dd offset vBng___133, offset vBng___121_stk, offset vBng_h__17
                dd offset vBng___8, offset VBNCB_unnamed_800022d5, offset vBng_h__35
                dd offset vBng___50_stk, offset vBng_h__2_stk, offset vBng___5
                dd offset vBng___61_stk, offset vBng___108, offset vBng___47_stk
                dd offset vBng___34_stk, offset vBng___100, offset vBng_h__34
                dd offset vBng_0, offset vBng___178_stk, offset vBng___56
                dd offset vBng_h__5, offset vBng___76_stk, offset vBng___187
                dd offset vBng___112_stk, offset vBng___85_stk, offset VBNCB_unnamed_80001f17
                dd offset VBNCB_unnamed_80001fc9, offset VBNCB_unnamed_80002393
                dd offset vBng___12, offset VBNCB_unnamed_8000201d, offset vBng___46_stk
                dd offset vBng___127, offset vBng___5, offset vBng___180_stk
                dd offset vBng___151, offset vBng___1, offset vBng___42_stk
                dd offset vBng___19, offset VBNCB_unnamed_80002263, offset vBng___178
                dd offset vBng___166, offset VBNCB_unnamed_80002282, offset vBng___88
                dd offset VBNCB_unnamed_80002344, offset VBNCB_unnamed_80001ec8
                dd offset vBng___46, offset vBng___200, offset VBNCB_unnamed_8000207a
                dd offset VBNCB_unnamed_8000224a, offset vBng___169, offset vBng___89_stk
                dd offset vBng___181, offset vBng___157, offset vBng___145
                dd offset vBng___88_stk, offset vBng___112_stk, offset vBng___180
                dd offset vBng___137_stk, offset vBng___119_stk, offset vBng_h__38
                dd offset vBng___31_stk, offset vBng___148_stk, offset vBng_h__27
                dd offset vBng___191, offset vBng___149_stk, offset VBNCB_unnamed_80002060
                dd offset VBNCB_unnamed_80001f11, offset vBng___54, offset VBNCB_unnamed_80002023
                dd offset VBNCB_unnamed_800021c9, offset vBng___152, offset vBng___110
                dd offset vBng___131_stk, offset vBng___124_stk, offset vBng___202_stk
                dd offset VBNCB_unnamed_800021a1, offset VBNCB_unnamed_800021fa
                dd offset VBNCB_unnamed_80001fa1, offset vBng___20_stk
                dd offset vBng___19, offset vBng___118_stk, offset vBng_stk
                dd offset vBng___43_stk, offset vBng___142_stk, offset vBng___90
                dd offset vBng___77, offset vBng___164, offset vBng___9_stk
                dd offset vBng___139_stk, offset VBNCB_unnamed_80001f21
                dd offset vBng___139_stk, offset vBng___159, offset vBng___177_stk
                dd offset vBng_h__21, offset vBng___112_stk, offset VBNCB_unnamed_80001f11
                dd offset vBng_1, offset vBng___65, offset vBng___41_stk
                dd offset vBng___67, offset VBNCB_unnamed_8000201d, offset vBng___70_stk
                dd offset vBng___53, offset vBng___100_stk, offset VBNCB_unnamed_8000241f
                dd offset VBNCB_unnamed_80002220, offset VBNCB_unnamed_80001fb5
                dd offset vBng___177_stk, offset vBng___25_stk, offset vBng___97
                dd offset vBng___123, offset vBng___47_stk, offset vBng_h__16
                dd offset vBng___151, offset vBng___138, offset vBng___113
                dd offset vBng___74_stk, offset vBng___161, offset VBNCB_unnamed_80001ef8
                dd offset VBNCB_unnamed_800020a0, offset vBng___54, offset vBng___158_stk
                dd offset vBng___68_stk, offset VBNCB_unnamed_8000235d
                dd offset vBng___196, offset vBng___48_stk, offset vBng___109
                dd offset VBNCB_unnamed_80001fd7, offset vBng___148_stk
                dd offset vBng___128, offset vBng___45, offset vBng___49_stk
                dd offset vBng___62_stk, offset vBng___23, offset vBng___85
                dd offset vBng___197, offset vBng___57_stk, offset vBng___147
                dd offset vBng___113, offset VBNCB_unnamed_800022fc, offset vBng___179_stk
                dd offset vBng___132_stk, offset VBNCB_unnamed_80002066
                dd offset VBNCB_unnamed_80002177, offset VBNCB_unnamed_80001f5d
                dd offset vBng___159_stk, offset vBng_h__2_stk, offset VBNCB_unnamed_80001f17
                dd offset vBng___155_stk, offset vBng___125, offset vBng___19
                dd offset VBNCB_unnamed_800023bd, offset vBng_h__stk, offset VBNCB_unnamed_800023a6
                dd offset vBng___77_stk, offset vBng___130_stk, offset vBng___101_stk
                dd offset vBng___123_stk, offset vBng_h__27, offset vBng_0
                dd offset vBng_h__10, offset vBng___98, offset vBng___73_stk
                dd offset vBng___151_stk, offset VBNCB_unnamed_80002122
                dd offset vBng___86, offset vBng___164, offset vBng___150
                dd offset vBng___21_stk, offset vBng___190, offset vBng_h__11
                dd offset vBng___25, offset vBng___120, offset vBng___184_stk
                dd offset vBng___24, offset VBNCB_unnamed_80001faf, offset VBNCB_unnamed_8000240a
                dd offset vBng___29, offset vBng___125_stk, offset vBng___166
                dd offset vBng___61_stk, offset vBng___119, offset vBng___157_stk
                dd offset VBNCB_unnamed_800022c1, offset vBng_h__17, offset VBNCB_unnamed_800020fb
                dd offset VBNCB_unnamed_800021e3, offset VBNCB_unnamed_80001f87
                dd offset VBNCB_unnamed_800020c5, offset vBng___154, offset vBng___183_stk
                dd offset vBng___34_stk, offset vBng___28_stk, offset vBng_h__13
                dd offset vBng___189_stk, offset vBng___194_stk, offset vBng___32
                dd offset VBNCB_unnamed_80002282, offset vBng___19_stk
                dd offset vBng___125_stk, offset vBng___103_stk, offset VBNCB_unnamed_800023e3
                dd offset VBNCB_unnamed_80002087, offset vBng___187_stk
                dd offset VBNCB_unnamed_80001fdd, offset vBng___2_stk
                dd offset vBng___139_stk, offset vBng___99, offset vBng___63
                dd offset vBng___108_stk, offset vBng___63, offset vBng___163_stk
                dd offset vBng___188_stk, offset vBng___144_stk, offset vBng___145_stk
                dd offset VBNCB_unnamed_80002357, offset vBng___186, offset vBng___45
                dd offset vBng___147, offset vBng___121, offset vBng___56_stk
                dd offset vBng___62, offset vBng___50, offset vBng___128
                dd offset VBNCB_unnamed_8000236f, offset vBng___46, offset vBng___81
                dd offset vBng_1__1_stk, offset vBng___40, offset VBNCB_unnamed_80002357
                dd offset vBng___1, offset vBng___114_stk, offset vBng___110
                dd offset vBng___105_stk, offset vBng___182_stk, offset vBng___161
                dd offset vBng___154, offset vBng_1_stk, offset vBng___202
                dd offset vBng_gfree_, offset vBng_1__1, offset vBng___125
                dd offset VBNCB_unnamed_8000200a, offset vBng___200, offset vBng___119
                dd offset vBng_1__4, offset VBNCB_unnamed_800023bd, offset VBNCB_unnamed_80001f5d
                dd offset vBng_1__1, offset vBng___115, offset vBng___76_stk
                dd offset vBng___156_stk, offset vBng___127_stk, offset vBng___174
                dd offset vBng___126_stk, offset vBng___7, offset VBNCB_unnamed_8000207a
                dd offset vBng___136, offset vBng___61, offset vBng___114_stk
                dd offset vBng___117_stk, offset vBng___53, offset vBng___136_stk
                dd offset vBng___41, offset vBng___192, offset vBng_h__35
                dd offset vBng___194_stk, offset VBNCB_unnamed_80001ef8
                dd offset vBng___79_stk, offset vBng___153, offset vBng___123_stk
                dd offset VBNCB_unnamed_80002237, offset vBng___15_stk
                dd offset vBng_h__29, offset VBNCB_unnamed_80001fc9, offset vBng___22
                dd offset VBNCB_unnamed_800021f4, offset vBng_gfree_, offset vBng___126_stk
                dd offset VBNCB_unnamed_80001fdd, offset VBNCB_unnamed_8000209a
                dd offset vBng___30, offset vBng___148, offset VBNCB_unnamed_800021e3
                dd offset vBng_h__7, offset VBNCB_unnamed_80002226, offset vBng___138_stk
                dd offset VBNCB_unnamed_80002155, offset vBng___189_stk
                dd offset vBng___174, offset vBng___62, offset VBNCB_unnamed_80002319
                dd offset vBng___170, offset VBNCB_unnamed_800023d2, offset vBng___140
                dd offset vBng___95_stk, offset vBng___59_stk, offset vBng___128
                dd offset vBng___173, offset VBNCB_unnamed_80001f31, offset vBng___190_stk
                dd offset VBNCB_unnamed_80002269, offset vBng___111_stk
                dd offset VBNCB_unnamed_800020b1, offset vBng___130, offset vBng___189
                dd offset vBng___146_stk, offset VBNCB_unnamed_80002047
                dd offset vBng___49, offset VBNCB_unnamed_80002030, offset VBNCB_unnamed_80002327
                dd offset vBng___153_stk, offset VBNCB_unnamed_800022cf
                dd offset vBng___34, offset VBNCB_unnamed_8000208d, offset vBng___84
                dd offset vBng___187, offset VBNCB_unnamed_8000214f, offset VBNCB_unnamed_80002074
                dd offset vBng___60_stk, offset vBng___25, offset vBng___157
                dd offset VBNCB_unnamed_8000214f, offset vBng___75_stk
                dd offset vBng___111_stk, offset vBng___166_stk, offset vBng___2_stk
                dd offset vBng_h__27, offset vBng___12_stk, offset vBng___96
                dd offset vBng___35_stk, offset vBng_h__5, offset vBng___22_stk
                dd offset vBng___175, offset vBng___84_stk, offset vBng___158
                dd offset vBng___171, offset VBNCB_unnamed_80002290, offset vBng_1__1
                dd offset VBNCB_unnamed_800023d0, offset vBng_1_, offset VBNCB_unnamed_80001ec8
                dd offset vBng___140_stk, offset vBng_h__1, offset VBNCB_unnamed_80001f27
                dd offset vBng_h__3_stk, offset VBNCB_unnamed_8000227c
                dd offset vBng___40_stk, offset vBng___65_stk, offset vBng___91_stk
                dd offset vBng___51, offset vBng___95_stk, offset vBng___11_stk
                dd offset vBng___10_stk, offset vBng___201, offset VBNCB_unnamed_800021c9
                dd offset vBng___191_stk, offset vBng___52, offset vBng___113
                dd offset VBNCB_unnamed_80001f27, offset VBNCB_unnamed_800020dc
                dd offset VBNCB_unnamed_80001f46, offset VBNCB_unnamed_80002382
                dd offset vBng___97, offset vBng___63, offset vBng___105
                dd offset vBng_h__29, offset vBng___150_stk, offset vBng___175
                dd offset vBng___10_stk, offset vBng___143_stk, offset vBng_h__18
                dd offset vBng___173, offset vBng___29, offset VBNCB_unnamed_80001fa1
                dd offset VBNCB_unnamed_80001f87, offset vBng___204, offset vBng___103
                dd offset vBng_gfree_, offset vBng___82_stk, offset vBng___23_stk
                dd offset VBNCB_unnamed_80002128, offset vBng___71_stk
                dd offset VBNCB_unnamed_80001f70, offset VBNCB_unnamed_800023fa
                dd offset vBng___66, offset vBng___26, offset vBng___22_stk
                dd offset vBng___138, offset vBng___131_stk, offset vBng___63_stk
                dd offset vBng___101, offset vBng___90, offset VBNCB_unnamed_8000218e
                dd offset vBng___29_stk, offset vBng___62, offset vBng___59
                dd offset vBng___176, offset vBng___101_stk, offset vBng___156_stk
                dd offset vBng___81_stk, offset vBng___73_stk, offset VBNCB_unnamed_8000207a
                dd offset vBng___168, offset vBng___58, offset vBng_1__3
                dd offset vBng___183, offset vBng___160_stk, offset VBNCB_unnamed_80001fc3
                dd offset vBng___131_stk, offset vBng___117, offset vBng___57_stk
                dd offset vBng_1__2, offset vBng___54_stk, offset VBNCB_unnamed_80002169
                dd offset vBng___143, offset vBng___78, offset VBNCB_unnamed_80001ff1
                dd offset VBNCB_unnamed_800021fa, offset vBng___14, offset vBng___37
                dd offset vBng___94_stk, offset VBNCB_unnamed_800020b1
                dd offset vBng___127_stk, offset vBng___36_stk, offset vBng___143_stk
                dd offset VBNCB_unnamed_8000223d, offset vBng___168, offset vBng___138_stk
                dd offset vBng___35, offset vBng___191, offset vBng_1__3_stk
                dd offset vBng___15_stk, offset VBNCB_unnamed_800021fa
                dd offset VBNCB_unnamed_80001f4c, offset vBng___164, offset vBng___202_stk
                dd offset vBng___71, offset vBng___152, offset vBng___179
                dd offset vBng___3
                DD 0

hInst		HINSTANCE	NULL


include ECProtos.inc ; .Code

DllEntryPoint Proc hInstance:HINSTANCE, dwReason:DWord, lpvReserved:LPVOID
	.If dwReason == DLL_PROCESS_ATTACH
		Mov Eax, hInstance
		Mov hInst, Eax
	.ElseIf dwReason == DLL_PROCESS_DETACH

	.ElseIf dwReason == DLL_THREAD_ATTACH

	.ElseIf dwReason == DLL_THREAD_DETACH

	.EndIf
	Mov Eax, TRUE ;Return TRUE
	Ret
DllEntryPoint EndP

sub_40BBF0      proc near               ; DATA XREF: vBng___127+3E¡ýo
                adc     al, 13h
                push    ds
                dec     esi
                popa
                adc     al, 3Ah ; ':'
                mov     ah, 75h ; 'u'
                retn
sub_40BBF0 EndP ; sp-analysis failed
sub_40A4F0      proc far                ; DATA XREF: vBng___77_stk+66¡ýo
                adc     ebp, esp
                movq    mm1, qword ptr ds:22492E57h
                retf
sub_40A4F0 EndP
sub_40C0B4      proc far                ; DATA XREF: vBng_h__9+6E¡ýo
                sub     [ebp-5B7152C1h], al
                xlat
                mov     al, 9Bh
                dec     esp
                xor     ebp, esi

loc_40C0C0:                             ; DATA XREF: vBng___14_stk+13¡ýo
                push    ds
                xchg    eax, ebx
                retf
sub_40C0B4 EndP ; sp-analysis failed
__aullshr       proc near               ; CODE XREF: vBng_h__38+12E¡üp
                cmp     cl, 40h ; '@'
                jnb     short loc_4B0DDA
                cmp     cl, 20h ; ' '
                jnb     short loc_4B0DD0
                shrd    eax, edx, cl
                shr     edx, cl
                retn
; ---------------------------------------------------------------------------

loc_4B0DD0:                             ; CODE XREF: __aullshr+8¡üj
                mov     eax, edx
                xor     edx, edx
                and     cl, 1Fh
                shr     eax, cl
                retn
; ---------------------------------------------------------------------------

loc_4B0DDA:                             ; CODE XREF: __aullshr+3¡üj
                xor     eax, eax
                xor     edx, edx
                retn
__aullshr EndP
security_check_cookie proc near         ; CODE XREF: g_chkMacroETWProvider+4E¡üp
                                        ; GatherOsInformation+61C¡üp ...
                cmp     ecx, ___security_cookie
                jnz     short loc_4AE55B
                retn    0
; ---------------------------------------------------------------------------

loc_4AE55B:                             ; CODE XREF: security_check_cookie+6¡üj
                jmp     ___report_gsfailure
security_check_cookie EndP
guard_check_icall_nop proc near         ; CODE XREF: g_chkMacroETWProvider+35¡üp
                                        ; LogHResultEvent+71¡üp ...
                retn
guard_check_icall_nop EndP
___raise_securityfailure proc near      ; CODE XREF: ___report_gsfailure+107¡ýp
                                        ; ___report_rangecheckfailure+B3¡ýp

ExceptionInfo   = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0               ; lpTopLevelExceptionFilter
                call    ds:SetUnhandledExceptionFilter
                push    [ebp+ExceptionInfo] ; ExceptionInfo
                call    ds:UnhandledExceptionFilter
                push    0C0000409h      ; uExitCode
                call    ds:GetCurrentProcess
                push    eax             ; hProcess
                call    ds:TerminateProcess
                pop     ebp
                retn
___raise_securityfailure EndP
___report_gsfailure proc near           ; CODE XREF: security_check_cookie:loc_4AE55B¡üj

var_324         = dword ptr -324h
var_8           = dword ptr -8
var_s0          = dword ptr  0
arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 324h
                mov     dword_4B2398, eax
                mov     dword_4B2394, ecx
                mov     dword_4B2390, edx
                mov     dword_4B238C, ebx
                mov     dword_4B2388, esi
                mov     dword_4B2384, edi
                mov     word_4B23B0, ss
                mov     word_4B23A4, cs
                mov     word_4B2380, ds
                mov     word_4B237C, es
                mov     word_4B2378, fs
                mov     word_4B2374, gs
                pushf
                pop     dword_4B23A8
                mov     eax, [ebp+var_s0]
                mov     dword_4B239C, eax
                mov     eax, [ebp+4]
                mov     dword_4B23A0, eax
                lea     eax, [ebp+arg_0]
                mov     dword_4B23AC, eax
                mov     eax, [ebp+var_324]
                mov     dword_4B22E8, 10001h
                mov     eax, dword_4B23A0
                mov     dword_4B22A4, eax
                mov     dword_4B2298, 0C0000409h
                mov     dword_4B229C, 1
                mov     dword_4B22A8, 3
                push    4
                pop     eax
                imul    eax, 0
                mov     dword_4B22AC[eax], 2
                push    4
                pop     eax
                shl     eax, 0
                mov     ecx, ___security_cookie
                mov     dword_4B22AC[eax], ecx
                push    4
                pop     eax
                shl     eax, 1
                mov     ecx, ___security_cookie_complement
                mov     dword_4B22AC[eax], ecx
                push    4
                pop     eax
                imul    eax, 0
                mov     ecx, ___security_cookie
                mov     [ebp+eax+var_8], ecx
                push    4
                pop     eax
                shl     eax, 0
                mov     ecx, ___security_cookie_complement
                mov     [ebp+eax+var_8], ecx
                push    offset ExceptionInfo ; ExceptionInfo
                call    ___raise_securityfailure
                mov     esp, ebp
                pop     ebp
                retn
___report_gsfailure EndP
;VRSAVaultSignPKCS(SessionId, 0, pbNewData, pNewData(0), New Byte() {&H43, &HE, &HA}, 256, New CRITICAL_SECTION)
;int __userpurge VRSAVaultSignPKCS@<eax>(unsigned int a1@<esi>, const void *(__stdcall *a2)(unsigned int *, unsigned int *), int (__stdcall *lpMem)(void *, const void *), unsigned int dwBytes, const unsigned __int8 *Dst, unsigned int a6, unsigned __int8 *a7, unsigned int *a8)
VRSAVaultSignPKCS Proc a1:DWord, a2:DWord, arg_4:DWord, arg_8:DWord, Dsts:DWord, a6:DWord, a7:Byte, a8:_RTL_CRITICAL_SECTION
var_8 = Byte Ptr -8
var_4 = DWord Ptr -4
;arg_4           = dword ptr  0Ch
;arg_8           = dword ptr  10h
;Dsts = DWord Ptr 14H
;arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    edi             ; unsigned int
                lea     eax, [ebp+var_4]
                push    eax
                lea     eax, [ebp+var_8]
                push    eax
                call    _VbnRsaVault_GetPubParams
                mov     edi, [ebp+arg_10]
                mov     eax, [ebp+var_4]
                cmp     [edi], eax
                jnb     short loc_4ADFA8
                mov     eax, 80070057h
                jmp     short loc_4ADFF2
; ---------------------------------------------------------------------------

loc_4ADFA8:                             ; CODE XREF: VRSAVaultSignPKCS+1D¡üj
                push    esi             ; unsigned __int8 *
                Mov Esi, [Ebp + Dsts]
                push    esi             ; Dst
                push    ecx             ; unsigned __int8 *
                push    [ebp+arg_8]     ; unsigned int
                mov     byte ptr [eax+esi-1], 0
                push    [ebp+arg_4]     ; unsigned int
                mov     ecx, [ebp+var_4]
                call    ApplyPKCS1SigningFormat
                test    eax, eax
                jz      short loc_4ADFD1
                jle     short loc_4ADFF1
                movzx   eax, ax
                or      eax, 80070000h
                jmp     short loc_4ADFF1
; ---------------------------------------------------------------------------

loc_4ADFD1:                             ; CODE XREF: VRSAVaultSignPKCS+41¡üj
                push    esi
                push    esi
                call    _VbnRsaVault_ModExpPriv_clear
                test    eax, eax
                jnz     short loc_4ADFE3
                mov     eax, 8007000Eh
                jmp     short loc_4ADFF1
; ---------------------------------------------------------------------------

loc_4ADFE3:                             ; CODE XREF: VRSAVaultSignPKCS+58¡üj
                mov     edx, [ebp+var_4]
                mov     ecx, esi
                mov     [edi], edx
                call    vMemrev
                xor     eax, eax

loc_4ADFF1:                             ; CODE XREF: VRSAVaultSignPKCS+43¡üj
                                        ; VRSAVaultSignPKCS+4D¡üj ...
                pop     esi

loc_4ADFF2:                             ; CODE XREF: VRSAVaultSignPKCS+24¡üj
                pop     edi
                mov     esp, ebp
                pop     ebp
                retn    14h
VRSAVaultSignPKCS endp
_VbnRsaVault_GetPubParams Proc Near     ; CODE XREF:VRSAVaultSignPKCS + 10¡ýp

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                push    ecx
                push    ecx
                push    944B6DD0h       ; int
                push    26331523h       ; int
                push    8007F6CCh       ; int
                push    0B7ED3005h      ; int
                push    0               ; int
                push    [ebp+arg_4]     ; int
                mov     [esp+20h+var_8], 0DA6ACDD9h
                push    0               ; int
                push    [ebp+arg_0]     ; int
                mov     [esp+28h+var_4], 923CD90Ch
                push    [esp+28h+var_4] ; int
                push    [esp+2Ch+var_8] ; _stk *
                call    VBN_MainLoop
                mov     esp, ebp
                pop     ebp
                retn    8
_VbnRsaVault_GetPubParams endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned int ApplyPKCS1SigningFormat(unsigned int, unsigned int, const unsigned __int8 *, void *Dst, unsigned int, unsigned __int8 *)
ApplyPKCS1SigningFormat proc near       ; CODE XREF: VRSAVaultSignPKCS+3A¡üp

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
Dsts = DWord Ptr 14H

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                lea     edi, [ecx-2]
                cmp     esi, edi
                jbe     short loc_4AE02B
                mov     edx, 80090004h
                jmp     short loc_4AE098
; ---------------------------------------------------------------------------

loc_4AE02B:                             ; CODE XREF: ApplyPKCS1SigningFormat+F¡üj
                push    ebx
                Mov Ebx, [Ebp + Dsts]
                push    edi             ; Size
                push    0FFh            ; Val
                Push Ebx             ; Dsts
                mov     byte ptr [ecx+ebx-2], 1
                call crt_memset
                xor     edx, edx
                add     esp, 0Ch
                mov     ecx, edx
                test    esi, esi
                jz      short loc_4AE05E
                lea     edx, [esi-1]
                add     edx, [ebp+arg_0]

loc_4AE051:                             ; CODE XREF: ApplyPKCS1SigningFormat+47¡ýj
                mov     al, [edx]
                mov     [ecx+ebx], al
                inc     ecx
                dec     edx
                cmp     ecx, esi
                jb      short loc_4AE051
                xor     edx, edx

loc_4AE05E:                             ; CODE XREF: ApplyPKCS1SigningFormat+36¡üj
                mov     eax, ds:off_408A5C
                sub     edi, esi
                Add Esi, [Ebp + Dsts]
                mov     bl, [eax]
                movzx   eax, bl
                inc     eax
                cmp     eax, edi
                jbe     short loc_4AE079
                mov     edx, 80090004h
                jmp     short loc_4AE097
; ---------------------------------------------------------------------------

loc_4AE079:                             ; CODE XREF: ApplyPKCS1SigningFormat+5D¡üj
                mov     ecx, esi
                test    bl, bl
                jz      short loc_4AE095
                mov     edx, ds:off_408A5C
                sub     edx, esi

loc_4AE087:                             ; CODE XREF: ApplyPKCS1SigningFormat+7E¡ýj
                mov     al, [edx+ecx+1]
                mov     [ecx], al
                inc     ecx
                sub     bl, 1
                jnz     short loc_4AE087
                xor     edx, edx

loc_4AE095:                             ; CODE XREF: ApplyPKCS1SigningFormat+6A¡üj
                mov     [ecx], dl

loc_4AE097:                             ; CODE XREF: ApplyPKCS1SigningFormat+64¡üj
                pop     ebx

loc_4AE098:                             ; CODE XREF: ApplyPKCS1SigningFormat+16¡üj
                pop     edi
                mov     eax, edx
                pop     esi
                pop     ebp
                retn    10h
ApplyPKCS1SigningFormat endp


_VbnRsaVault_ModExpPriv_clear proc near ; CODE XREF: VRSAVaultSignPKCS+51¡ýp

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                push    ecx
                push    ecx
                push    187E51C5h       ; int
                push    0DBBE89C3h      ; int
                push    0D58BB3AAh      ; int
                push    8539CF57h       ; int
                push    0               ; int
                push    [ebp+arg_4]     ; int
                mov     [esp+20h+var_8], 31EE6546h
                push    0               ; int
                push    [ebp+arg_0]     ; int
                mov     [esp+28h+var_4], 0D3650BBDh
                push    [esp+28h+var_4] ; int
                push    [esp+2Ch+var_8] ; _stk *
                call    VBN_MainLoop
                mov     esp, ebp
                pop     ebp
                retn    8
_VbnRsaVault_ModExpPriv_clear endp

vMemrev         proc near               ; CODE XREF: VRSAVaultSignPKCS+68¡üp
                mov     edi, edi
                push    esi
                lea     esi, [edx-1]
                add     esi, ecx
                jmp     short loc_4AE00D
; ---------------------------------------------------------------------------

loc_4AE003:                             ; CODE XREF: vMemrev+16¡ýj
                mov     al, [esi]
                mov     dl, [ecx]
                mov     [ecx], al
                inc     ecx
                mov     [esi], dl
                dec     esi

loc_4AE00D:                             ; CODE XREF: vMemrev+8¡üj
                cmp     ecx, esi
                jb      short loc_4AE003
                pop     esi
                retn
vMemrev EndP
VBN_MainLoop    proc near               ; CODE XREF: _VbnRsaVault_ModExpPriv_clear+40¡üp
                                        ; _VbnRsaVault_GetPubParams+40¡üp

var_211         = byte ptr -211h
var_1C9         = byte ptr -1C9h
var_1C8         = byte ptr -1C8h
var_118         = dword ptr -118h
var_114         = dword ptr -114h
var_B0          = dword ptr -0B0h
var_AC          = dword ptr -0ACh
var_98          = dword ptr -98h
var_94          = dword ptr -94h
var_90          = dword ptr -90h
var_8C          = dword ptr -8Ch
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_10          = qword ptr -10h
var_4           = dword ptr -4
thiss           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h
arg_1C          = dword ptr  24h
arg_20          = dword ptr  28h
arg_24          = dword ptr  2Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 1CCh
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                push    esi
                push    edi
                mov     [ebp+var_1C9], 11h
                mov     al, [ebp+var_1C9]
                push    8
                pop     eax
                call    __chkstk
                push    40h ; '@'
                pop     eax
                call    __alloca_probe_16
                mov     eax, [ebp+arg_8]
                lea     edi, [esp+220h+var_211]
                mov     esi, [ebp+thiss]
                and     edi, 0FFFFFFF0h
                mov     ebx, [ebp+arg_4]
                xor     ecx, ecx
                mov     dword ptr [ebp+var_80], edi
                mov     dword ptr [ebp+var_80+4], ecx
                mov     dword ptr [ebp+var_10], ecx
                mov     dword ptr [ebp+var_10+4], ecx
                mov     [ebp+var_98], edi
                mov     [ebp+var_94], ecx
                mov     [edi], ecx
                mov     [edi+4], ecx
                mov     [ebp+var_B0], eax
                mov     eax, [ebp+arg_C]
                mov     [ebp+var_AC], eax
                mov     eax, [ebp+arg_10]
                mov     [ebp+var_118], eax
                mov     eax, [ebp+arg_14]
                mov     [ebp+var_114], eax
                mov     eax, [ebp+arg_18]
                mov     [ebp+var_90], eax
                mov     eax, [ebp+arg_1C]
                mov     [ebp+var_8C], eax
                mov     eax, [ebp+arg_20]
                mov     [ebp+var_78], eax
                mov     eax, [ebp+arg_24]
                mov     [ebp+var_74], eax
                mov     eax, esi
                or      eax, ebx
                jz      short loc_4A3CA8

loc_4A3C54:                             ; CODE XREF: VBN_MainLoop+FB¡ýj
                mov     eax, dword ptr [ebp+var_10]
                or      eax, dword ptr [ebp+var_10+4]
                jz      short loc_4A3C7C
                cmp     dword ptr [ebp+var_10+4], ecx
                ja      short loc_4A3C7C
                jb      short loc_4A3C68
                cmp     dword ptr [ebp+var_10], edi
                jnb     short loc_4A3C7C

loc_4A3C68:                             ; CODE XREF: VBN_MainLoop+B6¡üj
                sub     edi, dword ptr [ebp+var_10]
                mov     eax, edi
                call    __alloca_probe_16
                and     dword ptr [ebp+var_10], 0
                mov     edi, esp
                and     dword ptr [ebp+var_10+4], 0

loc_4A3C7C:                             ; CODE XREF: VBN_MainLoop+AF¡üj
                                        ; VBN_MainLoop+B4¡üj ...
                push    ebx
                push    esi             ; thiss
                and     esi, 7FFh
                mov     esi, ds:funcs_4A3C99[esi*4]
                mov     ecx, esi
                call    ds:___guard_check_icall_fptr
                lea     ecx, [ebp+var_1C8]
                call    esi ; VBNCB_unnamed_8000200a
                mov     esi, eax
                mov     ebx, edx
                mov     ecx, esi
                or      ecx, ebx
                push    0
                pop     ecx
                jnz     short loc_4A3C54

loc_4A3CA8:                             ; CODE XREF: VBN_MainLoop+A7¡üj
                mov     eax, dword ptr [ebp+var_80]
                mov     edx, dword ptr [ebp+var_80+4]
                lea     esp, [ebp-1D8h]
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    security_check_cookie
                mov     esp, ebp
                pop     ebp
                retn    28h ; '('
VBN_MainLoop EndP
VBN_TransformContext proc near          ; CODE XREF: vBng___117_stk+48¡üp
                                        ; vBng___61+F4¡üp ...

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    esi
                mov     eax, edx
                mov     esi, ecx
                push    edi
                movzx   edi, al
                test    al, al
                jz      short loc_4A3D32
                push    ebx

loc_4A3CDB:                             ; CODE XREF: VBN_TransformContext+68¡ýj
                mov     ecx, [ebp+arg_0]
                mov     ebx, [ecx]
                add     ecx, 4
                xor     ebx, eax
                mov     [ebp+arg_0], ecx
                mov     ecx, eax
                movzx   edx, bl
                shl     eax, 3
                shr     ecx, 3
                xor     ecx, eax
                mov     eax, ebx
                shr     eax, 8
                add     ecx, ebx
                mov     [ebp+var_4], ecx
                movzx   ecx, al
                mov     eax, [esi+edx*8]
                mov     [esi+ecx*8], eax
                mov     eax, [esi+edx*8+4]
                mov     [esi+ecx*8+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   ecx, al
                shr     ebx, 18h
                mov     eax, [esi+ecx*8]
                mov     [esi+ebx*8], eax
                mov     eax, [esi+ecx*8+4]
                mov     [esi+ebx*8+4], eax
                mov     eax, [ebp+var_4]
                sub     edi, 1
                jnz     short loc_4A3CDB
                pop     ebx

loc_4A3D32:                             ; CODE XREF: VBN_TransformContext+11¡üj
                pop     edi
                pop     esi
                mov     esp, ebp
                pop     ebp
                retn    4
VBN_TransformContext EndP
__chkstk        proc near               ; CODE XREF: VBN_MainLoop+28¡üp
                                        ; __alloca_probe_16+11¡ýj ...
                push    ecx
                lea     ecx, [esp+4]
                sub     ecx, eax
                sbb     eax, eax
                not     eax
                and     ecx, eax
                mov     eax, esp
                and     eax, 0FFFFF000h

loc_4B0CE4:                             ; CODE XREF: __chkstk+29¡ýj
                cmp     ecx, eax
                jb      short loc_4B0CF2
                mov     eax, ecx
                pop     ecx
                xchg    eax, esp
                mov     eax, [eax]
                mov     [esp+0], eax
                retn
; ---------------------------------------------------------------------------

loc_4B0CF2:                             ; CODE XREF: __chkstk+16¡üj
                sub     eax, 1000h
                test    [eax], eax
                jmp     short loc_4B0CE4
__chkstk EndP
__alloca_probe_16 proc near             ; CODE XREF: VBN_MainLoop+30¡üp
                                        ; VBN_MainLoop+C2¡üp

arg_0           = byte ptr  4

                push    ecx
                lea     ecx, [esp+4+arg_0]
                sub     ecx, eax
                and     ecx, 0Fh
                add     eax, ecx
                sbb     ecx, ecx
                or      eax, ecx
                pop     ecx
                jmp     __chkstk
__alloca_probe_16 EndP
VBNCB_unnamed_80001f31 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shr     eax, 4
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                shl     ebx, 4
                mov     esi, edi
                add     ebx, eax
                mov     [ebp+var_C], ecx
                xor     eax, eax
                mov     ecx, edi
                xor     eax, edi
                shr     ecx, 4
                mov     [ebp+var_4], eax
                xor     esi, edx
                mov     eax, edx
                xor     edi, esi
                shl     eax, 4
                xor     edi, edx
                mov     edx, [ebp+var_C]
                add     eax, ecx
                mov     ecx, eax
                xor     edi, ebx
                xor     ecx, ebx
                xor     edi, 328E64D1h
                mov     [ebp+var_4], ecx
                xor     ecx, ecx
                xor     eax, [ebp+var_4]
                xor     eax, esi
                xor     eax, 0FBF101A4h
                or      ecx, eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 64h
                cmp     byte ptr [edx+eax*8], 0
                mov     edx, [ebp+var_4]
                jnz     short loc_47B5F2
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                xor     eax, 0F1h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47B5F2
                xor     ecx, ecx
                lea     eax, [edx-5DF87DDCh]
                xor     esi, 0B27D003Eh
                or      ecx, eax
                jmp     short loc_47B5F4
; ---------------------------------------------------------------------------

loc_47B5F2:                             ; CODE XREF: VBNCB_unnamed_80001f31+6D¡üj
                                        ; VBNCB_unnamed_80001f31+7E¡üj
                mov     esi, edi

loc_47B5F4:                             ; CODE XREF: VBNCB_unnamed_80001f31+90¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f31 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___105      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+60h+var_4], 0
                mov     ecx, [ebp+arg_0]
                lea     ebx, [edx+23D8FBAAh]
                sub     ecx, edx
                movzx   eax, bl
                mov     [esp+60h+var_14], eax
                xor     ecx, 0EFFC42DCh
                xor     eax, 0FBh
                mov     [esp+60h+var_50], ecx
                mov     [esp+60h+var_38], ebx
                mov     [esp+60h+var_48], edi
                mov     esi, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+60h+var_28], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 62h
                mov     [esp+60h+var_2C], esi
                mov     esi, ebx
                shr     esi, 18h
                sub     esi, 67h ; 'g'
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+60h+var_30], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E1h
                mov     [esp+60h+var_34], ecx
                xor     ecx, ecx
                add     esi, [edi+eax*8]
                mov     [esp+60h+var_C], esi
                adc     ecx, [edi+eax*8+4]
                mov     eax, [esp+60h+var_50]
                shr     eax, 10h
                mov     esi, [ebp+arg_0]
                mov     [esp+60h+var_8], ecx
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     ecx, 92h
                movzx   eax, al
                mov     ebx, edx
                shr     ebx, 4
                mov     ecx, [ecx+edi]
                add     ecx, eax
                mov     eax, [esp+60h+var_50]
                movzx   eax, al
                mov     eax, [eax+edi-0BDh]
                mov     eax, [eax+ecx*4-144h]
                lea     ecx, [edx+40DEFFD3h]
                mov     [esp+60h+var_24], eax
                mov     eax, esi
                shl     eax, 4
                xor     esi, edx
                add     ebx, eax
                mov     [esp+60h+var_4C], esi
                mov     eax, esi
                mov     edi, ebx
                xor     edi, [esp+60h+var_50]
                lea     esi, [edx+23D8FBAAh]
                mov     edx, [esp+60h+var_4C]
                xor     eax, esi
                xor     eax, [esp+60h+var_50]
                xor     ecx, edi
                xor     edx, eax
                mov     [esp+60h+var_44], eax
                mov     eax, [esp+60h+var_50]
                xor     ecx, esi
                shr     eax, 8
                xor     edx, edi
                movzx   eax, al
                mov     [esp+60h+var_18], edi
                xor     eax, 0DEh
                mov     [esp+60h+var_40], ecx
                mov     [esp+60h+var_4C], edx
                mov     esi, [esp+60h+var_48]
                xor     ebx, ecx
                xor     ebx, [esp+60h+var_44]
                push    offset dword_40BBFC
                mov     [esp+64h+var_3C], ebx
                mov     edi, [esi+eax*8]
                mov     esi, [esi+eax*8+4]
                mov     eax, edx
                xor     eax, ecx
                mov     ecx, [esp+64h+var_48]
                xor     eax, [esp+64h+var_50]
                mov     edx, eax
                mov     [esp+64h+var_1C], eax
                xor     edx, 0D9BAABF5h
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                add     eax, 777Fh
                mov     [esp+60h+var_10], ecx
                movzx   eax, ax
                cdq
                lea     ebx, [ecx-0E9h]
                xor     ecx, ecx
                sub     ebx, eax
                sbb     ecx, edx
                mov     edx, [esp+60h+var_40]
                add     ebx, edi
                adc     ecx, esi
                mov     esi, [esp+60h+var_4C]
                mov     [esp+60h+var_20], ecx
                xor     edx, 29756E21h
                xor     ecx, ecx
                xor     edi, edi
                or      edx, edi
                lea     eax, [esi+7E184F8Dh]
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+60h+var_34]
                mov     [ebx+4], edx
                mov     edx, [esp+60h+var_3C]
                xor     edx, esi
                mov     esi, [esp+60h+var_48]
                xor     edx, [esp+60h+var_38]
                xor     edx, [esp+60h+var_50]
                movzx   eax, dl
                xor     eax, 0DEh
                mov     [eax+esi], ecx
                mov     ecx, [esp+60h+var_30]
                mov     [eax+esi+4], ecx
                mov     eax, edx
                mov     ecx, [esp+60h+var_2C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0DDh
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+60h+var_28]
                mov     [esi+eax*8+4], ecx
                mov     eax, edx
                mov     ecx, [esp+60h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                xor     edx, 8Eh
                mov     [esi+eax*8-638h], ecx
                mov     [esi+eax*8-634h], edi
                mov     eax, [esp+60h+var_20]
                mov     [esi+edx*8+4], eax
                mov     eax, [esp+60h+var_1C]
                mov     [esi+edx*8], ebx
                mov     edx, [esp+60h+var_18]
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, eax
                mov     eax, [esp+60h+var_C]
                xor     ecx, 0E0h
                xor     ecx, [esp+60h+var_14]
                xor     ecx, [esp+60h+var_10]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+60h+var_8]
                mov     [esi+ecx*8+4], eax
                mov     ecx, [esp+60h+var_44]
                xor     eax, eax
                add     ecx, 0CAB1C9EFh
                xor     edx, 68916878h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___105      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___13       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                mov     [esp+4Ch+var_44], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                lea     ecx, [esi-2C8AB87Eh]
                mov     ebx, edi
                and     [esp+50h+var_4], 0
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+50h+var_30], ecx
                mov     eax, ebx
                mov     [esp+50h+var_34], ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ecx
                shr     eax, 8
                xor     edx, 78h
                movzx   ecx, ax
                mov     eax, [esp+50h+var_44]
                xor     ecx, 2BF8h
                mov     eax, [edx+eax]
                lea     edx, [edi+4BF1A2A1h]
                mov     edi, [esp+50h+var_44]
                xor     edx, ebx
                mov     [esp+50h+var_1C], edx
                mov     eax, [eax+ecx]
                mov     ecx, edx
                mov     [esp+50h+var_20], eax
                xor     ecx, 0A98C000Dh
                mov     [esp+50h+var_40], ecx
                xor     ecx, ecx
                mov     esi, [esp+50h+var_40]
                movzx   eax, bl
                add     esi, [edi+eax*8-428h]
                mov     [esp+50h+var_40], esi
                mov     esi, edi
                adc     ecx, [esi+eax*8-424h]
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C8h
                mov     [esp+50h+var_8], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     esi, [ebp+arg_0]
                mov     [esp+50h+var_14], eax
                mov     [esp+50h+var_18], ecx
                mov     ecx, edi
                lea     eax, [esi-2C8AB87Eh]
                movzx   eax, al
                xor     eax, 0FEh
                mov     ecx, [eax+ecx]
                mov     [esp+50h+var_10], ecx
                mov     ecx, edi
                mov     eax, [eax+ecx+4]
                lea     ecx, [esi-2C8AB87Eh]
                mov     [esp+50h+var_C], eax
                lea     eax, [esi-52FB54E4h]
                xor     eax, ecx
                xor     eax, ebx
                mov     [esp+50h+var_3C], eax
                mov     eax, [ebp+arg_4]
                sub     eax, esi
                xor     esi, [esp+50h+var_3C]
                xor     eax, edx
                xor     esi, edx
                xor     eax, ecx
                mov     ecx, edi
                mov     [esp+50h+var_2C], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 6Ah
                xor     esi, [ebp+arg_4]
                mov     ecx, [eax+ecx]
                mov     [esp+50h+var_28], ecx
                mov     ecx, edi
                mov     ebx, [eax+ecx+4]
                push    offset dword_40BCF4
                lea     edx, [esi+75D70410h]
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_34]
                mov     ecx, esi
                xor     ecx, [esp+50h+var_2C]
                mov     eax, [ebp+arg_0]
                xor     ecx, edx
                add     eax, 24F8D8F6h
                xor     ecx, 9C79776Eh
                xor     eax, [esp+50h+var_2C]
                xor     eax, [esp+50h+var_3C]
                mov     [esp+50h+var_34], ecx
                mov     ecx, eax
                xor     ecx, esi
                mov     [esp+50h+var_38], eax
                xor     ecx, [esp+50h+var_30]
                xor     esi, esi
                xor     ecx, edx
                mov     eax, ecx
                movzx   edi, cl
                shr     eax, 8
                sub     edi, 76h ; 'v'
                xor     al, 6
                mov     [esp+50h+var_24], ecx
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_34]
                sbb     esi, edx
                add     edi, [esp+50h+var_28]
                mov     edx, [esp+50h+var_38]
                adc     esi, ebx
                mov     ebx, [esp+50h+var_44]
                xor     eax, 13FAC1ECh
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, 2727B4F5h
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_24]
                mov     eax, ecx
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [ebx+eax*8-0F0h], edx
                mov     edx, ebx
                and     dword ptr [edx+eax*8-0ECh], 0
                mov     [edx+ecx*8-4F8h], edi
                mov     edi, edx
                mov     edx, [esp+50h+var_18]
                mov     [edi+ecx*8-4F4h], esi
                mov     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_1C]
                xor     ecx, [esp+50h+var_30]
                movzx   eax, cl
                xor     eax, 93h
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_14]
                mov     [edi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_10]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [eax+edi-0C4h], edx
                mov     edx, [esp+50h+var_C]
                mov     [eax+edi-0C0h], edx
                mov     edx, [esp+50h+var_3C]
                movzx   eax, cl
                xor     edx, 4599962Dh
                mov     ecx, [esp+50h+var_40]
                xor     eax, 0F4h
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [edi+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_2C]
                add     ecx, 89128C07h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___13       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___120      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, eax
                mov     [esp+54h+var_44], esi
                shr     eax, 4
                sub     ecx, edx
                xor     ecx, 6871245h
                mov     ebx, edx
                shl     ebx, 4
                add     ebx, eax
                mov     [esp+54h+var_48], ecx
                movzx   eax, cl
                mov     [esp+54h+var_4C], ebx
                push    edi
                push    offset dword_40C780
                mov     ebx, [eax+esi-0CAh]
                mov     eax, [eax+esi-0C6h]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_18], ebx
                mov     ebx, [eax+esi+56h]
                mov     eax, [eax+esi+5Ah]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_24], ebx
                mov     ebx, [esi+eax*8-558h]
                mov     eax, [esi+eax*8-554h]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 0D0h
                mov     [esp+5Ch+var_10], ebx
                mov     ebx, edx
                xor     ebx, [ebp+arg_0]
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0A7h
                mov     edi, [esi+eax*8]
                movzx   eax, cl
                mov     ecx, [esp+5Ch+var_44]
                xor     eax, 0D2h
                mov     esi, [esi+eax*8]
                mov     eax, ebx
                xor     eax, [esp+5Ch+var_48]
                mov     edx, eax
                mov     [esp+5Ch+var_40], eax
                xor     edx, 0C528D4Eh
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_4C]
                xor     ebx, eax
                mov     edx, [ebp+arg_0]
                xor     ebx, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_28], ebx
                mov     eax, [edi+eax*4-280h]
                mov     [esp+58h+var_1C], eax
                mov     eax, [ebp+arg_4]
                sub     eax, edx
                mov     edi, eax
                xor     edi, [esp+58h+var_40]
                xor     edi, [esp+58h+var_4C]
                mov     [esp+58h+var_3C], edi
                lea     edi, [edx-7D9FFB40h]
                add     edi, [ebp+arg_4]
                xor     edi, ebx
                xor     eax, [esp+58h+var_3C]
                xor     edi, [esp+58h+var_40]
                xor     eax, ebx
                mov     edx, [esp+58h+var_48]
                mov     ecx, edi
                xor     ecx, [esp+58h+var_3C]
                xor     ecx, edx
                mov     [esp+58h+var_30], eax
                xor     ecx, 189C8556h
                mov     [esp+58h+var_8], edi
                mov     [esp+58h+var_48], ecx
                mov     ecx, eax
                xor     ecx, edi
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 0Dh
                xor     al, 0A1h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_48]
                sub     ebx, esi
                mov     esi, [esp+58h+var_30]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                adc     edx, dword ptr [esp+58h+var_38+4]
                add     eax, 0CFE96378h
                xor     ecx, ecx
                xor     esi, 3862B9EDh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F0h
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_44]
                mov     [esi+eax*8+4], edx
                mov     [esi+eax*8], ebx
                mov     eax, [esp+58h+var_28]
                xor     al, 0FAh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_24]
                adc     edx, dword ptr [esp+58h+var_24+4]
                shr     ecx, 18h
                mov     [esi+ecx*8+28h], eax
                mov     [esi+ecx*8+2Ch], edx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_1C]
                movzx   eax, cl
                xor     eax, 0C4h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_18]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 72h
                shr     ecx, 10h
                mov     [eax+esi], edx
                mov     edx, [esp+58h+var_14]
                mov     [eax+esi+4], edx
                mov     edx, [esp+58h+var_3C]
                movzx   eax, cl
                xor     edx, 0C31B6194h
                mov     ecx, [esp+58h+var_10]
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_C]
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 3EA31006h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___120      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000233e proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                shl     eax, 4
                push    ebx
                mov     ebx, edx
                mov     [ebp+var_4], ecx
                shr     ebx, 4
                lea     ecx, [edx+6FB44D03h]
                add     ebx, eax
                mov     eax, [ebp+arg_0]
                sub     eax, edx
                xor     edx, [ebp+arg_0]
                xor     eax, ebx
                xor     eax, 64349812h
                push    esi
                push    edi
                mov     edi, edx
                mov     [ebp+var_8], eax
                xor     edx, eax
                xor     esi, esi
                xor     edx, ecx
                mov     eax, ebx
                sub     edx, 161B9581h
                shr     eax, 8
                or      esi, edx
                movzx   eax, al
                mov     edx, [ebp+var_4]
                xor     edi, ecx
                xor     edi, ebx
                cmp     byte ptr [edx+eax*8-590h], 0
                jnz     short loc_47BDA3
                movzx   eax, bl
                xor     eax, 0Fh
                cmp     byte ptr [edx+eax*8], 0
                jnz     short loc_47BDA3
                mov     eax, [ebp+var_8]
                xor     esi, esi
                add     eax, 1EB84248h
                xor     ecx, 11C6E310h
                or      esi, eax
                jmp     short loc_47BDA9
; ---------------------------------------------------------------------------

loc_47BDA3:                             ; CODE XREF: VBNCB_unnamed_8000233e+61¡üj
                                        ; VBNCB_unnamed_8000233e+6D¡üj
                lea     ecx, [edi-1538C111h]

loc_47BDA9:                             ; CODE XREF: VBNCB_unnamed_8000233e+81¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000233e endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___stk      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                push    edi
                mov     edi, ecx
                shr     eax, 4
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                lea     ebx, [esi+69B4DAA5h]
                add     ecx, eax
                mov     [ebp+var_4], edi
                movzx   eax, cl
                xor     ebx, ecx
                push    offset dword_40C96C
                mov     edx, [edi+eax*8-1E8h]
                mov     edi, [edi+eax*8-1E4h]
                mov     eax, esi
                sub     eax, [ebp+arg_4]
                mov     [ebp+var_10], edx
                xor     eax, 97E58287h
                mov     edx, esi
                mov     [ebp+var_8], eax
                xor     edx, [ebp+arg_4]
                xor     edx, eax
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, 5631EA34h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                sub     eax, esi
                xor     eax, ebx
                xor     eax, [ebp+var_8]
                mov     [ebp+var_C], eax
                shr     eax, 8
                xor     al, 9Ch
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_C]
                xor     al, 0A2h
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_10]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     edx, [ebp+var_8]
                lea     ecx, [ebx-25490E5Dh]
                pop     edi
                pop     esi
                add     edx, 165C4060h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___stk      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___181_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     ebx, [eax+15BD5AC5h]
                push    edi
                mov     edi, ecx
                lea     edx, [esi-45EEFE51h]
                mov     [ebp+var_4], edi
                add     edx, eax
                lea     ecx, [esi+9912A2Dh]
                xor     ebx, edx
                add     ecx, eax
                mov     [ebp+var_8], ebx
                mov     ebx, eax
                shl     ebx, 4
                mov     eax, esi
                shr     eax, 4
                add     ebx, eax
                mov     [ebp+var_C], ecx
                xor     ebx, ecx
                movzx   ecx, dl
                xor     ebx, edx
                xor     ecx, 4Bh
                mov     eax, ebx
                shr     eax, 8
                add     al, 21h ; '!'
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                mov     ecx, [ebp+var_4]
                movzx   eax, al
                cdq
                sub     esi, eax
                push    offset dword_40AD80
                sbb     edi, edx
                xor     bl, 91h
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+arg_0]
                sub     edx, [ebp+arg_4]
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                xor     edx, 2628787Fh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     edx, [ebx-7BC6EA0Bh]
                mov     ecx, [ebp+var_8]
                add     ecx, 7073A463h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___181_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002237 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, eax
                mov     [ebp+var_4], ecx
                lea     ecx, [eax-6ACA9272h]
                xor     ebx, edx
                lea     eax, [edx+21B2CB39h]
                xor     eax, ecx
                xor     eax, ebx
                sub     eax, 233A8D32h
                push    esi
                mov     [ebp+var_8], eax
                xor     esi, esi
                push    edi
                lea     edi, [edx-268ECB1Eh]
                xor     edi, ebx
                lea     eax, [edx-748DE935h]
                mov     edx, [ebp+var_8]
                xor     eax, edi
                xor     eax, ecx
                mov     [ebp+var_C], edi
                mov     edi, [ebp+var_4]
                add     eax, 29627BB0h
                or      esi, eax
                movzx   eax, bl
                xor     eax, 1Ah
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_C]
                jnz     short loc_47BFCB
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 51h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47BFCB
                xor     esi, esi
                xor     edi, 0E46B4AB3h
                xor     ecx, 21DCD8Eh
                or      esi, edi
                jmp     short loc_47BFCD
; ---------------------------------------------------------------------------

loc_47BFCB:                             ; CODE XREF: VBNCB_unnamed_80002237+65¡üj
                                        ; VBNCB_unnamed_80002237+77¡üj
                mov     ecx, edx

loc_47BFCD:                             ; CODE XREF: VBNCB_unnamed_80002237+89¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002237 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___49       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, esi
                xor     edx, edi
                mov     [esp+58h+var_44], ebx
                mov     eax, edx
                and     [esp+58h+var_4], 0
                shr     eax, 18h
                mov     [esp+58h+var_40], edx
                movzx   edx, dl
                xor     edx, 0Ch
                mov     ecx, [eax+ebx-2Ah]
                mov     eax, [eax+ebx-26h]
                lea     ebx, [edi-2C91775Bh]
                mov     edi, [esp+58h+var_44]
                add     ebx, esi
                mov     dword ptr [esp+58h+var_30+4], eax
                mov     eax, ebx
                shr     eax, 8
                mov     dword ptr [esp+58h+var_30], ecx
                movzx   ecx, ax
                mov     eax, [edi+edx*8]
                xor     ecx, 7960h
                mov     [esp+58h+var_38], ebx
                push    offset dword_40C528
                mov     eax, [eax+ecx]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     al, 0CEh
                movzx   ecx, bl
                movzx   eax, al
                xor     ecx, 50h
                cdq
                mov     ebx, esi
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_14], eax
                adc     edx, [edi+ecx*8+4]
                mov     [esp+5Ch+var_10], edx
                mov     edx, [esp+5Ch+var_40]
                mov     ecx, edx
                shr     ecx, 10h
                movzx   ecx, cl
                shr     ebx, 4
                mov     eax, [ecx+edi-4Bh]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [ecx+edi-47h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 33h
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, esi
                mov     [esp+5Ch+var_20], eax
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                shl     edi, 4
                add     edi, eax
                mov     eax, ecx
                sub     ecx, esi
                shl     eax, 4
                xor     edi, edx
                mov     [esp+5Ch+var_48], ecx
                add     ebx, eax
                mov     [esp+5Ch+var_C], edi
                xor     ebx, [esp+5Ch+var_38]
                mov     esi, ecx
                xor     esi, edi
                xor     ebx, edx
                xor     esi, [esp+5Ch+var_38]
                xor     esi, 999FC42h
                mov     [esp+5Ch+var_8], ebx
                mov     edx, esi
                mov     ecx, [esp+5Ch+var_44]
                xor     edx, 0FCAECD43h
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_48]
                mov     eax, [esp+58h+var_40]
                xor     edx, ebx
                xor     eax, esi
                xor     edx, edi
                xor     eax, ebx
                xor     edx, 62D850B4h
                mov     [esp+58h+var_3C], eax
                mov     ebx, edx
                xor     ebx, esi
                mov     [esp+58h+var_48], edx
                xor     ebx, [esp+58h+var_40]
                xor     ebx, 0C3E9388Dh
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 0Eh
                xor     al, 44h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_34], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_34]
                sub     edx, esi
                sbb     eax, edi
                add     edx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_48]
                adc     eax, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_30+4], eax
                mov     eax, [esp+58h+var_3C]
                add     eax, 4C40A34Dh
                lea     esi, [edi-59485D40h]
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+58h+var_28]
                shr     eax, 10h
                mov     [edx+4], esi
                mov     esi, [esp+58h+var_44]
                movzx   eax, al
                xor     eax, 39h
                shr     ebx, 18h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                mov     eax, [esp+58h+var_24]
                mov     [ebx+esi-58h], eax
                mov     eax, [esp+58h+var_20]
                mov     ecx, [esp+58h+var_1C]
                mov     [ebx+esi-54h], eax
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_40]
                movzx   eax, bl
                mov     [esi+eax*8-628h], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [esi+eax*8-624h], ecx
                mov     eax, ebx
                mov     ecx, dword ptr [esp+58h+var_30+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 80h
                shr     ebx, 10h
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_C]
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_14]
                movzx   eax, bl
                xor     eax, 64h
                xor     edx, 0B5475C0Eh
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 56346528h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___49       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___35       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     [esp+50h+var_4C], ecx
                push    esi
                mov     esi, [ebp+arg_4]
                xor     ebx, esi
                movzx   eax, bl
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [esp+58h+var_4C]
                lea     edx, [esi+0BA80999h]
                mov     ecx, [eax+ecx+94h]
                mov     [esp+58h+var_20], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     [esp+58h+var_40], edx
                mov     [esp+58h+var_44], ebx
                push    offset dword_40C98C
                mov     eax, [eax+ecx+98h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0Ah
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_34], eax
                mov     eax, edx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_34]
                xor     ecx, 72h
                mov     eax, [eax+edi-36h]
                mov     eax, [ecx+eax]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 10h
                xor     ecx, 0E5h
                xor     al, 0Bh
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_28], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8+4]
                mov     ecx, ebx
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 0BBh
                mov     [esp+5Ch+var_24], edx
                mov     eax, [ecx+eax]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edi
                mov     edi, [ebp+arg_0]
                mov     eax, [ecx+eax+4]
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_14], eax
                mov     eax, esi
                sub     eax, edi
                mov     ebx, eax
                mov     [esp+5Ch+var_48], eax
                xor     ebx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_3C], ebx
                lea     edx, [ebx+2684DEE3h]
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_48]
                lea     edx, [edi+16670773h]
                mov     edi, [esp+58h+var_44]
                add     edx, esi
                xor     edx, [esp+58h+var_40]
                mov     ecx, eax
                xor     edx, edi
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_40]
                mov     [esp+58h+var_C], edx
                mov     [esp+58h+var_8], ecx
                xor     eax, ecx
                mov     ebx, edi
                xor     eax, edx
                xor     ebx, edx
                xor     ebx, [esp+58h+var_3C]
                xor     esi, esi
                mov     [esp+58h+var_48], eax
                mov     eax, ebx
                xor     eax, ecx
                xor     eax, edi
                movzx   edi, bl
                xor     eax, 0F224A1E2h
                sub     edi, 0B7h
                mov     [esp+58h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0E6h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, [esp+58h+var_48]
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 68E87B02h
                xor     ecx, ecx
                xor     edx, 253CE3D8h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     ebx, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                mov     [ebx+eax*8+128h], edx
                mov     edx, [esp+58h+var_24]
                mov     [ebx+eax*8+12Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx+20h], edx
                mov     edx, [esp+58h+var_1C]
                mov     [eax+ebx+24h], edx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 31h
                mov     edx, [esp+58h+var_C]
                xor     edx, 0E7322BCCh
                mov     [ebx+eax*8+160h], edi
                mov     [ebx+eax*8+164h], esi
                mov     eax, [esp+58h+var_18]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_14]
                mov     [ebx+ecx*8+4], eax
                mov     eax, [esp+58h+var_3C]
                movzx   ecx, al
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, [esp+58h+var_34]
                pop     edi
                pop     esi
                and     dword ptr [ebx+ecx*8-4F4h], 0
                mov     [ebx+ecx*8-4F8h], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                add     ecx, 205EBFCh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___35       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___140_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_C], ecx
                mov     [ebp+var_4], ebx
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                mov     ebx, [ebp+arg_4]
                xor     ebx, [ebp+arg_0]
                shr     eax, 10h
                add     al, 77h ; 'w'
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 50h
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                push    edi
                mov     edi, edx
                movzx   ecx, cl
                cdq
                sub     eax, esi
                push    offset dword_40AC40
                sbb     edx, edi
                mov     edi, [ebp+var_C]
                add     eax, [ecx+edi+0Fh]
                adc     edx, [ecx+edi+13h]
                mov     ecx, edi
                mov     [edi+1BCh], edx
                mov     edx, [ebp+arg_0]
                add     edx, 20230A73h
                mov     [edi+1B8h], eax
                add     edx, [ebp+arg_4]
                xor     edx, ebx
                xor     edx, [ebp+var_4]
                add     edx, 45B0C4F0h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx+2E85C514h]
                xor     eax, [ebp+arg_4]
                xor     edx, edx
                xor     eax, [ebp+arg_0]
                pop     edi
                pop     esi
                xor     eax, 0E412EFE3h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___140_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___139_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_0]
                push    ebx
                and     [ebp+var_10], 0
                push    esi
                mov     esi, ecx
                shr     eax, 4
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ecx, edi
                shl     ecx, 4
                sub     edx, edi
                add     ecx, eax
                mov     [ebp+var_C], esi
                movzx   eax, cl
                mov     [ebp+var_4], ecx
                push    (offset loc_40BC7E+2)
                mov     ecx, [eax+esi-2]
                mov     ebx, [eax+esi+2]
                mov     eax, edi
                xor     eax, [ebp+arg_0]
                xor     edx, eax
                mov     [ebp+var_8], ecx
                xor     edx, [ebp+var_4]
                mov     ecx, esi
                xor     edx, 8543981Eh
                mov     [ebp+var_10], eax
                add     edx, 77E4BBB8h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                add     eax, 4995h
                shr     ecx, 8
                movzx   eax, ax
                xor     cl, 0E6h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_4]
                adc     edx, ebx
                sub     eax, [ebp+arg_0]
                xor     eax, [ebp+var_4]
                mov     [ecx+1BCh], edx
                sub     eax, 3F5A9B32h
                mov     ecx, [ebp+var_10]
                xor     edx, edx
                pop     edi
                xor     ecx, 8223EEE5h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                Retn 8
loc_40BC7E:                             ; DATA XREF: vBng___139_stk+2F¡ýo
                rcr     byte ptr [ebx+1Fh], cl
                push    52233F0Bh
                adc     al, 73h ; 's'
                push    es
                Retf
                
vBng___139_stk  EndP

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___194_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, [ebp+arg_4]
                sub     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                movzx   eax, bl
                push    edi
                push    offset dword_40AAD0
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi+36h]
                mov     edi, [eax+esi+3Ah]
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     [ebp+var_4], ecx
                lea     edx, [ecx-44BAF02Ch]
                mov     ecx, esi
                call    VBN_TransformContext
                mov     esi, ebx
                mov     eax, ebx
                xor     esi, [ebp+var_4]
                xor     eax, ebx
                xor     esi, ebx
                mov     [ebp+var_10], eax
                mov     ebx, [ebp+arg_0]
                movzx   eax, al
                cdq
                lea     ecx, [esi-57818728h]
                sub     eax, ecx
                mov     ecx, [ebp+var_C]
                sbb     edx, 0
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                lea     eax, [ebx-347B4CC1h]
                mov     [ecx+1BCh], edx
                sub     ebx, [ebp+arg_4]
                xor     edx, edx
                add     eax, [ebp+arg_4]
                xor     ebx, [ebp+var_10]
                xor     eax, esi
                xor     ebx, [ebp+var_4]
                xor     eax, [ebp+var_10]
                xor     ebx, 0EA48D1F0h
                pop     edi
                add     eax, 6497FFBh
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___194_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___16       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     [esp+44h+var_44], ecx
                xor     eax, eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ecx, edi
                xor     eax, edi
                xor     ecx, esi
                mov     [esp+50h+var_4], eax
                lea     ebx, [esi-4D6FEDh]
                mov     eax, ecx
                mov     [esp+50h+var_40], ecx
                shr     eax, 8
                add     ebx, edi
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                mov     [esp+50h+var_38], ebx
                mov     eax, [edx+eax+16h]
                mov     eax, [eax+ecx+2Bh]
                mov     ecx, ebx
                mov     ebx, [esp+50h+var_44]
                shr     ecx, 10h
                mov     [esp+50h+var_C], eax
                sub     ecx, 0C40Fh
                mov     eax, [esp+50h+var_40]
                mov     [esp+50h+var_34], ecx
                xor     ecx, ecx
                mov     edx, [esp+50h+var_34]
                shr     eax, 18h
                xor     eax, 1
                add     edx, [ebx+eax*8]
                mov     [esp+50h+var_34], edx
                mov     edx, ebx
                mov     ebx, [esp+50h+var_38]
                adc     ecx, [edx+eax*8+4]
                mov     [esp+50h+var_18], ecx
                movzx   ecx, bl
                mov     [esp+50h+var_10], ecx
                mov     eax, [edx+ecx*8-10h]
                mov     [esp+50h+var_20], eax
                mov     eax, [edx+ecx*8-0Ch]
                mov     edx, [esp+50h+var_40]
                mov     ecx, [esp+50h+var_44]
                mov     [esp+50h+var_1C], eax
                movzx   eax, dl
                mov     ecx, [eax+ecx-22h]
                mov     [esp+50h+var_28], ecx
                mov     ecx, [esp+50h+var_44]
                mov     eax, [eax+ecx-1Eh]
                mov     ecx, edi
                mov     [esp+50h+var_24], eax
                mov     eax, esi
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     eax, edx
                xor     ecx, edx
                mov     [esp+50h+var_30], ecx
                mov     ecx, edx
                xor     ecx, edi
                xor     ecx, esi
                shl     esi, 4
                xor     ecx, ebx
                lea     ebx, [edi+5AABB7Fh]
                xor     ebx, [esp+50h+var_30]
                xor     ebx, [esp+50h+var_38]
                shr     edi, 4
                xor     eax, ebx
                add     edi, esi
                mov     [esp+50h+var_8], ecx
                xor     edi, ecx
                xor     edi, [esp+50h+var_30]
                xor     eax, ecx
                mov     [esp+50h+var_2C], eax
                mov     eax, edx
                mov     [esp+50h+var_3C], edi
                mov     edi, [esp+50h+var_44]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, 2Dh
                add     al, 6Bh ; 'k'
                movzx   eax, al
                cdq
                mov     esi, [edi+ecx*8]
                mov     edi, [edi+ecx*8+4]
                sub     esi, eax
                mov     ecx, [esp+50h+var_44]
                mov     al, bl
                sbb     edi, edx
                xor     al, 12h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [esp+50h+var_3C]
                push    offset dword_40A4C0
                adc     edi, edx
                xor     eax, ebx
                xor     eax, [esp+54h+var_40]
                xor     eax, 5AEA327Ah
                mov     [esp+54h+var_14], eax
                lea     edx, [eax-7678DC83h]
                call    VBN_TransformContext
                mov     ebx, [esp+50h+var_2C]
                xor     ecx, ecx
                mov     edx, [esp+50h+var_3C]
                xor     edx, 78E23014h
                lea     eax, [ebx-4A220981h]
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, ebx
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_40]
                mov     [esi+4], edx
                mov     edx, [esp+50h+var_44]
                movzx   eax, cl
                xor     eax, 42h
                mov     [edx+eax*8], esi
                mov     esi, edx
                mov     edx, [esp+50h+var_28]
                mov     [esi+eax*8+4], edi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+esi-0DCh], edx
                mov     edx, [esp+50h+var_24]
                mov     [eax+esi-0D8h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_20]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 17h
                shr     ecx, 18h
                mov     [esi+eax*8], edx
                mov     edx, [esp+50h+var_1C]
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+50h+var_34]
                mov     edx, [esp+50h+var_30]
                mov     [esi+ecx*8-6A0h], eax
                mov     eax, [esp+50h+var_18]
                mov     [esi+ecx*8-69Ch], eax
                movzx   ecx, dl
                xor     edx, 6982E018h
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_14]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                xor     ecx, [esp+50h+var_10]
                and     dword ptr [esi+ecx*8-23Ch], 0
                mov     [esi+ecx*8-240h], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                xor     ecx, 0EE212721h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___16       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___148      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     edx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, esi
                sub     eax, edi
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_48], eax
                mov     ebx, edi
                xor     eax, 1A85CFDBh
                mov     [esp+58h+var_44], edx
                mov     [esp+58h+var_4C], eax
                sub     ebx, esi
                movzx   eax, bl
                xor     eax, 78h
                mov     [esp+58h+var_34], ebx
                push    offset dword_40A810
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Ah
                mov     dword ptr [esp+5Ch+var_1C], ecx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [eax+edx+3Ch]
                mov     eax, [eax+edx+40h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0A2h
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     [esp+5Ch+var_40], ecx
                mov     ecx, edi
                mov     [esp+5Ch+var_20], eax
                mov     eax, esi
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                xor     ecx, ebx
                mov     [esp+5Ch+var_38], ecx
                lea     edx, [ecx+5070C07Fh]
                mov     ecx, [esp+5Ch+var_44]
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_4C]
                mov     edx, edi
                movzx   eax, cl
                xor     edx, esi
                mov     ecx, [esp+58h+var_40]
                xor     eax, 0E8h
                xor     edx, [esp+58h+var_38]
                add     esi, 0E54CFDC1h
                xor     edx, [esp+58h+var_4C]
                add     esi, edi
                mov     [esp+58h+var_C], edx
                mov     eax, [ecx+eax*8]
                mov     [esp+58h+var_24], eax
                mov     eax, [esp+58h+var_48]
                xor     eax, [esp+58h+var_4C]
                xor     eax, ebx
                xor     eax, 0DB448975h
                xor     esi, eax
                mov     [esp+58h+var_48], eax
                xor     esi, [esp+58h+var_38]
                lea     eax, [edi-293744CAh]
                xor     eax, edx
                mov     [esp+58h+var_8], esi
                xor     eax, [esp+58h+var_48]
                mov     ecx, esi
                mov     [esp+58h+var_28], eax
                xor     ecx, edx
                xor     ecx, ebx
                mov     ebx, eax
                xor     ebx, esi
                xor     ecx, 0F92E229h
                xor     ebx, [esp+58h+var_4C]
                xor     ebx, [esp+58h+var_34]
                mov     [esp+58h+var_3C], ecx
                mov     eax, ebx
                shr     eax, 8
                mov     cl, bl
                xor     al, 0EAh
                xor     cl, 3Eh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                sbb     ecx, edi
                add     eax, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_28]
                adc     ecx, dword ptr [esp+58h+var_30+4]
                mov     [esp+58h+var_34], eax
                mov     eax, [esp+58h+var_3C]
                add     eax, 6E9A6D61h
                mov     dword ptr [esp+58h+var_30+4], ecx
                xor     ecx, ecx
                lea     esi, [edi-27F18284h]
                or      ecx, eax
                mov     eax, [esp+58h+var_34]
                mov     [eax], ecx
                mov     [eax+4], esi
                mov     eax, ebx
                mov     esi, [esp+58h+var_44]
                mov     ecx, [esp+58h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                and     dword ptr [esi+eax*8-4BCh], 0
                mov     [esi+eax*8-4C0h], ecx
                mov     eax, [esp+58h+var_40]
                mov     [ebx+esi-3Fh], eax
                mov     eax, [esp+58h+var_20]
                mov     [ebx+esi-3Bh], eax
                mov     ebx, [esp+58h+var_3C]
                mov     eax, [esp+58h+var_48]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_38]
                xor     al, 0E6h
                xor     ebx, [esp+58h+var_4C]
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_1C+4]
                mov     [esi+ecx*8-538h], eax
                mov     eax, ebx
                mov     [esi+ecx*8-534h], edx
                mov     edx, 0C6h
                mov     ecx, [esp+58h+var_14]
                shr     eax, 8
                movzx   eax, al
                xor     eax, edx
                shr     ebx, 10h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_34]
                movzx   eax, bl
                xor     eax, edx
                mov     edx, [esp+58h+var_C]
                add     edx, 0D7578010h
                mov     [esi+eax*8], ecx
                mov     ecx, dword ptr [esp+58h+var_30+4]
                mov     [esi+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                xor     ecx, 695E526Bh
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___148      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___119_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                mov     ecx, edx
                sub     ecx, esi
                mov     [ebp+var_4], edi
                mov     [ebp+var_C], ecx
                xor     ecx, 6C46008h
                movzx   eax, cl
                push    offset dword_40ABC0
                mov     ebx, [eax+edi-2Ch]
                mov     edi, [eax+edi-28h]
                lea     eax, [esi-3C96FE37h]
                mov     [ebp+var_10], eax
                lea     eax, [edx-15FA7B46h]
                xor     eax, ecx
                xor     edx, esi
                mov     [ebp+var_8], eax
                lea     eax, [esi-3C96FE37h]
                xor     edx, eax
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                add     edx, 5A32D766h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_C]
                lea     eax, [esi-3C96FE37h]
                xor     ecx, [ebp+var_8]
                xor     ecx, eax
                xor     ecx, 0F687CB97h
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 9Ah
                sub     esi, 0CAh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                mov     edx, [ebp+var_10]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                add     edx, 4F1598BAh
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_8]
                pop     edi
                add     ecx, 2C29504Ch
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___119_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___54_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                lea     eax, [edx-2A0A1BFh]
                add     eax, edi
                mov     esi, ecx
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    offset dword_40A380
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi+1]
                mov     ebx, [eax+esi+5]
                lea     eax, [edx+0E02371Dh]
                lea     edx, [edi+6D420A7Ch]
                mov     [ebp+var_8], ecx
                xor     edx, eax
                mov     ecx, esi
                xor     edx, [ebp+var_4]
                xor     edx, 0B9E68F5Ch
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                sub     al, 2Dh ; '-'
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 0Ah
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+arg_4]
                mov     [ecx+1BCh], edx
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                sub     ebx, ecx
                xor     ebx, [ebp+var_4]
                pop     edi
                pop     esi
                lea     eax, [ecx+0E02371Dh]
                xor     eax, 0A65473A6h
                or      edx, eax
                lea     eax, [ebx+36CCE9CEh]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___54_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__34      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                sub     edx, esi
                movzx   eax, dl
                push    edi
                mov     edi, esi
                mov     [esp+28h+var_14], ecx
                sub     edi, [ebp+arg_4]
                mov     ebx, [ecx+eax*8-288h]
                mov     eax, esi
                shr     eax, 4
                mov     [esp+28h+var_18], ebx
                mov     ebx, [ebp+arg_4]
                shl     ebx, 4
                add     ebx, eax
                mov     eax, edi
                xor     eax, edx
                mov     [esp+28h+var_10], ebx
                xor     eax, 9E10FDA9h
                shr     edx, 8
                mov     [esp+28h+var_1C], eax
                mov     eax, ebx
                movzx   esi, dl
                xor     eax, 246DB052h
                mov     edx, [esp+28h+var_18]
                sub     esi, 53h ; 'S'
                sub     esi, eax
                mov     eax, [esp+28h+var_1C]
                movzx   eax, al
                xor     eax, 69h
                push    offset dword_40C698
                xor     esi, [eax+edx]
                mov     edx, ebx
                xor     edx, 8FE32630h
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_0]
                xor     edx, edx
                mov     eax, [esp+28h+var_10]
                add     ebx, 79363676h
                xor     ebx, [esp+28h+var_1C]
                movzx   eax, al
                movzx   ecx, bl
                xor     ebx, edi
                xor     ecx, eax
                xor     ebx, 0F5F4D0D7h
                mov     eax, [esp+28h+var_18]
                xor     ecx, 0EAh
                pop     edi
                mov     [ecx+eax], esi
                mov     eax, [esp+24h+var_1C]
                xor     eax, 16A98B30h
                or      edx, eax
                lea     eax, [ebx-6D1912BFh]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__34      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f5d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                add     ebx, 0CF15418Ch
                add     ebx, esi
                mov     [ebp+var_4], ecx
                xor     ecx, ecx
                mov     edx, ebx
                push    edi
                mov     edi, [ebp+var_4]
                lea     eax, [esi+7FD80CFCh]
                xor     eax, ebx
                xor     edx, 0BE1BFCBEh
                mov     [ebp+var_8], eax
                add     eax, 0EAA6A0FEh
                or      ecx, eax
                movzx   eax, bl
                cmp     byte ptr [edi+eax*8-0C8h], 0
                mov     edi, [ebp+arg_0]
                jnz     short loc_47CDC6
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 55h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47CDC6
                mov     eax, [ebp+var_8]
                xor     ecx, ecx
                shl     edi, 4
                add     eax, 0C4791CAEh
                shr     esi, 4
                lea     edx, [edi+411B8F2Ah]
                add     edx, esi
                or      ecx, eax

loc_47CDC6:                             ; CODE XREF: VBNCB_unnamed_80001f5d+48¡üj
                                        ; VBNCB_unnamed_80001f5d+5A¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f5d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002408 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     [ebp+var_C], ecx
                mov     esi, edx
                sub     esi, eax
                mov     ecx, eax
                xor     ecx, edx
                mov     ebx, esi
                xor     ebx, 88338762h
                xor     esi, 42550D01h
                push    edi
                lea     edi, [eax+13880641h]
                xor     ecx, ebx
                mov     [ebp+var_4], ecx
                lea     eax, [edx-475B0DF0h]
                xor     eax, [ebp+var_4]
                add     edi, edx
                mov     edx, [ebp+var_C]
                xor     eax, esi
                xor     eax, 87C9AF71h
                xor     ecx, ecx
                or      ecx, eax
                xor     edi, esi
                movzx   eax, bl
                xor     edi, ebx
                xor     eax, 92h
                xor     edi, 3D09FF05h
                cmp     byte ptr [edx+eax*8], 0
                mov     edx, [ebp+var_4]
                jnz     short loc_47CE72
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cmp     byte ptr [ebx+eax*8-1F8h], 0
                jnz     short loc_47CE72
                xor     ecx, ecx
                lea     eax, [edx+20096074h]
                xor     esi, 0FC0A9F65h
                or      ecx, eax
                jmp     short loc_47CE74
; ---------------------------------------------------------------------------

loc_47CE72:                             ; CODE XREF: VBNCB_unnamed_80002408+6B¡üj
                                        ; VBNCB_unnamed_80002408+7E¡üj
                mov     esi, edi

loc_47CE74:                             ; CODE XREF: VBNCB_unnamed_80002408+90¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002408 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___102      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+5Ch+var_4], 0
                mov     ecx, [ebp+arg_4]
                push    edi
                mov     [esp+60h+var_50], esi
                mov     ebx, [esp+60h+var_50]
                lea     eax, [ecx+67890C5Dh]
                mov     [esp+60h+var_4C], eax
                lea     edx, [ecx-18A39CA7h]
                shr     eax, 18h
                mov     [esp+60h+var_48], edx
                push    offset dword_40ACE8
                mov     ecx, [eax+esi-13h]
                mov     eax, [eax+esi-0Fh]
                mov     dword ptr [esp+64h+var_34+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Fh
                mov     dword ptr [esp+64h+var_34], ecx
                mov     ecx, [esp+64h+var_50]
                mov     edi, [eax+esi]
                mov     eax, [esp+64h+var_4C]
                shr     eax, 10h
                movzx   eax, al
                mov     esi, [eax+esi+89h]
                mov     eax, [esp+64h+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8+50h]
                mov     dword ptr [esp+64h+var_24], ecx
                mov     ecx, [esp+64h+var_50]
                mov     eax, [ecx+eax*8+54h]
                mov     dword ptr [esp+64h+var_24+4], eax
                movzx   eax, dl
                mov     [esp+64h+var_10], eax
                xor     eax, 15h
                mov     ecx, [eax+ecx]
                mov     [esp+64h+var_2C], ecx
                mov     ecx, [esp+64h+var_50]
                mov     eax, [eax+ecx+4]
                mov     [esp+64h+var_28], eax
                mov     eax, [esp+64h+var_4C]
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 18h
                xor     al, 0EAh
                movzx   eax, al
                cdq
                add     eax, [ebx+ecx*8-100h]
                mov     [esp+64h+var_1C], eax
                mov     eax, ebx
                mov     ebx, [ebp+arg_0]
                adc     edx, [eax+ecx*8-0FCh]
                mov     ecx, ebx
                mov     eax, [ebp+arg_4]
                shr     eax, 4
                shl     ecx, 4
                add     eax, ecx
                mov     [esp+64h+var_18], edx
                xor     eax, [esp+64h+var_4C]
                mov     ecx, [esp+64h+var_50]
                mov     [esp+64h+var_40], eax
                lea     edx, [eax+611D1BF4h]
                call    VBN_TransformContext
                mov     eax, [esp+60h+var_48]
                mov     ecx, ebx
                shr     eax, 10h
                mov     edx, ebx
                movzx   eax, al
                xor     eax, 0D3h
                add     eax, esi
                mov     esi, [ebp+arg_4]
                xor     ecx, esi
                xor     ecx, [esp+60h+var_48]
                xor     ecx, [esp+60h+var_4C]
                mov     eax, [edi+eax*4]
                mov     [esp+60h+var_14], eax
                mov     [esp+60h+var_C], ecx
                sub     edx, esi
                lea     eax, [ebx-68666DFh]
                xor     edx, [esp+60h+var_40]
                sub     esi, ebx
                xor     edx, [esp+60h+var_48]
                xor     esi, ecx
                xor     esi, [esp+60h+var_40]
                xor     edx, 0A341D2F4h
                xor     eax, edx
                mov     [esp+60h+var_44], esi
                xor     eax, ecx
                mov     [esp+60h+var_8], edx
                mov     [esp+60h+var_3C], eax
                mov     ecx, esi
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+60h+var_4C]
                xor     eax, 0BF5CBE82h
                mov     [esp+60h+var_38], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 15h
                sub     al, 2Bh ; '+'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+60h+var_38]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+60h+var_34]
                mov     edi, [esp+60h+var_3C]
                adc     edx, dword ptr [esp+60h+var_34+4]
                xor     ecx, ecx
                add     eax, 1AFC92C7h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-54C26DADh]
                mov     [ebx+4], esi
                mov     ecx, edi
                xor     ecx, [esp+60h+var_44]
                xor     ecx, [esp+60h+var_48]
                xor     ecx, [esp+60h+var_4C]
                mov     edi, [esp+60h+var_50]
                mov     esi, [esp+60h+var_2C]
                movzx   eax, cl
                mov     [eax+edi-79h], esi
                mov     esi, [esp+60h+var_28]
                mov     [eax+edi-75h], esi
                mov     eax, ecx
                mov     esi, dword ptr [esp+60h+var_24]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-290h], esi
                mov     esi, dword ptr [esp+60h+var_24+4]
                mov     [edi+eax*8-28Ch], esi
                mov     eax, ecx
                mov     esi, [esp+60h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [edi+eax*8+118h], esi
                mov     esi, [esp+60h+var_18]
                mov     [edi+eax*8+11Ch], esi
                and     dword ptr [edi+ecx*8+84h], 0
                mov     eax, [esp+60h+var_14]
                mov     [edi+ecx*8+80h], eax
                mov     eax, [esp+60h+var_40]
                movzx   ecx, al
                mov     eax, [esp+60h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_38]
                movzx   eax, al
                xor     ecx, eax
                xor     ecx, [esp+60h+var_10]
                mov     [edi+ecx*8+68h], ebx
                mov     [edi+ecx*8+6Ch], edx
                mov     ecx, [esp+60h+var_8]
                xor     eax, eax
                mov     edx, [esp+60h+var_C]
                xor     ecx, 663EF20Dh
                pop     edi
                pop     esi
                add     edx, 9D965C46h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___102      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002004 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     [ebp+var_4], ecx
                push    edi
                lea     edx, [esi+eax]
                shl     eax, 4
                lea     ecx, [esi+4677705Fh]
                lea     edi, [esi+5CB406AEh]
                shr     esi, 4
                add     esi, eax
                lea     ebx, [edx-1C04A677h]
                lea     eax, [edx+3B99ACFDh]
                xor     ebx, ecx
                xor     eax, edi
                mov     [ebp+var_8], ebx
                xor     eax, ecx
                xor     esi, ebx
                mov     ebx, [ebp+var_4]
                sub     eax, 3EB56D3Bh
                xor     edx, edx
                xor     esi, edi
                or      edx, eax
                xor     esi, 7307FC37h
                movzx   eax, cl
                cmp     byte ptr [ebx+eax*8-3C8h], 0
                mov     ebx, [ebp+var_8]
                jnz     short loc_47D18A
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                cmp     byte ptr [ecx+eax*8-3A0h], 0
                jnz     short loc_47D18A
                xor     esi, esi
                xor     ebx, 12EB5DD0h
                xor     edi, 75A5205Ch
                or      esi, ebx
                jmp     short loc_47D18C
; ---------------------------------------------------------------------------

loc_47D18A:                             ; CODE XREF: VBNCB_unnamed_80002004+63¡üj
                                        ; VBNCB_unnamed_80002004+76¡üj
                mov     edi, edx

loc_47D18C:                             ; CODE XREF: VBNCB_unnamed_80002004+88¡üj
                mov     edx, edi
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002004 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__18      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                and     [esp+1Ch+var_C], 0
                push    edi
                mov     [esp+20h+var_4], ecx
                lea     ebx, [esi+5FEF3A47h]
                movzx   eax, bl
                lea     edi, [esi+774D2020h]
                xor     eax, 33h
                push    offset dword_40A640
                mov     edx, [ecx+eax*8]
                lea     ecx, [edi+747FEAFAh]
                mov     eax, [ebp+arg_4]
                sub     eax, esi
                xor     esi, [ebp+arg_4]
                xor     eax, ebx
                xor     esi, edi
                mov     [esp+24h+var_10], eax
                xor     esi, ebx
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     ecx, [eax+edx-2Ah]
                mov     eax, [esp+24h+var_10]
                movzx   eax, al
                xor     eax, 56h
                mov     [eax+edx], ecx
                lea     edx, [esi+4F9EA2BCh]
                mov     ecx, [esp+24h+var_4]
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_0]
                xor     edx, edx
                mov     ecx, [ebp+arg_4]
                mov     eax, ebx
                sub     ebx, [ebp+arg_4]
                xor     ebx, [esp+20h+var_10]
                shr     eax, 4
                xor     ebx, edi
                shl     ecx, 4
                xor     ebx, 0A1DB5344h
                add     eax, ecx
                xor     eax, esi
                xor     eax, [esp+20h+var_10]
                pop     edi
                xor     eax, 98CBEFD6h
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__18      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000210e proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     ebx, [edx-7E8D6590h]
                push    edi
                mov     edi, esi
                mov     [ebp+var_4], ecx
                xor     edi, edx
                mov     eax, esi
                shr     eax, 4
                add     esi, esi
                mov     ecx, edx
                xor     edi, ebx
                shr     edx, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [ebp+var_8], edi
                lea     eax, [edx+esi*8]
                xor     edx, edx
                mov     esi, eax
                xor     eax, edi
                mov     edi, [ebp+var_4]
                xor     eax, ecx
                xor     eax, 0C94C1A41h
                xor     esi, ecx
                or      edx, eax
                xor     esi, ebx
                mov     eax, ebx
                xor     esi, 63E8584Ch
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [edi+eax*8+60h], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_47D2DA
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 61h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47D2DA
                xor     edx, edx
                xor     edi, 0DF145649h
                xor     ecx, 0EF7CB731h
                or      edx, edi
                jmp     short loc_47D2DC
; ---------------------------------------------------------------------------

loc_47D2DA:                             ; CODE XREF: VBNCB_unnamed_8000210e+67¡üj
                                        ; VBNCB_unnamed_8000210e+76¡üj
                mov     ecx, esi

loc_47D2DC:                             ; CODE XREF: VBNCB_unnamed_8000210e+88¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000210e endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___43       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                sub     edi, esi
                mov     [esp+48h+var_38], ecx
                shr     ebx, 4
                add     ebx, eax
                lea     eax, [esi+564637D3h]
                movzx   edx, al
                xor     edi, ebx
                mov     [esp+48h+var_34], eax
                xor     edx, 0C2h
                shr     eax, 8
                xor     edi, 0E9A7621h
                movzx   ecx, al
                mov     eax, [esp+48h+var_38]
                xor     ecx, 18h
                mov     [esp+48h+var_30], edi
                mov     edi, [esp+48h+var_38]
                mov     [esp+48h+var_28], ebx
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx]
                mov     [esp+48h+var_14], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+48h+var_34]
                shr     eax, 10h
                xor     al, 0C1h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-1F0h]
                mov     [esp+48h+var_8], eax
                mov     eax, edi
                mov     edi, [ebp+arg_0]
                adc     edx, [eax+ecx*8-1ECh]
                mov     ecx, ebx
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 5Bh
                mov     [esp+48h+var_4], edx
                mov     edx, eax
                shl     esi, 4
                mov     eax, [ecx+edx]
                mov     [esp+48h+var_1C], eax
                mov     eax, [ecx+edx+4]
                mov     [esp+48h+var_18], eax
                movzx   eax, bl
                xor     eax, 8Ah
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                lea     edx, [edi+31AD21EFh]
                mov     [esp+48h+var_10], ecx
                mov     ecx, edi
                shr     ecx, 4
                add     ecx, esi
                mov     [esp+48h+var_C], eax
                mov     eax, [esp+48h+var_34]
                mov     ebx, ecx
                xor     ebx, [esp+48h+var_30]
                xor     ecx, eax
                xor     ecx, [esp+48h+var_30]
                xor     ebx, eax
                mov     esi, [esp+48h+var_38]
                xor     edx, ebx
                xor     edx, eax
                mov     [esp+48h+var_24], ecx
                mov     eax, ecx
                mov     [esp+48h+var_20], edx
                xor     eax, ebx
                xor     eax, [esp+48h+var_28]
                xor     eax, 17757B8h
                mov     [esp+48h+var_2C], eax
                mov     eax, [esp+48h+var_28]
                shr     eax, 18h
                mov     edi, [eax+esi-44h]
                mov     esi, [eax+esi-40h]
                xor     edx, ecx
                xor     edx, [esp+48h+var_34]
                xor     edx, [esp+48h+var_28]
                mov     ecx, [esp+48h+var_38]
                mov     [esp+48h+var_28], edx
                xor     edx, 3E907886h
                push    offset dword_40C9E8
                call    VBN_TransformContext
                mov     eax, [esp+48h+var_24]
                add     eax, 0F8B16043h
                mov     edx, [esp+48h+var_20]
                movzx   ecx, bl
                xor     ebx, ebx
                sub     ecx, 0C5h
                sub     ecx, eax
                mov     eax, [esp+48h+var_2C]
                sbb     ebx, ebx
                add     ecx, edi
                mov     [esp+48h+var_24], ecx
                mov     edi, [esp+48h+var_24]
                adc     ebx, esi
                mov     esi, [esp+48h+var_38]
                add     eax, 5EB4E3FBh
                xor     ecx, ecx
                xor     edx, 0A6441BC9h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+48h+var_2C]
                xor     ecx, [esp+48h+var_20]
                xor     ecx, [esp+48h+var_30]
                xor     ecx, [esp+48h+var_34]
                mov     [edi+4], edx
                mov     edx, [esp+48h+var_1C]
                movzx   eax, cl
                xor     eax, 54h
                mov     [esi+eax*8], edx
                mov     edx, [esp+48h+var_18]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_14]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [esi+eax*8-4DCh], 0
                mov     [esi+eax*8-4E0h], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_10]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [eax+esi-92h], edx
                mov     edx, [esp+48h+var_C]
                mov     [eax+esi-8Eh], edx
                mov     eax, [esp+48h+var_8]
                mov     edx, [esp+48h+var_34]
                mov     [esi+ecx*8-248h], eax
                mov     eax, [esp+48h+var_4]
                mov     [esi+ecx*8-244h], eax
                mov     eax, [esp+48h+var_30]
                movzx   ecx, al
                movzx   eax, dl
                xor     edx, 28FF96EDh
                xor     ecx, eax
                mov     eax, [esp+48h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+48h+var_28]
                movzx   eax, al
                xor     ecx, eax
                xor     eax, eax
                xor     ecx, 0C6h
                mov     [esi+ecx*8], edi
                mov     [esi+ecx*8+4], ebx
                mov     ecx, [esp+48h+var_30]
                pop     edi
                xor     ecx, 22EC7EF2h
                or      eax, edx
                pop     esi
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___43       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000201d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                lea     ebx, [edx-12B5D17h]
                mov     [ebp+var_4], ecx
                xor     ecx, ecx
                lea     esi, [edi+5DB7C09Dh]
                shr     edi, 4
                add     edi, eax
                lea     eax, [edx+22A0F835h]
                xor     eax, esi
                xor     edi, ebx
                xor     eax, ebx
                mov     [ebp+var_C], edi
                xor     eax, 0A0E35A31h
                mov     [ebp+var_8], eax
                lea     eax, [edx+1A1E8A1Dh]
                mov     edx, [ebp+var_8]
                xor     eax, edi
                mov     edi, [ebp+var_4]
                xor     eax, esi
                xor     eax, 57F39035h
                or      ecx, eax
                movzx   eax, bl
                xor     eax, 68h
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_C]
                jnz     short loc_47D5CD
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 3Fh
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47D5CD
                xor     ecx, ecx
                xor     edi, 9D88D91Ah
                xor     esi, 0D8B707FEh
                or      ecx, edi
                jmp     short loc_47D5CF
; ---------------------------------------------------------------------------

loc_47D5CD:                             ; CODE XREF: VBNCB_unnamed_8000201d+67¡üj
                                        ; VBNCB_unnamed_8000201d+79¡üj
                mov     esi, edx

loc_47D5CF:                             ; CODE XREF: VBNCB_unnamed_8000201d+8B¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000201d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___113      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                shr     ebx, 4
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shl     eax, 4
                add     ebx, eax
                and     [esp+4Ch+var_4], 0
                mov     [esp+4Ch+var_44], ebx
                lea     edx, [ecx+35180D3Eh]
                mov     [esp+4Ch+var_40], esi
                add     edx, [ebp+arg_4]
                movzx   eax, dl
                xor     eax, 0D9h
                mov     [esp+4Ch+var_3C], edx
                push    edi
                push    offset dword_40A2F8
                mov     ebx, [eax+esi]
                mov     eax, edx
                shr     eax, 18h
                mov     edx, [eax+esi-8Ah]
                mov     eax, [eax+esi-86h]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+54h+var_30], edx
                mov     edi, [eax+esi+41h]
                mov     eax, [esp+54h+var_3C]
                shr     eax, 8
                movzx   eax, al
                mov     edx, [eax+esi-8Dh]
                mov     eax, [eax+esi-89h]
                mov     [esp+54h+var_1C], eax
                mov     eax, [esp+54h+var_44]
                movzx   eax, al
                mov     [esp+54h+var_20], edx
                mov     edx, [esi+eax*8-80h]
                mov     eax, [esi+eax*8-7Ch]
                mov     [esp+54h+var_24], eax
                mov     eax, [ebp+arg_4]
                xor     eax, ecx
                mov     [esp+54h+var_28], edx
                mov     edx, [esp+54h+var_40]
                mov     [esp+54h+var_38], eax
                xor     eax, [esp+54h+var_3C]
                mov     [esp+54h+var_34], eax
                mov     eax, [esp+54h+var_3C]
                mov     ecx, [esp+54h+var_34]
                shr     eax, 10h
                movzx   esi, cl
                xor     ecx, ecx
                movzx   eax, al
                sub     esi, 6Ah ; 'j'
                add     esi, [eax+edx-34h]
                mov     [esp+54h+var_18], esi
                mov     esi, edx
                adc     ecx, [eax+esi-30h]
                mov     esi, [ebp+arg_0]
                add     esi, 0C797BEDDh
                mov     [esp+54h+var_14], ecx
                xor     esi, [esp+54h+var_44]
                xor     esi, [esp+54h+var_3C]
                mov     ecx, [esp+54h+var_40]
                lea     edx, [esi+7E12DDC4h]
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_44]
                mov     ecx, [ebp+arg_0]
                shr     eax, 10h
                add     eax, edi
                mov     edi, [ebp+arg_4]
                shl     edi, 4
                mov     eax, [ebx+eax*4-2117Ch]
                mov     [esp+50h+var_10], eax
                mov     eax, ecx
                shr     eax, 4
                add     edi, eax
                xor     edi, [esp+50h+var_34]
                xor     edi, [esp+50h+var_44]
                mov     ebx, [esp+50h+var_38]
                add     ecx, 0B0AE0A7Dh
                mov     edx, [esp+50h+var_3C]
                xor     ecx, esi
                xor     ecx, [esp+50h+var_34]
                xor     ebx, edi
                xor     ebx, esi
                mov     [esp+50h+var_C], edi
                mov     eax, ecx
                mov     [esp+50h+var_38], ebx
                xor     eax, edi
                mov     [esp+50h+var_8], ecx
                xor     eax, edx
                xor     ebx, ecx
                xor     ebx, [esp+50h+var_44]
                xor     eax, 3C2FD24Ch
                mov     [esp+50h+var_3C], eax
                xor     ebx, edx
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                xor     esi, esi
                xor     al, 7
                sub     edi, 7Eh ; '~'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                mov     edx, [esp+50h+var_38]
                adc     esi, dword ptr [esp+50h+var_30+4]
                add     eax, 8CBCF533h
                xor     ecx, ecx
                add     edx, 279F3171h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_40]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                mov     [eax+edx-18h], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [eax+edx-14h], ecx
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_44]
                mov     eax, [esp+50h+var_20]
                mov     [edx+ebx*8-200h], eax
                mov     eax, [esp+50h+var_1C]
                mov     [edx+ebx*8-1FCh], eax
                mov     ebx, [esp+50h+var_40]
                mov     edx, [esp+50h+var_18]
                movzx   eax, cl
                xor     eax, 0D5h
                mov     [ebx+eax*8], edx
                mov     edx, [esp+50h+var_14]
                mov     [ebx+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_C]
                shr     eax, 8
                xor     edx, 91DD41Fh
                movzx   eax, al
                xor     eax, 5Ah
                shr     ecx, 10h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                movzx   eax, cl
                mov     ecx, [esp+50h+var_10]
                pop     edi
                pop     esi
                and     dword ptr [ebx+eax*8-52Ch], 0
                mov     [ebx+eax*8-530h], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_8]
                add     ecx, 34007D4Ch
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___113      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___161_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [ebp+var_4], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, esi
                lea     ecx, [esi-398E26C8h]
                lea     ebx, [esi+19CEA6FEh]
                mov     [ebp+var_C], ecx
                lea     eax, [esi+2DAD25EBh]
                add     ebx, edi
                mov     esi, [ebp+var_4]
                xor     edx, eax
                xor     ebx, ecx
                mov     [ebp+var_8], edx
                xor     ebx, eax
                movzx   ecx, al
                xor     ecx, 0Bh
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0DAh
                movzx   eax, al
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40BDD0
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                sub     eax, 0B2h
                mov     edx, [ebp+arg_0]
                add     esi, eax
                adc     ecx, 0
                xor     edx, edi
                mov     edi, [ebp+var_8]
                xor     edx, edi
                mov     [ebx+1B8h], esi
                mov     esi, [ebp+var_C]
                xor     edx, esi
                mov     [ebx+1BCh], ecx
                xor     edx, 69FE7BB7h
                mov     ecx, ebx
                call    VBN_TransformContext
                lea     ecx, [edi-4BBDDCBBh]
                xor     eax, eax
                pop     edi
                lea     edx, [esi-6634BAB3h]
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___161_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f76 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_11          = byte ptr -11h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edx
                sub     ebx, edi
                mov     esi, ecx
                mov     [esp+20h+var_8], ebx
                xor     ebx, offset loc_492DE1
                mov     eax, ebx
                mov     [esp+20h+var_4], esi
                shr     eax, 8
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, 0EBh
                mov     eax, [eax+esi-43h]
                mov     esi, [ecx+eax]
                mov     ecx, edi
                mov     eax, edx
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     [esp+20h+var_10], esi
                lea     eax, [ecx-7F0D1916h]
                sub     [esp+20h+var_10], eax
                cmp     eax, esi
                setnbe  [esp+20h+var_11]
                add     edx, 10281F9h
                add     edx, edi
                add     edi, 0F4AB4877h
                xor     edi, ecx
                xor     edx, ebx
                xor     edi, ebx
                mov     ebx, [esp+20h+var_8]
                xor     ebx, edx
                xor     ebx, ecx
                xor     ebx, 0B939D711h
                xor     ecx, ebx
                xor     ecx, edi
                mov     [esp+20h+var_8], ecx
                cmp     eax, esi
                jbe     short loc_47D9A1
                xor     eax, eax
                xor     edi, 5C5437DEh
                add     edx, 5228F1C4h
                or      eax, edi
                jmp     short loc_47D9BC
; ---------------------------------------------------------------------------

loc_47D9A1:                             ; CODE XREF: VBNCB_unnamed_80001f76+8D¡üj
                mov     eax, [ebp+arg_4]
                xor     ebx, 47FF6D29h
                add     eax, 8FD8312h
                xor     eax, edi
                xor     eax, edx
                xor     edx, edx
                sub     eax, 521ABF14h
                or      edx, ebx

loc_47D9BC:                             ; CODE XREF: VBNCB_unnamed_80001f76+9F¡üj
                cmp     [esp+20h+var_10], 0
                mov     esi, [esp+20h+var_4]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 0D4h
                pop     edi
                mov     [esi+ecx*8], bl
                mov     ecx, [esp+1Ch+var_8]
                mov     bl, [esp+1Ch+var_11]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 7Ah
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                Retn 8
loc_492DE1:                             ; DATA XREF: VBNCB_unnamed_80001f76+1E¡üo
                mov     ecx, [ebp+arg_4]
                push    esi
                shr     ecx, 4
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                add     ecx, eax
                shl     ebx, 4
                mov     eax, edi
                mov     [esp+58h+var_48], edx
                shr     eax, 4
                add     ebx, eax
                mov     esi, [esp+58h+var_48]
                movzx   eax, cl
                xor     eax, 26h
                mov     [esp+58h+var_44], ecx
                mov     [esp+58h+var_40], ebx
                push    offset dword_40C580
                mov     edx, [eax+edx]
                mov     [esp+5Ch+var_1C], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 29h
                mov     edx, [edx+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, esi
                xor     eax, 91h
                mov     [esp+5Ch+var_28], edx
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, esi
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                movzx   eax, bl
                mov     [esp+5Ch+var_14], eax
                mov     eax, [edx+eax*8+120h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 8
                mov     ebx, esi
                mov     esi, [ebp+arg_4]
                xor     al, 9Ah
                movzx   eax, al
                cdq
                add     eax, [ecx+ebx+1Ch]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                mov     ebx, esi
                adc     edx, [ecx+eax+20h]
                sub     ebx, edi
                xor     ebx, [esp+5Ch+var_44]
                mov     ecx, eax
                mov     [esp+5Ch+var_C], edx
                mov     [esp+5Ch+var_3C], ebx
                lea     edx, [ebx-8E0ED97h]
                call    VBN_TransformContext
                lea     edx, [esi-5F0CF59Eh]
                xor     edx, ebx
                lea     eax, [esi-68FAA6C2h]
                xor     eax, [esp+58h+var_40]
                lea     ebx, [edi+2757C86Bh]
                xor     eax, [esp+58h+var_44]
                add     ebx, esi
                xor     edx, [esp+58h+var_40]
                xor     ebx, eax
                mov     [esp+58h+var_8], eax
                mov     [esp+58h+var_4], edx
                xor     ebx, [esp+58h+var_3C]
                lea     ecx, [edi+79C79261h]
                add     ecx, esi
                movzx   edi, bl
                xor     ecx, edx
                xor     esi, esi
                xor     ecx, eax
                sub     edi, 0Fh
                mov     eax, ebx
                mov     [esp+58h+var_38], ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_44]
                xor     eax, 0F0B91C91h
                mov     [esp+58h+var_34], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 40h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 8F600D20h
                xor     ecx, ecx
                xor     edx, 0D3F044h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_48]
                mov     ebx, [esp+58h+var_28]
                movzx   eax, cl
                mov     [eax+edx-53h], ebx
                mov     ebx, [esp+58h+var_24]
                mov     [eax+edx-4Fh], ebx
                mov     eax, ecx
                shr     eax, 8
                mov     ebx, edx
                movzx   eax, al
                xor     eax, 1Ch
                mov     edx, [esp+58h+var_38]
                mov     [ebx+eax*8+4], esi
                mov     esi, [esp+58h+var_20]
                mov     [ebx+eax*8], edi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0CEh
                shr     ecx, 18h
                xor     ecx, 0AFh
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], esi
                mov     eax, [esp+58h+var_1C]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                mov     [ebx+ecx*8+4], eax
                mov     eax, [esp+58h+var_3C]
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+58h+var_8]
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                xor     edx, 0C7CC0653h
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 99h
                xor     ecx, [esp+58h+var_14]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_4]
                xor     ecx, 9A99A1C2h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                Retn 8

                                          
VBNCB_unnamed_80001f76 EndP

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___160_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_8], ecx
                push    ebx
                push    esi
                lea     ecx, [eax-0E86A560h]
                add     eax, [ebp+arg_4]
                mov     [ebp+var_10], eax
                add     eax, 0C914EB0Dh
                mov     [ebp+var_C], eax
                mov     eax, ecx
                shr     eax, 10h
                sub     al, 57h ; 'W'
                mov     [ebp+var_4], ecx
                movzx   eax, al
                shr     ecx, 8
                cdq
                xor     cl, 33h
                mov     esi, eax
                movzx   eax, cl
                push    edi
                mov     edi, edx
                cdq
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [ebp+var_4]
                sub     ebx, esi
                mov     esi, [ebp+var_C]
                sbb     eax, edi
                movzx   ecx, dl
                mov     edi, [ebp+var_8]
                push    offset dword_40C5C0
                add     ebx, [ecx+edi+7Bh]
                adc     eax, [ecx+edi+7Fh]
                mov     ecx, [ebp+arg_4]
                mov     [ebp+var_8], eax
                mov     eax, [ebp+arg_0]
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                xor     ecx, esi
                xor     edx, ecx
                mov     ecx, edi
                add     edx, 5819DE2Fh
                call    VBN_TransformContext
                mov     eax, [ebp+var_8]
                lea     ecx, [esi-780EEA6Eh]
                mov     [edi+1BCh], eax
                xor     edx, edx
                mov     eax, [ebp+var_10]
                add     eax, 0F6BF6BEFh
                mov     [edi+1B8h], ebx
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                xor     eax, 4D2B9D00h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___160_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___127      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shr     edx, 4
                add     eax, edx
                mov     edx, ebx
                sub     edx, [ebp+arg_0]
                mov     [esp+50h+var_4C], eax
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 8Ah
                mov     [esp+50h+var_44], edx
                push    esi
                push    edi
                mov     edi, ecx
                mov     esi, edi
                mov     [esp+58h+var_48], edi
                push    offset sub_40BBF0
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 79h
                mov     dword ptr [esp+5Ch+var_30], ecx
                shr     edx, 18h
                sub     edx, 0AFh
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [eax+edi-69h]
                mov     eax, [eax+edi-65h]
                mov     [esp+5Ch+var_24], eax
                mov     eax, [esp+5Ch+var_4C]
                movzx   eax, al
                xor     eax, 0E4h
                mov     [esp+5Ch+var_28], ecx
                xor     ecx, ecx
                add     edx, [edi+eax*8]
                mov     [esp+5Ch+var_14], edx
                adc     ecx, [edi+eax*8+4]
                mov     eax, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_4C]
                movzx   edx, al
                shr     ecx, 18h
                xor     ecx, 0DDh
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_C], edx
                mov     ecx, [ecx+esi]
                add     ecx, eax
                mov     eax, esi
                mov     eax, [edx+eax+12h]
                mov     eax, [eax+ecx*4-264h]
                mov     ecx, esi
                mov     [esp+5Ch+var_18], eax
                lea     eax, [ebx-12ADC6AAh]
                xor     eax, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_40], eax
                lea     edx, [eax-4E5C3BCCh]
                call    VBN_TransformContext
                mov     esi, [ebp+arg_0]
                mov     edx, ebx
                shl     edx, 4
                mov     eax, esi
                shr     eax, 4
                add     edx, eax
                xor     edx, [esp+58h+var_44]
                lea     ecx, [esi-3109FC18h]
                xor     edx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     [esp+58h+var_8], edx
                mov     eax, [esp+58h+var_4C]
                add     ebx, 0DA47C07Bh
                xor     eax, ecx
                mov     [esp+58h+var_4], ecx
                xor     eax, edx
                xor     ebx, edx
                xor     ebx, [esp+58h+var_40]
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                xor     eax, ecx
                mov     cl, bl
                xor     eax, [esp+58h+var_4C]
                xor     cl, 86h
                xor     eax, 4FAF30BFh
                mov     [esp+58h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0C9h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_34], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_34]
                sub     edx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     eax, edi
                add     edx, dword ptr [esp+58h+var_30]
                adc     eax, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_30+4], eax
                xor     esi, 498DD3DBh
                mov     eax, [esp+58h+var_38]
                add     eax, 3B16C70Ah
                or      ecx, eax
                mov     [edx], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, ebx
                mov     [edx+4], esi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_4C]
                mov     ebx, [esp+58h+var_48]
                mov     esi, [esp+58h+var_28]
                movzx   eax, cl
                mov     [eax+ebx-53h], esi
                mov     esi, [esp+58h+var_24]
                mov     [eax+ebx-4Fh], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-288h], esi
                mov     esi, [esp+58h+var_1C]
                mov     [ebx+eax*8-284h], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                and     dword ptr [ebx+eax*8+12Ch], 0
                mov     [ebx+eax*8+128h], esi
                mov     eax, [esp+58h+var_14]
                mov     [ebx+ecx*8+110h], eax
                mov     eax, [esp+58h+var_10]
                mov     [ebx+ecx*8+114h], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, dword ptr [esp+58h+var_30+4]
                xor     ecx, 87h
                xor     ecx, [esp+58h+var_C]
                mov     [ebx+ecx*8], edx
                mov     [ebx+ecx*8+4], eax
                mov     ecx, [esp+58h+var_4]
                xor     eax, eax
                mov     edx, [esp+58h+var_8]
                xor     ecx, 563771AEh
                pop     edi
                pop     esi
                add     edx, 8118340Ch
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___127      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___28_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                xor     eax, [ebp+arg_0]
                add     esi, 0F6393759h
                mov     [ebp+var_4], eax
                mov     edx, esi
                movzx   eax, al
                xor     edx, 140CC739h
                xor     eax, 4Bh
                mov     [ebp+var_8], ecx
                push    edi
                push    offset dword_40C4F0
                mov     [ebp+var_C], esi
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                sub     edx, [ebp+arg_0]
                xor     edx, [ebp+var_4]
                mov     ecx, [ebp+var_4]
                xor     ecx, edx
                mov     [ebp+var_10], edx
                xor     ecx, esi
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 37h ; '7'
                sub     esi, 0E0h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+var_4]
                xor     eax, [ebp+var_C]
                xor     eax, [ebp+var_4]
                mov     ecx, [ebp+var_10]
                add     eax, 1EDCF55Ah
                pop     edi
                add     ecx, 805232B9h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___28_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___65       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     ebx, [eax-20C42729h]
                sub     eax, edi
                and     [esp+60h+var_4], 0
                xor     eax, ebx
                mov     esi, ecx
                mov     [esp+60h+var_50], eax
                movzx   eax, bl
                lea     edx, [edi-0AEEEAF7h]
                xor     eax, 0B9h
                mov     [esp+60h+var_4C], esi
                mov     [esp+60h+var_30], edx
                push    offset dword_40A9E8
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+64h+var_28+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+64h+var_28], ecx
                mov     ecx, [esi+eax*8-3D0h]
                mov     eax, [esi+eax*8-3CCh]
                mov     [esp+64h+var_1C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 46h
                mov     [esp+64h+var_20], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     esi, [esi+eax*8]
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0D0h
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+64h+var_3C], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+64h+var_3C+4], eax
                movzx   eax, dl
                mov     edx, [esp+64h+var_50]
                xor     eax, 0C7h
                mov     ecx, [ecx+eax*8]
                lea     edx, [edx-664A1F44h]
                mov     [esp+64h+var_10], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+64h+var_C], eax
                call    VBN_TransformContext
                mov     ecx, edi
                lea     edx, [edi-0AEEEAF7h]
                sub     ecx, [ebp+arg_4]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, ebx
                xor     eax, 870A9246h
                movzx   edx, al
                mov     [esp+60h+var_14], edx
                mov     [esp+60h+var_2C], eax
                mov     edx, [edx+esi+0F4h]
                lea     esi, [edi-0AEEEAF7h]
                mov     [esp+60h+var_18], edx
                mov     edx, [ebp+arg_4]
                xor     edx, edi
                mov     [esp+60h+var_48], edx
                xor     edx, [esp+60h+var_50]
                mov     edi, [esp+60h+var_48]
                xor     edx, esi
                xor     edi, eax
                mov     [esp+60h+var_8], edx
                xor     edi, [esp+60h+var_50]
                xor     ecx, edx
                xor     ecx, eax
                mov     [esp+60h+var_48], edi
                xor     ecx, 2A6938BFh
                mov     eax, edi
                mov     [esp+60h+var_34], ecx
                xor     eax, edx
                xor     eax, ebx
                xor     eax, 4F3685B0h
                mov     [esp+60h+var_44], eax
                mov     eax, ecx
                xor     eax, edi
                xor     eax, esi
                xor     eax, ebx
                mov     [esp+60h+var_40], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 9
                add     al, 5Bh ; '['
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+60h+var_40]
                sub     ebx, esi
                mov     esi, [esp+60h+var_44]
                sbb     edx, edi
                add     ebx, dword ptr [esp+60h+var_3C]
                adc     edx, dword ptr [esp+60h+var_3C+4]
                xor     eax, 0E825DBA5h
                xor     ecx, ecx
                xor     esi, 0AC4068BFh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+60h+var_44]
                xor     ecx, [esp+60h+var_34]
                xor     ecx, [esp+60h+var_50]
                xor     ecx, [esp+60h+var_30]
                mov     [ebx+4], esi
                mov     esi, [esp+60h+var_4C]
                movzx   eax, cl
                xor     eax, 41h
                mov     [esp+60h+var_30], ecx
                mov     [esi+eax*8+4], edx
                mov     [esi+eax*8], ebx
                mov     eax, [esp+60h+var_2C]
                shr     eax, 8
                xor     al, 5Eh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+60h+var_28]
                adc     edx, dword ptr [esp+60h+var_28+4]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esi+ecx*8-6C0h], eax
                mov     [esi+ecx*8-6BCh], edx
                mov     ecx, [esp+60h+var_30]
                mov     eax, ecx
                mov     edx, [esp+60h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 70h
                mov     [eax+esi-5Dh], edx
                mov     edx, [esp+60h+var_1C]
                mov     [eax+esi-59h], edx
                and     dword ptr [esi+ecx*8+4], 0
                mov     eax, [esp+60h+var_18]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+60h+var_50]
                mov     edx, [esp+60h+var_8]
                movzx   ecx, al
                add     edx, 310B4DD5h
                mov     eax, [esp+60h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_10]
                xor     ecx, [esp+60h+var_14]
                mov     [esi+ecx*8-360h], eax
                mov     eax, [esp+60h+var_C]
                mov     [esi+ecx*8-35Ch], eax
                xor     eax, eax
                mov     ecx, [esp+60h+var_48]
                pop     edi
                add     ecx, 97A172A3h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___65       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___75       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                sub     ebx, edx
                and     [esp+50h+var_4], 0
                push    esi
                mov     esi, ecx
                mov     [esp+54h+var_40], ebx
                mov     eax, ebx
                mov     [esp+54h+var_48], esi
                shr     eax, 8
                movzx   ecx, al
                push    edi
                mov     edi, [ebp+arg_4]
                xor     edi, edx
                mov     eax, [ecx+esi-3Fh]
                xor     edi, ebx
                mov     [esp+58h+var_30], eax
                mov     eax, [ecx+esi-3Bh]
                mov     [esp+58h+var_2C], eax
                mov     eax, [ebp+arg_4]
                add     eax, 2777862Fh
                mov     [esp+58h+var_38], edi
                mov     [esp+58h+var_44], eax
                mov     eax, ebx
                shr     eax, 18h
                push    offset dword_40ABB0
                mov     esi, [esi+eax*8-2D0h]
                mov     [esp+5Ch+var_1C], esi
                mov     esi, [esp+5Ch+var_48]
                mov     eax, [esi+eax*8-2CCh]
                mov     [esp+5Ch+var_18], eax
                mov     eax, [ecx+esi-0BFh]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [ecx+esi-0BBh]
                xor     ecx, ecx
                mov     esi, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_C], eax
                movzx   eax, bl
                xor     eax, 0DEh
                movzx   ebx, si
                mov     esi, [esp+5Ch+var_48]
                sub     ebx, 6725h
                add     ebx, [esi+eax*8]
                mov     [esp+5Ch+var_24], ebx
                adc     ecx, [esi+eax*8+4]
                mov     ebx, [esp+5Ch+var_40]
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [eax+esi-28h]
                movzx   eax, bl
                add     ecx, edi
                mov     eax, [eax+esi-0ABh]
                mov     esi, [ebp+arg_4]
                mov     eax, [eax+ecx*4-7D3FFD90h]
                mov     ecx, esi
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                shr     esi, 4
                xor     ecx, edi
                shl     edx, 4
                xor     ecx, ebx
                add     esi, edx
                xor     esi, [esp+5Ch+var_44]
                mov     ebx, edi
                xor     ebx, [esp+5Ch+var_44]
                xor     esi, edi
                xor     ebx, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_3C], esi
                lea     edx, [ebx+765541EBh]
                call    VBN_TransformContext
                mov     ecx, esi
                xor     ecx, [esp+58h+var_34]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, 72F98197h
                mov     eax, ecx
                mov     [esp+58h+var_28], ecx
                shr     eax, 8
                xor     cl, 4Dh
                sub     al, 4Fh ; 'O'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     esi, [esp+58h+var_28]
                sbb     ecx, edi
                mov     edx, [esp+58h+var_40]
                add     [esp+58h+var_30], eax
                mov     eax, esi
                mov     edi, [esp+58h+var_30]
                adc     ecx, [esp+58h+var_2C]
                xor     eax, ebx
                xor     eax, [esp+58h+var_38]
                xor     eax, edx
                mov     [esp+58h+var_14], ecx
                mov     [esp+58h+var_28], eax
                mov     ecx, ebx
                xor     ecx, [esp+58h+var_3C]
                xor     eax, 0F568F637h
                xor     ecx, edx
                xor     ecx, edx
                mov     [esp+58h+var_2C], ecx
                mov     edx, ecx
                mov     ebx, [esp+58h+var_2C]
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, 0AFD93D37h
                mov     [edi], ecx
                mov     ecx, ebx
                xor     ecx, esi
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_38]
                mov     esi, [esp+58h+var_48]
                mov     edx, [esp+58h+var_24]
                movzx   eax, cl
                mov     [esi+eax*8-388h], edx
                mov     edx, [esp+58h+var_20]
                mov     [esi+eax*8-384h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 3Bh
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_18]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_14]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 33h
                shr     ecx, 18h
                xor     ecx, 9Ah
                mov     [esi+eax*8+4], edx
                mov     edx, [esp+58h+var_34]
                mov     [esi+eax*8], edi
                mov     eax, [esp+58h+var_10]
                mov     [ecx+esi], eax
                mov     eax, [esp+58h+var_C]
                mov     [ecx+esi+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_28]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_8]
                and     dword ptr [esi+ecx*8-294h], 0
                add     edx, 2C02826Eh
                mov     [esi+ecx*8-298h], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_3C]
                pop     edi
                add     ecx, 0BF2B6FDEh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___75       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___90       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                mov     [esp+4Ch+var_4C], eax
                push    ebx
                mov     ebx, eax
                and     [esp+50h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_0]
                sub     ebx, esi
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_40], ebx
                push    offset dword_40AA5C
                lea     edx, [esi+29DE5A00h]
                mov     [esp+5Ch+var_28], edi
                add     edx, eax
                mov     eax, edx
                mov     [esp+5Ch+var_44], edx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [edi+eax*8+48h]
                mov     eax, [edi+eax*8+4Ch]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 76h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B7h
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, ebx
                shr     eax, 8
                mov     [esp+5Ch+var_20], ecx
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 18h
                xor     ecx, 0AEh
                xor     al, 55h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_2C], eax
                adc     edx, [edi+ecx*8+4]
                mov     ecx, ebx
                movzx   eax, bl
                mov     [esp+5Ch+var_14], eax
                xor     eax, 5Fh
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 62h
                mov     [esp+5Ch+var_24], edx
                add     ecx, [eax+edi]
                mov     edx, [esp+5Ch+var_44]
                movzx   eax, dl
                xor     eax, 5Dh
                mov     eax, [eax+edi]
                mov     eax, [eax+ecx*4]
                mov     ecx, edi
                mov     [esp+5Ch+var_18], eax
                mov     eax, [esp+5Ch+var_4C]
                xor     eax, esi
                mov     ebx, eax
                mov     [esp+5Ch+var_48], eax
                xor     ebx, edx
                mov     [esp+5Ch+var_3C], ebx
                lea     edx, [ebx+8E0DC0Fh]
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_48]
                mov     eax, ecx
                mov     edx, [esp+58h+var_40]
                xor     eax, edx
                xor     eax, [esp+58h+var_44]
                shr     [esp+58h+var_4C], 4
                mov     [esp+58h+var_8], eax
                shl     esi, 4
                add     [esp+58h+var_4C], esi
                mov     esi, [esp+58h+var_4C]
                xor     esi, ebx
                mov     ebx, edx
                xor     ebx, eax
                xor     esi, edx
                xor     ebx, [esp+58h+var_3C]
                xor     ecx, esi
                xor     ecx, eax
                mov     [esp+58h+var_4C], esi
                mov     eax, ebx
                mov     [esp+58h+var_48], ecx
                xor     eax, esi
                xor     eax, [esp+58h+var_44]
                xor     eax, 37804239h
                mov     [esp+58h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     eax, 8
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                mov     edi, eax
                mov     eax, [esp+58h+var_38]
                sub     edi, ecx
                sbb     edx, esi
                add     edi, dword ptr [esp+58h+var_34]
                mov     esi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_34+4]
                add     eax, 5F33C11Ch
                xor     ecx, ecx
                add     esi, 8BC096F1h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, ebx
                mov     [edi+4], esi
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     ebx, [esp+58h+var_28]
                mov     esi, [esp+58h+var_2C]
                movzx   eax, cl
                xor     eax, 0B1h
                mov     [ebx+eax*8], esi
                mov     esi, [esp+58h+var_24]
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx-59h], esi
                mov     esi, [esp+58h+var_1C]
                mov     [eax+ebx-55h], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 32h
                shr     ecx, 18h
                mov     [ebx+eax*8+4], edx
                mov     [ebx+eax*8], edi
                and     dword ptr [ebx+ecx*8+1Ch], 0
                mov     eax, [esp+58h+var_18]
                mov     [ebx+ecx*8+18h], eax
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_8]
                movzx   ecx, al
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, [esp+58h+var_14]
                mov     [ebx+ecx*8-4E0h], eax
                mov     eax, [esp+58h+var_C]
                mov     [ebx+ecx*8-4DCh], eax
                mov     ecx, [esp+58h+var_4C]
                xor     eax, eax
                pop     edi
                add     ecx, 457B072h
                add     edx, 1C74E7C4h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___90       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___36_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, [ebp+arg_0]
                mov     ebx, edi
                xor     ebx, [ebp+arg_0]
                mov     eax, edx
                shr     eax, 8
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                sub     esi, 0FEh
                xor     al, 23h
                mov     [ebp+var_4], edx
                mov     [ebp+var_C], ecx
                xor     ecx, ecx
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                movzx   eax, al
                sbb     ecx, edx
                mov     edx, [ebp+var_C]
                push    offset dword_40BF40
                add     esi, [eax+edx-50h]
                adc     ecx, [eax+edx-4Ch]
                mov     [edx+1BCh], ecx
                mov     ecx, [ebp+var_C]
                mov     [edx+1B8h], esi
                lea     edx, [edi+1BF99735h]
                xor     edx, ebx
                xor     edx, [ebp+var_4]
                add     edx, 742ABF9Ah
                call    VBN_TransformContext
                xor     eax, eax
                xor     ebx, 6D67ABC3h
                pop     edi
                xor     edx, edx
                xor     eax, 1B5E3097h
                pop     esi
                or      edx, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___36_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___75_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                shr     edx, 4
                add     eax, edx
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    offset dword_40C430
                mov     [ebp+var_C], edi
                mov     ecx, [eax+edi-1]
                mov     ebx, [eax+edi+3]
                lea     eax, [esi+709413F5h]
                mov     [ebp+var_8], ecx
                lea     edx, [eax-4EC27C1Eh]
                mov     ecx, edi
                mov     [ebp+var_10], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 8Eh
                shr     ecx, 10h
                movzx   eax, al
                sub     cl, 29h ; ')'
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     ebx, [ebp+var_4]
                mov     edx, ebx
                mov     ecx, ebx
                mov     [eax+1BCh], edi
                xor     ecx, [ebp+var_10]
                xor     edx, ebx
                xor     ecx, ebx
                xor     eax, eax
                pop     edi
                sub     ecx, 33D6BCD7h
                sub     edx, 2AA71EC2h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___75_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_1__1_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                lea     eax, [edx+7522BC5Bh]
                mov     esi, ecx
                xor     edx, [ebp+arg_0]
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 0A5h
                mov     [ebp+var_10], edx
                push    edi
                push    offset dword_40C520
                lea     edx, [edx+6FC9461Ah]
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                xor     al, 78h
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 71h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+arg_4]
                mov     [ecx+1BCh], edx
                mov     eax, ebx
                xor     ebx, [ebp+arg_0]
                mov     edx, [ebp+arg_0]
                xor     ebx, [ebp+var_10]
                xor     ebx, [ebp+var_4]
                shl     edx, 4
                sub     ebx, 54159E6h
                shr     eax, 4
                add     edx, eax
                xor     eax, eax
                xor     edx, [ebp+var_4]
                pop     edi
                xor     edx, 944DA387h
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__1_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__36      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                sub     ebx, edi
                sub     edi, [ebp+arg_0]
                xor     ebx, 0FFED29Ah
                movzx   eax, bl
                push    offset dword_40BD60
                mov     [esp+1Ch+var_C], edi
                lea     edx, [edi+69F3FA39h]
                mov     esi, [ecx+eax*8-460h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     edi, ebx
                xor     edi, eax
                xor     edi, [ebp+arg_0]
                lea     edx, [eax+7AF8EBE4h]
                xor     edx, [esp+18h+var_C]
                xor     edx, ebx
                movzx   eax, dl
                mov     [esp+18h+var_8], edx
                mov     ecx, [eax+esi-85h]
                mov     eax, edx
                shr     eax, 8
                xor     ecx, edi
                movzx   eax, al
                xor     ecx, 4CFBEA5Ch
                xor     eax, 18h
                mov     [eax+esi], ecx
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                mov     eax, [ebp+arg_0]
                add     ecx, 0C30C7907h
                xor     ecx, [esp+18h+var_8]
                shr     edx, 4
                xor     ecx, edi
                shl     eax, 4
                xor     ecx, 7E7C89CAh
                add     edx, eax
                xor     eax, eax
                xor     edx, edi
                xor     edx, [esp+18h+var_C]
                pop     edi
                pop     esi
                sub     edx, 61A78CA3h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__36      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___88       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                lea     edx, [eax+0DDD864Fh]
                and     [esp+54h+var_4], 0
                mov     esi, ecx
                mov     [esp+54h+var_40], edx
                mov     ecx, eax
                mov     [esp+54h+var_3C], esi
                sub     ecx, ebx
                xor     ecx, 345EBB2h
                mov     eax, ecx
                mov     [esp+54h+var_4C], ecx
                shr     eax, 10h
                movzx   eax, al
                push    edi
                mov     edi, [esp+58h+var_40]
                mov     ecx, [eax+esi-9]
                mov     eax, [eax+esi-5]
                mov     dword ptr [esp+58h+var_34+4], eax
                mov     eax, [esp+58h+var_4C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 21h
                mov     dword ptr [esp+58h+var_34], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+58h+var_24], eax
                mov     eax, [esp+58h+var_4C]
                movzx   eax, al
                xor     eax, 6Dh
                mov     [esp+58h+var_28], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+58h+var_C], eax
                movzx   eax, dl
                mov     [esp+58h+var_14], eax
                mov     [esp+58h+var_10], ecx
                mov     ecx, eax
                mov     eax, edx
                xor     ecx, 66h
                shr     eax, 18h
                xor     al, 9Fh
                movzx   eax, al
                cdq
                add     eax, [esi+ecx*8]
                mov     [esp+58h+var_20], eax
                mov     eax, edi
                adc     edx, [esi+ecx*8+4]
                mov     ecx, edi
                shr     eax, 10h
                shr     ecx, 8
                movzx   eax, al
                movzx   ecx, cl
                xor     eax, 0F6h
                xor     ecx, 0D9h
                mov     [esp+58h+var_1C], edx
                mov     edx, ebx
                shl     edx, 4
                mov     ecx, [ecx+esi]
                add     ecx, eax
                mov     eax, [esp+58h+var_4C]
                shr     eax, 18h
                xor     eax, 0C7h
                mov     eax, [eax+esi]
                mov     eax, [eax+ecx*4]
                mov     ecx, [ebp+arg_0]
                mov     [esp+58h+var_2C], eax
                mov     eax, ecx
                shr     eax, 4
                add     edx, eax
                mov     eax, ebx
                xor     edx, [esp+58h+var_4C]
                sub     eax, ecx
                mov     esi, eax
                mov     [esp+58h+var_18], edx
                xor     esi, edi
                mov     [esp+58h+var_48], eax
                xor     esi, [esp+58h+var_4C]
                mov     [esp+58h+var_8], esi
                xor     ecx, edx
                xor     ecx, ebx
                add     ebx, 0EA2CC18Eh
                xor     ebx, esi
                xor     ecx, edi
                xor     ebx, edx
                mov     [esp+58h+var_44], ecx
                mov     ecx, [esp+58h+var_3C]
                mov     edx, ebx
                push    offset dword_40AC28
                xor     edx, 41AB5A3Dh
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_44]
                mov     eax, ebx
                xor     eax, edx
                mov     ecx, [esp+58h+var_48]
                xor     eax, [esp+58h+var_4C]
                xor     ecx, edx
                xor     eax, 50FF2B7Ch
                xor     ecx, esi
                mov     [esp+58h+var_38], eax
                xor     esi, esi
                mov     [esp+58h+var_48], ecx
                mov     eax, edx
                mov     ecx, [esp+58h+var_44]
                shr     eax, 8
                sub     al, 70h ; 'p'
                movzx   edi, cl
                movzx   eax, al
                sub     edi, 0F0h
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_48]
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 2EC27382h
                xor     ecx, ecx
                add     edx, 0AE35CD5Ch
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_4C]
                mov     ebx, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_2C]
                movzx   eax, cl
                and     dword ptr [ebx+eax*8-524h], 0
                mov     [ebx+eax*8-528h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-38h], edx
                mov     edx, [esp+58h+var_24]
                mov     [ebx+eax*8-34h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 79h
                mov     [ebx+eax*8-568h], edi
                mov     [ebx+eax*8-564h], esi
                mov     eax, [esp+58h+var_20]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_1C]
                mov     [ebx+ecx*8+4], eax
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                movzx   ecx, dl
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 0D8h
                xor     ecx, [esp+58h+var_14]
                mov     [ecx+ebx], eax
                xor     edx, 2D9799D5h
                mov     eax, [esp+58h+var_C]
                mov     [ecx+ebx+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                xor     ecx, 121D709h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___88       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; _DWORD vBng_stk(_stk *__hidden thiss)
vBng_stk        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
thiss           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                push    edi
                lea     eax, [ebx+7EBA08ADh]
                mov     [ebp+var_10], esi
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 16h
                push    offset dword_40C540
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                mov     [ebp+var_C], eax
                mov     eax, [ebp+thiss]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_14], ecx
                lea     edx, [ecx-1498AD6Dh]
                mov     ecx, esi
                call    VBN_TransformContext
                sub     ebx, [ebp+thiss]
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 0A7h
                xor     eax, 571h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, [ebp+var_C]
                mov     eax, [ebp+arg_4]
                mov     [ecx+1BCh], edx
                add     eax, 0A1DEA76Bh
                mov     ecx, [ebp+thiss]
                xor     edx, edx
                add     eax, ecx
                add     ecx, 0F4AA7F8Ch
                xor     ecx, [ebp+var_14]
                xor     eax, ebx
                xor     ecx, [ebp+var_4]
                xor     eax, [ebp+var_14]
                xor     ecx, 470B9288h
                pop     edi
                pop     esi
                xor     eax, 1D1B4F9Fh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_stk        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___137      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, eax
                push    edi
                mov     edi, [ebp+arg_0]
                shr     ecx, 4
                mov     [esp+58h+var_44], esi
                push    offset dword_40BCA8
                lea     ebx, [eax+edi]
                mov     eax, edi
                shl     eax, 4
                lea     edx, [ebx+0A428F0Eh]
                add     ecx, eax
                movzx   eax, dl
                mov     [esp+5Ch+var_48], ecx
                mov     ecx, [eax+esi+13h]
                mov     eax, [eax+esi+17h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_34], ecx
                mov     ecx, [eax+esi-0FFh]
                mov     eax, [eax+esi-0FBh]
                mov     [esp+5Ch+var_14], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_38], ecx
                mov     ecx, [eax+esi-45h]
                mov     eax, [eax+esi-41h]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_34]
                mov     esi, [eax+esi+0B7h]
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, al
                mov     eax, [ecx+eax*8+120h]
                mov     ecx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [ebp+arg_4]
                sub     eax, edi
                mov     [esp+5Ch+var_40], eax
                xor     eax, edx
                mov     [esp+5Ch+var_30], eax
                lea     edx, [eax+2492978Fh]
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_48]
                xor     edx, edx
                shr     eax, 8
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 19h
                inc     eax
                call    __allshl
                lea     edx, [edi-4A016DFh]
                add     eax, offset dword_40ADD0
                xor     edx, [esp+58h+var_48]
                lea     edi, [ebx+0A428F0Eh]
                xor     edx, edi
                mov     [esp+58h+var_10], eax
                mov     eax, [esp+58h+var_38]
                movzx   ecx, dl
                xor     ecx, 7Ah
                mov     [esp+58h+var_18], edx
                mov     ecx, [ecx+eax]
                mov     eax, edx
                and     ecx, esi
                shr     eax, 8
                mov     esi, [esp+58h+var_38]
                movzx   eax, al
                mov     [eax+esi+2], ecx
                lea     ecx, [ebx+11988530h]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_48]
                add     ebx, 0D2FC3B62h
                mov     [esp+58h+var_C], ecx
                mov     esi, [esp+58h+var_40]
                xor     ebx, edx
                xor     ebx, [esp+58h+var_30]
                xor     esi, ecx
                xor     esi, edx
                mov     [esp+58h+var_8], ebx
                mov     eax, ebx
                mov     [esp+58h+var_40], esi
                xor     eax, ecx
                mov     ecx, esi
                xor     eax, edi
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_48]
                xor     eax, 0AE0FC8D1h
                mov     [esp+58h+var_3C], eax
                xor     ecx, edi
                mov     eax, ecx
                mov     [esp+58h+var_24], ecx
                shr     eax, 8
                xor     cl, 4Ah
                add     al, 5Eh ; '^'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+58h+var_40]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_2C]
                mov     edi, [esp+58h+var_44]
                adc     edx, dword ptr [esp+58h+var_2C+4]
                add     eax, 2C28EA88h
                xor     ecx, ecx
                add     esi, 0B35E19Ah
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_24]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_34]
                shr     ecx, 18h
                mov     [eax+edi+3], esi
                mov     esi, [esp+58h+var_20]
                mov     [eax+edi+7], esi
                mov     esi, edi
                mov     eax, [esp+58h+var_1C]
                and     dword ptr [esi+ecx*8-0CCh], 0
                mov     [esi+ecx*8-0D0h], eax
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_48]
                movzx   eax, cl
                mov     [esp+58h+var_3C], ecx
                mov     edi, [esp+58h+var_3C]
                mov     [esi+eax*8-114h], edx
                mov     [esi+eax*8-118h], ebx
                mov     eax, [esp+58h+var_18]
                shr     eax, 10h
                xor     al, 4Bh
                movzx   eax, al
                cdq
                add     eax, [esp+58h+var_38]
                adc     edx, [esp+58h+var_14]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 90h
                mov     [esi+ecx*8], eax
                mov     eax, edi
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0A4h
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_10]
                mov     [eax+esi], ecx
                mov     edx, [esp+58h+var_C]
                xor     ebx, ebx
                shr     edi, 18h
                add     edx, 0D101E9CFh
                xor     edi, 7Fh
                mov     [eax+esi+4], ebx
                xor     eax, eax
                mov     [esi+edi*8], ecx
                mov     ecx, [esp+58h+var_8]
                mov     [esi+edi*8+4], ebx
                xor     ecx, 757333B9h
                pop     edi
                or      eax, ecx
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___137      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002250 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                push    edi
                mov     edi, ecx
                shl     ebx, 4
                add     ebx, eax
                mov     [esp+28h+var_4], edi
                lea     ecx, [esi-30FE6626h]
                movzx   edx, cl
                mov     eax, ecx
                shr     eax, 8
                xor     edx, 0E5h
                mov     [esp+28h+var_18], ecx
                movzx   ecx, ax
                mov     eax, [edx+edi]
                mov     edi, [ebp+arg_4]
                mov     edx, [eax+ecx-29C2h]
                mov     eax, ebx
                mov     ecx, [esp+28h+var_18]
                xor     eax, 0FB2ED1AFh
                shr     ecx, 18h
                sub     ecx, eax
                mov     eax, edx
                sub     ecx, 0B1h
                cmp     ecx, edx
                setnbe  [esp+28h+var_19]
                sub     eax, ecx
                mov     [esp+28h+var_10], eax
                mov     eax, esi
                shl     eax, 4
                shr     edi, 4
                add     edi, eax
                mov     eax, [ebp+arg_4]
                xor     edi, [esp+28h+var_18]
                add     eax, 0E4D82C74h
                add     eax, esi
                xor     eax, edi
                xor     eax, ebx
                xor     ebx, eax
                mov     [esp+28h+var_14], eax
                mov     eax, [esp+28h+var_18]
                xor     ebx, eax
                mov     [esp+28h+var_18], ebx
                cmp     ecx, edx
                jbe     short loc_47EE12
                xor     esi, esi
                lea     edx, [edi+1784DA13h]
                add     eax, 0B093070Ch
                or      esi, eax
                jmp     short loc_47EE2C
; ---------------------------------------------------------------------------

loc_47EE12:                             ; CODE XREF: VBNCB_unnamed_80002250+9F¡üj
                sub     esi, [ebp+arg_4]
                xor     edx, edx
                xor     esi, eax
                mov     eax, [esp+28h+var_14]
                xor     esi, edi
                add     eax, 94BA9D24h
                xor     esi, 6B993F1Dh
                or      edx, eax

loc_47EE2C:                             ; CODE XREF: VBNCB_unnamed_80002250+B0¡üj
                mov     eax, [esp+28h+var_18]
                mov     edi, [esp+28h+var_4]
                cmp     [esp+28h+var_10], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [edi+ecx*8-1E0h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                mov     [edi+ecx*8-570h], al
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002250 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800023f8 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                mov     edx, eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                sub     edx, esi
                mov     [ebp+var_4], ecx
                push    edi
                mov     edi, edx
                shr     esi, 4
                sub     ebx, eax
                xor     edi, 7C8ECDD6h
                shl     eax, 4
                xor     ecx, ecx
                add     esi, eax
                xor     esi, ebx
                xor     edx, esi
                mov     [ebp+var_8], esi
                mov     esi, [ebp+var_4]
                lea     eax, [edi-57DB2FCAh]
                or      ecx, eax
                xor     edx, edi
                movzx   eax, bl
                xor     edx, 6BE547D9h
                xor     eax, 45h
                add     edx, 79AC47Bh
                cmp     byte ptr [esi+eax*8], 0
                mov     esi, [ebp+var_8]
                jnz     short loc_47EEEC
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8-70h], 0
                jnz     short loc_47EEEC
                xor     edx, edx
                lea     eax, [esi+7115CFB9h]
                lea     ecx, [edi-46C415C5h]
                or      edx, eax

loc_47EEEC:                             ; CODE XREF: VBNCB_unnamed_800023f8+5A¡üj
                                        ; VBNCB_unnamed_800023f8+6A¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023f8 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800022cf proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                mov     [ebp+var_8], ecx
                lea     ebx, [edx-301A1837h]
                lea     esi, [eax-0F95D4D0h]
                lea     ecx, [edx-55EE1BA8h]
                mov     [ebp+var_4], esi
                add     ecx, eax
                push    edi
                lea     edi, [edx+5227A574h]
                xor     ecx, esi
                add     edx, 0DEA10AEEh
                xor     edi, ebx
                add     eax, edx
                xor     esi, esi
                mov     edx, [ebp+var_8]
                xor     eax, edi
                xor     eax, [ebp+var_4]
                xor     ecx, ebx
                xor     eax, 9005CCC6h
                add     ecx, 1326706h
                or      esi, eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 58h
                cmp     byte ptr [edx+eax*8], 0
                mov     edx, [ebp+var_4]
                jnz     short loc_47EF88
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                xor     eax, 0Ah
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_47EF88
                xor     esi, esi
                lea     eax, [edi+1F775921h]
                lea     ecx, [edx-722DD48h]
                or      esi, eax

loc_47EF88:                             ; CODE XREF: VBNCB_unnamed_800022cf+67¡üj
                                        ; VBNCB_unnamed_800022cf+76¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022cf endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__14      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                and     [esp+14h+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     edx, 4
                shr     eax, 4
                add     eax, edx
                mov     [esp+20h+var_14], eax
                lea     esi, [edi-0F4B48A9h]
                movzx   eax, al
                xor     eax, 58h
                push    offset dword_40A450
                mov     edx, [ecx+eax*8]
                mov     [esp+24h+var_10], edx
                lea     edx, [esi+1904C6CEh]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                sub     ebx, edi
                mov     edx, [ebp+arg_0]
                add     ecx, 0B5DB7AB3h
                add     edx, ecx
                mov     edi, ebx
                xor     edi, [esp+20h+var_14]
                xor     ebx, esi
                xor     ebx, [esp+20h+var_14]
                xor     edx, edi
                xor     edx, esi
                mov     esi, [esp+20h+var_10]
                movzx   eax, dl
                xor     eax, 0C2h
                lea     ecx, [ebx+1DD7CC00h]
                xor     ecx, [eax+esi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+esi-29h], ecx
                xor     eax, eax
                mov     esi, [ebp+arg_4]
                xor     esi, [ebp+arg_0]
                mov     ecx, [esp+20h+var_14]
                xor     esi, ebx
                xor     esi, edi
                xor     ecx, edx
                xor     ecx, ebx
                pop     edi
                sub     ecx, 6A2761EFh
                lea     edx, [esi-68BF518Bh]
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__14      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___59       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                sub     eax, ecx
                mov     [esp+50h+var_40], esi
                xor     eax, 70D7EE04h
                mov     [esp+50h+var_38], eax
                movzx   eax, al
                lea     ebx, [ecx+edi]
                xor     eax, 39h
                lea     edx, [ebx+382E8DE6h]
                mov     [esp+50h+var_34], edx
                shr     edx, 18h
                xor     edx, 0A4h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+50h+var_2C+4], eax
                mov     eax, [esp+50h+var_38]
                shr     eax, 8
                mov     dword ptr [esp+50h+var_2C], ecx
                movzx   ecx, al
                mov     eax, esi
                push    offset aBt      ; " bT*"
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx+0E2h]
                mov     [esp+54h+var_8], eax
                lea     eax, [ebx+382E8DE6h]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_38]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                add     edx, 3Fh ; '?'
                add     edx, [esi+ecx*8-670h]
                mov     dword ptr [esp+54h+var_10], edx
                lea     edx, [ebx+382E8DE6h]
                adc     eax, [esi+ecx*8-66Ch]
                mov     dword ptr [esp+54h+var_10+4], eax
                movzx   eax, dl
                mov     ecx, [eax+esi+6Bh]
                mov     eax, [eax+esi+6Fh]
                mov     [esp+54h+var_20], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 54h
                mov     [esp+54h+var_24], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_18], ecx
                mov     ecx, [ebp+arg_4]
                mov     [esp+54h+var_14], eax
                mov     eax, edi
                shl     ecx, 4
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+54h+var_40]
                mov     esi, eax
                mov     [esp+54h+var_3C], eax
                xor     esi, edx
                lea     edx, [esi+2B777A33h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                lea     edx, [ebx+382E8DE6h]
                sub     eax, edi
                lea     ecx, [ebx+26A9EB60h]
                xor     eax, [esp+50h+var_38]
                xor     eax, edx
                shl     edi, 4
                mov     edx, [ebp+arg_4]
                shr     edx, 4
                add     edx, edi
                mov     [esp+50h+var_4], eax
                xor     edx, esi
                xor     edx, [esp+50h+var_38]
                mov     [esp+50h+var_30], edx
                xor     ecx, eax
                mov     edx, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_30]
                xor     ecx, esi
                xor     edx, eax
                mov     [esp+50h+var_1C], ecx
                mov     ebx, ecx
                mov     [esp+50h+var_3C], edx
                xor     ebx, [esp+50h+var_30]
                xor     esi, esi
                xor     ebx, [esp+50h+var_34]
                xor     ebx, 61922575h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 98h
                sub     al, 78h ; 'x'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_2C]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_2C+4]
                xor     eax, 2938EA95h
                xor     ecx, ecx
                xor     edx, 3084CD23h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_40]
                shr     eax, 10h
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_1C]
                xor     edx, [esp+50h+var_38]
                xor     edx, [esp+50h+var_34]
                movzx   eax, al
                xor     eax, 79h
                shr     ebx, 18h
                mov     [ecx+eax*8], edi
                mov     edi, ecx
                mov     ecx, [esp+50h+var_18]
                mov     [edi+eax*8+4], esi
                mov     eax, [esp+50h+var_24]
                mov     [edi+ebx*8-560h], eax
                mov     eax, [esp+50h+var_20]
                mov     [edi+ebx*8-55Ch], eax
                movzx   eax, dl
                xor     eax, 0FCh
                mov     [eax+edi], ecx
                mov     ecx, [esp+50h+var_14]
                mov     [eax+edi+4], ecx
                mov     eax, edx
                mov     ecx, dword ptr [esp+50h+var_10]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 47h
                shr     edx, 10h
                mov     [edi+eax*8], ecx
                mov     ecx, dword ptr [esp+50h+var_10+4]
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+50h+var_8]
                movzx   eax, dl
                mov     edx, [esp+50h+var_4]
                add     edx, 0F3342CD8h
                and     dword ptr [edi+eax*8-54h], 0
                mov     [edi+eax*8-58h], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_30]
                pop     edi
                add     ecx, 0CC50FBE6h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___59       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___2_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                mov     ecx, ebx
                mov     [ebp+var_4], esi
                xor     ecx, edi
                push    offset dword_40C0FC
                lea     edx, [edi+3FA42DEAh]
                add     edx, ebx
                lea     eax, [edi-67618E9Bh]
                add     eax, ebx
                mov     [ebp+var_C], edx
                xor     eax, ecx
                sub     ebx, edi
                xor     ebx, edx
                mov     [ebp+var_8], eax
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0F3h
                mov     esi, [ecx+esi-4]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax]
                sbb     ecx, edx
                movzx   eax, bl
                mov     edx, [ebp+arg_4]
                sub     eax, 9Eh
                mov     ebx, [ebp+var_C]
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                shl     edx, 4
                shr     edi, 4
                add     edx, edi
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, ebx
                mov     [eax+1BCh], ecx
                sub     edx, 79A4E977h
                mov     ecx, eax
                call    VBN_TransformContext
                xor     ebx, 68A9D222h
                xor     esi, 8DD6A258h
                xor     eax, eax
                mov     edx, ebx
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___2_stk    endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___150_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                lea     eax, [edx+22361714h]
                mov     [ebp+var_8], ecx
                sub     edx, [ebp+arg_4]
                mov     [ebp+var_4], eax
                xor     edx, 6DBC763Bh
                movzx   eax, al
                xor     eax, 42h
                mov     [ebp+var_C], edx
                push    offset dword_40BD50
                xor     edx, 0F7FFEE5Fh
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 71h ; 'q'
                shr     eax, 10h
                xor     al, 98h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                mov     ebx, [ebp+arg_4]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     esi, [ebp+arg_0]
                xor     edx, edx
                mov     [eax+1BCh], ecx
                mov     ecx, ebx
                shl     ebx, 4
                mov     eax, esi
                shl     eax, 4
                shr     esi, 4
                add     ebx, esi
                shr     ecx, 4
                xor     ebx, [ebp+var_4]
                add     eax, ecx
                xor     eax, [ebp+var_C]
                sub     ebx, 545E9895h
                xor     eax, [ebp+var_4]
                or      edx, ebx
                pop     edi
                pop     esi
                add     eax, 0A8517077h
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___150_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___48_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                sub     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                shr     eax, 4
                mov     ecx, [ebp+arg_4]
                xor     edx, 3E72EF3Ch
                shl     ecx, 4
                add     ecx, eax
                mov     [ebp+var_10], edx
                movzx   eax, cl
                xor     eax, 22h
                mov     [ebp+var_4], ecx
                push    edi
                push    offset dword_40C6B0
                lea     edx, [edx-2EA9F6B8h]
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                xor     al, 0DEh
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 0DFh
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     [ecx+1BCh], edx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                mov     edx, [ebp+arg_4]
                add     ecx, 5453BE3Ch
                xor     ecx, [ebp+var_10]
                xor     ecx, [ebp+var_4]
                shr     edx, 4
                xor     ecx, 42FB8E58h
                shl     eax, 4
                add     edx, eax
                xor     eax, eax
                xor     edx, [ebp+var_4]
                pop     edi
                pop     esi
                sub     edx, 5671409Bh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___48_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___100_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     edx, [ebp+arg_0]
                add     edx, 9779E75Bh
                mov     eax, edx
                mov     [ebp+var_4], edx
                shr     eax, 8
                push    ebx
                push    esi
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                sub     esi, 17h
                sub     al, 53h ; 'S'
                mov     ebx, [ebp+arg_4]
                movzx   eax, al
                cdq
                push    edi
                mov     edi, ecx
                xor     ecx, ecx
                sub     esi, eax
                mov     eax, [ebp+var_4]
                movzx   eax, al
                sbb     ecx, edx
                push    offset dword_40C550
                add     esi, [eax+edi-30h]
                adc     ecx, [eax+edi-2Ch]
                mov     [edi+1B8h], esi
                mov     esi, [ebp+arg_0]
                mov     edx, esi
                sub     edx, ebx
                mov     [edi+1BCh], ecx
                mov     ecx, edi
                lea     eax, [esi+5296A2A8h]
                add     eax, ebx
                xor     edx, eax
                lea     eax, [esi-688618A5h]
                xor     edx, eax
                xor     edx, 0D05339C6h
                call    VBN_TransformContext
                lea     eax, [esi-688618A5h]
                xor     edx, edx
                xor     eax, ebx
                lea     ecx, [esi+6552784Ch]
                xor     eax, esi
                add     ecx, ebx
                pop     edi
                xor     eax, 11D8934Fh
                or      edx, ecx
                pop     esi
                mov     [ebp+var_4], eax
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___100_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___40       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, esi
                sub     edx, edi
                mov     [esp+50h+var_40], ecx
                shl     ebx, 4
                mov     eax, edi
                shr     eax, 4
                add     ebx, eax
                mov     [esp+50h+var_3C], edx
                movzx   eax, dl
                mov     [esp+50h+var_38], ebx
                push    offset dword_40C14C
                mov     ecx, [eax+ecx-8Dh]
                mov     [esp+54h+var_18], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [eax+ecx-89h]
                mov     [esp+54h+var_14], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                shr     edx, 18h
                xor     edx, 0A4h
                mov     ecx, [ecx+eax*8-2B0h]
                mov     [esp+54h+var_10], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [ecx+eax*8-2ACh]
                mov     [esp+54h+var_C], eax
                movzx   eax, bl
                mov     [esp+54h+var_8], eax
                xor     eax, 86h
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+54h+var_28], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+54h+var_28+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_40]
                xor     ecx, 0Ch
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx]
                mov     [esp+54h+var_4], eax
                mov     eax, [esp+54h+var_3C]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                mov     ebx, [esp+54h+var_40]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                sub     edx, 21h ; '!'
                add     edx, [ecx+ebx-0DCh]
                mov     [esp+54h+var_20], edx
                adc     eax, [ecx+ebx-0D8h]
                lea     ebx, [edi-593CB771h]
                mov     ecx, [esp+54h+var_40]
                add     ebx, esi
                xor     ebx, [esp+54h+var_3C]
                mov     edx, ebx
                mov     [esp+54h+var_1C], eax
                xor     edx, 21908C22h
                mov     [esp+54h+var_34], ebx
                call    VBN_TransformContext
                lea     edx, [edi-33B2304Ah]
                mov     ecx, esi
                add     edx, esi
                shr     ecx, 4
                xor     edx, [esp+50h+var_38]
                mov     eax, edi
                xor     edx, [esp+50h+var_3C]
                shl     eax, 4
                add     ecx, eax
                mov     [esp+50h+var_30], edx
                xor     ecx, ebx
                xor     ecx, [esp+50h+var_38]
                mov     ebx, edi
                mov     [esp+50h+var_2C], ecx
                sub     ebx, esi
                mov     ecx, [ebp+arg_0]
                xor     ebx, edx
                xor     esi, esi
                xor     ebx, [esp+50h+var_34]
                xor     ebx, 0A333BACh
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0DAh
                add     al, 63h ; 'c'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, ebx
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_28]
                adc     esi, dword ptr [esp+50h+var_28+4]
                add     ecx, 9C8EEC07h
                xor     eax, [esp+50h+var_2C]
                xor     eax, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_2C]
                xor     ecx, [esp+50h+var_30]
                mov     dword ptr [esp+50h+var_28], eax
                mov     edx, ecx
                xor     eax, 1203E95h
                mov     dword ptr [esp+50h+var_28+4], ecx
                xor     ecx, ecx
                xor     edx, 78B92705h
                or      ecx, eax
                mov     [edi], ecx
                mov     [edi+4], edx
                mov     edx, dword ptr [esp+50h+var_28+4]
                mov     ecx, edx
                xor     ecx, ebx
                mov     ebx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_3C]
                movzx   eax, cl
                mov     [ebx+eax*8-0D4h], esi
                mov     [ebx+eax*8-0D8h], edi
                mov     eax, ecx
                mov     esi, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Ch
                mov     [ebx+eax*8], esi
                mov     esi, [esp+50h+var_1C]
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [eax+ebx-38h], esi
                mov     esi, [esp+50h+var_14]
                mov     [eax+ebx-34h], esi
                mov     eax, [esp+50h+var_10]
                mov     [ebx+ecx*8+0E0h], eax
                mov     eax, [esp+50h+var_C]
                mov     [ebx+ecx*8+0E4h], eax
                mov     eax, [esp+50h+var_34]
                movzx   ecx, al
                mov     eax, dword ptr [esp+50h+var_28]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+50h+var_30]
                xor     ecx, eax
                mov     eax, [esp+50h+var_4]
                xor     ecx, 7Eh
                xor     ecx, [esp+50h+var_8]
                add     edx, 0B7489D1Bh
                and     dword ptr [ebx+ecx*8+4], 0
                mov     [ebx+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_2C]
                add     ecx, 73E7A5D5h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___40       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___16_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                mov     ecx, edx
                sub     ecx, esi
                mov     [ebp+var_10], edi
                movzx   eax, cl
                xor     eax, 68h
                push    offset dword_40A4D0
                mov     ebx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [ebp+var_C], eax
                mov     eax, esi
                sub     eax, edx
                shr     esi, 4
                shl     edx, 4
                xor     eax, 0A5A3DF31h
                add     edx, esi
                mov     [ebp+var_8], ebx
                mov     ebx, edx
                mov     [ebp+var_4], eax
                xor     ebx, ecx
                mov     ecx, edi
                xor     edx, ebx
                xor     edx, eax
                sub     edx, 177748ADh
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 71h
                xor     al, 73h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, [ebp+var_C]
                xor     eax, eax
                mov     [ecx+1BCh], edx
                lea     ecx, [ebx-1B7F0C30h]
                mov     edx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     edx, 626FBAB2h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___16_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___128      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     [esp+4Ch+var_44], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                sub     eax, edi
                mov     ebx, eax
                mov     [esp+50h+var_40], eax
                mov     eax, [esp+50h+var_44]
                xor     ebx, 0E40646Bh
                movzx   esi, bl
                lea     ecx, [edi+2DF9A808h]
                mov     [esp+50h+var_C], esi
                mov     [esp+50h+var_3C], ecx
                mov     [esp+50h+var_38], ebx
                mov     eax, [eax+esi*8+0E8h]
                mov     dword ptr [esp+50h+var_2C], eax
                mov     eax, [esp+50h+var_44]
                shr     ebx, 18h
                sub     ebx, 0Eh
                mov     eax, [eax+esi*8+0ECh]
                mov     esi, [esp+50h+var_44]
                mov     dword ptr [esp+50h+var_2C+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E4h
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+50h+var_1C], eax
                mov     [esp+50h+var_20], ecx
                mov     ecx, [esp+50h+var_3C]
                movzx   eax, cl
                xor     eax, 22h
                mov     esi, [eax+esi]
                mov     [esp+50h+var_8], esi
                mov     esi, [esp+50h+var_44]
                mov     edx, esi
                mov     eax, [eax+esi+4]
                mov     [esp+50h+var_4], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     ecx, ecx
                xor     eax, 6Fh
                add     ebx, [eax+esi]
                mov     [esp+50h+var_18], ebx
                adc     ecx, [eax+esi+4]
                mov     eax, [esp+50h+var_3C]
                mov     ebx, [esp+50h+var_38]
                shr     eax, 10h
                mov     [esp+50h+var_14], ecx
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     ecx, 1Ah
                movzx   eax, al
                mov     ecx, [edx+ecx*8]
                add     ecx, eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0DFh
                mov     eax, [eax+edx]
                mov     edx, [ebp+arg_0]
                sub     edi, edx
                mov     eax, [eax+ecx*4-110h]
                mov     [esp+50h+var_10], eax
                lea     esi, [edx-5374EBF8h]
                mov     eax, [esp+50h+var_40]
                xor     esi, ebx
                xor     eax, [esp+50h+var_3C]
                xor     esi, [esp+50h+var_3C]
                xor     edi, eax
                mov     ecx, eax
                mov     [esp+50h+var_30], esi
                xor     ecx, 4678133Ch
                xor     edi, ebx
                xor     edi, 4678133Ch
                mov     [esp+50h+var_34], ecx
                mov     [esp+50h+var_24], edi
                mov     ecx, [esp+50h+var_44]
                lea     edx, [edi-305FE9CCh]
                push    offset dword_40C4E0
                call    VBN_TransformContext
                mov     ebx, [esp+50h+var_40]
                xor     ebx, esi
                xor     esi, esi
                xor     ebx, [esp+50h+var_34]
                xor     ebx, 252B919Ch
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0DDh
                xor     al, 0EEh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, ebx
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_2C]
                mov     edx, [esp+50h+var_40]
                adc     esi, dword ptr [esp+50h+var_2C+4]
                xor     ecx, ecx
                xor     eax, [esp+50h+var_24]
                xor     eax, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_24]
                xor     eax, 68F91630h
                xor     edx, [esp+50h+var_30]
                mov     [esp+50h+var_24], eax
                xor     edx, 47A839EFh
                add     eax, 523A155Bh
                mov     [esp+50h+var_40], edx
                or      ecx, eax
                xor     edx, 34DCAF62h
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_40]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_3C]
                mov     ebx, [esp+50h+var_44]
                mov     edx, [esp+50h+var_20]
                movzx   eax, cl
                mov     [ebx+eax*8-5D0h], edx
                mov     edx, [esp+50h+var_1C]
                mov     [ebx+eax*8-5CCh], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_18]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-118h], edx
                mov     edx, [esp+50h+var_14]
                mov     [ebx+eax*8-114h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_10]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                and     dword ptr [ebx+eax*8-28Ch], 0
                mov     [ebx+eax*8-290h], edx
                mov     edx, [esp+50h+var_34]
                mov     eax, [esp+50h+var_40]
                mov     [ebx+ecx*8-230h], edi
                mov     [ebx+ecx*8-22Ch], esi
                movzx   eax, al
                movzx   ecx, dl
                add     edx, 4B6A0117h
                xor     ecx, eax
                mov     eax, [esp+50h+var_24]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, [esp+50h+var_C]
                pop     edi
                mov     [ecx+ebx-2Ch], eax
                mov     eax, [esp+4Ch+var_4]
                mov     [ecx+ebx-28h], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_30]
                xor     ecx, 46D8DA71h
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___128      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___173      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, eax
                mov     [esp+50h+var_3C], esi
                shl     eax, 4
                mov     ecx, edi
                shr     ecx, 4
                add     ecx, eax
                mov     [esp+50h+var_40], edx
                movzx   eax, dl
                xor     eax, 16h
                mov     [esp+50h+var_44], ecx
                push    offset dword_40C158
                mov     ebx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_10], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 84h
                mov     [esp+54h+var_14], ebx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_8], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C8h
                mov     [esp+54h+var_C], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_28], eax
                mov     eax, [esp+54h+var_44]
                movzx   eax, al
                xor     eax, 67h
                mov     [esp+54h+var_34], ecx
                mov     ecx, edx
                shr     ecx, 18h
                xor     ecx, 0A3h
                mov     eax, [ebx+eax*8]
                mov     ebx, edi
                mov     [esp+54h+var_4], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                xor     eax, 2822h
                movzx   eax, ax
                cdq
                add     eax, [ecx+esi]
                mov     [esp+54h+var_1C], eax
                adc     edx, [ecx+esi+4]
                mov     ecx, [ebp+arg_0]
                shr     ecx, 4
                shl     ebx, 4
                add     ebx, ecx
                mov     [esp+54h+var_18], edx
                mov     eax, ebx
                mov     ecx, esi
                xor     eax, [esp+54h+var_40]
                mov     [esp+54h+var_38], eax
                lea     edx, [eax+5BF51745h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                lea     edx, [edi+6B0E8C0Ah]
                add     edx, eax
                xor     edx, [esp+50h+var_44]
                xor     edx, [esp+50h+var_40]
                lea     ecx, [eax+72DBBC72h]
                mov     [esp+50h+var_30], edx
                xor     ecx, [esp+50h+var_38]
                xor     ebx, edx
                xor     ebx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_44]
                mov     eax, ebx
                mov     [esp+50h+var_2C], ecx
                mov     [esp+50h+var_20], ebx
                shr     eax, 8
                xor     al, 70h
                mov     cl, bl
                movzx   eax, al
                xor     cl, 0B0h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                sbb     ecx, edi
                add     eax, [esp+50h+var_34]
                mov     [esp+50h+var_24], eax
                adc     ecx, [esp+50h+var_28]
                mov     eax, [ebp+arg_0]
                sub     eax, [ebp+arg_4]
                xor     eax, [esp+50h+var_2C]
                xor     eax, [esp+50h+var_30]
                xor     ebx, [esp+50h+var_2C]
                xor     eax, 0C105D66Eh
                xor     ebx, [esp+50h+var_40]
                mov     esi, [esp+50h+var_24]
                xor     ebx, 820A5B71h
                mov     edi, [esp+50h+var_3C]
                lea     edx, [eax+569661ACh]
                mov     [esp+50h+var_34], eax
                mov     [esp+50h+var_28], ecx
                xor     ecx, ecx
                lea     eax, [ebx-51E38766h]
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_20]
                xor     ecx, [esp+50h+var_44]
                xor     ecx, [esp+50h+var_40]
                mov     [esi+4], edx
                mov     edx, [esp+50h+var_1C]
                movzx   eax, cl
                xor     eax, 0AAh
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_18]
                mov     [edi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_14]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Dh
                mov     [eax+edi], edx
                mov     edx, [esp+50h+var_10]
                mov     [eax+edi+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 91h
                shr     ecx, 18h
                xor     ecx, 53h
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_8]
                mov     [edi+eax*8+4], edx
                mov     edx, edi
                mov     eax, [esp+50h+var_28]
                mov     [edx+ecx*8+4], eax
                mov     eax, [esp+50h+var_44]
                mov     [edx+ecx*8], esi
                movzx   ecx, al
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_34]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_4]
                xor     ecx, 0E4h
                and     dword ptr [edx+ecx*8+4], 0
                mov     [edx+ecx*8], eax
                mov     edx, [esp+50h+var_30]
                xor     edx, 6860D901h
                mov     edi, [esp+50h+var_2C]
                xor     eax, eax
                xor     edi, 1554688Bh
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___173      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___160      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     ebx, ecx
                shr     ebx, 4
                add     ebx, eax
                shl     ecx, 4
                mov     eax, esi
                mov     [esp+58h+var_40], edi
                shr     eax, 4
                add     eax, ecx
                mov     [esp+58h+var_2C], ebx
                mov     [esp+58h+var_4C], eax
                xor     eax, ebx
                mov     [esp+58h+var_48], eax
                movzx   eax, bl
                xor     eax, 0Ah
                push    offset dword_40BF30
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_28], edx
                mov     ecx, [eax+edi-96h]
                mov     eax, [eax+edi-92h]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 6Bh
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 23h
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     edi, [esp+5Ch+var_48]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, bl
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_40]
                mov     eax, [edx+eax*2+0F0h]
                mov     edx, edi
                xor     edx, 7819A944h
                mov     [esp+5Ch+var_20], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, esi
                mov     ecx, [esp+58h+var_4C]
                sub     eax, edx
                xor     eax, ebx
                xor     ecx, edi
                xor     ecx, ebx
                xor     eax, ebx
                xor     eax, 260F7F7Fh
                mov     [esp+58h+var_4C], ecx
                xor     edx, esi
                mov     [esp+58h+var_1C], eax
                xor     edx, [esp+58h+var_4C]
                mov     ecx, ebx
                xor     ecx, eax
                xor     edx, eax
                xor     ecx, edi
                mov     [esp+58h+var_44], edx
                mov     eax, ecx
                mov     [esp+58h+var_8], ecx
                xor     eax, [esp+58h+var_4C]
                xor     eax, ebx
                xor     eax, 0BF9018ACh
                mov     [esp+58h+var_3C], eax
                mov     eax, edx
                xor     eax, ecx
                mov     cl, byte ptr [esp+58h+var_44]
                xor     eax, ebx
                xor     cl, 3Fh
                xor     eax, ebx
                mov     [esp+58h+var_38], eax
                mov     eax, edx
                shr     eax, 8
                sub     al, 77h ; 'w'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_38]
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_40]
                adc     edx, dword ptr [esp+58h+var_34+4]
                add     eax, 0BF221598h
                xor     ecx, ecx
                xor     esi, 58ACA482h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_2C]
                movzx   eax, cl
                mov     [ebx+4], esi
                mov     [esp+58h+var_2C], ecx
                mov     esi, [esp+58h+var_2C]
                mov     [edi+eax*8-4F4h], edx
                mov     [edi+eax*8-4F8h], ebx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2Fh
                mov     [eax+edi], edx
                mov     edx, [esp+58h+var_24]
                mov     [eax+edi+4], edx
                mov     eax, ecx
                mov     ecx, [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                and     dword ptr [edi+eax*8-614h], 0
                mov     [edi+eax*8-618h], ecx
                mov     eax, [esp+58h+var_1C]
                movzx   edx, al
                xor     eax, eax
                lea     ecx, [edx+6]
                add     ecx, dword ptr [esp+58h+var_18]
                adc     eax, dword ptr [esp+58h+var_18+4]
                shr     esi, 18h
                xor     esi, 1Dh
                mov     [edi+esi*8+4], eax
                mov     eax, [esp+58h+var_48]
                mov     [edi+esi*8], ecx
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 0BDh
                xor     ecx, edx
                mov     edx, [esp+58h+var_4C]
                add     edx, 0F4E90D6Fh
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                add     ecx, 0E31EF9E7h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___160      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___93       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                sub     eax, edx
                and     [esp+4Ch+var_4], 0
                mov     [esp+4Ch+var_48], eax
                push    ebx
                push    esi
                mov     esi, ecx
                lea     ecx, [edx-5F560037h]
                movzx   eax, cl
                xor     eax, 0E7h
                mov     [esp+54h+var_3C], ecx
                push    edi
                mov     [esp+58h+var_44], esi
                push    offset dword_40BA08
                mov     edi, [esi+eax*8]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     ebx, [esi+eax*8+110h]
                mov     eax, [esi+eax*8+114h]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_20], ebx
                mov     ebx, [esi+eax*8-5C8h]
                mov     eax, [esi+eax*8-5C4h]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     [esp+5Ch+var_2C], ebx
                mov     ebx, [esp+5Ch+var_48]
                mov     ecx, [eax+esi-2Fh]
                mov     eax, [eax+esi-2Bh]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, [eax+esi+44h]
                mov     eax, [eax+esi+48h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, bl
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                mov     esi, [eax+esi+60h]
                mov     eax, edx
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     ebx, eax
                mov     [esp+5Ch+var_40], eax
                lea     eax, [edx-5F560037h]
                xor     ebx, eax
                mov     [esp+5Ch+var_24], ebx
                lea     edx, [ebx+3B697646h]
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_40]
                mov     eax, [esp+58h+var_48]
                xor     edx, eax
                mov     ecx, [ebp+arg_0]
                xor     edx, [esp+58h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 24h
                mov     [esp+58h+var_40], edx
                add     eax, esi
                mov     esi, [ebp+arg_4]
                shr     esi, 4
                mov     eax, [edi+eax*4]
                lea     edi, [ecx-1B87CCF1h]
                add     edi, [ebp+arg_4]
                mov     [esp+58h+var_10], eax
                xor     edi, ebx
                xor     edi, [esp+58h+var_48]
                mov     eax, ecx
                shl     eax, 4
                mov     [esp+58h+var_C], edi
                add     esi, eax
                xor     esi, edx
                xor     esi, ebx
                mov     ebx, [ebp+arg_4]
                xor     ebx, ecx
                mov     [esp+58h+var_8], esi
                mov     ecx, [esp+58h+var_3C]
                xor     ebx, edi
                xor     ebx, edx
                mov     eax, esi
                xor     eax, edi
                mov     [esp+58h+var_38], ebx
                xor     eax, ecx
                xor     ebx, esi
                xor     ebx, [esp+58h+var_48]
                xor     eax, 79A26B1Ch
                xor     ebx, ecx
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0Eh
                xor     eax, 6C79h
                xor     esi, esi
                movzx   eax, ax
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_38]
                adc     esi, dword ptr [esp+58h+var_34+4]
                xor     eax, 0E997B4A8h
                xor     ecx, ecx
                shr     ebx, 18h
                or      ecx, eax
                add     edx, 48087769h
                mov     eax, [esp+58h+var_2C]
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_44]
                mov     [edi+4], edx
                mov     [ebx+ecx-40h], eax
                mov     eax, [esp+58h+var_28]
                mov     [ebx+ecx-3Ch], eax
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_48]
                movzx   eax, bl
                mov     [ecx+eax*8-5D8h], edi
                mov     edi, ecx
                mov     ecx, ebx
                mov     [edi+eax*8-5D4h], esi
                mov     eax, [esp+58h+var_40]
                xor     al, 8Ch
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                adc     edx, dword ptr [esp+58h+var_20+4]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [edi+ecx*8-160h], eax
                mov     eax, ebx
                mov     [edi+ecx*8-15Ch], edx
                mov     ecx, [esp+58h+var_18]
                mov     edx, [esp+58h+var_C]
                shr     eax, 10h
                add     edx, 0EB633526h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 0F3h
                mov     [edi+eax*8-618h], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [edi+eax*8-614h], ecx
                mov     eax, [esp+58h+var_10]
                mov     ecx, [esp+58h+var_8]
                and     dword ptr [edi+ebx*8+4], 0
                add     ecx, 598B7CB7h
                mov     [edi+ebx*8], eax
                xor     eax, eax
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___93       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___57       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var38 = DWord Ptr -38H
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, edx
                push    edi
                mov     edi, [ebp+arg_0]
                sub     eax, edi
                mov     [esp+58h+var_40], eax
                mov     eax, edi
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+58h+var_3C], esi
                lea     ebx, [edi+330760F4h]
                add     ebx, edx
                xor     ecx, ebx
                movzx   eax, bl
                xor     eax, 6Ah
                mov     [esp+58h+var_48], ecx
                push    offset dword_40BA10
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0BAh
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 67h
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0BBh
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edi
                sub     eax, edx
                mov     [esp+5Ch+var_20], ecx
                mov     edx, eax
                mov     [esp+5Ch+var_4C], eax
                mov     eax, [esp+5Ch+var_40]
                xor     edx, eax
                xor     edx, ebx
                movzx   eax, al
                mov     ecx, edx
                xor     edx, 0A7F8B4h
                xor     ecx, 858B7E55h
                mov     [esp+5Ch+var_44], ecx
                mov     ecx, [esp+5Ch+var_3C]
                mov     esi, [esi+eax*8-0D0h]
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_48]
                mov     eax, ecx
                mov     edx, [esp+58h+var_40]
                xor     eax, 84F97715h
                shl     edi, 4
                mov     eax, [eax+esi]
                mov     esi, [ebp+arg_4]
                mov     [esp+58h+var_24], eax
                mov     eax, [esp+58h+var_4C]
                xor     eax, ecx
                shr     esi, 4
                xor     eax, edx
                add     esi, edi
                xor     esi, [esp+58h+var_44]
                xor     eax, 77D99CBAh
                mov     [esp+58h+var_4C], eax
                xor     esi, ecx
                mov     [esp+58h+var_40], esi
                mov     esi, edx
                xor     esi, eax
                mov     ecx, [esp+58h+var_40]
                xor     ecx, eax
                xor     esi, [esp+58h+var_44]
                xor     ecx, ebx
                mov     [esp+58h+var_8], esi
                xor     ecx, 4E0C91Ch
                mov     eax, esi
                xor     eax, [esp+58h+var_40]
                xor     eax, edx
                mov     [esp+58h+var_28], ecx
                xor     eax, ebx
                Mov [Esp + 58H + var38], Eax
                mov     eax, ecx
                xor     eax, esi
                xor     eax, [esp+58h+var_48]
                xor     eax, edx
                mov     [esp+58h+var_34], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 77h
                xor     al, 0BEh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_34]
                sub     ebx, esi
                Mov Esi, [Esp + 58H + var38]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_30]
                adc     edx, dword ptr [esp+58h+var_30+4]
                add     eax, 7492808Eh
                xor     ecx, ecx
                xor     esi, 0D37C92A3h
                or      ecx, eax
                mov     [ebx], ecx
                Mov Ecx, [Esp + 58H + var38]
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_3C]
                movzx   eax, cl
                mov     [esi+eax*8-544h], edx
                mov     edx, [esp+58h+var_24]
                mov     [esi+eax*8-548h], ebx
                mov     eax, ecx
                shr     eax, 8
                mov     ebx, [esp+58h+var_4C]
                movzx   eax, al
                and     dword ptr [esi+eax*8-4A4h], 0
                mov     [esi+eax*8-4A8h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 39h
                mov     [eax+esi], edx
                mov     edx, [esp+58h+var_1C]
                mov     [eax+esi+4], edx
                mov     eax, ebx
                xor     eax, 14C5h
                movzx   eax, ax
                cdq
                add     eax, dword ptr [esp+58h+var_18]
                adc     edx, dword ptr [esp+58h+var_18+4]
                shr     ecx, 18h
                xor     ecx, 0A5h
                mov     [esi+ecx*8], eax
                mov     eax, [esp+58h+var_44]
                mov     [esi+ecx*8+4], edx
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                Mov Eax, [Esp + 58H + var38]
                mov     edx, [esp+58h+var_40]
                movzx   eax, al
                add     edx, 47F515C0h
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                pop     edi
                mov     [esi+ecx*8-30h], eax
                mov     eax, [esp+54h+var_C]
                mov     [esi+ecx*8-2Ch], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                xor     ecx, 91AF7852h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___57       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000241d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, esi
                push    edi
                mov     edi, edx
                mov     [ebp+var_4], ecx
                sub     ebx, edx
                shr     edi, 4
                mov     eax, esi
                xor     ebx, 4E572EDAh
                shl     eax, 4
                xor     ecx, ecx
                add     edi, eax
                add     esi, 0C19B981h
                lea     eax, [edx-4BF849Ah]
                add     edx, esi
                mov     esi, [ebp+var_4]
                xor     eax, ebx
                mov     [ebp+var_8], eax
                xor     edx, edi
                add     eax, 0ED1B146Ch
                xor     edx, ebx
                or      ecx, eax
                xor     edx, 8608C47Ch
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-6B8h], 0
                jnz     short loc_4804D0
                movzx   eax, bl
                cmp     byte ptr [esi+eax*8+8], 0
                jnz     short loc_4804D0
                mov     eax, [ebp+var_8]
                lea     edx, [edi-1BB69512h]
                xor     ecx, ecx
                add     eax, 24814966h
                or      ecx, eax

loc_4804D0:                             ; CODE XREF: VBNCB_unnamed_8000241d+62¡üj
                                        ; VBNCB_unnamed_8000241d+6C¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000241d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___143      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     [esp+44h+var_40], ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ecx, esi
                shr     ecx, 4
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                add     eax, ecx
                and     [esp+50h+var_4], 0
                mov     ecx, [esp+50h+var_40]
                mov     [esp+50h+var_3C], eax
                lea     ebx, [esi+edi]
                lea     edx, [ebx+79E8182Eh]
                mov     esi, [esp+50h+var_40]
                mov     eax, edx
                mov     [esp+50h+var_38], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Ch
                push    offset dword_40AD20
                mov     ecx, [ecx+eax*8]
                mov     [esp+54h+var_30], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+54h+var_24], eax
                mov     eax, edx
                mov     edx, [esp+54h+var_40]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0D5h
                mov     ecx, [eax+ecx]
                mov     eax, [eax+edx+4]
                lea     edx, [ebx+79E8182Eh]
                mov     [esp+54h+var_14], eax
                mov     eax, [esp+54h+var_3C]
                movzx   eax, al
                xor     eax, 5
                mov     [esp+54h+var_18], ecx
                mov     eax, [ecx+eax*2]
                mov     [esp+54h+var_8], eax
                mov     eax, [esp+54h+var_3C]
                shr     eax, 8
                movzx   ecx, dl
                movzx   edx, al
                xor     eax, eax
                sub     edx, 0A2h
                add     edx, [esi+ecx*8-328h]
                mov     [esp+54h+var_20], edx
                mov     edx, esi
                adc     eax, [edx+ecx*8-324h]
                lea     edx, [ebx+79E8182Eh]
                mov     [esp+54h+var_1C], eax
                mov     ecx, esi
                mov     eax, edx
                shr     eax, 18h
                mov     ecx, [eax+ecx-87h]
                mov     [esp+54h+var_10], ecx
                mov     ecx, esi
                mov     esi, [ebp+arg_4]
                mov     eax, [eax+ecx-83h]
                mov     [esp+54h+var_C], eax
                mov     eax, edi
                xor     eax, esi
                xor     eax, edx
                mov     [esp+54h+var_34], eax
                lea     edx, [eax-3EB47B80h]
                call    VBN_TransformContext
                add     esi, esi
                shr     edi, 4
                lea     ecx, [ebx+79E8182Eh]
                lea     edx, [edi+esi*8]
                mov     eax, edx
                xor     edx, [esp+50h+var_34]
                xor     eax, [esp+50h+var_3C]
                xor     eax, ecx
                xor     edx, [esp+50h+var_3C]
                mov     [esp+50h+var_2C], eax
                mov     [esp+50h+var_28], edx
                add     ebx, 966C7FBCh
                mov     ecx, [esp+50h+var_3C]
                xor     ebx, eax
                xor     esi, esi
                xor     ebx, [esp+50h+var_34]
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 71h ; 'q'
                add     al, 34h ; '4'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, ebx
                sbb     esi, edx
                add     edi, [esp+50h+var_30]
                adc     esi, [esp+50h+var_24]
                xor     eax, [esp+50h+var_28]
                xor     eax, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_28]
                xor     eax, 7E37C7Dh
                xor     ecx, [esp+50h+var_2C]
                mov     [esp+50h+var_24], eax
                add     eax, 8E323DBFh
                mov     [esp+50h+var_30], ecx
                lea     edx, [ecx+9391412h]
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_30]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                mov     edx, [esp+50h+var_40]
                mov     ebx, [esp+50h+var_20]
                movzx   eax, cl
                xor     eax, 0D6h
                mov     [edx+eax*8], ebx
                mov     ebx, [esp+50h+var_1C]
                mov     [edx+eax*8+4], ebx
                mov     eax, ecx
                mov     ebx, [esp+50h+var_18]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EDh
                mov     [eax+edx], ebx
                mov     ebx, [esp+50h+var_14]
                mov     [eax+edx+4], ebx
                mov     eax, ecx
                mov     ebx, [esp+50h+var_10]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 9Eh
                mov     [edx+eax*8+0B8h], ebx
                mov     ebx, [esp+50h+var_C]
                mov     [edx+eax*8+0BCh], ebx
                mov     ebx, edx
                mov     eax, [esp+50h+var_8]
                mov     edx, [esp+50h+var_30]
                and     dword ptr [ebx+ecx*8+4], 0
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+50h+var_3C]
                movzx   ecx, al
                mov     eax, [esp+50h+var_34]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+50h+var_2C]
                xor     ecx, eax
                mov     eax, [esp+50h+var_24]
                add     edx, 482E049Ch
                movzx   eax, al
                xor     ecx, eax
                xor     eax, eax
                xor     ecx, 0E3h
                mov     [ebx+ecx*8], edi
                mov     [ebx+ecx*8+4], esi
                mov     ecx, [esp+50h+var_28]
                add     ecx, 40E3DD43h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___143      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000236f proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                and     [esp+20h+var_4], 0
                add     ebx, 0A1975CCEh
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                add     ebx, edi
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, ax
                mov     [esp+28h+var_C], esi
                mov     eax, [edx+esi-88h]
                mov     esi, [eax+ecx-4B3Eh]
                mov     eax, esi
                mov     ecx, [ebp+arg_0]
                add     ecx, 0B8601498h
                add     ecx, edi
                lea     edx, [ecx+73836577h]
                cmp     edx, esi
                setnbe  [esp+28h+var_19]
                sub     eax, edx
                mov     [esp+28h+var_10], eax
                lea     eax, [edi-3AA1D427h]
                xor     eax, ebx
                mov     [esp+28h+var_14], eax
                mov     eax, edi
                shl     eax, 4
                mov     [esp+28h+var_18], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     [esp+28h+var_18], eax
                mov     eax, [esp+28h+var_18]
                xor     eax, ecx
                xor     eax, ebx
                lea     ebx, [edi+5AE5AAFDh]
                mov     [esp+28h+var_18], eax
                mov     eax, [esp+28h+var_14]
                xor     ebx, eax
                xor     ebx, ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 3BA5EE52h
                add     ecx, edi
                xor     ecx, ebx
                xor     ecx, [esp+28h+var_18]
                mov     [esp+28h+var_8], ecx
                cmp     edx, esi
                jbe     short loc_480809
                mov     edx, eax
                xor     edi, edi
                mov     eax, [esp+28h+var_18]
                xor     edx, 6BAEC5C4h
                add     eax, 0ACEB279h
                or      edi, eax
                jmp     short loc_480822
; ---------------------------------------------------------------------------

loc_480809:                             ; CODE XREF: VBNCB_unnamed_8000236f+B0¡üj
                xor     edi, [ebp+arg_0]
                xor     edx, edx
                xor     edi, [esp+28h+var_18]
                xor     ebx, 64DA59Ah
                xor     edi, eax
                xor     edi, 36F360D2h
                or      edx, ebx

loc_480822:                             ; CODE XREF: VBNCB_unnamed_8000236f+C7¡üj
                mov     esi, [esp+28h+var_C]
                cmp     [esp+28h+var_10], 0
                mov     eax, [esp+28h+var_8]
                movzx   ecx, cl
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-0E0h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                xor     ecx, 0DBh
                mov     [esi+ecx*8], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000236f endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___69_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    esi
                push    edi
                mov     [ebp+var_4], ecx
                mov     edi, ebx
                mov     ecx, [ebp+arg_0]
                mov     esi, ecx
                shl     edi, 4
                xor     esi, ebx
                mov     eax, ecx
                shr     ebx, 4
                shr     eax, 4
                add     edi, eax
                mov     [ebp+var_C], esi
                mov     eax, ecx
                lea     edx, [ecx+6B6B4FCEh]
                shl     eax, 4
                xor     edi, edx
                add     ebx, eax
                movzx   ecx, dl
                xor     ebx, esi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                xor     ebx, edx
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0F9h
                mov     esi, [edi+ecx*8-270h]
                mov     edi, [edi+ecx*8-26Ch]
                mov     ecx, [ebp+var_4]
                movzx   eax, al
                cdq
                sub     esi, eax
                push    offset dword_40BC50
                sbb     edi, edx
                xor     bl, 67h
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+arg_0]
                add     edx, 22272889h
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                xor     edx, 5F01E270h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     edx, [ebx+6D92B185h]
                mov     ecx, [ebp+var_8]
                add     ecx, 0BF7D2E48h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___69_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___167      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shl     ebx, 4
                mov     edx, esi
                add     ebx, eax
                sub     edx, [ebp+arg_0]
                mov     [esp+54h+var_4C], ecx
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                push    edi
                mov     edi, [esp+58h+var_4C]
                mov     [esp+58h+var_44], edx
                mov     ecx, [eax+ecx+4Ch]
                mov     [esp+58h+var_40], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     [esp+58h+var_48], ebx
                push    offset dword_40C7B0
                mov     eax, [eax+ecx+50h]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+ecx+21h]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+25h]
                mov     ecx, [esp+5Ch+var_40]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_C], eax
                mov     eax, [ecx+eax*4-2B0h]
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                shr     eax, 8
                xor     al, 9Fh
                movzx   ecx, bl
                movzx   eax, al
                xor     ecx, 8Fh
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8+4]
                mov     ecx, ebx
                shr     ecx, 18h
                mov     ebx, esi
                xor     ecx, 96h
                shr     ebx, 4
                mov     [esp+5Ch+var_18], edx
                mov     eax, [ecx+eax]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edi
                mov     edi, [ebp+arg_0]
                mov     eax, [ecx+eax+4]
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edi
                shl     eax, 4
                add     ebx, eax
                xor     ebx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_10], ebx
                lea     edx, [ebx+43D5C370h]
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_48]
                lea     edx, [esi-2C434D64h]
                xor     eax, [esp+58h+var_44]
                add     edx, edi
                xor     eax, [esp+58h+var_48]
                xor     edx, ebx
                mov     ecx, [esp+58h+var_48]
                xor     edx, [esp+58h+var_44]
                xor     ecx, eax
                xor     ecx, ebx
                mov     [esp+58h+var_34], eax
                mov     [esp+58h+var_4], edx
                mov     [esp+58h+var_28], ecx
                lea     eax, [edi-0CE95C2Ah]
                xor     eax, edx
                xor     eax, [esp+58h+var_34]
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_48]
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0DEh
                add     al, 7Ch ; '|'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_38]
                adc     edx, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                xor     eax, 0A6A53C30h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi+66422AD9h]
                mov     [ebx+4], esi
                mov     ecx, edi
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                mov     esi, [esp+58h+var_4C]
                movzx   eax, cl
                mov     [esi+eax*8+54h], edx
                mov     [esi+eax*8+50h], ebx
                mov     eax, ecx
                mov     edx, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-450h], edx
                mov     edx, [esp+58h+var_20]
                mov     [esi+eax*8-44Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0BCh
                shr     ecx, 18h
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_18]
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+58h+var_40]
                mov     [ecx+esi-86h], eax
                mov     eax, [esp+58h+var_14]
                mov     [ecx+esi-82h], eax
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_34]
                movzx   ecx, al
                xor     edx, 0F16CDA80h
                mov     eax, [esp+58h+var_10]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, edi
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_8]
                xor     ecx, 39h
                xor     ecx, [esp+58h+var_C]
                pop     edi
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_4]
                add     ecx, 0BCD90B65h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___167      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___97       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                xor     eax, esi
                shr     ebx, 4
                mov     [esp+54h+var_48], eax
                mov     eax, esi
                shl     eax, 4
                add     ebx, eax
                and     [esp+54h+var_4], 0
                movzx   eax, bl
                mov     [esp+54h+var_C], eax
                xor     eax, 41h
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_44], ebx
                mov     [esp+58h+var_4C], edi
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+20h], eax
                mov     eax, [esp+58h+var_48]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 75h
                mov     dword ptr [esp+58h+var_40+4], ecx
                mov     ecx, edi
                mov     ecx, [ecx+eax*8]
                mov     [esp+58h+var_1C], ecx
                mov     ecx, edi
                mov     eax, [ecx+eax*8+4]
                mov     [esp+58h+var_18], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 18h
                sub     ebx, 9Ch
                mov     ecx, [ecx+eax*8-3F0h]
                mov     [esp+58h+var_24], ecx
                mov     ecx, edi
                mov     eax, [ecx+eax*8-3ECh]
                xor     ecx, ecx
                mov     [esp+58h+var_20], eax
                mov     eax, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 19h
                add     ebx, [eax+edi]
                mov     [esp+58h+var_30], ebx
                adc     ecx, [eax+edi+4]
                mov     ebx, [esp+58h+var_48]
                mov     eax, [esp+58h+var_44]
                mov     [esp+58h+var_2C], ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 20h
                movzx   ecx, bl
                xor     ecx, 50h
                mov     ecx, [ecx+edi]
                add     ecx, eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 78h
                mov     eax, [eax+edi]
                mov     edi, edx
                shl     edi, 4
                mov     eax, [eax+ecx*4]
                mov     ecx, esi
                mov     [esp+58h+var_28], eax
                sub     ecx, edx
                mov     eax, esi
                xor     ecx, ebx
                shr     eax, 4
                xor     ecx, 0AD8254C7h
                add     edi, eax
                mov     [esp+58h+var_14], ecx
                xor     edi, [esp+58h+var_44]
                xor     edi, ebx
                mov     [esp+58h+var_8], edi
                lea     eax, [edx-77407D72h]
                xor     eax, edi
                lea     ebx, [esi+2B75531Eh]
                xor     eax, ecx
                add     ebx, edx
                xor     ebx, ecx
                mov     [esp+58h+var_34], eax
                xor     ebx, [esp+58h+var_44]
                lea     ecx, [esi+284A4630h]
                add     ecx, edx
                xor     eax, ebx
                xor     eax, [esp+58h+var_48]
                xor     ecx, ebx
                xor     eax, 0A9F78497h
                xor     ecx, edi
                mov     dword ptr [esp+58h+var_40], ecx
                mov     ecx, [esp+58h+var_4C]
                push    offset dword_40A86C
                lea     edx, [eax+1B247035h]
                mov     [esp+5Ch+var_10], eax
                call    VBN_TransformContext
                mov     ecx, dword ptr [esp+58h+var_40]
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 32h
                add     al, 13h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     edx, [esp+58h+var_34]
                lea     esi, [ebx+3FB6535Bh]
                mov     ebx, dword ptr [esp+58h+var_40]
                sbb     ecx, edi
                add     dword ptr [esp+58h+var_40+4], eax
                mov     edi, dword ptr [esp+58h+var_40+4]
                adc     ecx, [esp+20h]
                lea     eax, [edx+5654608Bh]
                mov     [esp+20h], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, ebx
                xor     ecx, edx
                mov     [edi+4], esi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                mov     esi, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_30]
                movzx   eax, cl
                xor     eax, 73h
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_2C]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [esi+eax*8-3B4h], 0
                mov     [esi+eax*8-3B8h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [eax+esi-86h], edx
                mov     edx, [esp+58h+var_20]
                mov     [eax+esi-82h], edx
                mov     eax, [esp+58h+var_1C]
                mov     edx, [esp+58h+var_14]
                mov     [esi+ecx*8+30h], eax
                mov     eax, [esp+58h+var_18]
                mov     [esi+ecx*8+34h], eax
                mov     eax, [esp+58h+var_10]
                movzx   ecx, dl
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     edx, 46D4D958h
                xor     ecx, eax
                mov     eax, [esp+20h]
                xor     ecx, [esp+58h+var_C]
                mov     [esi+ecx*8-3DCh], eax
                xor     eax, eax
                mov     [esi+ecx*8-3E0h], edi
                mov     ecx, [esp+58h+var_8]
                pop     edi
                xor     ecx, 8F8FA776h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___97       endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002319 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shl     ebx, 4
                mov     [esp+2Ch+var_14], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                add     ebx, eax
                mov     [esp+2Ch+var_1C], ecx
                mov     [esp+2Ch+var_10], ebx
                lea     eax, [esi+ecx]
                lea     edx, [eax+61F0F6Fh]
                mov     [esp+2Ch+var_C], eax
                xor     edx, ebx
                push    edi
                lea     edi, [eax-5929A76Eh]
                movzx   ecx, dl
                movzx   eax, bl
                mov     ebx, [esp+30h+var_14]
                xor     eax, 67h
                mov     eax, [eax+ebx]
                mov     ecx, [eax+ecx+0Eh]
                mov     eax, edi
                xor     eax, 4CC50848h
                mov     ebx, ecx
                cmp     eax, ecx
                setnbe  [esp+30h+var_1D]
                sub     [esp+30h+var_1C], esi
                sub     ebx, eax
                mov     [esp+30h+var_8], ebx
                lea     ebx, [esi-3704077Ch]
                mov     esi, [esp+30h+var_1C]
                xor     ebx, edx
                xor     esi, edi
                xor     ebx, edi
                xor     esi, edx
                xor     esi, 36F3ED14h
                mov     edx, esi
                xor     edx, ebx
                xor     edx, [esp+30h+var_10]
                xor     edx, 0BEE2755Bh
                mov     [esp+30h+var_10], edx
                cmp     eax, ecx
                jbe     short loc_480E80
                mov     eax, ebx
                xor     edx, edx
                add     eax, 3DD2B574h
                xor     edi, 34162AEAh
                or      edx, eax
                jmp     short loc_480E9E
; ---------------------------------------------------------------------------

loc_480E80:                             ; CODE XREF: VBNCB_unnamed_80002319+9B¡üj
                mov     edx, [esp+30h+var_C]
                lea     eax, [esi+6CCE643h]
                add     edx, 39F3C1EBh
                xor     edx, ebx
                xor     edx, edi
                xor     edi, edi
                xor     edx, 0BA3F4641h
                or      edi, eax

loc_480E9E:                             ; CODE XREF: VBNCB_unnamed_80002319+AE¡üj
                mov     eax, [esp+30h+var_10]
                mov     esi, [esp+30h+var_14]
                mov     bl, [esp+30h+var_1D]
                movzx   ecx, al
                xor     ecx, 22h
                cmp     [esp+30h+var_8], 0
                mov     [esi+ecx*8], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                xor     ecx, 0C0h
                mov     edx, edi
                pop     edi
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002319 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___201_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                sub     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     [ebp+var_4], eax
                movzx   eax, al
                lea     edx, [edx-7D0245Fh]
                push    edi
                push    offset dword_40BAA0
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi-13h]
                mov     ebx, [eax+esi-0Fh]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 33h
                shr     ecx, 10h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     ebx, [ebp+var_4]
                mov     edx, ebx
                mov     [eax+1BCh], edi
                mov     ecx, ebx
                mov     edi, [ebp+arg_4]
                xor     eax, eax
                xor     edx, edi
                xor     edx, [ebp+arg_0]
                xor     edx, 0F45B2777h
                lea     esi, [edi+40460138h]
                xor     ecx, esi
                xor     ecx, ebx
                pop     edi
                xor     ecx, 0A0405233h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___201_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f46 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, eax
                mov     [ebp+var_4], ecx
                sub     esi, edx
                mov     ebx, eax
                xor     ebx, edx
                shr     eax, 4
                shl     edx, 4
                xor     ecx, ecx
                add     edx, eax
                mov     eax, ebx
                push    edi
                mov     edi, esi
                xor     esi, ebx
                xor     esi, 8BDEF1Ch
                xor     edi, 47EF7CF8h
                xor     eax, esi
                mov     [ebp+var_8], esi
                mov     esi, [ebp+var_4]
                xor     eax, edi
                add     eax, 70E80930h
                xor     edx, edi
                or      ecx, eax
                xor     edx, ebx
                movzx   eax, bl
                xor     edx, 0B8665B83h
                cmp     byte ptr [esi+eax*8-658h], 0
                mov     esi, [ebp+var_8]
                jnz     short loc_48100B
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 0B8h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_48100B
                xor     ecx, ecx
                lea     eax, [esi-6A906FE0h]
                lea     edx, [edi-1AA6AD17h]
                or      ecx, eax

loc_48100B:                             ; CODE XREF: VBNCB_unnamed_80001f46+65¡üj
                                        ; VBNCB_unnamed_80001f46+79¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f46 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000235d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_11          = byte ptr -11h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                push    esi
                mov     esi, [ebp+arg_4]
                sub     edx, esi
                xor     edx, 220CCDA3h
                mov     [esp+1Ch+var_C], ecx
                movzx   eax, dl
                xor     eax, 0E9h
                push    edi
                mov     eax, [eax+ecx]
                mov     edi, [eax]
                lea     eax, [ebx+5A3A8FDAh]
                lea     ecx, [eax-43EAB3B4h]
                mov     ebx, edi
                cmp     ecx, edi
                setnbe  [esp+20h+var_11]
                sub     ebx, ecx
                mov     [esp+20h+var_8], ebx
                lea     ebx, [esi-1186246Ah]
                xor     ebx, edx
                mov     [esp+20h+var_10], ebx
                mov     ebx, esi
                sub     ebx, [ebp+arg_0]
                xor     ebx, eax
                xor     ebx, edx
                mov     edx, [ebp+arg_0]
                add     edx, 1DC56CA8h
                add     esi, edx
                mov     edx, [esp+20h+var_10]
                xor     esi, edx
                xor     esi, eax
                mov     eax, [ebp+arg_0]
                add     eax, 0DCCD105Dh
                xor     eax, esi
                xor     eax, ebx
                mov     [esp+20h+var_10], eax
                cmp     ecx, edi
                jbe     short loc_4810B8
                xor     eax, eax
                xor     ebx, 7D9BA534h
                add     edx, 0A90E0865h
                or      eax, ebx
                jmp     short loc_4810D3
; ---------------------------------------------------------------------------

loc_4810B8:                             ; CODE XREF: VBNCB_unnamed_8000235d+84¡üj
                mov     eax, [ebp+arg_0]
                xor     esi, 55DCAA5Dh
                add     eax, 90810D57h
                xor     eax, ebx
                xor     eax, edx
                xor     edx, edx
                xor     eax, 50B902EEh
                or      edx, esi

loc_4810D3:                             ; CODE XREF: VBNCB_unnamed_8000235d+96¡üj
                mov     ecx, [esp+20h+var_10]
                mov     esi, [esp+20h+var_C]
                mov     bl, [esp+20h+var_11]
                movzx   ecx, cl
                xor     ecx, 84h
                cmp     [esp+20h+var_8], 0
                pop     edi
                mov     [esi+ecx*8], bl
                setz    bl
                mov     ecx, [esp+1Ch+var_10]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 37h
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000235d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__30      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, edi
                sub     esi, [ebp+arg_4]
                xor     esi, 9D5C2AD2h
                mov     [esp+20h+var_10], esi
                add     esi, 0D1119A0Dh
                lea     edx, [edi+390F4A65h]
                movzx   eax, dl
                xor     eax, 79h
                push    offset dword_40A5C0
                mov     ebx, [ecx+eax*8]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 4Bh
                xor     esi, [eax+ebx]
                mov     eax, [ebp+arg_4]
                add     eax, 330622A3h
                add     edi, eax
                xor     edi, edx
                mov     edx, edi
                xor     edx, 14CCFC2Eh
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                add     ecx, 6333C981h
                add     ecx, edx
                xor     ecx, [esp+20h+var_10]
                lea     eax, [edx+390F4A65h]
                xor     ecx, eax
                movzx   eax, cl
                xor     eax, 0E3h
                mov     [eax+ebx], esi
                mov     eax, edx
                mov     ebx, [ebp+arg_4]
                xor     edx, edx
                shr     eax, 4
                shl     ebx, 4
                add     eax, ebx
                xor     eax, ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 0E38D6F1Dh
                xor     eax, edi
                xor     ecx, edi
                xor     eax, 1265FA05h
                xor     ecx, [esp+20h+var_10]
                pop     edi
                sub     ecx, 2EC73A96h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__30      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___142      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shl     edx, 4
                add     edx, eax
                mov     [esp+50h+var_3C], esi
                movzx   eax, dl
                mov     [esp+50h+var_44], edx
                push    offset dword_40C730
                mov     ecx, [esi+eax*8+0E0h]
                mov     eax, [esi+eax*8+0E4h]
                mov     [esp+54h+var_14], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 67h
                mov     [esp+54h+var_18], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+54h+var_28+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     edx, edi
                sub     edx, ebx
                mov     dword ptr [esp+54h+var_28], ecx
                mov     [esp+54h+var_34], edx
                mov     ecx, [eax+esi+69h]
                mov     eax, [eax+esi+6Dh]
                mov     [esp+54h+var_1C], eax
                movzx   eax, dl
                xor     eax, 9Bh
                mov     [esp+54h+var_20], ecx
                mov     eax, [ecx+eax*8]
                mov     [esp+54h+var_10], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 0C1h
                xor     al, 0E2h
                movzx   eax, al
                cdq
                add     eax, [esi+ecx*8]
                mov     [esp+54h+var_C], eax
                mov     eax, ebx
                adc     edx, [esi+ecx*8+4]
                sub     eax, edi
                mov     ecx, [esp+54h+var_3C]
                mov     esi, eax
                xor     esi, [esp+54h+var_44]
                mov     [esp+54h+var_8], edx
                xor     esi, 5A8346BDh
                mov     edx, esi
                mov     [esp+54h+var_40], eax
                xor     edx, 0AD8F7EF1h
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_40]
                lea     eax, [ebx+77992C3Eh]
                add     eax, edi
                lea     edx, [ebx+67BD4558h]
                xor     eax, [esp+50h+var_34]
                xor     edx, esi
                xor     eax, [esp+50h+var_44]
                xor     edx, [esp+50h+var_34]
                xor     ecx, eax
                mov     [esp+50h+var_30], eax
                xor     ecx, esi
                lea     eax, [ebx-654C483h]
                mov     [esp+50h+var_4], edx
                add     eax, edi
                xor     ecx, 4AEFFFCFh
                xor     eax, edx
                mov     [esp+50h+var_40], ecx
                xor     eax, [esp+50h+var_30]
                mov     [esp+50h+var_38], eax
                mov     ebx, ecx
                xor     ebx, edx
                xor     ebx, [esp+50h+var_44]
                xor     ebx, 0E726F2E2h
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 95h
                xor     al, 90h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+50h+var_2C], eax
                mov     eax, edx
                mov     edx, [esp+50h+var_2C]
                sub     edx, esi
                mov     esi, [esp+50h+var_40]
                sbb     eax, edi
                add     edx, dword ptr [esp+50h+var_28]
                pop     edi
                adc     eax, dword ptr [esp+4Ch+var_28+4]
                xor     ecx, ecx
                mov     dword ptr [esp+4Ch+var_28+4], eax
                xor     esi, 96C5E62Ch
                mov     eax, [esp+4Ch+var_38]
                add     eax, 20A37592h
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+4Ch+var_20]
                mov     [edx+4], esi
                mov     esi, [esp+4Ch+var_3C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0BEh
                shr     ebx, 18h
                xor     ebx, 0BAh
                mov     [eax+esi], ecx
                mov     ecx, [esp+4Ch+var_1C]
                mov     [eax+esi+4], ecx
                mov     ecx, [esp+4Ch+var_38]
                xor     ecx, [esp+4Ch+var_40]
                xor     ecx, [esp+4Ch+var_34]
                xor     ecx, [esp+4Ch+var_44]
                mov     eax, [esp+4Ch+var_18]
                mov     [esi+ebx*8], eax
                mov     eax, [esp+4Ch+var_14]
                mov     [esi+ebx*8+4], eax
                mov     ebx, [esp+4Ch+var_3C]
                mov     esi, [esp+4Ch+var_10]
                movzx   eax, cl
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], esi
                mov     eax, ecx
                mov     esi, [esp+4Ch+var_C]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [ebx+eax*8-488h], esi
                mov     esi, [esp+4Ch+var_8]
                mov     [ebx+eax*8-484h], esi
                movzx   eax, cl
                mov     ecx, dword ptr [esp+4Ch+var_28+4]
                xor     eax, 6Eh
                pop     esi
                mov     [ebx+eax*8+4], ecx
                mov     ecx, [esp+48h+var_4]
                mov     [ebx+eax*8], edx
                xor     ecx, 0FFC9CEACh
                mov     edx, [esp+48h+var_30]
                xor     eax, eax
                xor     edx, 5D823AC0h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___142      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002296 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                and     [esp+28h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+30h+var_14], ecx
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+30h+var_14]
                xor     ecx, 2Eh
                mov     [esp+30h+var_1C], esi
                mov     eax, [edx+eax-7Dh]
                mov     ecx, [eax+ecx]
                lea     eax, [ebx-4148DFE8h]
                mov     edx, ecx
                sub     edx, eax
                cmp     eax, ecx
                mov     [esp+30h+var_C], edx
                lea     edx, [edi+esi]
                setnbe  [esp+30h+var_1D]
                mov     [esp+30h+var_18], edx
                xor     [esp+30h+var_1C], edi
                add     edx, 0D3D4D043h
                xor     edx, ebx
                shl     edi, 4
                shr     esi, 4
                add     edi, esi
                mov     [esp+30h+var_10], edx
                mov     esi, [esp+30h+var_1C]
                xor     edi, edx
                xor     edi, ebx
                mov     ebx, [esp+30h+var_18]
                add     ebx, 0E4793B73h
                xor     ebx, edi
                xor     ebx, esi
                mov     [esp+30h+var_8], ebx
                cmp     eax, ecx
                jbe     short loc_4814AD
                mov     eax, [esp+30h+var_1C]
                lea     esi, [edx-38A8D96Dh]
                xor     edx, edx
                add     eax, 0CB0AC1A2h
                or      edx, eax
                jmp     short loc_4814CD
; ---------------------------------------------------------------------------

loc_4814AD:                             ; CODE XREF: VBNCB_unnamed_80002296+96¡üj
                mov     edx, [esp+30h+var_18]
                xor     edi, 4401747Ah
                add     edx, 6926B987h
                xor     edx, esi
                xor     esi, esi
                xor     edx, [esp+30h+var_10]
                add     edx, 534F57C6h
                or      esi, edi

loc_4814CD:                             ; CODE XREF: VBNCB_unnamed_80002296+AB¡üj
                mov     edi, [esp+30h+var_14]
                mov     al, [esp+30h+var_1D]
                movzx   ecx, bl
                xor     ecx, 75h
                cmp     [esp+30h+var_C], 0
                setz    bl
                mov     [edi+ecx*8], al
                mov     eax, [esp+30h+var_8]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                xor     ecx, 7Ah
                mov     edx, esi
                mov     [edi+ecx*8], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002296 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___108_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_4]
                add     eax, 74C88F46h
                push    ebx
                mov     [ebp+var_4], eax
                mov     ebx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                movzx   eax, al
                add     esi, 0F6952297h
                xor     eax, 0D0h
                mov     [ebp+var_C], ebx
                push    edi
                mov     edx, esi
                mov     [ebp+var_10], esi
                push    offset dword_40C700
                mov     ecx, [eax+ebx]
                xor     edx, 26BCB8EBh
                mov     edi, [eax+ebx+4]
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_0]
                lea     eax, [ebx-0EBA6FC2h]
                add     ebx, 0C3CA920Fh
                xor     eax, [ebp+var_4]
                xor     ebx, eax
                mov     [ebp+var_14], eax
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 66h
                shr     eax, 8
                sub     al, 5Ch ; '\'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                mov     ebx, [ebp+arg_4]
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_C]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ebx, 4
                add     eax, ebx
                mov     [ecx+1BCh], edx
                xor     eax, [ebp+var_10]
                xor     edx, edx
                xor     eax, [ebp+var_4]
                mov     ecx, [ebp+var_14]
                add     eax, 59B6F0E7h
                pop     edi
                xor     ecx, 0B18105F7h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___108_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__21      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     edx, ecx
                and     [esp+14h+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                xor     ebx, [ebp+arg_0]
                movzx   eax, bl
                push    esi
                push    edi
                mov     [esp+20h+var_C], edx
                mov     ecx, [edx+eax*8-348h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40C3AC
                mov     edi, [edx+eax*8-4E8h]
                mov     eax, ebx
                mov     edx, [ebp+arg_4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 2Fh
                mov     esi, [eax+ecx]
                mov     ecx, edx
                mov     eax, [ebp+arg_0]
                shr     ecx, 4
                shl     eax, 4
                add     eax, ecx
                mov     ecx, [ebp+arg_0]
                mov     [esp+24h+var_10], eax
                add     ecx, 8219A68h
                add     ecx, edx
                xor     eax, ebx
                xor     ecx, [esp+24h+var_10]
                mov     [esp+24h+var_14], eax
                xor     ecx, ebx
                mov     eax, [ebp+arg_0]
                add     eax, 79D45A41h
                mov     [esp+24h+var_8], ecx
                add     edx, eax
                xor     edx, ecx
                mov     ecx, [esp+24h+var_C]
                xor     edx, [esp+24h+var_14]
                sub     edx, 11CDC25Ch
                call    VBN_TransformContext
                shr     ebx, 18h
                sub     edi, esi
                xor     ebx, 0EBh
                cmp     edi, ebx
                jz      short loc_4816A2
                mov     ecx, [esp+20h+var_14]
                xor     eax, eax
                mov     edx, [esp+20h+var_10]
                xor     ecx, 41E9AB4Ah
                add     edx, 5F86F676h
                or      eax, ecx
                jmp     short loc_4816CB
; ---------------------------------------------------------------------------

loc_4816A2:                             ; CODE XREF: vBng_h__21+A6¡üj
                mov     eax, [ebp+arg_4]
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     eax, ecx
                mov     ecx, [esp+20h+var_8]
                xor     eax, [esp+20h+var_14]
                xor     ecx, 74C788FEh
                xor     eax, [esp+20h+var_10]
                sub     eax, 3D057E3Bh
                or      edx, ecx

loc_4816CB:                             ; CODE XREF: vBng_h__21+C0¡üj
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__21      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___182      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, ecx
                and     [esp+50h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ecx, esi
                sub     ecx, eax
                mov     [esp+54h+var_44], ebx
                add     eax, 93FD0BB9h
                mov     [esp+54h+var_48], ecx
                add     eax, esi
                mov     edx, ecx
                mov     [esp+54h+var_40], eax
                xor     edx, 0E41A18FFh
                movzx   eax, dl
                push    edi
                mov     [esp+58h+var_38], edx
                push    offset dword_40BEC0
                mov     edi, [ebx+eax*8-290h]
                mov     eax, [ebx+eax*8-28Ch]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 64h
                mov     [esp+5Ch+var_10], edi
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 25h
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [eax+ebx]
                mov     ebx, [eax+ebx+4]
                mov     eax, edx
                mov     edx, [ebp+arg_4]
                mov     [esp+5Ch+var_28], ecx
                add     edx, 0F9212A46h
                mov     ecx, [esp+5Ch+var_44]
                add     edx, esi
                shr     eax, 18h
                mov     ecx, [ecx+eax*8+170h]
                mov     dword ptr [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     eax, [ecx+eax*8+174h]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_38]
                mov     edx, [esp+58h+var_48]
                xor     ecx, 0CE7A900Fh
                movzx   eax, cl
                xor     edx, ecx
                xor     edx, [esp+58h+var_40]
                xor     eax, 0D1h
                xor     edx, 48E5A0A9h
                mov     [esp+58h+var_2C], ecx
                mov     [esp+58h+var_48], edx
                mov     eax, [edi+eax*8]
                lea     edi, [esi-2870CA27h]
                mov     [esp+58h+var_14], eax
                mov     eax, [ebp+arg_4]
                add     edi, eax
                xor     edi, [esp+58h+var_40]
                xor     eax, esi
                xor     edi, [esp+58h+var_38]
                xor     eax, edi
                mov     [esp+58h+var_8], edi
                xor     eax, ecx
                lea     ecx, [esi-50DB3438h]
                mov     [esp+58h+var_3C], eax
                xor     ecx, edx
                xor     eax, edx
                xor     ecx, edi
                xor     eax, [esp+58h+var_38]
                xor     eax, 65BDE08Bh
                mov     [esp+58h+var_34], ecx
                mov     [esp+58h+var_30], eax
                mov     eax, [esp+58h+var_3C]
                xor     esi, esi
                mov     ecx, [esp+58h+var_3C]
                shr     eax, 8
                xor     eax, 0E00Bh
                movzx   edi, cl
                movzx   eax, ax
                sub     edi, 21h ; '!'
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_30]
                sbb     esi, edx
                add     edi, [esp+58h+var_28]
                mov     edx, [esp+58h+var_34]
                adc     esi, ebx
                mov     ebx, [esp+58h+var_34]
                xor     ebx, [esp+58h+var_3C]
                add     eax, 84B06059h
                xor     ebx, [esp+58h+var_40]
                xor     ecx, ecx
                xor     ebx, [esp+58h+var_38]
                or      ecx, eax
                mov     [edi], ecx
                xor     edx, 2D1ECF95h
                mov     ecx, [esp+58h+var_44]
                mov     [edi+4], edx
                movzx   eax, bl
                mov     [ecx+eax*8+0F8h], edi
                mov     edi, ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edi+eax*8+0FCh], esi
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [edi+eax*8+4], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_2C]
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 40h ; '@'
                add     edx, dword ptr [esp+58h+var_1C]
                adc     ecx, dword ptr [esp+58h+var_1C+4]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 73h
                mov     [edi+eax*8-54h], ecx
                mov     [edi+eax*8-58h], edx
                mov     eax, [esp+58h+var_14]
                and     dword ptr [edi+ebx*8+4], 0
                mov     [edi+ebx*8], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_34]
                mov     edx, [esp+58h+var_8]
                movzx   eax, al
                xor     edx, 0AAC67B07h
                xor     ecx, eax
                mov     eax, [esp+58h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                mov     [ecx+edi-0Eh], eax
                mov     eax, [esp+58h+var_C]
                mov     [ecx+edi-0Ah], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_48]
                pop     edi
                add     ecx, 8086B4AEh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___182      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__35      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+18h+var_4], 0
                mov     ecx, [ebp+arg_4]
                add     ecx, 584421DDh
                movzx   eax, cl
                xor     eax, 63h
                push    offset dword_40AC50
                mov     ebx, [edi+eax*8]
                mov     eax, ecx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [edi+edx*8-0C8h]
                mov     esi, [eax+ecx-93h]
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                mov     edx, ecx
                mov     [esp+1Ch+var_C], ecx
                xor     edx, 0D64AFD1h
                mov     ecx, edi
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                lea     edi, [ecx-3F22618Bh]
                add     edi, edx
                lea     eax, [edx+584421DDh]
                mov     edx, ecx
                xor     edi, eax
                xor     edx, [ebp+arg_4]
                xor     edx, [esp+18h+var_C]
                xor     edx, eax
                shr     eax, 18h
                xor     eax, 0FEh
                mov     [esp+18h+var_8], edx
                sub     ebx, eax
                sub     ebx, esi
                jz      short loc_4819D3
                mov     eax, [esp+18h+var_8]
                lea     edx, [edi+35CAD800h]
                xor     esi, esi
                add     eax, 0BEB14E8Eh
                or      esi, eax
                jmp     short loc_4819FB
; ---------------------------------------------------------------------------

loc_4819D3:                             ; CODE XREF: vBng_h__35+9C¡üj
                lea     edx, [ecx+6CD0F90h]
                xor     esi, esi
                sub     ecx, [ebp+arg_4]
                add     edx, [ebp+arg_4]
                xor     ecx, [esp+18h+var_8]
                xor     edx, edi
                xor     edx, [esp+18h+var_C]
                xor     ecx, edi
                xor     ecx, 1C228C08h
                sub     edx, 6F39DD06h
                or      esi, ecx

loc_4819FB:                             ; CODE XREF: vBng_h__35+B1¡üj
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__35      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__37      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                and     [esp+1Ch+var_C], 0
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, edi
                sub     eax, [ebp+arg_0]
                movzx   edx, al
                mov     [esp+20h+var_14], eax
                xor     edx, 0A6h
                shr     eax, 8
                movzx   ecx, ax
                xor     ecx, 979Eh
                mov     [esp+20h+var_4], ebx
                mov     eax, [edx+ebx]
                push    offset dword_40C400
                mov     esi, [eax+ecx]
                mov     ecx, ebx
                mov     eax, [ebp+arg_0]
                xor     eax, edi
                mov     [esp+24h+var_10], eax
                lea     edx, [eax+0F0DB26Ah]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     ebx, edi
                mov     edx, [esp+20h+var_10]
                mov     eax, ecx
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                lea     eax, [ecx+8]
                xor     ebx, [esp+20h+var_14]
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+20h+var_4]
                xor     ecx, 0C9h
                and     dword ptr [ecx+eax+4], 0
                mov     [ecx+eax], esi
                mov     esi, edi
                mov     eax, [ebp+arg_0]
                lea     ecx, [ebx-65C5B9B8h]
                shr     eax, 4
                shl     esi, 4
                add     eax, esi
                xor     eax, edx
                xor     edx, edx
                xor     eax, [esp+20h+var_14]
                pop     edi
                pop     esi
                xor     eax, 8CADB8EDh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__37      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___73_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shr     edx, 4
                add     edx, eax
                mov     [ebp+var_8], ecx
                mov     eax, edx
                mov     [ebp+var_4], edx
                mov     ecx, [ebp+var_4]
                shr     eax, 8
                xor     al, 0BDh
                shr     ecx, 10h
                movzx   eax, al
                xor     cl, 6Eh
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_8]
                push    edi
                mov     edi, edx
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                movzx   eax, al
                sbb     edi, edx
                lea     edx, [ebx+57937668h]
                push    offset dword_40AA40
                add     esi, [eax+ecx+4Fh]
                adc     edi, [eax+ecx+53h]
                mov     eax, [ebp+arg_0]
                add     eax, 43AEBF64h
                xor     edx, eax
                xor     edx, [ebp+var_4]
                add     edx, 3A652E16h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_8]
                xor     edx, edx
                xor     [ebp+var_4], ebx
                mov     ebx, [ebp+var_4]
                mov     [ecx+1B8h], esi
                mov     [ecx+1BCh], edi
                mov     ecx, [ebp+arg_0]
                xor     ebx, ecx
                xor     ebx, 4B376CDh
                pop     edi
                pop     esi
                lea     eax, [ecx+43AEBF64h]
                xor     eax, 188B4C94h
                or      edx, eax
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___73_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___133      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                sub     eax, [ebp+arg_4]
                mov     ebx, eax
                mov     [esp+54h+var_4C], eax
                xor     ebx, 757A6220h
                movzx   edx, bl
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_14], edx
                lea     ecx, [esi+7BD931E8h]
                mov     [esp+58h+var_48], edi
                add     ecx, [ebp+arg_4]
                mov     [esp+58h+var_40], ecx
                mov     eax, [edi+edx*8-250h]
                mov     dword ptr [esp+58h+var_34], eax
                mov     eax, [edi+edx*8-24Ch]
                mov     dword ptr [esp+58h+var_34+4], eax
                movzx   eax, cl
                xor     eax, 0A4h
                mov     [esp+58h+var_44], ebx
                push    offset dword_40A6E0
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     [esp+5Ch+var_10], edx
                mov     ecx, [eax+edi-0B6h]
                mov     eax, [eax+edi-0B2h]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                shr     eax, 8
                mov     [esp+5Ch+var_2C], ecx
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 18h
                xor     ecx, 0C9h
                xor     al, 0AEh
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                adc     edx, [edi+ecx*8+4]
                mov     edi, [esp+5Ch+var_40]
                mov     ecx, edi
                shr     ecx, 10h
                mov     ebx, [ebp+arg_4]
                movzx   ecx, cl
                shr     eax, 10h
                xor     ecx, 71h
                mov     [esp+5Ch+var_20], edx
                mov     edx, [esp+5Ch+var_48]
                movzx   eax, al
                shl     ebx, 4
                mov     ecx, [ecx+edx]
                add     ecx, eax
                mov     eax, edi
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+edx+34h]
                mov     eax, [eax+ecx*4+0BCh]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, esi
                shr     eax, 4
                add     ebx, eax
                xor     ebx, edi
                mov     edx, ebx
                mov     [esp+5Ch+var_18], ebx
                xor     edx, 0FC8A718Ch
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     ecx, [esp+58h+var_4C]
                sub     eax, esi
                xor     eax, [esp+58h+var_44]
                xor     eax, edi
                mov     [esp+58h+var_8], eax
                mov     edx, [esp+58h+var_4C]
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_44]
                xor     edx, eax
                xor     edx, ebx
                shl     esi, 4
                mov     ebx, [ebp+arg_4]
                xor     ecx, 0F2184554h
                xor     edx, 9E3C4B65h
                shr     ebx, 4
                add     ebx, esi
                mov     [esp+58h+var_4], ecx
                xor     ebx, ecx
                mov     [esp+58h+var_4C], edx
                xor     ebx, eax
                mov     eax, edx
                xor     eax, ecx
                mov     [esp+58h+var_3C], ebx
                xor     eax, edi
                mov     cl, byte ptr [esp+58h+var_4C]
                xor     eax, 3240B552h
                xor     cl, 76h
                mov     [esp+58h+var_38], eax
                mov     eax, edx
                shr     eax, 8
                sub     al, 5Ah ; 'Z'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_38]
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_34+4]
                add     eax, 6923180h
                xor     ecx, ecx
                xor     esi, 0AC4FC9D7h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                movzx   eax, cl
                xor     eax, 0C3h
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_2C]
                mov     [eax+edi], esi
                mov     esi, [esp+58h+var_28]
                mov     [eax+edi+4], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-1B4h], edx
                mov     edx, [esp+58h+var_24]
                mov     [edi+eax*8-1B8h], ebx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 2Fh
                mov     [edi+eax*8-198h], edx
                mov     edx, [esp+58h+var_20]
                mov     [edi+eax*8-194h], edx
                mov     eax, [esp+58h+var_1C]
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 0F4h
                xor     ecx, [esp+58h+var_14]
                mov     edx, [esp+58h+var_8]
                xor     edx, 0A07504A3h
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_4]
                pop     edi
                xor     ecx, 0F6C9B7FDh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___133      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___6_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                push    offset dword_40C570
                mov     [ebp+var_4], ecx
                lea     eax, [esi-41F5D8C3h]
                movzx   eax, al
                mov     ebx, [eax+ecx-3Eh]
                mov     edi, [eax+ecx-3Ah]
                lea     eax, [esi-2BF97801h]
                mov     edx, eax
                mov     [ebp+var_8], eax
                xor     edx, 0E43446ACh
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     eax, [esi-41F5D8C3h]
                xor     ecx, eax
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                sub     esi, 3Eh ; '>'
                xor     al, 26h
                mov     [ebp+var_C], ecx
                movzx   eax, al
                xor     ecx, ecx
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                mov     edx, [ebp+arg_4]
                add     esi, ebx
                mov     ebx, [ebp+arg_0]
                mov     [eax+1B8h], esi
                adc     ecx, edi
                shl     edx, 4
                mov     [eax+1BCh], ecx
                mov     eax, ebx
                shr     eax, 4
                add     edx, eax
                lea     eax, [ebx-41F5D8C3h]
                xor     ebx, [ebp+arg_4]
                xor     ebx, [ebp+var_C]
                xor     edx, [ebp+var_8]
                xor     ebx, [ebp+var_8]
                xor     edx, eax
                pop     edi
                xor     ebx, 5B38A23Dh
                xor     eax, eax
                xor     edx, 227A229Dh
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___6_stk    endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___56       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     edx, edi
                mov     [esp+58h+var_44], esi
                shr     edx, 4
                lea     ecx, [ebx+5FDAC0D5h]
                add     edx, eax
                mov     [esp+58h+var_48], edi
                add     ecx, edi
                mov     [esp+58h+var_40], edx
                mov     edx, ebx
                mov     [esp+58h+var_34], ecx
                sub     edx, edi
                and     [esp+58h+var_4], 0
                xor     edx, ecx
                mov     edi, [esp+58h+var_34]
                mov     eax, edx
                xor     edx, 6C899976h
                xor     eax, 0D9E1FB98h
                mov     [esp+58h+var_3C], eax
                movzx   eax, cl
                push    offset dword_40A2E0
                mov     esi, [eax+esi+72h]
                mov     dword ptr [esp+5Ch+var_18], esi
                mov     esi, [esp+5Ch+var_44]
                mov     eax, [eax+esi+76h]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Fh
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edi
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F7h
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edi
                shr     eax, 18h
                xor     eax, 43h
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_40]
                movzx   esi, al
                shr     eax, 8
                mov     [esp+5Ch+var_24], ecx
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_44]
                mov     eax, [eax+esi*8-5E8h]
                mov     eax, [eax+ecx+52h]
                mov     ecx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_28], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_48]
                mov     edx, ecx
                mov     esi, [esp+58h+var_40]
                sub     edx, ebx
                mov     eax, edx
                xor     ecx, ebx
                xor     eax, esi
                mov     [esp+58h+var_48], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     eax, edi
                xor     [esp+58h+var_48], ecx
                xor     edx, eax
                xor     [esp+58h+var_48], esi
                xor     edx, ecx
                mov     [esp+58h+var_1C], eax
                add     ebx, 642C404Bh
                mov     [esp+58h+var_8], edx
                xor     ebx, [esp+58h+var_48]
                mov     ecx, edx
                xor     ebx, eax
                xor     ecx, [esp+58h+var_48]
                xor     ecx, edi
                mov     eax, ebx
                xor     eax, edx
                xor     ecx, 8E93A797h
                xor     eax, esi
                mov     [esp+58h+var_38], ecx
                xor     eax, edi
                xor     esi, esi
                mov     [esp+58h+var_34], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0D8h
                movzx   edi, bl
                movzx   eax, al
                sub     edi, 66h ; 'f'
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 0DD83B844h
                xor     ecx, ecx
                xor     edx, 26D34B63h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_40]
                mov     edx, [esp+58h+var_44]
                movzx   eax, cl
                xor     eax, 7Ah
                mov     ebx, [esp+58h+var_1C]
                mov     [edx+eax*8], edi
                mov     edi, edx
                mov     edx, [esp+58h+var_28]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [edi+eax*8-3DCh], 0
                mov     [edi+eax*8-3E0h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_24]
                shr     eax, 10h
                movzx   eax, al
                mov     [edi+eax*8-270h], edx
                mov     edx, [esp+58h+var_20]
                mov     [edi+eax*8-26Ch], edx
                mov     al, bl
                xor     al, 2Ch
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_18]
                adc     edx, dword ptr [esp+58h+var_18+4]
                shr     ecx, 18h
                xor     ecx, 1Dh
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_3C]
                mov     [edi+ecx*8+4], edx
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                mov     [ecx+edi-10h], eax
                mov     eax, [esp+58h+var_C]
                mov     edx, [esp+58h+var_48]
                mov     [ecx+edi-0Ch], eax
                xor     edx, 0B354DFC8h
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                add     ecx, 42936DDAh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___56       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___68_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                shl     ebx, 4
                add     ebx, eax
                push    edi
                mov     edi, ecx
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 20h
                movzx   ecx, bl
                movzx   eax, al
                cdq
                push    offset dword_40BAD8
                mov     esi, [edi+ecx*8+10h]
                mov     ecx, [edi+ecx*8+14h]
                sub     esi, eax
                mov     eax, ebx
                sbb     ecx, edx
                shr     eax, 8
                xor     al, 0FBh
                movzx   eax, al
                cdq
                add     esi, eax
                mov     [edi+1B8h], esi
                adc     ecx, edx
                mov     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                mov     [edi+1BCh], ecx
                xor     edx, 9DC78710h
                mov     ecx, edi
                call    VBN_TransformContext
                mov     eax, ebx
                lea     ecx, [ebx-30AC0B2Eh]
                xor     eax, [ebp+arg_4]
                xor     edx, edx
                xor     eax, [ebp+arg_0]
                pop     edi
                pop     esi
                sub     eax, 450EE39Fh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___68_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___198      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                lea     eax, [ebx-3007F45Dh]
                mov     [esp+58h+var_48], eax
                mov     edx, edi
                xor     edx, ebx
                mov     [esp+58h+var_40], esi
                movzx   eax, dl
                mov     [esp+58h+var_44], edx
                push    offset dword_40C980
                mov     ecx, [esi+eax*8-368h]
                mov     eax, [esi+eax*8-364h]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 34h
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                lea     eax, [ebx-3007F45Dh]
                movzx   eax, al
                xor     eax, 1
                mov     [esp+5Ch+var_10], ecx
                mov     eax, [ecx+eax*8]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   ecx, al
                lea     eax, [ebx-3007F45Dh]
                shr     eax, 8
                xor     eax, 0E1CFh
                movzx   eax, ax
                cdq
                add     eax, [ecx+esi+0C3h]
                mov     [esp+5Ch+var_28], eax
                adc     edx, [ecx+esi+0C7h]
                mov     [esp+5Ch+var_24], edx
                mov     edx, [esp+5Ch+var_44]
                mov     ecx, edx
                shr     ecx, 18h
                xor     ecx, 0CEh
                mov     eax, [ecx+esi]
                mov     [esp+5Ch+var_30], eax
                mov     eax, [ecx+esi+4]
                mov     ecx, edi
                mov     [esp+5Ch+var_2C], eax
                lea     esi, [ebx-3007F45Dh]
                mov     eax, ebx
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                lea     eax, [ebx+43F50CB4h]
                xor     eax, esi
                xor     ecx, edx
                mov     esi, edi
                mov     [esp+5Ch+var_1C], ecx
                sub     esi, ebx
                xor     eax, edx
                add     edi, 0EC3BB31Ah
                mov     [esp+5Ch+var_8], eax
                add     edi, ebx
                xor     esi, ecx
                xor     esi, [esp+5Ch+var_48]
                xor     edi, eax
                add     ebx, 222CBA8Fh
                xor     edi, ecx
                xor     ebx, esi
                xor     ebx, eax
                mov     eax, edi
                xor     eax, esi
                mov     [esp+5Ch+var_34], ebx
                xor     eax, edx
                xor     eax, 681F39B1h
                mov     [esp+5Ch+var_18], eax
                mov     ecx, [esp+5Ch+var_40]
                lea     edx, [eax-6BC20A97h]
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                xor     al, 4Dh
                mov     [esp+58h+var_14], ecx
                movzx   eax, al
                cdq
                lea     ebx, [ecx-0B7h]
                xor     ecx, ecx
                sub     ebx, eax
                lea     eax, [edi-1BDF7CC4h]
                sbb     ecx, edx
                add     ebx, dword ptr [esp+58h+var_3C]
                lea     edx, [esi-59C23872h]
                mov     esi, [esp+58h+var_40]
                adc     ecx, dword ptr [esp+58h+var_3C+4]
                mov     dword ptr [esp+58h+var_3C+4], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_30]
                mov     [ebx+4], edx
                mov     edx, [esp+58h+var_34]
                xor     edx, edi
                xor     edx, [esp+58h+var_48]
                xor     edx, [esp+58h+var_44]
                movzx   eax, dl
                pop     edi
                mov     [esi+eax*8-2C8h], ecx
                mov     ecx, [esp+54h+var_2C]
                mov     [esi+eax*8-2C4h], ecx
                mov     eax, edx
                mov     ecx, [esp+54h+var_28]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-398h], ecx
                mov     ecx, [esp+54h+var_24]
                mov     [esi+eax*8-394h], ecx
                mov     eax, edx
                mov     ecx, [esp+54h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                and     dword ptr [esi+eax*8+84h], 0
                mov     [esi+eax*8+80h], ecx
                mov     eax, dword ptr [esp+54h+var_3C+4]
                mov     [esi+edx*8-0DCh], eax
                mov     eax, [esp+54h+var_48]
                movzx   ecx, al
                mov     [esi+edx*8-0E0h], ebx
                mov     edx, [esp+54h+var_1C]
                movzx   eax, dl
                xor     edx, 34C2F61Dh
                xor     ecx, eax
                mov     eax, [esp+54h+var_18]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_10]
                xor     ecx, [esp+54h+var_14]
                mov     [ecx+esi-5Dh], eax
                mov     eax, [esp+54h+var_C]
                mov     [ecx+esi-59h], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                xor     ecx, 1854218Bh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___198      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002269 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                and     [esp+1Ch+var_4], 0
                push    ebx
                mov     [esp+20h+var_14], ecx
                mov     ecx, [ebp+arg_4]
                push    esi
                push    edi
                mov     esi, ecx
                lea     edi, [ecx+eax]
                shl     esi, 4
                shr     eax, 4
                lea     ebx, [edi-478A1EA1h]
                add     esi, eax
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+28h+var_14]
                mov     eax, [edx+eax-7Dh]
                mov     ecx, [eax+ecx+63h]
                lea     eax, [esi+71F196AEh]
                cmp     eax, ecx
                mov     edx, ecx
                setnbe  [esp+28h+var_19]
                sub     edx, eax
                mov     [esp+28h+var_8], edx
                add     edi, 0DE246F94h
                mov     edx, [ebp+arg_4]
                mov     [esp+28h+var_18], edx
                mov     edx, [ebp+arg_0]
                xor     [esp+28h+var_18], edx
                sub     edx, [ebp+arg_4]
                xor     [esp+28h+var_18], ebx
                mov     [esp+28h+var_10], edx
                xor     edx, esi
                xor     edx, ebx
                mov     ebx, [esp+28h+var_10]
                xor     ebx, [esp+28h+var_18]
                xor     edx, 0B63977FFh
                xor     ebx, esi
                mov     [esp+28h+var_C], edx
                xor     ebx, 0EB8223C8h
                xor     edi, ebx
                xor     edi, edx
                mov     [esp+28h+var_10], edi
                cmp     eax, ecx
                jbe     short loc_48248F
                mov     ecx, [esp+28h+var_C]
                xor     eax, eax
                mov     edx, [esp+28h+var_18]
                xor     ecx, 288ECDC7h
                add     edx, 55681ABFh
                or      eax, ecx
                jmp     short loc_4824AC
; ---------------------------------------------------------------------------

loc_48248F:                             ; CODE XREF: VBNCB_unnamed_80002269+A3¡üj
                mov     eax, [ebp+arg_4]
                xor     ebx, 3A0B74ECh
                add     eax, 0A5198D62h
                xor     eax, edx
                xor     edx, edx
                xor     eax, [esp+28h+var_18]
                xor     eax, 0B2AB8478h
                or      edx, ebx

loc_4824AC:                             ; CODE XREF: VBNCB_unnamed_80002269+BD¡üj
                cmp     [esp+28h+var_8], 0
                mov     ecx, [esp+28h+var_10]
                mov     esi, [esp+28h+var_14]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 7Dh
                pop     edi
                mov     [esi+ecx*8], bl
                mov     ecx, [esp+24h+var_10]
                mov     bl, [esp+24h+var_19]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0EFh
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002269 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___52_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                mov     [ebp+var_4], ecx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ecx, esi
                shl     ecx, 4
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                lea     ebx, [esi+3A014FFFh]
                add     ecx, eax
                add     ebx, edi
                xor     ebx, ecx
                mov     [ebp+var_C], ecx
                lea     edx, [edi+50159DB4h]
                add     edx, esi
                lea     eax, [edi-3DF44D0Eh]
                add     eax, esi
                movzx   ecx, dl
                mov     esi, [ebp+var_4]
                xor     eax, edx
                xor     ebx, edx
                mov     [ebp+var_8], eax
                xor     ecx, 1Ah
                mov     eax, ebx
                shr     eax, 8
                sub     al, 49h ; 'I'
                movzx   eax, al
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40BB20
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 34h
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+arg_4]
                mov     esi, [ebp+var_8]
                shr     edx, 4
                shl     edi, 4
                add     edx, edi
                mov     [ebx+1BCh], ecx
                mov     edi, [ebp+var_C]
                xor     edx, esi
                xor     edx, edi
                mov     ecx, ebx
                sub     edx, 26BAB989h
                call    VBN_TransformContext
                xor     edi, 86583290h
                lea     ecx, [esi-5122889h]
                mov     edx, edi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___52_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___77_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, ecx
                shl     ebx, 4
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                sub     ecx, [ebp+arg_4]
                shr     eax, 4
                xor     ecx, 65E99323h
                add     ebx, eax
                mov     [ebp+var_4], ecx
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 10h
                xor     ecx, 0BEh
                xor     al, 84h
                movzx   eax, al
                cdq
                mov     esi, [ecx+edi]
                mov     ecx, [ecx+edi+4]
                sub     esi, eax
                mov     eax, ebx
                sbb     ecx, edx
                shr     eax, 8
                xor     al, 35h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     [edi+1B8h], esi
                mov     esi, [ebp+var_4]
                adc     ecx, edx
                mov     [edi+1BCh], ecx
                mov     ecx, edi
                push    offset sub_40A4F0
                lea     edx, [esi+0DE6A0FEh]
                call    VBN_TransformContext
                xor     ebx, ebx
                lea     ecx, [esi-0E220CE8h]
                xor     ebx, 2BF03C2Ah
                xor     edx, edx
                pop     edi
                pop     esi
                mov     eax, ebx
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___77_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000240a proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+28h+var_4], 0
                mov     ecx, [ebp+arg_4]
                sub     eax, ecx
                mov     [esp+28h+var_14], eax
                mov     esi, eax
                xor     esi, 1CE3B70Eh
                mov     [esp+28h+var_C], edi
                lea     ebx, [ecx+17CD60B6h]
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 44h
                movzx   ecx, al
                mov     eax, [edx+edi]
                mov     edi, [ebp+arg_4]
                mov     edx, [eax+ecx+3Bh]
                mov     eax, ebx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edx
                xor     ecx, 50h
                sub     ecx, esi
                sub     ecx, 5B36DE8Bh
                cmp     ecx, edx
                setnbe  [esp+28h+var_15]
                sub     eax, ecx
                mov     [esp+28h+var_8], eax
                mov     eax, [ebp+arg_0]
                shl     edi, 4
                shr     eax, 4
                add     edi, eax
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                xor     edi, ebx
                mov     [esp+28h+var_10], edi
                mov     edi, eax
                xor     edi, esi
                xor     edi, ebx
                mov     ebx, [esp+28h+var_10]
                xor     [esp+28h+var_14], ebx
                xor     [esp+28h+var_14], esi
                mov     esi, [esp+28h+var_14]
                xor     esi, 0C51ECBBFh
                xor     eax, esi
                mov     [esp+28h+var_14], esi
                xor     eax, edi
                mov     [esp+28h+var_10], eax
                cmp     ecx, edx
                jbe     short loc_482722
                xor     edx, edx
                lea     esi, [ebx+69FC710Fh]
                xor     edi, 0F60E7BDBh
                or      edx, edi
                jmp     short loc_48274A
; ---------------------------------------------------------------------------

loc_482722:                             ; CODE XREF: VBNCB_unnamed_8000240a+AE¡üj
                mov     eax, [ebp+arg_4]
                xor     esi, esi
                mov     edx, [ebp+arg_0]
                add     eax, 0ED39079Eh
                add     edx, eax
                mov     eax, [esp+28h+var_14]
                xor     edx, edi
                add     eax, 0A0568A5Bh
                xor     edx, ebx
                sub     edx, 197CE68Eh
                or      esi, eax
                mov     eax, [esp+28h+var_10]

loc_48274A:                             ; CODE XREF: VBNCB_unnamed_8000240a+C0¡üj
                mov     edi, [esp+28h+var_C]
                mov     bl, [esp+28h+var_15]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, al
                mov     [edi+ecx*8-1E0h], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, esi
                mov     [edi+ecx*8-5B8h], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000240a endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___169_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                sub     edx, [ebp+arg_4]
                xor     edx, 0BD8EA95Bh
                mov     [ebp+var_4], ecx
                push    esi
                lea     eax, [ebx+375D8AB4h]
                movzx   ecx, dl
                mov     [ebp+var_C], eax
                xor     ecx, 6Ch
                mov     eax, edx
                mov     [ebp+var_8], edx
                shr     eax, 8
                xor     esi, esi
                push    edi
                movzx   edi, al
                mov     eax, [ebp+var_4]
                sub     edi, 81h
                push    offset dword_40BEB0
                add     edi, [ecx+eax]
                adc     esi, [ecx+eax+4]
                mov     eax, edx
                mov     ecx, [ebp+var_4]
                shr     eax, 10h
                xor     al, 53h
                movzx   eax, al
                cdq
                sub     edi, eax
                lea     eax, [ebx+375D8AB4h]
                sbb     esi, edx
                mov     edx, [ebp+arg_4]
                xor     edx, ebx
                xor     edx, eax
                xor     edx, [ebp+var_8]
                add     edx, 7D616F32h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     ecx, [ebp+var_C]
                add     ecx, 435EB487h
                mov     [eax+1B8h], edi
                mov     [eax+1BCh], esi
                mov     eax, [ebp+arg_4]
                add     eax, 31DA3A55h
                xor     eax, [ebp+var_8]
                pop     edi
                pop     esi
                xor     eax, 0DA49164Bh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___169_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___29       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shl     edx, 4
                add     edx, eax
                movzx   eax, dl
                xor     eax, 7
                mov     [esp+48h+var_44], edx
                push    esi
                mov     esi, ecx
                mov     [esp+4Ch+var_3C], esi
                push    edi
                mov     edi, [esp+50h+var_3C]
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+50h+var_1C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+50h+var_20], ecx
                push    offset dword_40A7C0
                mov     ecx, [esi+eax*8-0F0h]
                mov     eax, [esi+eax*8-0ECh]
                mov     [esp+54h+var_8], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+54h+var_C], ecx
                mov     ecx, [esi+eax*8-548h]
                mov     eax, [esi+eax*8-544h]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                mov     dword ptr [esp+54h+var_30], ecx
                mov     ecx, ebx
                shr     ecx, 4
                add     eax, ecx
                mov     [esp+54h+var_40], eax
                movzx   edx, al
                shr     eax, 8
                movzx   ecx, al
                xor     ecx, 5Fh
                mov     eax, [esi+edx*8+18h]
                mov     esi, [esp+54h+var_40]
                mov     eax, [eax+ecx]
                mov     [esp+54h+var_18], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, esi
                shr     eax, 10h
                xor     ecx, 95h
                xor     al, 50h
                movzx   eax, al
                cdq
                add     eax, [ecx+edi]
                mov     [esp+54h+var_14], eax
                mov     eax, edi
                adc     edx, [ecx+eax+4]
                mov     ecx, eax
                xor     esi, [esp+54h+var_44]
                mov     [esp+54h+var_10], edx
                mov     edx, esi
                xor     edx, 695D5BEEh
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                lea     ecx, [ebx-7A9E47C1h]
                xor     ecx, [esp+50h+var_40]
                lea     eax, [ebx+0B13DDE3h]
                xor     ecx, [esp+50h+var_44]
                add     edx, 7228D4EEh
                xor     eax, ecx
                mov     [esp+50h+var_34], ecx
                mov     ecx, [esp+50h+var_40]
                xor     edx, esi
                xor     edx, [esp+50h+var_40]
                xor     eax, esi
                mov     [esp+50h+var_4], edx
                xor     ecx, edx
                mov     [esp+50h+var_28], eax
                xor     ecx, [esp+50h+var_34]
                mov     [esp+50h+var_38], ecx
                mov     ecx, eax
                xor     ecx, edx
                xor     ecx, [esp+50h+var_44]
                xor     ecx, 9CB78B9Dh
                mov     eax, ecx
                mov     [esp+50h+var_24], ecx
                shr     eax, 8
                xor     cl, 7
                xor     al, 6Ah
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+50h+var_38]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+50h+var_30]
                mov     edi, [esp+50h+var_28]
                adc     edx, dword ptr [esp+50h+var_30+4]
                xor     ecx, ecx
                xor     eax, 0B02A4941h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-19A53BE4h]
                mov     ecx, [esp+50h+var_24]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                mov     esi, [esp+50h+var_3C]
                movzx   eax, al
                xor     eax, 8Bh
                shr     ecx, 18h
                mov     [esi+eax*8+4], edx
                mov     [esi+eax*8], ebx
                mov     eax, [esp+50h+var_20]
                mov     [ecx+esi-97h], eax
                mov     eax, [esp+50h+var_1C]
                mov     [ecx+esi-93h], eax
                mov     ecx, [esp+50h+var_38]
                mov     edx, [esp+50h+var_18]
                xor     ecx, edi
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_44]
                movzx   eax, cl
                pop     edi
                and     dword ptr [esi+eax*8+7Ch], 0
                mov     [esi+eax*8+78h], edx
                mov     eax, ecx
                mov     edx, [esp+4Ch+var_14]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [esi+eax*8-540h], edx
                mov     edx, [esp+4Ch+var_10]
                mov     [esi+eax*8-53Ch], edx
                mov     edx, [esp+4Ch+var_34]
                movzx   eax, cl
                xor     edx, 467929EFh
                mov     ecx, [esp+4Ch+var_C]
                xor     eax, 0B1h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+4Ch+var_8]
                mov     [esi+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_4]
                add     ecx, 0B08543DDh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___29       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___73       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, [ebp+arg_4]
                lea     eax, [ebx+495210C6h]
                mov     [esp+54h+var_4C], esi
                mov     [esp+54h+var_3C], eax
                lea     edx, [ebx-33DD3044h]
                add     edx, ecx
                mov     eax, ebx
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+54h+var_30], edx
                movzx   eax, dl
                xor     ecx, edx
                xor     eax, 0FCh
                mov     [esp+54h+var_48], ecx
                push    edi
                push    offset dword_40C3A4
                mov     edi, [eax+esi]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0D6h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                lea     eax, [ebx+495210C6h]
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_2C], ecx
                mov     ecx, [eax+esi+23h]
                mov     eax, [eax+esi+27h]
                mov     [esp+5Ch+var_20], eax
                lea     eax, [ebx+495210C6h]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0ABh
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     esi, [esi+eax*8]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+ecx-6]
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx-2]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                lea     edx, [edx+1BCE90D8h]
                mov     ecx, [eax+ecx-74h]
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx-70h]
                mov     [esp+5Ch+var_10], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     ecx, [ebx+495210C6h]
                xor     edx, ebx
                mov     eax, edx
                xor     edx, [esp+58h+var_48]
                xor     eax, ecx
                mov     ecx, [esp+58h+var_30]
                xor     eax, ecx
                mov     [esp+58h+var_44], eax
                lea     eax, [ebx+495210C6h]
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                mov     esi, [ebp+arg_4]
                mov     eax, [edi+eax*4-26Ch]
                mov     [esp+58h+var_C], eax
                lea     eax, [ebx+495210C6h]
                xor     edx, eax
                mov     [esp+58h+var_30], edx
                lea     edx, [ebx+51392EA8h]
                add     edx, esi
                sub     esi, ebx
                xor     edx, [esp+58h+var_44]
                xor     edx, [esp+58h+var_48]
                xor     esi, [esp+58h+var_30]
                mov     eax, edx
                xor     eax, [esp+58h+var_30]
                xor     esi, [esp+58h+var_44]
                xor     eax, ecx
                xor     eax, 0D68B620Eh
                mov     [esp+58h+var_8], edx
                mov     [esp+58h+var_38], eax
                mov     ebx, esi
                mov     eax, ebx
                mov     [esp+58h+var_40], esi
                xor     eax, edx
                xor     eax, [esp+58h+var_3C]
                xor     eax, ecx
                mov     [esp+58h+var_34], eax
                mov     eax, ebx
                shr     eax, 8
                xor     bl, 44h
                sub     al, 14h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, bl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_38]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_2C]
                adc     eax, dword ptr [esp+58h+var_2C+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_2C], eax
                xor     esi, 8F2CE67Fh
                mov     eax, [esp+58h+var_34]
                xor     edi, edi
                add     eax, 0BA72B293h
                or      esi, edi
                or      ecx, eax
                mov     al, byte ptr [esp+58h+var_44]
                mov     [ebx], ecx
                xor     al, 4Fh
                mov     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_3C]
                movzx   eax, al
                cdq
                add     eax, [esp+58h+var_24]
                mov     [ebx+4], esi
                adc     edx, [esp+58h+var_20]
                mov     esi, [esp+58h+var_4C]
                mov     dword ptr [esp+58h+var_2C+4], ecx
                movzx   ecx, cl
                xor     ecx, 80h
                mov     [esi+ecx*8], eax
                mov     [esi+ecx*8+4], edx
                mov     ecx, dword ptr [esp+58h+var_2C+4]
                mov     eax, ecx
                mov     edx, dword ptr [esp+58h+var_2C]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-214h], edx
                mov     edx, [esp+58h+var_1C]
                mov     [esi+eax*8-218h], ebx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [esi+eax*8+20h], edx
                mov     edx, [esp+58h+var_18]
                mov     [esi+eax*8+24h], edx
                mov     eax, [esp+58h+var_14]
                mov     [ecx+esi-5Ah], eax
                mov     eax, [esp+58h+var_10]
                mov     [ecx+esi-56h], eax
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                mov     edx, [esp+58h+var_30]
                movzx   eax, al
                add     edx, 0DE614BC6h
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                xor     ecx, 52h
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     [esi+ecx*8+4], edi
                mov     ecx, [esp+58h+var_8]
                xor     ecx, 0B3EB8C5Bh
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___73       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___187      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     [esp+54h+var_48], ecx
                mov     eax, ebx
                and     [esp+54h+var_4], 0
                sub     eax, esi
                mov     [esp+54h+var_40], edx
                mov     [esp+54h+var_3C], eax
                mov     eax, esi
                sub     eax, ebx
                xor     eax, edx
                xor     eax, 0BB16C169h
                mov     [esp+54h+var_44], eax
                movzx   eax, dl
                push    edi
                push    offset dword_40BFCC
                mov     edi, [eax+ecx-21h]
                mov     eax, [eax+ecx-1Dh]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_10], edi
                mov     ecx, [ecx+eax*8-38h]
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8-34h]
                mov     [esp+5Ch+var_14], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-238h]
                mov     dword ptr [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8-234h]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_44]
                shr     eax, 18h
                xor     eax, 81h
                lea     edx, [edx+15B8B2D2h]
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_3C]
                mov     edx, esi
                movzx   eax, cl
                xor     edx, ebx
                xor     edx, [esp+58h+var_44]
                xor     edx, ecx
                mov     [esp+58h+var_34], edx
                mov     eax, [edi+eax*8-2C8h]
                mov     [esp+58h+var_8], eax
                lea     eax, [ebx+635D7B44h]
                xor     eax, ecx
                add     ebx, 0FA4E3EDh
                xor     eax, [esp+58h+var_40]
                lea     ecx, [esi-6AF952B5h]
                xor     ecx, eax
                mov     [esp+58h+var_38], eax
                xor     ecx, [esp+58h+var_44]
                xor     ebx, edx
                xor     ebx, eax
                mov     [esp+58h+var_30], ecx
                mov     eax, ebx
                mov     [esp+58h+var_24], ebx
                shr     eax, 8
                sub     al, 56h ; 'V'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     cl, bl
                mov     edi, edx
                xor     cl, 0C0h
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     edx, [esp+58h+var_40]
                sbb     ecx, edi
                add     dword ptr [esp+58h+var_2C], eax
                mov     edi, [esp+58h+var_3C]
                mov     eax, ebx
                adc     ecx, dword ptr [esp+58h+var_2C+4]
                xor     eax, [esp+58h+var_30]
                mov     esi, dword ptr [esp+58h+var_2C]
                xor     eax, edi
                xor     eax, edx
                mov     dword ptr [esp+58h+var_2C+4], ecx
                mov     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_34]
                xor     ecx, edx
                mov     [esp+58h+var_3C], eax
                xor     eax, 0D49F7DE6h
                xor     ecx, 1747C8C3h
                mov     [esp+58h+var_40], ecx
                mov     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_44]
                lea     edx, [ecx-48C6DB3Dh]
                xor     ecx, ecx
                xor     ebx, edi
                or      ecx, eax
                mov     edi, [esp+58h+var_48]
                mov     al, byte ptr [esp+58h+var_38]
                xor     al, 0B0h
                mov     [esi], ecx
                movzx   eax, al
                mov     [esi+4], edx
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_20+4]
                xor     ecx, 89h
                mov     [edi+ecx*8], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Bh
                mov     [edi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_18]
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [edi+eax*8+4], ecx
                mov     eax, ebx
                mov     ecx, dword ptr [esp+58h+var_2C+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 7Ch
                shr     ebx, 18h
                xor     ebx, 1Ch
                mov     [edi+eax*8+4], ecx
                mov     [edi+eax*8], esi
                mov     eax, [esp+58h+var_10]
                mov     [ebx+edi], eax
                mov     eax, [esp+58h+var_C]
                mov     [ebx+edi+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_8]
                xor     ecx, 4Bh
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                mov     ecx, [esp+58h+var_30]
                xor     eax, eax
                mov     edx, [esp+58h+var_34]
                add     ecx, 121F0FFh
                pop     edi
                pop     esi
                xor     edx, 5A7BD650h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___187      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___45       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, esi
                shr     edx, 4
                mov     eax, edi
                shl     eax, 4
                sub     ebx, edi
                add     edx, eax
                mov     [esp+58h+var_4C], ecx
                mov     eax, edx
                mov     [esp+58h+var_44], edx
                xor     eax, ebx
                mov     [esp+58h+var_48], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40A550
                mov     ecx, [ecx+eax*8-1B8h]
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-1B4h]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-1E8h]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-1E4h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0Eh
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                movzx   eax, dl
                xor     eax, 0D5h
                movzx   edx, bl
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_4C]
                xor     ecx, 0BEh
                mov     eax, [eax+edx*8-638h]
                mov     edx, [esp+5Ch+var_48]
                xor     edx, 58237838h
                mov     eax, [eax+ecx]
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_14], eax
                call    VBN_TransformContext
                lea     eax, [esi-4F9565D1h]
                mov     ecx, edi
                xor     eax, [esp+58h+var_44]
                lea     edx, [edi+34BD25FFh]
                sub     ecx, esi
                xor     eax, ebx
                xor     ecx, eax
                mov     [esp+58h+var_20], eax
                xor     ecx, [esp+58h+var_48]
                add     edx, esi
                xor     edx, [esp+58h+var_48]
                xor     ecx, 3AB2BDD5h
                xor     edx, [esp+58h+var_44]
                mov     [esp+58h+var_38], ecx
                lea     ecx, [edi+1B45E6Dh]
                xor     ecx, edx
                mov     [esp+58h+var_8], edx
                xor     ecx, eax
                mov     [esp+58h+var_2C], ecx
                mov     eax, [esp+58h+var_38]
                xor     eax, edx
                xor     eax, ebx
                xor     eax, 0AE212C92h
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                xor     eax, [esp+58h+var_38]
                xor     eax, [esp+58h+var_44]
                xor     eax, ebx
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 57h
                add     al, 30h ; '0'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_40]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     ecx, ecx
                add     eax, 27E3BF5Fh
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi+77ADF1D6h]
                mov     ecx, edi
                mov     [ebx+4], esi
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_44]
                mov     edi, [esp+58h+var_4C]
                mov     esi, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 76h
                mov     [esp+58h+var_2C], ecx
                mov     [eax+edi], esi
                mov     esi, [esp+58h+var_24]
                mov     [eax+edi+4], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8+0C8h], ebx
                mov     ebx, [esp+58h+var_20]
                mov     [edi+eax*8+0CCh], edx
                mov     eax, ebx
                xor     eax, 7FABh
                movzx   eax, ax
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                adc     edx, dword ptr [esp+58h+var_1C+4]
                shr     ecx, 10h
                movzx   ecx, cl
                mov     [edi+ecx*8+80h], eax
                mov     eax, [esp+58h+var_2C]
                shr     eax, 18h
                xor     eax, 9Bh
                mov     [edi+ecx*8+84h], edx
                mov     ecx, [esp+58h+var_14]
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], ecx
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 77h
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     edx, [esp+58h+var_8]
                mov     [edi+ecx*8+4], eax
                add     edx, 712B44DEh
                mov     ecx, [esp+58h+var_38]
                xor     eax, eax
                pop     edi
                xor     ecx, 0B6600504h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___45       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800022e9 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                and     [esp+24h+var_4], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                xor     ebx, [ebp+arg_0]
                mov     eax, ebx
                mov     [esp+28h+var_10], edx
                shr     eax, 8
                movzx   ecx, al
                push    esi
                xor     ecx, 0E1h
                movzx   eax, bl
                push    edi
                mov     edi, [ebp+arg_0]
                sub     edi, [ebp+arg_4]
                mov     eax, [eax+edx+34h]
                xor     edi, 0CC0E74h
                mov     esi, [ecx+eax]
                lea     edx, [edi-4FEF3945h]
                mov     ecx, [ebp+arg_0]
                mov     eax, esi
                sub     eax, edx
                cmp     edx, esi
                mov     edx, [ebp+arg_0]
                setnbe  [esp+30h+var_1D]
                mov     [esp+30h+var_C], eax
                add     ecx, [ebp+arg_4]
                shr     edx, 4
                lea     eax, [ecx+39669424h]
                add     ecx, 1733D822h
                xor     eax, ebx
                mov     [esp+30h+var_18], eax
                mov     eax, [ebp+arg_4]
                shl     eax, 4
                add     eax, edx
                mov     edx, eax
                mov     [esp+30h+var_14], eax
                mov     eax, [ebp+arg_4]
                xor     edx, edi
                xor     edx, ebx
                add     eax, 9280356Dh
                mov     ebx, [esp+30h+var_18]
                xor     eax, ebx
                xor     eax, edi
                mov     [esp+30h+var_1C], edx
                xor     ecx, eax
                xor     ecx, edx
                lea     edx, [edi-4FEF3945h]
                mov     [esp+30h+var_8], ecx
                cmp     edx, esi
                jbe     short loc_483283
                mov     eax, [esp+30h+var_1C]
                lea     esi, [ebx-16932DE6h]
                xor     edx, edx
                xor     eax, 6969522Ch
                or      edx, eax
                jmp     short loc_48329C
; ---------------------------------------------------------------------------

loc_483283:                             ; CODE XREF: VBNCB_unnamed_800022e9+AC¡üj
                mov     edx, [esp+30h+var_14]
                xor     esi, esi
                xor     edx, [esp+30h+var_1C]
                add     eax, 2F138E80h
                xor     edx, ebx
                add     edx, 36749A49h
                or      esi, eax

loc_48329C:                             ; CODE XREF: VBNCB_unnamed_800022e9+C1¡üj
                mov     edi, [esp+30h+var_10]
                mov     al, [esp+30h+var_1D]
                movzx   ecx, cl
                xor     ecx, 0EDh
                cmp     [esp+30h+var_C], 0
                setz    bl
                mov     [edi+ecx*8], al
                mov     eax, [esp+30h+var_8]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, esi
                mov     [edi+ecx*8+78h], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022e9 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___126_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, edi
                sub     ebx, edx
                mov     [ebp+var_4], esi
                push    offset dword_40A8D0
                lea     ecx, [edi-3E18181h]
                add     ecx, edx
                lea     eax, [edi-54677764h]
                mov     [ebp+var_8], ecx
                lea     ecx, [edx+17CBCFCBh]
                xor     ebx, [ebp+var_8]
                xor     ecx, eax
                xor     ebx, eax
                mov     [ebp+var_C], ecx
                movzx   ecx, al
                xor     ebx, 2C6D432h
                xor     ecx, 87h
                mov     eax, ebx
                shr     eax, 8
                sub     al, 16h
                movzx   eax, al
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 48h
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+arg_4]
                mov     esi, [ebp+var_C]
                shl     edx, 4
                shr     edi, 4
                add     edx, edi
                mov     [ebx+1BCh], ecx
                mov     edi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     ecx, ebx
                add     edx, 0BFB3827h
                call    VBN_TransformContext
                xor     edi, 240209E7h
                lea     ecx, [esi+2D9E7418h]
                mov     edx, edi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___126_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001ef8 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                push    ebx
                mov     ebx, eax
                mov     [ebp+var_C], ecx
                sub     ebx, edx
                lea     ecx, [eax-32354337h]
                push    esi
                lea     esi, [edx-3627A955h]
                xor     ebx, 0D3211960h
                xor     edx, eax
                mov     [ebp+var_4], esi
                push    edi
                mov     edi, edx
                xor     ecx, esi
                xor     edi, ebx
                xor     esi, esi
                xor     edx, edi
                mov     eax, ebx
                xor     edx, [ebp+var_4]
                xor     ecx, ebx
                sub     edx, 582E7A44h
                shr     eax, 8
                or      esi, edx
                movzx   eax, al
                mov     edx, [ebp+var_C]
                add     ecx, 3A83FBCBh
                cmp     byte ptr [edx+eax*8-658h], 0
                jnz     short loc_483426
                movzx   eax, bl
                xor     eax, 0BBh
                cmp     byte ptr [edx+eax*8], 0
                jnz     short loc_483426
                mov     ecx, [ebp+var_4]
                lea     eax, [edi-7AF539E4h]
                xor     esi, esi
                add     ecx, 0BDE19536h
                or      esi, eax

loc_483426:                             ; CODE XREF: VBNCB_unnamed_80001ef8+63¡üj
                                        ; VBNCB_unnamed_80001ef8+71¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001ef8 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___177_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, edx
                sub     ecx, eax
                mov     [ebp+var_C], esi
                push    edi
                lea     edi, [eax+275EDE6Dh]
                mov     [ebp+var_4], ecx
                movzx   eax, cl
                add     edi, edx
                xor     eax, 6Ch
                shr     edx, 4
                push    offset dword_40C750
                mov     [ebp+var_10], edi
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     edx, eax
                mov     [ebp+var_8], ecx
                xor     edx, edi
                mov     ecx, esi
                xor     edx, [ebp+var_4]
                xor     edx, 1AF5F9A5h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                xor     eax, 574h
                shr     ecx, 8
                movzx   eax, ax
                xor     cl, 0D4h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+var_4]
                adc     edx, ebx
                xor     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                mov     [ecx+1BCh], edx
                xor     eax, 9492C948h
                mov     ecx, [ebp+var_10]
                xor     edx, edx
                pop     edi
                add     ecx, 2465328Bh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___177_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002114 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [esp+1Ch+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, edx
                xor     ebx, esi
                shr     eax, 4
                push    edi
                mov     edi, esi
                mov     [esp+28h+var_14], ecx
                add     esi, 2D2A2B6Dh
                shl     edi, 4
                add     edx, esi
                add     edi, eax
                mov     esi, [esp+28h+var_14]
                xor     edx, ebx
                movzx   eax, bl
                xor     eax, 0B7h
                movzx   ecx, dl
                xor     ecx, 8Bh
                mov     eax, [eax+esi]
                mov     ecx, [eax+ecx]
                lea     eax, [edi-6915A3D9h]
                mov     esi, ecx
                mov     [esp+28h+var_C], ecx
                sub     esi, eax
                cmp     eax, ecx
                mov     ecx, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                mov     [esp+28h+var_8], esi
                mov     esi, [ebp+arg_4]
                add     ecx, 7C813A89h
                add     esi, 0ABA7ECFDh
                xor     ecx, edi
                add     esi, [ebp+arg_0]
                xor     ecx, ebx
                xor     esi, edx
                xor     esi, edi
                xor     edi, ecx
                xor     edi, edx
                mov     edx, edi
                xor     edx, esi
                xor     edx, ebx
                xor     edx, 2838EBD8h
                mov     [esp+28h+var_10], edx
                cmp     eax, [esp+28h+var_C]
                jbe     short loc_4835B6
                mov     edx, ecx
                xor     eax, eax
                xor     esi, 19CB3712h
                add     edx, 0D28D8DAAh
                or      eax, esi
                jmp     short loc_4835D1
; ---------------------------------------------------------------------------

loc_4835B6:                             ; CODE XREF: VBNCB_unnamed_80002114+A0¡üj
                mov     eax, [ebp+arg_0]
                xor     edx, edx
                add     eax, 9C8B5F31h
                xor     edi, 0C4357439h
                xor     eax, esi
                xor     eax, ecx
                xor     eax, 74A9F2F3h
                or      edx, edi

loc_4835D1:                             ; CODE XREF: VBNCB_unnamed_80002114+B4¡üj
                mov     ecx, [esp+28h+var_10]
                mov     esi, [esp+28h+var_14]
                mov     bl, [esp+28h+var_19]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, cl
                pop     edi
                mov     [esi+ecx*8-1F0h], bl
                setz    bl
                mov     ecx, [esp+24h+var_10]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esi+ecx*8-170h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002114 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002393 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, esi
                shl     eax, 4
                shr     edi, 4
                xor     ebx, edx
                add     edi, eax
                mov     [ebp+var_10], ecx
                xor     edi, ebx
                lea     ecx, [esi+62E51020h]
                mov     [ebp+var_4], edi
                mov     eax, edx
                mov     edi, esi
                shr     eax, 4
                shl     edi, 4
                sub     esi, edx
                xor     esi, [ebp+var_4]
                add     edi, eax
                xor     edi, ecx
                movzx   eax, bl
                xor     edi, ebx
                xor     esi, ecx
                sub     edi, 3075D831h
                add     esi, 2FA2892Ah
                mov     [ebp+var_8], edi
                xor     eax, 6Ch
                mov     edx, [ebp+var_8]
                xor     edi, edi
                or      edi, esi
                mov     esi, [ebp+var_10]
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4836A3
                shr     ebx, 8
                movzx   eax, bl
                cmp     byte ptr [esi+eax*8-470h], 0
                jnz     short loc_4836A3
                mov     eax, [ebp+var_4]
                xor     edi, edi
                add     eax, 84040BDDh
                xor     ecx, 1AB623Bh
                or      edi, eax
                jmp     short loc_4836A5
; ---------------------------------------------------------------------------

loc_4836A3:                             ; CODE XREF: VBNCB_unnamed_80002393+6D¡üj
                                        ; VBNCB_unnamed_80002393+7D¡üj
                mov     ecx, edx

loc_4836A5:                             ; CODE XREF: VBNCB_unnamed_80002393+91¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002393 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800023ac proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                and     [esp+20h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                movzx   edx, bl
                mov     eax, ebx
                xor     edx, 11h
                shr     eax, 8
                push    edi
                mov     edi, ecx
                movzx   ecx, al
                mov     [esp+28h+var_C], edi
                mov     eax, [edx+edi]
                mov     edx, [eax+ecx+9Fh]
                mov     eax, esi
                mov     ecx, [ebp+arg_4]
                mov     edi, edx
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [esp+28h+var_14], edx
                mov     eax, ecx
                xor     eax, 33D4B47Fh
                sub     edi, eax
                cmp     eax, edx
                mov     edx, [ebp+arg_4]
                setnbe  [esp+28h+var_19]
                mov     [esp+28h+var_8], edi
                lea     edi, [esi-3A57D466h]
                add     edi, edx
                add     edx, 2D9E0551h
                add     edx, esi
                xor     edi, ebx
                xor     edx, ecx
                xor     edx, ebx
                lea     ebx, [esi+4592D74h]
                add     ebx, [ebp+arg_4]
                xor     ebx, edi
                xor     ebx, ecx
                lea     ecx, [esi-7095BF14h]
                add     ecx, [ebp+arg_4]
                xor     ecx, ebx
                mov     [esp+28h+var_10], ebx
                mov     ebx, edx
                xor     ecx, ebx
                mov     [esp+28h+var_18], ecx
                cmp     eax, [esp+28h+var_14]
                jbe     short loc_483775
                xor     edx, edx
                lea     eax, [ebx-53E60328h]
                xor     edi, 0E2E39D00h
                or      edx, eax
                jmp     short loc_483795
; ---------------------------------------------------------------------------

loc_483775:                             ; CODE XREF: VBNCB_unnamed_800023ac+A1¡üj
                mov     edx, [ebp+arg_4]
                mov     eax, [esp+28h+var_10]
                add     edx, 75EE269Eh
                xor     edx, ebx
                add     eax, 744820D4h
                xor     edx, edi
                xor     edi, edi
                xor     edx, 63BD88EDh
                or      edi, eax

loc_483795:                             ; CODE XREF: VBNCB_unnamed_800023ac+B3¡üj
                mov     esi, [esp+28h+var_C]
                mov     al, [esp+28h+var_19]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, cl
                setz    bl
                mov     [esi+ecx*8-460h], al
                mov     eax, [esp+28h+var_18]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                mov     [esi+ecx*8-20h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023ac endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___161      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                sub     esi, edi
                mov     edx, esi
                mov     [esp+50h+var_40], ecx
                mov     ebx, [esp+50h+var_40]
                xor     edx, 0A8CB31Fh
                movzx   eax, dl
                xor     esi, 22297761h
                xor     eax, 87h
                mov     [esp+50h+var_3C], edx
                mov     [esp+50h+var_34], esi
                push    offset dword_40BD00
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+54h+var_2C+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 6Ch
                mov     ecx, [eax+ecx]
                mov     eax, [eax+ebx+4]
                mov     [esp+54h+var_C], eax
                movzx   eax, si
                mov     [esp+54h+var_10], ecx
                mov     eax, [eax+ecx-6711h]
                mov     [esp+54h+var_8], eax
                mov     eax, edx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, esi
                shr     eax, 10h
                mov     esi, ebx
                mov     ebx, [ebp+arg_0]
                movzx   edx, al
                xor     eax, eax
                sub     edx, 29h ; ')'
                add     edx, [esi+ecx*8-3E0h]
                mov     [esp+54h+var_1C], edx
                adc     eax, [esi+ecx*8-3DCh]
                mov     [esp+54h+var_18], eax
                mov     eax, [esp+54h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F7h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                lea     esi, [ebx-0D23F40h]
                add     esi, edi
                mov     [esp+54h+var_24], ecx
                xor     esi, [esp+54h+var_3C]
                mov     ecx, [esp+54h+var_40]
                mov     edx, esi
                xor     edx, 0A8AE7ED6h
                mov     [esp+54h+var_20], eax
                call    VBN_TransformContext
                mov     eax, edi
                lea     edx, [ebx-7572786h]
                sub     eax, ebx
                lea     ecx, [edi-1A61FD94h]
                xor     eax, [esp+50h+var_34]
                add     edx, edi
                xor     eax, [esp+50h+var_3C]
                xor     edx, esi
                xor     edx, [esp+50h+var_34]
                xor     ecx, eax
                mov     [esp+50h+var_30], eax
                xor     ecx, esi
                lea     eax, [ebx+19DA845Ah]
                mov     [esp+50h+var_4], edx
                xor     eax, edx
                mov     [esp+50h+var_14], ecx
                xor     eax, [esp+50h+var_30]
                mov     ebx, ecx
                xor     ebx, edx
                mov     [esp+50h+var_38], eax
                xor     ebx, [esp+50h+var_3C]
                xor     ebx, 0C45D1621h
                xor     esi, esi
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 6Ch ; 'l'
                add     al, 7Bh ; '{'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_2C]
                lea     edx, [ecx+0D0FF621h]
                adc     esi, dword ptr [esp+50h+var_2C+4]
                add     eax, 0C882DB4h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_40]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 76h
                shr     ebx, 18h
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+50h+var_20]
                mov     [edx+eax*8+4], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_14]
                xor     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_3C]
                mov     eax, [esp+50h+var_1C]
                mov     [edx+ebx*8-1A0h], eax
                mov     eax, [esp+50h+var_18]
                mov     [edx+ebx*8-19Ch], eax
                mov     ebx, [esp+50h+var_40]
                movzx   eax, cl
                xor     eax, 0E1h
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                mov     eax, ecx
                mov     edx, [esp+50h+var_10]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                pop     edi
                pop     esi
                mov     [eax+ebx-0D0h], edx
                mov     edx, [esp+48h+var_C]
                mov     [eax+ebx-0CCh], edx
                mov     edx, [esp+48h+var_30]
                movzx   eax, cl
                add     edx, 0CBE6E919h
                mov     ecx, [esp+48h+var_8]
                and     dword ptr [ebx+eax*8-154h], 0
                mov     [ebx+eax*8-158h], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_4]
                add     ecx, 584B4C66h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___161      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__23      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                add     ebx, 3F6462B1h
                and     [esp+1Ch+var_4], 0
                push    edi
                mov     edi, ecx
                movzx   eax, bl
                push    offset dword_40C850
                mov     ecx, [edi+eax*8-548h]
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     edx, 47h
                mov     [esp+24h+var_8], ecx
                movzx   ecx, al
                xor     ecx, 0DAh
                mov     eax, [edi+edx*8]
                mov     esi, [eax+ecx]
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, edi
                xor     al, 49h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [ebp+arg_0]
                xor     eax, [ebp+arg_4]
                mov     [esp+24h+var_14], eax
                lea     edx, [eax+3980EBA8h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     edi, ecx
                mov     eax, [ebp+arg_4]
                sub     edi, eax
                shr     eax, 4
                mov     edx, edi
                shl     ecx, 4
                xor     edx, ebx
                add     ecx, eax
                xor     edx, 0BE0679B8h
                mov     eax, ecx
                xor     eax, [esp+20h+var_14]
                xor     eax, ebx
                mov     [esp+20h+var_10], eax
                mov     eax, [esp+20h+var_8]
                sub     eax, esi
                jz      short loc_483AA9
                mov     eax, [esp+20h+var_10]
                xor     esi, esi
                add     eax, 9B32C99Fh
                xor     edx, 0BE3123CFh
                or      esi, eax
                jmp     short loc_483AC5
; ---------------------------------------------------------------------------

loc_483AA9:                             ; CODE XREF: vBng_h__23+A2¡üj
                xor     edi, [esp+20h+var_10]
                xor     ecx, edx
                xor     ecx, [esp+20h+var_14]
                xor     edi, edx
                xor     esi, esi
                xor     edi, 86A0BA8Eh
                or      esi, edi
                lea     edx, [ecx+3264A67Ch]

loc_483AC5:                             ; CODE XREF: vBng_h__23+B7¡üj
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__23      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___43_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                sub     eax, edi
                mov     [ebp+var_4], esi
                xor     eax, 0C00A4E9Eh
                mov     [ebp+var_8], eax
                lea     ebx, [edi-594FC436h]
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 10h
                xor     ecx, 0Ch
                add     al, 2Fh ; '/'
                movzx   eax, al
                cdq
                mov     esi, [ecx+esi]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40BA70
                mov     ecx, [ecx+eax+4]
                mov     eax, ebx
                sbb     ecx, edx
                shr     eax, 8
                xor     al, 6Bh
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                shr     edi, 4
                mov     [eax+1B8h], esi
                mov     esi, [ebp+arg_0]
                mov     edx, esi
                shl     edx, 4
                add     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, [ebp+var_8]
                mov     ecx, eax
                xor     edx, ebx
                sub     edx, 1E00379Ah
                call    VBN_TransformContext
                mov     ecx, [ebp+var_8]
                lea     eax, [esi+1D87AD31h]
                xor     eax, ebx
                xor     edx, edx
                pop     edi
                add     ecx, 291FA801h
                add     eax, 1A9CD805h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___43_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___166      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     edx, [ebp+arg_4]
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                add     edx, 68FCAFD0h
                and     [esp+58h+var_4], 0
                add     edx, edi
                mov     [esp+58h+var_44], edx
                mov     [esp+58h+var_48], esi
                lea     ebx, [edi+0A59A2E8h]
                movzx   eax, bl
                xor     eax, 5Ah
                mov     [esp+58h+var_40], ebx
                push    offset dword_40ADA0
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esi+eax*8+110h]
                mov     eax, [esi+eax*8+114h]
                mov     [esp+5Ch+var_10], eax
                movzx   eax, dl
                xor     eax, 55h
                mov     [esp+5Ch+var_14], ecx
                mov     eax, [ecx+eax*2]
                mov     ecx, ebx
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, ax
                xor     eax, eax
                shr     ecx, 18h
                sub     edx, 2722h
                add     edx, [ecx+esi-7Dh]
                mov     [esp+5Ch+var_24], edx
                adc     eax, [ecx+esi-79h]
                mov     edx, [ebp+arg_4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 6Ch
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     esi, edx
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, edx
                mov     [esp+5Ch+var_18], eax
                mov     eax, edi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     eax, [edx+3C42285Fh]
                xor     eax, [esp+5Ch+var_44]
                xor     ecx, ebx
                xor     eax, ebx
                mov     [esp+5Ch+var_C], ecx
                mov     ebx, esi
                mov     [esp+5Ch+var_34], eax
                xor     esi, edi
                sub     ebx, edi
                xor     esi, eax
                xor     ebx, ecx
                xor     ebx, [esp+5Ch+var_44]
                xor     esi, ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     edx, esi
                xor     edx, 720DFDCDh
                mov     [esp+5Ch+var_28], esi
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     edi, 4
                add     ecx, edi
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_34]
                xor     esi, ebx
                movzx   edi, bl
                xor     esi, [esp+58h+var_40]
                mov     eax, ebx
                shr     eax, 8
                xor     esi, 50D296C7h
                xor     al, 0DAh
                mov     ebx, [esp+58h+var_48]
                movzx   eax, al
                sub     edi, 44h ; 'D'
                cdq
                mov     [esp+58h+var_38], esi
                xor     esi, esi
                sub     edi, eax
                mov     [esp+58h+var_3C], ecx
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 0CB437B3Fh
                xor     ecx, ecx
                xor     edx, 0F347C524h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_24]
                movzx   eax, cl
                mov     [ebx+eax*8-4A0h], edx
                mov     edx, [esp+58h+var_20]
                mov     [ebx+eax*8-49Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8+150h], edx
                mov     edx, [esp+58h+var_18]
                mov     [ebx+eax*8+154h], edx
                mov     eax, ecx
                shr     eax, 10h
                mov     edx, ebx
                movzx   eax, al
                xor     eax, 0BEh
                mov     ebx, [esp+58h+var_38]
                shr     ecx, 18h
                mov     [edx+eax*8], edi
                mov     edi, edx
                mov     edx, [esp+58h+var_C]
                mov     [edi+eax*8+4], esi
                mov     eax, [esp+58h+var_14]
                mov     [ecx+edi-58h], eax
                mov     eax, [esp+58h+var_10]
                mov     [ecx+edi-54h], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 28B8A7EFh
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_8]
                and     dword ptr [edi+ecx*8-484h], 0
                mov     [edi+ecx*8-488h], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_34]
                pop     edi
                add     ecx, 0CE51A6Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___166      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001fa1 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                and     [esp+2Ch+var_4], 0
                shl     eax, 4
                mov     [esp+2Ch+var_10], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, edi
                shr     esi, 4
                mov     ecx, edi
                add     esi, eax
                shl     ecx, 4
                mov     eax, edx
                mov     ebx, edi
                mov     edi, [esp+30h+var_10]
                sub     ebx, edx
                shr     eax, 4
                add     eax, ecx
                mov     [esp+30h+var_18], eax
                mov     edx, eax
                xor     edx, ebx
                movzx   eax, bl
                movzx   ecx, dl
                xor     ecx, 0F6h
                mov     eax, [eax+edi-57h]
                mov     edi, [ebp+arg_4]
                mov     ecx, [eax+ecx]
                mov     eax, esi
                xor     eax, 81F464ECh
                mov     [esp+30h+var_C], ecx
                cmp     eax, ecx
                setnbe  [esp+30h+var_1D]
                xor     [esp+30h+var_18], esi
                xor     [esp+30h+var_18], ebx
                sub     ecx, eax
                mov     [esp+30h+var_8], ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 0B825B154h
                xor     ecx, edx
                xor     ecx, esi
                mov     esi, edi
                xor     esi, [ebp+arg_0]
                mov     [esp+30h+var_1C], esi
                mov     esi, [esp+30h+var_18]
                xor     [esp+30h+var_1C], esi
                xor     [esp+30h+var_1C], edx
                mov     edx, [esp+30h+var_1C]
                xor     edx, ecx
                xor     edx, ebx
                xor     edx, 70D76795h
                cmp     eax, [esp+30h+var_C]
                jbe     short loc_483E74
                mov     eax, ecx
                xor     edi, edi
                add     eax, 0AFA600EFh
                xor     esi, 49844150h
                or      edi, eax
                jmp     short loc_483E8E
; ---------------------------------------------------------------------------

loc_483E74:                             ; CODE XREF: VBNCB_unnamed_80001fa1+AF¡üj
                xor     edi, [ebp+arg_0]
                mov     eax, [esp+30h+var_1C]
                xor     edi, ecx
                xor     edi, esi
                xor     eax, 0ABE34AB2h
                xor     esi, esi
                add     edi, 3AE4B76Bh
                or      esi, eax

loc_483E8E:                             ; CODE XREF: VBNCB_unnamed_80001fa1+C2¡üj
                mov     eax, [esp+30h+var_10]
                mov     bl, [esp+30h+var_1D]
                cmp     [esp+30h+var_8], 0
                movzx   ecx, dl
                mov     [eax+ecx*8-470h], bl
                setz    bl
                shr     edx, 8
                movzx   ecx, dl
                mov     edx, esi
                mov     [eax+ecx*8+1A8h], bl
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001fa1 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___80       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = qword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     [esp+4Ch+var_48], ecx
                mov     ecx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                sub     ecx, esi
                push    edi
                mov     [esp+58h+var_3C], ecx
                mov     ebx, [esp+58h+var_48]
                lea     eax, [esi+5F57CBD4h]
                and     [esp+58h+var_4], 0
                add     eax, [ebp+arg_4]
                mov     [esp+58h+var_38], eax
                movzx   edi, al
                mov     eax, ecx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, edi
                xor     eax, 0B7h
                mov     [esp+58h+var_10], edi
                mov     edi, [esp+58h+var_48]
                xor     edx, 0DEh
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                shld    eax, ecx, 2
                mov     eax, [edx+edi]
                mov     edi, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_48]
                mov     eax, [eax+ecx*4]
                mov     [esp+58h+var_14], eax
                mov     eax, edi
                shr     eax, 18h
                mov     ecx, [eax+edx-5Eh]
                mov     eax, [eax+edx-5Ah]
                mov     edx, [esp+58h+var_38]
                mov     [esp+58h+var_18], eax
                mov     eax, edi
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Bh
                mov     [esp+58h+var_1C], ecx
                xor     ecx, ecx
                shr     edx, 10h
                sub     edx, 0E8ECh
                add     edx, [ebx+eax*8]
                mov     [esp+58h+var_28], edx
                mov     edx, ebx
                adc     ecx, [edx+eax*8+4]
                mov     edx, [esp+58h+var_38]
                mov     eax, edx
                shr     eax, 8
                mov     [esp+58h+var_24], ecx
                mov     ecx, ebx
                movzx   eax, al
                mov     ecx, [ecx+eax*8-530h]
                mov     dword ptr [esp+58h+var_C], ecx
                mov     ecx, ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, [ecx+eax*8-52Ch]
                mov     ecx, ebx
                mov     dword ptr [esp+58h+var_C+4], eax
                mov     eax, esi
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                lea     eax, [esi-438B6130h]
                xor     ecx, edi
                add     eax, ebx
                mov     [esp+58h+var_34], ecx
                xor     eax, edx
                mov     ecx, edi
                xor     eax, ecx
                mov     [esp+58h+var_30], eax
                movzx   eax, cl
                mov     ecx, [esp+58h+var_48]
                xor     eax, 53h
                mov     edi, [eax+ecx]
                mov     esi, [eax+ecx+4]
                mov     ecx, ebx
                mov     eax, [ebp+arg_0]
                shr     ecx, 4
                shl     eax, 4
                add     eax, ecx
                mov     ecx, [esp+58h+var_48]
                mov     ebx, eax
                mov     [esp+58h+var_40], eax
                xor     ebx, [esp+58h+var_34]
                xor     ebx, edx
                mov     edx, ebx
                push    offset dword_40C20C
                xor     edx, 75E1DCF8h
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, [esp+58h+var_34]
                xor     ecx, [ebp+arg_4]
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                add     eax, 3B15h
                movzx   ecx, cl
                sub     ecx, 0CFh
                movzx   eax, ax
                cdq
                mov     [esp+58h+var_44], ecx
                xor     ecx, ecx
                sub     [esp+58h+var_44], eax
                mov     eax, [esp+58h+var_2C]
                sbb     ecx, edx
                add     [esp+58h+var_44], edi
                mov     edi, [esp+58h+var_48]
                adc     ecx, esi
                mov     esi, [esp+58h+var_30]
                mov     [esp+58h+var_20], ecx
                xor     eax, ebx
                xor     eax, [esp+58h+var_3C]
                mov     ecx, [esp+58h+var_40]
                xor     ecx, ebx
                mov     [esp+58h+var_30], eax
                mov     ebx, [esp+58h+var_44]
                xor     ecx, esi
                xor     eax, 0BFCA4431h
                mov     [esp+58h+var_40], ecx
                lea     edx, [ecx+59B44C30h]
                xor     ecx, ecx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_3C]
                mov     [ebx+4], edx
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                mov     [edi+eax*8+128h], edx
                mov     edx, [esp+58h+var_24]
                mov     [edi+eax*8+12Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 74h
                mov     [edi+eax*8+4], edx
                mov     edx, [esp+58h+var_1C]
                mov     [edi+eax*8], ebx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0A9h
                mov     [edi+eax*8+128h], edx
                mov     edx, [esp+58h+var_18]
                mov     [edi+eax*8+12Ch], edx
                mov     eax, [esp+58h+var_14]
                and     dword ptr [edi+ecx*8+4], 0
                mov     edx, [esp+58h+var_34]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                movzx   ecx, dl
                xor     ecx, eax
                mov     eax, [esp+58h+var_30]
                movzx   eax, al
                xor     edx, 9644F1A4h
                xor     ecx, eax
                mov     eax, dword ptr [esp+58h+var_C]
                xor     ecx, 10h
                xor     ecx, [esp+58h+var_10]
                mov     [ecx+edi], eax
                mov     eax, dword ptr [esp+58h+var_C+4]
                mov     [ecx+edi+4], eax
                lea     ecx, [esi-1EFDC779h]
                pop     edi
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___80       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___63_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     eax, [ebp+arg_4]
                add     eax, 3012B095h
                mov     [ebp+var_4], eax
                push    ebx
                mov     ebx, ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 1DCABC22h
                mov     eax, ecx
                shr     ecx, 8
                shr     eax, 10h
                xor     cl, 95h
                sub     eax, 4ADEh
                movzx   eax, ax
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                push    edi
                mov     edi, edx
                cdq
                sub     eax, esi
                mov     esi, [ebp+arg_0]
                push    offset dword_40A600
                sbb     edx, edi
                mov     edi, [ebp+var_4]
                lea     ecx, [esi+1DCABC22h]
                movzx   ecx, cl
                add     eax, [ecx+ebx+0A7h]
                adc     edx, [ecx+ebx+0ABh]
                mov     ecx, ebx
                mov     [ebx+1BCh], edx
                mov     edx, [ebp+arg_4]
                add     edx, 0C4CF818Bh
                mov     [ebx+1B8h], eax
                xor     edx, edi
                lea     eax, [esi+1DCABC22h]
                xor     edx, eax
                xor     edx, 0E9ACB01Bh
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     eax, [esi+1DCABC22h]
                sub     ecx, esi
                xor     edi, 2F7C58F2h
                xor     eax, ecx
                xor     edx, edx
                add     eax, 2A2B3C36h
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___63_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___183_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_10], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                shl     eax, 4
                mov     ecx, esi
                mov     [ebp+var_8], edi
                shr     ecx, 4
                add     ecx, eax
                movzx   eax, cl
                xor     eax, 1Ch
                push    offset dword_40BD90
                mov     edx, [eax+edi]
                mov     edi, [eax+edi+4]
                mov     eax, esi
                mov     [ebp+var_10], edx
                xor     eax, ebx
                mov     [ebp+var_4], eax
                mov     edx, esi
                shl     edx, 4
                mov     eax, ebx
                shr     eax, 4
                add     edx, eax
                xor     edx, ecx
                mov     [ebp+var_C], edx
                lea     edx, [esi-5CF89229h]
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, [ebp+var_8]
                sub     edx, 4AAAED3Ah
                call    VBN_TransformContext
                lea     ecx, [ebx-7797D0A2h]
                mov     ebx, [ebp+var_C]
                add     ecx, esi
                xor     ecx, ebx
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 58h ; 'X'
                sub     esi, 45h ; 'E'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_4]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, 99ADFF9h
                pop     edi
                lea     ecx, [ebx-7DB08CCh]
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___183_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___66       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                lea     edx, [ebx-7C91BB1Dh]
                add     edx, edi
                mov     [esp+38h+var_24], esi
                movzx   eax, dl
                mov     [esp+38h+var_28], edx
                push    offset dword_40BA30
                mov     [esp+3Ch+var_2C], edi
                mov     ecx, [eax+esi-8]
                mov     eax, [eax+esi-4]
                mov     dword ptr [esp+3Ch+var_1C+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+3Ch+var_1C], ecx
                mov     ecx, edx
                shr     ecx, 18h
                mov     eax, [esi+eax*8-440h]
                mov     eax, [eax+ecx+43h]
                mov     [esp+3Ch+var_4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0Dh
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     esi, ebx
                sub     esi, edi
                mov     [esp+3Ch+var_C], ecx
                mov     ecx, [esp+3Ch+var_24]
                xor     esi, 476B8972h
                mov     edx, esi
                mov     [esp+3Ch+var_8], eax
                xor     edx, 8E7A5BB5h
                call    VBN_TransformContext
                lea     edx, [ebx-53D38D57h]
                mov     ecx, edi
                sub     ecx, ebx
                add     edx, edi
                xor     edx, [esp+38h+var_28]
                mov     eax, ecx
                xor     eax, esi
                mov     [esp+38h+var_20], edx
                xor     eax, [esp+38h+var_28]
                xor     ecx, edx
                xor     ecx, esi
                mov     [esp+38h+var_14], eax
                mov     eax, ecx
                mov     [esp+38h+var_10], ecx
                shr     eax, 8
                xor     cl, 4Ah
                sub     eax, 5618h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+arg_0]
                cdq
                mov     ebx, eax
                sub     ebx, esi
                mov     esi, [esp+38h+var_2C]
                lea     eax, [ecx-2241905Dh]
                sbb     edx, edi
                add     ebx, dword ptr [esp+38h+var_1C]
                mov     edi, [esp+38h+var_14]
                adc     edx, dword ptr [esp+38h+var_1C+4]
                xor     eax, edi
                xor     eax, [esp+38h+var_20]
                shl     ecx, 4
                shr     esi, 4
                add     esi, ecx
                mov     [esp+38h+var_14], eax
                mov     ecx, esi
                xor     ecx, [esp+38h+var_10]
                xor     ecx, edi
                mov     esi, [esp+38h+var_24]
                sub     ecx, 65915933h
                add     eax, 0A25BD188h
                mov     [esp+38h+var_2C], ecx
                xor     ecx, ecx
                xor     edi, 89637602h
                or      ecx, eax
                mov     eax, [esp+38h+var_2C]
                mov     [ebx], eax
                mov     [ebx+4], ecx
                mov     ecx, [esp+38h+var_14]
                xor     ecx, [esp+38h+var_10]
                xor     ecx, [esp+38h+var_28]
                xor     ecx, 0CB3819F3h
                movzx   eax, cl
                mov     [esi+eax*8-3C4h], edx
                mov     edx, [esp+38h+var_C]
                mov     [esi+eax*8-3C8h], ebx
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2Eh
                shr     ecx, 10h
                mov     [eax+esi], edx
                mov     edx, [esp+38h+var_8]
                mov     [eax+esi+4], edx
                mov     edx, [esp+38h+var_20]
                movzx   eax, cl
                xor     edx, 0A6658A28h
                mov     ecx, [esp+38h+var_4]
                xor     eax, 41h
                and     dword ptr [eax+esi+4], 0
                mov     [eax+esi], ecx
                xor     eax, eax
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___66       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___37       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                sub     eax, [ebp+arg_4]
                mov     [esp+50h+var_40], eax
                push    esi
                mov     esi, ecx
                lea     edx, [ebx-580DFEBBh]
                mov     ecx, eax
                mov     [esp+54h+var_44], esi
                mov     eax, [ebp+arg_4]
                xor     ecx, 407546A0h
                shl     eax, 4
                mov     [esp+54h+var_48], eax
                mov     eax, ebx
                shr     eax, 4
                add     [esp+54h+var_48], eax
                movzx   eax, cl
                xor     eax, 61h
                xor     [esp+54h+var_48], ecx
                push    edi
                mov     edi, [esp+58h+var_44]
                mov     [esp+58h+var_38], ecx
                mov     esi, [esi+eax*8]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+58h+var_2C], edx
                push    offset dword_40BBB0
                mov     edi, [eax+edi-1]
                mov     [esp+5Ch+var_24], edi
                mov     edi, [esp+5Ch+var_44]
                mov     eax, [eax+edi+3]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E9h
                mov     edi, [edi+eax*8]
                mov     dword ptr [esp+5Ch+var_18], edi
                mov     edi, [esp+5Ch+var_44]
                mov     eax, [edi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, [eax+edi+11h]
                mov     eax, [eax+edi+15h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, dl
                mov     edx, [esp+5Ch+var_48]
                xor     eax, 4
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [edi+eax*8]
                lea     edx, [edx-3AE03D32h]
                mov     eax, [edi+eax*8+4]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, edi
                mov     [esp+5Ch+var_C], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     edi, [ebx-580DFEBBh]
                mov     edx, [esp+58h+var_38]
                add     ecx, 15531CBh
                add     ecx, ebx
                xor     ecx, edi
                xor     ecx, edx
                movzx   eax, cx
                mov     [esp+58h+var_1C], ecx
                mov     eax, [eax+esi-0E141h]
                mov     esi, [esp+58h+var_40]
                xor     esi, [esp+58h+var_48]
                xor     esi, edi
                mov     [esp+58h+var_28], eax
                xor     esi, 0C2D12E2Ch
                mov     [esp+58h+var_40], esi
                lea     esi, [ebx+500BC8F8h]
                xor     esi, ecx
                add     ebx, 27FDB0FCh
                xor     esi, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_40]
                mov     [esp+58h+var_8], esi
                xor     ebx, ecx
                mov     ecx, esi
                xor     ecx, [esp+58h+var_40]
                mov     eax, ebx
                xor     eax, esi
                xor     ecx, edx
                xor     eax, edi
                xor     ecx, 938A3D0Fh
                xor     eax, edx
                mov     [esp+58h+var_3C], ecx
                mov     [esp+58h+var_38], eax
                xor     esi, esi
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0E8h
                xor     al, 23h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                lea     edx, [ecx+2319F2FEh]
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 511FD3CCh
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_3C]
                xor     edx, ebx
                mov     ebx, [esp+58h+var_44]
                xor     edx, [esp+58h+var_48]
                xor     edx, [esp+58h+var_2C]
                movzx   eax, dl
                and     dword ptr [ebx+eax*8-234h], 0
                mov     [ebx+eax*8-238h], ecx
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 9
                mov     ecx, [esp+58h+var_24]
                mov     [ebx+eax*8], edi
                mov     edi, ebx
                mov     ebx, [esp+58h+var_1C]
                mov     [edi+eax*8+4], esi
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+edi-80h], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+edi-7Ch], ecx
                mov     eax, ebx
                shr     eax, 10h
                movzx   ecx, al
                xor     eax, eax
                inc     ecx
                add     ecx, dword ptr [esp+58h+var_18]
                adc     eax, dword ptr [esp+58h+var_18+4]
                shr     edx, 18h
                mov     [edi+edx*8-3D4h], eax
                mov     eax, [esp+58h+var_48]
                mov     [edi+edx*8-3D8h], ecx
                mov     edx, [esp+58h+var_40]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 0DCh
                xor     edx, 0FFB42FADh
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [edi+ecx*8+4], eax
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 143E711Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___37       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___153      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                shr     edx, 4
                add     eax, edx
                mov     [esp+4Ch+var_3C], eax
                mov     eax, ebx
                sub     eax, esi
                push    edi
                mov     edi, ecx
                lea     ecx, [esi-29471D43h]
                xor     eax, ecx
                mov     [esp+50h+var_44], edi
                xor     eax, 0ECAEE2B3h
                mov     [esp+50h+var_40], eax
                movzx   eax, cl
                push    offset dword_40C600
                mov     edx, [edi+eax*8-60h]
                mov     eax, [edi+eax*8-5Ch]
                mov     [esp+54h+var_C], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+54h+var_10], edx
                mov     edx, [esp+54h+var_44]
                mov     edi, [eax+edi+4Dh]
                mov     [esp+54h+var_28], edi
                mov     eax, [eax+edx+51h]
                mov     [esp+54h+var_24], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0A0h
                mov     edx, [eax+edx]
                mov     dword ptr [esp+54h+var_1C], edx
                mov     edx, [esp+54h+var_44]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+54h+var_1C+4], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, [eax+edx+0Fh]
                mov     eax, [eax+edx+13h]
                mov     edx, [esp+54h+var_40]
                mov     dword ptr [esp+54h+var_30], ecx
                mov     ecx, [esp+54h+var_44]
                mov     dword ptr [esp+54h+var_30+4], eax
                lea     edx, [edx-766C9277h]
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_3C]
                lea     edx, [esi-29471D43h]
                movzx   eax, cl
                mov     eax, [edi+eax*2-28h]
                mov     edi, ecx
                xor     edi, [esp+50h+var_40]
                mov     [esp+50h+var_14], eax
                xor     edi, ecx
                mov     eax, esi
                mov     [esp+50h+var_8], edi
                sub     eax, ebx
                add     esi, 0BEE9F540h
                xor     eax, ecx
                add     ebx, 29E7762Ah
                xor     eax, edx
                xor     ebx, edi
                xor     esi, eax
                mov     [esp+50h+var_20], eax
                xor     esi, [esp+50h+var_40]
                xor     ebx, eax
                mov     ecx, esi
                mov     [esp+50h+var_4], esi
                xor     ecx, edi
                mov     eax, ebx
                xor     ecx, edx
                xor     eax, esi
                xor     ecx, 0E07BDB1Eh
                xor     eax, [esp+50h+var_3C]
                mov     [esp+50h+var_38], ecx
                xor     eax, edx
                movzx   edi, bl
                mov     [esp+50h+var_34], eax
                xor     esi, esi
                mov     eax, ebx
                sub     edi, 0F5h
                shr     eax, 8
                add     al, 5Eh ; '^'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                lea     edx, [ecx-1C298401h]
                adc     esi, dword ptr [esp+50h+var_30+4]
                add     eax, 8FB4318Fh
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, [esp+50h+var_38]
                xor     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     ebx, eax
                xor     ebx, [esp+50h+var_40]
                xor     ebx, [esp+50h+var_3C]
                mov     dword ptr [esp+50h+var_30+4], eax
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_44]
                movzx   eax, bl
                xor     eax, 5
                mov     [eax+edx], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [eax+edx+4], ecx
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, ecx
                movzx   eax, al
                mov     [edx+eax*8+90h], edi
                mov     edi, edx
                mov     [edi+eax*8+94h], esi
                mov     eax, [esp+50h+var_20]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-0A9h]
                add     edx, dword ptr [esp+50h+var_1C]
                adc     ecx, dword ptr [esp+50h+var_1C+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 6Bh
                shr     ebx, 18h
                xor     ebx, 5Eh
                mov     [edi+eax*8+4], ecx
                mov     [edi+eax*8], edx
                mov     eax, [esp+50h+var_14]
                and     dword ptr [edi+ebx*8+4], 0
                mov     [edi+ebx*8], eax
                mov     eax, [esp+50h+var_40]
                mov     edx, [esp+50h+var_8]
                movzx   ecx, al
                add     edx, 5F2B35F5h
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_10]
                xor     ecx, 0EDh
                xor     ecx, esi
                mov     [edi+ecx*8], eax
                mov     eax, [esp+50h+var_C]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                pop     edi
                xor     ecx, 3A2B1022h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___153      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___158_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_4], 0
                mov     edx, ecx
                mov     ecx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_C], edx
                lea     eax, [esi+7DD9316Fh]
                mov     [ebp+var_4], eax
                movzx   eax, cl
                xor     eax, 0D2h
                push    edi
                push    offset dword_40ADB0
                mov     ebx, [eax+edx]
                mov     edi, [eax+edx+4]
                mov     edx, esi
                xor     edx, [ebp+arg_4]
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, [ebp+var_C]
                add     edx, 126EB4CCh
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     esi, 4
                add     ecx, esi
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                sub     esi, 93h
                sub     al, 45h ; 'E'
                xor     ecx, ecx
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                mov     edx, [ebp+var_4]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                add     edx, 60D9D1C1h
                pop     edi
                mov     [eax+1BCh], ecx
                xor     eax, eax
                pop     esi
                or      eax, 0CE83E0CEh
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___158_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___156_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                mov     [ebp+var_4], eax
                push    esi
                mov     esi, ecx
                movzx   ecx, al
                shr     eax, 10h
                xor     ecx, 19h
                sub     al, 67h ; 'g'
                mov     [ebp+var_C], esi
                movzx   eax, al
                cdq
                mov     esi, [ecx+esi]
                push    edi
                mov     edi, [ebp+arg_4]
                sub     edi, [ebp+arg_0]
                sub     esi, eax
                mov     eax, [ebp+var_C]
                push    offset dword_40C310
                mov     ecx, [ecx+eax+4]
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                shr     eax, 8
                xor     al, 0C5h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [ebp+var_C]
                adc     ecx, edx
                mov     edx, [ebp+arg_0]
                sub     edx, [ebp+arg_4]
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, [ebp+var_4]
                mov     ecx, eax
                xor     edx, 7C658B9Ah
                mov     [eax+1B8h], esi
                sub     edx, 76AC92D1h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [edi+98AAF35h]
                xor     eax, [ebp+arg_4]
                xor     edx, edx
                xor     eax, [ebp+arg_0]
                pop     edi
                xor     eax, 60CDC024h
                or      edx, ecx
                pop     esi
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___156_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___87_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                xor     eax, edx
                and     [ebp+var_4], 0
                add     edx, 0A6444B53h
                push    ebx
                mov     [ebp+var_4], eax
                xor     edx, 0C34CA183h
                movzx   eax, al
                push    esi
                xor     eax, 2Dh
                mov     [ebp+var_C], ecx
                push    edi
                push    offset dword_40C5A0
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 2Bh ; '+'
                shr     eax, 10h
                sub     al, 42h ; 'B'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                add     esi, ebx
                mov     ebx, [ebp+arg_0]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     esi, [ebp+arg_4]
                xor     edx, edx
                mov     [eax+1BCh], ecx
                mov     eax, ebx
                sub     eax, esi
                lea     ecx, [ebx-59BBB4ADh]
                xor     eax, ecx
                sub     esi, ebx
                xor     eax, [ebp+var_4]
                xor     esi, [ebp+var_4]
                xor     eax, 0AEDAE6C9h
                xor     esi, 0BA4DA3C8h
                sub     eax, 66883A7Ch
                pop     edi
                or      edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___87_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___197_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                shl     eax, 4
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_C], esi
                movzx   eax, cl
                xor     eax, 79h
                mov     [ebp+var_4], ecx
                push    edi
                push    offset dword_40A2D0
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     eax, [ebp+arg_0]
                sub     eax, [ebp+arg_4]
                xor     eax, 0EFB1779Ah
                mov     [ebp+var_8], ecx
                mov     edx, eax
                mov     [ebp+var_10], eax
                xor     edx, 3A92469Dh
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                add     al, 28h ; '('
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 8
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+var_4]
                mov     [ecx+1BCh], edx
                xor     edx, edx
                mov     ecx, [ebp+arg_4]
                pop     edi
                pop     esi
                lea     eax, [ecx+506568DFh]
                xor     eax, [ebp+var_10]
                xor     eax, ebx
                xor     ebx, ecx
                xor     ebx, [ebp+arg_0]
                add     eax, 1A3B84C6h
                xor     ebx, 0ECD4F2C3h
                or      edx, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___197_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___100      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = qword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                xor     edx, eax
                and     [esp+48h+var_4], 0
                push    esi
                push    edi
                mov     edi, ecx
                mov     [esp+50h+var_40], edx
                lea     ecx, [eax-1B0A91EFh]
                mov     [esp+50h+var_44], edi
                add     ecx, ebx
                mov     edx, [esp+50h+var_44]
                lea     eax, [ebx+1DB185B9h]
                mov     [esp+50h+var_38], ecx
                xor     eax, ecx
                mov     [esp+50h+var_3C], eax
                movzx   eax, cl
                xor     eax, 0CCh
                push    offset dword_40AB08
                mov     esi, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+54h+var_18], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0ABh
                mov     [esp+54h+var_1C], esi
                mov     esi, [esp+54h+var_44]
                mov     edi, [eax+edi]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 56h
                mov     esi, [eax+esi]
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, edx
                mov     ecx, [ecx+eax*8-468h]
                mov     dword ptr [esp+54h+var_30], ecx
                mov     ecx, edx
                mov     edx, [esp+54h+var_40]
                mov     eax, [ecx+eax*8-464h]
                mov     dword ptr [esp+54h+var_30+4], eax
                movzx   eax, dl
                mov     ecx, [eax+ecx+8Fh]
                mov     [esp+54h+var_24], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [eax+ecx+93h]
                mov     [esp+54h+var_20], eax
                mov     eax, edx
                mov     edx, [esp+54h+var_3C]
                shr     eax, 8
                xor     edx, 0CCE341D6h
                not     al
                movzx   eax, al
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+54h+var_C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+54h+var_C+4], eax
                call    VBN_TransformContext
                lea     ecx, [ebx-53598426h]
                mov     edx, ebx
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_38]
                movzx   eax, cx
                add     eax, esi
                shr     ebx, 4
                mov     [esp+50h+var_10], ecx
                mov     eax, [edi+eax*4-7E40h]
                mov     [esp+50h+var_14], eax
                mov     eax, [ebp+arg_0]
                sub     edx, eax
                xor     edx, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_40]
                shl     eax, 4
                add     ebx, eax
                mov     [esp+50h+var_34], edx
                mov     eax, ebx
                xor     eax, ecx
                xor     ebx, edx
                xor     eax, [esp+50h+var_3C]
                xor     ebx, ecx
                mov     [esp+50h+var_28], eax
                mov     cl, bl
                not     cl
                mov     eax, ebx
                shr     eax, 8
                sub     eax, 4C49h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     edx, [esp+50h+var_38]
                sbb     ecx, edi
                add     dword ptr [esp+50h+var_30], eax
                mov     edi, [esp+50h+var_28]
                mov     eax, ebx
                adc     ecx, dword ptr [esp+50h+var_30+4]
                xor     eax, edi
                xor     eax, [esp+50h+var_40]
                mov     esi, dword ptr [esp+50h+var_30]
                xor     eax, edx
                mov     dword ptr [esp+50h+var_30+4], ecx
                mov     ecx, edi
                xor     ecx, [esp+50h+var_34]
                xor     ecx, edx
                mov     [esp+50h+var_28], eax
                xor     ecx, 0BA848CA8h
                xor     eax, 1768B01Ah
                mov     [esp+50h+var_38], ecx
                lea     edx, [ecx+58F64973h]
                xor     ecx, ecx
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, ebx
                mov     [esi+4], edx
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_40]
                mov     ebx, [esp+50h+var_44]
                mov     edx, [esp+50h+var_24]
                movzx   eax, cl
                xor     eax, 4Fh
                mov     [eax+ebx], edx
                mov     edx, [esp+50h+var_20]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_1C]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8+0B8h], edx
                mov     edx, [esp+50h+var_18]
                mov     [ebx+eax*8+0BCh], edx
                mov     eax, ecx
                mov     edx, dword ptr [esp+50h+var_30+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 70h
                shr     ecx, 18h
                mov     [ebx+eax*8], esi
                mov     [ebx+eax*8+4], edx
                xor     edx, edx
                and     dword ptr [ebx+ecx*8+2Ch], 0
                mov     eax, [esp+50h+var_14]
                mov     [ebx+ecx*8+28h], eax
                mov     ebx, [esp+50h+var_10]
                mov     eax, ebx
                shr     eax, 10h
                movzx   esi, al
                mov     eax, [esp+50h+var_3C]
                add     esi, 3
                add     esi, dword ptr [esp+50h+var_C]
                movzx   ecx, al
                adc     edx, dword ptr [esp+50h+var_C+4]
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_28]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_44]
                mov     [eax+ecx*8-5ACh], edx
                mov     edx, [esp+50h+var_34]
                mov     [eax+ecx*8-5B0h], esi
                add     edx, 70C3D484h
                lea     ecx, [edi-3BD987BBh]
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___100      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___113_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                push    ebx
                and     [ebp+var_10], 0
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], edi
                lea     ecx, [esi-64C732CFh]
                movzx   eax, cl
                xor     eax, 0C2h
                push    offset dword_40A460
                mov     ebx, [eax+edi]
                mov     edi, [eax+edi+4]
                mov     eax, esi
                sub     eax, edx
                mov     [ebp+var_10], ebx
                mov     [ebp+var_8], eax
                mov     ebx, esi
                xor     eax, ecx
                shr     ebx, 4
                mov     [ebp+var_C], eax
                mov     eax, edx
                xor     edx, esi
                shl     eax, 4
                xor     edx, [ebp+var_C]
                add     ebx, eax
                xor     ebx, [ebp+var_8]
                xor     edx, [ebp+var_8]
                xor     ebx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, 474AD036h
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                sub     al, 1Ah
                dec     esi
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                add     edx, 9271C1h
                mov     ecx, [ebp+var_C]
                xor     eax, eax
                pop     edi
                add     ecx, 0E0E46608h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___113_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800021dd proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, edx
                mov     [ebp+var_C], ecx
                sub     ebx, esi
                push    edi
                mov     edi, esi
                shl     eax, 4
                xor     ebx, 15729C0h
                shr     edi, 4
                lea     ecx, [edx-3DCAC460h]
                mov     [ebp+var_8], ebx
                add     ecx, esi
                add     edi, eax
                mov     [ebp+var_4], ecx
                xor     edi, ebx
                lea     ecx, [esi-5A6496DDh]
                sub     esi, edx
                xor     ecx, [ebp+var_4]
                xor     esi, edi
                xor     esi, [ebp+var_4]
                xor     ecx, ebx
                mov     edx, [ebp+var_8]
                add     esi, 552A4083h
                mov     eax, edx
                xor     ebx, ebx
                shr     eax, 8
                or      ebx, esi
                mov     esi, [ebp+var_C]
                sub     ecx, 2A722441h
                movzx   eax, al
                xor     eax, 0C7h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_484FB5
                movzx   eax, dl
                cmp     byte ptr [esi+eax*8-318h], 0
                jnz     short loc_484FB5
                mov     ecx, [ebp+var_4]
                xor     ebx, ebx
                xor     edi, 88C8E6B8h
                add     ecx, 0ABDA1414h
                or      ebx, edi

loc_484FB5:                             ; CODE XREF: VBNCB_unnamed_800021dd+73¡üj
                                        ; VBNCB_unnamed_800021dd+80¡üj
                pop     edi
                pop     esi
                mov     eax, ebx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021dd endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___18       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                and     [esp+4Ch+var_4], 0
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ecx, ebx
                shl     ecx, 4
                mov     eax, edi
                shr     eax, 4
                add     ecx, eax
                mov     [esp+50h+var_40], esi
                lea     edx, [edi+4226ED93h]
                mov     [esp+50h+var_44], ecx
                add     edx, ebx
                movzx   eax, dl
                mov     dword ptr [esp+50h+var_34+4], edx
                push    offset dword_40B9FC
                mov     ecx, [eax+esi+46h]
                mov     eax, [eax+esi+4Ah]
                mov     [esp+54h+var_18], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+54h+var_1C], ecx
                mov     ecx, [esi+eax*8-140h]
                mov     eax, [esi+eax*8-13Ch]
                mov     [esp+54h+var_24], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 4Bh
                mov     [esp+54h+var_28], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_2C], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0ACh
                mov     dword ptr [esp+54h+var_34], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+54h+var_10+4], eax
                mov     eax, [esp+54h+var_44]
                movzx   eax, al
                mov     dword ptr [esp+54h+var_10], ecx
                mov     ecx, [esp+54h+var_40]
                mov     esi, [esi+eax*8+0C0h]
                mov     eax, edi
                sub     eax, ebx
                xor     eax, edx
                xor     eax, 0A8BFC0F8h
                mov     edx, eax
                mov     [esp+54h+var_38], eax
                xor     edx, 0A27546Eh
                call    VBN_TransformContext
                mov     ecx, dword ptr [esp+50h+var_34+4]
                mov     edx, edi
                xor     edx, ebx
                shl     edi, 4
                xor     edx, [esp+50h+var_44]
                xor     edx, ecx
                movzx   eax, dl
                xor     eax, 3Fh
                mov     [esp+50h+var_14], edx
                mov     eax, [eax+esi]
                mov     esi, ebx
                shr     esi, 4
                add     esi, edi
                mov     [esp+50h+var_20], eax
                mov     edi, esi
                xor     edi, [esp+50h+var_38]
                xor     edi, [esp+50h+var_44]
                mov     dword ptr [esp+50h+var_34+4], edi
                lea     edi, [ebx-2B28BE63h]
                xor     esi, dword ptr [esp+50h+var_34+4]
                xor     edi, edx
                xor     edi, [esp+50h+var_38]
                xor     esi, edx
                mov     [esp+50h+var_8], edi
                mov     eax, edi
                mov     ebx, esi
                xor     eax, dword ptr [esp+50h+var_34+4]
                xor     ebx, edi
                xor     ebx, [esp+50h+var_44]
                xor     eax, ecx
                xor     eax, 30E40D8Dh
                xor     ebx, ecx
                mov     [esp+50h+var_3C], eax
                xor     edi, edi
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 23h ; '#'
                sub     al, 5Bh ; '['
                movzx   eax, al
                cdq
                sub     ecx, eax
                mov     eax, [esp+50h+var_3C]
                sbb     edi, edx
                add     dword ptr [esp+50h+var_34], ecx
                lea     edx, [esi-9FC03EDh]
                adc     edi, [esp+50h+var_2C]
                add     eax, 0FE4B678Fh
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, dword ptr [esp+50h+var_34]
                mov     [eax], ecx
                mov     [eax+4], edx
                mov     eax, ebx
                mov     edx, [esp+50h+var_40]
                mov     ecx, [esp+50h+var_28]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E9h
                shr     ebx, 18h
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [edx+eax*8+4], ecx
                and     dword ptr [edx+ebx*8-64Ch], 0
                mov     eax, [esp+50h+var_20]
                mov     [edx+ebx*8-650h], eax
                mov     ebx, [esp+50h+var_3C]
                mov     ecx, [esp+50h+var_1C]
                xor     ebx, esi
                xor     ebx, [esp+50h+var_38]
                xor     ebx, [esp+50h+var_44]
                mov     esi, [esp+50h+var_40]
                movzx   eax, bl
                xor     eax, 0BAh
                mov     [eax+edx], ecx
                mov     ecx, [esp+50h+var_18]
                mov     [eax+edx+4], ecx
                mov     ecx, ebx
                mov     eax, [esp+50h+var_14]
                shr     eax, 8
                xor     al, 6Eh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+50h+var_10]
                adc     edx, dword ptr [esp+50h+var_10+4]
                shr     ecx, 8
                movzx   ecx, cl
                shr     ebx, 10h
                mov     [esi+ecx*8+98h], eax
                mov     [esi+ecx*8+9Ch], edx
                mov     ecx, dword ptr [esp+50h+var_34]
                mov     edx, dword ptr [esp+50h+var_34+4]
                movzx   eax, bl
                add     edx, 4D2F7216h
                mov     [esi+eax*8-8], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [esi+eax*8-4], edi
                add     ecx, 998731EBh
                pop     edi
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___18       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___98_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                xor     eax, eax
                xor     eax, edx
                mov     [ebp+var_4], ecx
                push    ebx
                mov     [ebp+var_10], eax
                mov     ecx, edx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                xor     ebx, esi
                shl     ecx, 4
                push    edi
                mov     eax, esi
                mov     [ebp+var_8], ebx
                shr     eax, 4
                mov     edi, esi
                add     ecx, eax
                sub     edi, edx
                mov     eax, [ebp+var_8]
                xor     ecx, ebx
                xor     ebx, edx
                mov     [ebp+var_10], ecx
                xor     edi, 0DC01EF66h
                movzx   ecx, al
                xor     ebx, esi
                mov     [ebp+var_C], edi
                xor     ebx, edi
                xor     ecx, 0Bh
                mov     edi, [ebp+var_4]
                mov     eax, ebx
                shr     eax, 8
                add     al, 33h ; '3'
                movzx   eax, al
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                mov     ecx, [ebp+var_4]
                cdq
                sub     esi, eax
                push    offset dword_40BFF0
                sbb     edi, edx
                xor     bl, 7
                movzx   eax, bl
                mov     ebx, [ebp+var_10]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+var_8]
                xor     edx, ebx
                xor     edx, [ebp+var_C]
                xor     edx, 91D77992h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx+49018D4Ch]
                mov     edx, [ebp+var_C]
                xor     edx, 26944159h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___98_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001fd7 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     eax, esi
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                mov     [ebp+var_10], ecx
                mov     eax, esi
                mov     [ebp+var_4], ebx
                shl     eax, 4
                mov     ecx, edx
                shr     ecx, 4
                add     ecx, eax
                mov     eax, edx
                xor     eax, esi
                xor     eax, ebx
                lea     ebx, [esi-7DBF49BAh]
                sub     esi, edx
                mov     [ebp+var_8], eax
                mov     eax, [ebp+var_4]
                add     ebx, edx
                mov     edx, [ebp+var_8]
                xor     ebx, ecx
                xor     esi, edx
                xor     ebx, eax
                xor     esi, ecx
                shr     eax, 8
                push    edi
                xor     esi, 0C34E9B7Eh
                movzx   eax, al
                xor     edi, edi
                or      edi, esi
                mov     esi, [ebp+var_10]
                cmp     byte ptr [esi+eax*8-250h], 0
                jnz     short loc_485362
                mov     eax, [ebp+var_4]
                movzx   eax, al
                xor     eax, 3Eh
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_485362
                xor     edi, edi
                lea     eax, [edx-104A4B02h]
                xor     ecx, 7F4D2756h
                or      edi, eax
                jmp     short loc_485368
; ---------------------------------------------------------------------------

loc_485362:                             ; CODE XREF: VBNCB_unnamed_80001fd7+6F¡üj
                                        ; VBNCB_unnamed_80001fd7+7E¡üj
                lea     ecx, [ebx-6C24FA48h]

loc_485368:                             ; CODE XREF: VBNCB_unnamed_80001fd7+90¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001fd7 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___185_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                xor     eax, edx
                shr     esi, 4
                push    edi
                mov     edi, ecx
                mov     [ebp+var_8], eax
                movzx   eax, al
                shl     edx, 4
                add     edx, esi
                mov     [ebp+var_14], edi
                mov     [ebp+var_4], edx
                add     edx, 0FAD6B971h
                mov     ecx, [eax+edi-3Eh]
                mov     ebx, [eax+edi-3Ah]
                mov     [ebp+var_C], ecx
                mov     ecx, edi
                push    offset dword_40AAF0
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                xor     ecx, [ebp+var_8]
                mov     eax, ecx
                mov     [ebp+var_4], ecx
                shr     eax, 8
                xor     cl, 75h
                add     al, 49h ; 'I'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_14]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_C]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                xor     eax, eax
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+var_8]
                mov     ecx, [ebp+var_4]
                xor     edx, 27BF8BB3h
                pop     edi
                xor     ecx, 0A70E2321h
                or      eax, edx
                pop     esi
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___185_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_2          proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
Val             = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                and     [ebp+var_14], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                sub     ebx, [ebp+arg_0]
                movzx   eax, bl
                mov     [ebp+var_14], eax
                xor     eax, 7
                push    esi
                push    edi
                mov     [ebp+var_4], edx
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     [ebp+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F9h
                mov     [ebp+Val], ecx
                mov     ecx, [ebp+var_4]
                push    offset dword_40A610
                mov     edi, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     [ebp+var_C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 6Eh
                shr     ebx, 18h
                mov     esi, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     [ebp+var_C], eax
                mov     eax, [ebx+edx+97h]
                mov     ebx, [ebx+edx+9Bh]
                mov     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                xor     edx, 3E12213Ah
                mov     [ebp+var_C], eax
                call    VBN_TransformContext
                push    esi             ; Size
                push    [ebp+Val]       ; Val
                push    edi             ; Dst
                call crt_memset
                mov     esi, [ebp+var_C]
                add     esp, 0Ch
                mov     ecx, [ebp+arg_0]
                mov     edi, [ebp+var_4]
                mov     eax, [esi]
                mov     edx, [esi+4]
                add     esi, 8
                adc     ebx, 0
                sub     cl, 39h ; '9'
                add     cl, byte ptr [ebp+arg_4]
                movzx   ecx, cl
                xor     ecx, 0B3h
                xor     ecx, [ebp+var_14]
                mov     [ecx+edi], esi
                mov     [ecx+edi+4], ebx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_2          endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__9       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                xor     edx, [ebp+arg_4]
                movzx   eax, dl
                xor     eax, 0ACh
                and     [esp+14h+var_C], 0
                push    ebx
                mov     ebx, ecx
                mov     [esp+18h+var_14], edx
                push    esi
                push    edi
                mov     ecx, [ebx+eax*8]
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+20h+var_14]
                mov     [esp+20h+var_10], ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [ebx+edx*8-478h]
                xor     ecx, 60h
                xor     edx, edx
                mov     edi, [eax+ecx]
                xor     eax, eax
                mov     ecx, [esp+20h+var_14]
                inc     eax
                shr     ecx, 18h
                sub     ecx, 0ABh
                call    __allshl
                mov     esi, [esp+20h+var_14]
                mov     ecx, ebx
                mov     edx, esi
                add     edi, eax
                push    offset sub_40C0B4
                xor     edx, 1D461285h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                mov     ebx, esi
                xor     ebx, [ebp+arg_4]
                mov     ecx, edx
                sub     ecx, [ebp+arg_4]
                xor     ebx, edx
                mov     eax, ecx
                xor     eax, esi
                xor     eax, esi
                xor     eax, 2FEC2FA9h
                mov     [esp+20h+var_14], eax
                mov     eax, [esp+20h+var_10]
                sub     eax, edi
                jz      short loc_4855B9
                mov     eax, [esp+20h+var_14]
                lea     edx, [ebx-1BFDAF63h]
                xor     esi, esi
                add     eax, 234DA61Eh
                or      esi, eax
                jmp     short loc_4855DF
; ---------------------------------------------------------------------------

loc_4855B9:                             ; CODE XREF: vBng_h__9+A2¡üj
                xor     ecx, [esp+20h+var_14]
                add     edx, 4396CECFh
                xor     ecx, ebx
                xor     edx, ebx
                xor     edx, esi
                xor     ecx, 0A26D9F16h
                xor     esi, esi
                add     ecx, 437AAD05h
                add     edx, 5ECF3F4Ah
                or      esi, ecx

loc_4855DF:                             ; CODE XREF: vBng_h__9+B7¡üj
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__9       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___62       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                mov     [esp+50h+var_40], ecx
                mov     esi, [esp+50h+var_40]
                shl     ebx, 4
                add     ebx, eax
                mov     ecx, ebx
                mov     [esp+50h+var_3C], ebx
                shr     ecx, 8
                movzx   eax, cl
                movzx   ecx, cl
                xor     ecx, 0C2h
                push    offset dword_40A568
                mov     edx, [eax+esi-0Ah]
                mov     eax, [eax+esi-6]
                mov     [esp+54h+var_C], eax
                mov     eax, ebx
                shr     eax, 10h
                mov     [esp+54h+var_10], edx
                movzx   edx, al
                mov     eax, edx
                xor     eax, 6Ch
                mov     esi, [eax+esi]
                mov     [esp+54h+var_24], esi
                mov     esi, [esp+54h+var_40]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_20], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 54h
                mov     ebx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     dword ptr [esp+54h+var_34], ebx
                mov     ebx, [esp+54h+var_3C]
                movzx   eax, bl
                mov     [esp+54h+var_14], eax
                xor     eax, 5Eh
                mov     eax, [eax+esi]
                mov     eax, [eax+ecx]
                lea     ecx, [edx-5Ch]
                mov     [esp+54h+var_28], eax
                xor     edx, edx
                movzx   eax, bl
                add     ecx, [eax+esi+2Ah]
                mov     [esp+54h+var_1C], ecx
                mov     ecx, esi
                adc     edx, [eax+esi+2Eh]
                mov     [esp+54h+var_18], edx
                mov     edx, 0CDE52C03h
                call    VBN_TransformContext
                mov     esi, [ebp+arg_4]
                lea     eax, [edi+3E6A0424h]
                add     eax, esi
                lea     ecx, [edi+636221A8h]
                xor     eax, ebx
                xor     eax, ebx
                mov     [esp+50h+var_8], eax
                lea     edx, [esi+1D08980Ah]
                xor     edx, ebx
                lea     ebx, [esi-5981F1E6h]
                xor     ebx, eax
                mov     [esp+50h+var_4], edx
                xor     ecx, edx
                xor     ecx, eax
                mov     eax, ebx
                xor     eax, edx
                mov     [esp+50h+var_2C], ecx
                xor     eax, [esp+50h+var_3C]
                xor     eax, 6604099Fh
                mov     [esp+50h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                add     al, 0Fh
                movzx   eax, al
                cdq
                xor     esi, esi
                movzx   edi, bl
                sub     edi, 8Ch
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                lea     edx, [ecx-5FB31909h]
                adc     esi, dword ptr [esp+50h+var_34+4]
                add     eax, 0E07357E0h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_2C]
                mov     ecx, edx
                xor     ecx, ebx
                mov     ebx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_3C]
                movzx   eax, cl
                mov     [ebx+eax*8-0C0h], edi
                mov     edi, ebx
                mov     ebx, [esp+50h+var_24]
                mov     [edi+eax*8-0BCh], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E9h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_20]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C3h
                shr     ecx, 18h
                mov     [eax+edi], ebx
                mov     [eax+edi+4], esi
                mov     eax, [esp+50h+var_1C]
                mov     [edi+ecx*8-6D0h], eax
                mov     eax, [esp+50h+var_18]
                mov     [edi+ecx*8-6CCh], eax
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                movzx   ecx, dl
                mov     edx, [esp+50h+var_8]
                xor     ecx, eax
                xor     ecx, [esp+50h+var_14]
                add     edx, 21C1EDFFh
                mov     eax, [esp+50h+var_10]
                mov     [edi+ecx*8-200h], eax
                mov     eax, [esp+50h+var_C]
                mov     [edi+ecx*8-1FCh], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                pop     edi
                xor     ecx, 0CC8968ACh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___62       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___95       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, ecx
                and     [esp+48h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_0]
                xor     eax, esi
                mov     [esp+4Ch+var_3C], eax
                sub     edx, esi
                shr     eax, 18h
                mov     [esp+4Ch+var_40], ebx
                mov     [esp+4Ch+var_30], edx
                push    edi
                mov     ecx, [ebx+eax*8-198h]
                mov     ebx, [ebx+eax*8-194h]
                mov     [esp+50h+var_28], ecx
                mov     ecx, [esp+50h+var_40]
                movzx   eax, dl
                mov     [esp+50h+var_C], eax
                xor     eax, 52h
                mov     edi, [esp+50h+var_40]
                shr     edx, 18h
                sub     edx, 3
                mov     ecx, [eax+ecx]
                mov     [esp+50h+var_1C], ecx
                mov     ecx, [esp+50h+var_40]
                push    offset dword_40A500
                mov     eax, [eax+ecx+4]
                mov     [esp+54h+var_18], eax
                mov     eax, [esp+54h+var_3C]
                movzx   eax, al
                mov     ecx, [ecx+eax*8-1A8h]
                mov     [esp+54h+var_24], ecx
                mov     ecx, [esp+54h+var_40]
                mov     eax, [ecx+eax*8-1A4h]
                xor     ecx, ecx
                mov     [esp+54h+var_20], eax
                mov     eax, [esp+54h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 4Ah
                add     edx, [edi+eax*8]
                mov     [esp+54h+var_14], edx
                mov     edx, edi
                adc     ecx, [edx+eax*8+4]
                mov     eax, [esp+54h+var_30]
                shr     eax, 8
                mov     [esp+54h+var_10], ecx
                movzx   ecx, al
                mov     eax, [esp+54h+var_30]
                xor     ecx, 0D5h
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [edx+ecx*8]
                add     ecx, eax
                mov     eax, [esp+54h+var_3C]
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+edi+1Ch]
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shr     edx, 4
                mov     eax, [eax+ecx*4]
                mov     ecx, [esp+54h+var_40]
                mov     [esp+54h+var_8], eax
                lea     eax, [edi+5F04A8C0h]
                xor     eax, [esp+54h+var_3C]
                mov     [esp+54h+var_34], eax
                mov     eax, esi
                shl     eax, 4
                add     edx, eax
                mov     esi, edx
                mov     [esp+54h+var_38], edx
                xor     esi, [esp+54h+var_34]
                xor     esi, [esp+54h+var_30]
                lea     edx, [esi-74616BE4h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                sub     ecx, edi
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_34]
                xor     edi, edi
                xor     ecx, 0FD5657BFh
                mov     eax, ecx
                mov     [esp+50h+var_2C], ecx
                shr     eax, 8
                xor     al, 0EDh
                movzx   ecx, cl
                movzx   eax, al
                sub     ecx, 6Ah ; 'j'
                cdq
                sub     ecx, eax
                mov     eax, [esp+50h+var_38]
                sbb     edi, edx
                add     [esp+50h+var_28], ecx
                adc     edi, ebx
                mov     ebx, [esp+50h+var_2C]
                xor     eax, esi
                xor     ebx, esi
                xor     eax, [esp+50h+var_3C]
                xor     ecx, ecx
                xor     ebx, [esp+50h+var_3C]
                mov     esi, [esp+50h+var_28]
                xor     ebx, 7CEB6210h
                mov     [esp+50h+var_38], eax
                lea     edx, [eax-0A73F5DFh]
                lea     eax, [ebx+37BC9FECh]
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_2C]
                xor     ecx, [esp+50h+var_30]
                xor     ecx, [esp+50h+var_3C]
                mov     [esi+4], edx
                mov     esi, [esp+50h+var_40]
                mov     edx, [esp+50h+var_24]
                movzx   eax, cl
                xor     eax, 13h
                mov     [eax+esi], edx
                mov     edx, [esp+50h+var_20]
                mov     [eax+esi+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_1C]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-0F8h], edx
                mov     edx, [esp+50h+var_18]
                mov     [esi+eax*8-0F4h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_14]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F7h
                shr     ecx, 18h
                mov     [esi+eax*8], edx
                mov     edx, [esp+50h+var_10]
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+50h+var_40]
                mov     esi, [esp+50h+var_28]
                mov     edx, [esp+50h+var_38]
                mov     [eax+ecx*8+80h], esi
                mov     esi, eax
                mov     eax, [esp+50h+var_34]
                mov     [esi+ecx*8+84h], edi
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+50h+var_34]
                xor     ecx, eax
                movzx   eax, bl
                add     edx, 92BF5816h
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, 0B4h
                xor     ecx, [esp+50h+var_C]
                pop     edi
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_3C]
                xor     ecx, 7F11365Ch
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___95       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___112_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = qword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, dword ptr [ebp+arg_0]
                and     [ebp+var_8], 0
                add     eax, 0EE387B5Eh
                push    ebx
                mov     ebx, ecx
                mov     [ebp+var_4], eax
                push    esi
                mov     esi, dword ptr [ebp+arg_0+4]
                movzx   eax, al
                push    edi
                push    offset dword_40A480
                lea     edx, [esi-7592974Fh]
                mov     [ebp+var_10], ebx
                mov     ecx, [eax+ebx+34h]
                mov     edi, [eax+ebx+38h]
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                call    VBN_TransformContext
                lea     ebx, [esi+560D8713h]
                xor     ecx, ecx
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 12h
                add     al, 0Fh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_10]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     esi, dword ptr [ebp+arg_0+4]
                xor     edx, edx
                mov     edi, dword ptr [ebp+arg_0]
                mov     [eax+1BCh], ecx
                mov     eax, edi
                mov     ecx, esi
                shr     eax, 4
                shl     ecx, 4
                xor     edi, esi
                add     ecx, eax
                lea     eax, [esi-3FBFD6B0h]
                xor     edi, eax
                xor     ecx, ebx
                xor     edi, [ebp+var_4]
                xor     ecx, eax
                xor     edi, 485A16FAh
                or      edx, edi
                pop     edi
                pop     esi
                lea     eax, [ecx+2AC634A1h]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___112_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___136_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, ecx
                lea     ecx, [edx-3C779CD5h]
                movzx   eax, cl
                xor     eax, 7Dh
                mov     [ebp+var_4], esi
                push    edi
                push    offset dword_40C0A0
                mov     ebx, [esi+eax*8]
                mov     edi, [esi+eax*8+4]
                lea     eax, [edx+6B4781ABh]
                mov     [ebp+var_C], ebx
                xor     eax, ecx
                mov     ebx, [ebp+arg_0]
                mov     esi, ebx
                xor     esi, edx
                mov     [ebp+var_8], eax
                sub     ebx, edx
                mov     [ebp+var_10], esi
                mov     edx, ebx
                xor     edx, esi
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, 9ECFED1Eh
                call    VBN_TransformContext
                xor     ebx, [ebp+var_8]
                xor     ebx, esi
                xor     ebx, 64A4E514h
                mov     eax, ebx
                xor     bl, 0D8h
                shr     eax, 8
                xor     al, 0BBh
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_8]
                mov     edx, [ebp+var_10]
                xor     ecx, 0D3CB01C8h
                pop     edi
                pop     esi
                add     edx, 0ACEE9058h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___136_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___72       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                mov     edx, ecx
                push    ebx
                push    esi
                push    edi
                lea     ecx, [eax-7C2D70ECh]
                mov     [esp+58h+var_4C], edx
                add     eax, 35F4AEE1h
                mov     ebx, [ebp+arg_4]
                mov     [esp+58h+var_44], eax
                movzx   eax, cl
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_38], ecx
                lea     esi, [ebx+39FA4F7Ch]
                xor     esi, ecx
                mov     edi, [eax+edx-5Ch]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E4h
                mov     [esp+58h+var_40], esi
                xor     esi, 15F083h
                push    offset off_40BB5C ; "\u2D00\u3900¡¡\u3700êÀ\u2D00\u3400\u3600\u3100êÀ\u3100êÀ‘Ù\u3100êÀêÀ\u3400ÅÊ"
                mov     edx, [eax+edx]
                mov     dword ptr [esp+5Ch+var_34], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     edx, [eax+edx-28h]
                mov     [esp+5Ch+var_24], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx-24h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     edx, [edx+eax*8-528h]
                mov     [esp+5Ch+var_14], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8-524h]
                mov     edx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [ebp+arg_0]
                sub     eax, ebx
                mov     [esp+5Ch+var_3C], eax
                xor     eax, edx
                xor     eax, ecx
                mov     ecx, [esp+5Ch+var_4C]
                xor     eax, 4A173002h
                mov     [esp+5Ch+var_48], eax
                movzx   eax, dl
                xor     eax, 8Dh
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_2C+4], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   ecx, al
                xor     ecx, 1Ch
                add     esi, [ecx+edx]
                mov     edx, [esp+5Ch+var_48]
                mov     ecx, [esp+5Ch+var_4C]
                lea     edx, [edx-44B90A81h]
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_3C]
                xor     eax, eax
                xor     edx, [esp+58h+var_40]
                xor     edx, [esp+58h+var_44]
                shld    eax, esi, 2
                xor     edx, 0FB2D82BFh
                mov     [esp+58h+var_3C], edx
                mov     eax, [edi+esi*4]
                mov     esi, ebx
                mov     edi, [ebp+arg_0]
                mov     [esp+58h+var_1C], eax
                shl     esi, 4
                mov     eax, edi
                xor     edi, edx
                shr     eax, 4
                xor     edi, ebx
                xor     edi, [esp+58h+var_48]
                add     esi, eax
                xor     esi, [esp+58h+var_48]
                mov     eax, edi
                xor     esi, [esp+58h+var_40]
                xor     eax, esi
                mov     [esp+58h+var_C], esi
                mov     ecx, esi
                mov     [esp+58h+var_8], edi
                mov     esi, [esp+58h+var_44]
                xor     ecx, edx
                mov     edx, [esp+58h+var_38]
                xor     eax, esi
                xor     eax, edx
                xor     ecx, edx
                mov     [esp+58h+var_44], eax
                xor     ecx, 8BDB30AEh
                mov     eax, ecx
                mov     [esp+58h+var_38], ecx
                shr     eax, 8
                mov     ebx, ecx
                xor     al, 24h
                xor     ebx, edi
                xor     ebx, [esp+58h+var_40]
                movzx   eax, al
                xor     ebx, esi
                cdq
                xor     esi, esi
                movzx   edi, cl
                sub     edi, 3Fh ; '?'
                mov     [esp+58h+var_18], ebx
                sub     edi, eax
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_44]
                adc     esi, dword ptr [esp+58h+var_34+4]
                xor     ecx, ecx
                xor     ebx, 7716B913h
                xor     edx, 21B8652Bh
                or      ecx, ebx
                mov     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_40]
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     [edi+4], edx
                movzx   eax, bl
                xor     eax, 0B3h
                mov     [ecx+eax*8], edi
                mov     edi, ecx
                xor     ecx, ecx
                mov     [edi+eax*8+4], esi
                mov     eax, [esp+58h+var_3C]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-28h]
                add     edx, dword ptr [esp+58h+var_2C]
                adc     ecx, dword ptr [esp+58h+var_2C+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 30h
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edi+eax*8], edx
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 11h
                shr     ebx, 18h
                mov     [eax+edi], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+edi+4], ecx
                mov     eax, [esp+58h+var_1C]
                and     dword ptr [edi+ebx*8-64h], 0
                mov     [edi+ebx*8-68h], eax
                mov     eax, [esp+58h+var_48]
                mov     edx, [esp+58h+var_C]
                movzx   ecx, al
                add     edx, 686CEF3Ah
                mov     eax, [esp+58h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_18]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, 86h
                xor     ecx, esi
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_10]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                add     ecx, 6B83320Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___72       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___10_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                xor     ebx, 16FFB242h
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 10h
                xor     ecx, 4Eh
                xor     al, 0AFh
                mov     [ebp+var_4], esi
                movzx   eax, al
                cdq
                mov     esi, [ecx+esi]
                push    edi
                mov     edi, [ebp+arg_4]
                xor     edi, [ebp+arg_0]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40AC70
                mov     ecx, [ecx+eax+4]
                mov     eax, ebx
                sbb     ecx, edx
                shr     eax, 8
                xor     al, 8Eh
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     edx, [ebp+arg_4]
                add     edx, 31561895h
                add     edx, [ebp+arg_0]
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, ebx
                mov     [eax+1B8h], esi
                add     edx, 6CEE0368h
                mov     ecx, eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                lea     ecx, [edi-131DB778h]
                sub     eax, [ebp+arg_0]
                xor     edx, edx
                xor     eax, ebx
                pop     edi
                pop     esi
                sub     eax, 3E974188h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___10_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f27 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     [esp+28h+var_18], ecx
                lea     eax, [edi+esi]
                lea     ebx, [eax-6F270173h]
                mov     [esp+28h+var_14], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+28h+var_18]
                xor     ecx, 0B3h
                mov     eax, [edx+eax-39h]
                mov     edx, [eax+ecx]
                mov     ecx, [esp+28h+var_18]
                movzx   eax, bl
                xor     eax, 0B2h
                mov     ecx, [eax+ecx]
                cmp     ecx, edx
                mov     eax, edx
                setnbe  [esp+28h+var_19]
                sub     eax, ecx
                mov     [esp+28h+var_8], eax
                lea     eax, [esi-7D2B3923h]
                mov     [esp+28h+var_C], eax
                mov     eax, [esp+28h+var_14]
                add     eax, 0F082929Bh
                shl     edi, 4
                xor     eax, ebx
                mov     [esp+28h+var_10], eax
                mov     eax, esi
                shr     eax, 4
                add     edi, eax
                lea     eax, [esi-7D2B3923h]
                xor     edi, eax
                mov     eax, [ebp+arg_4]
                xor     edi, ebx
                sub     eax, esi
                mov     ebx, [esp+28h+var_10]
                xor     eax, edi
                xor     eax, ebx
                mov     [esp+28h+var_10], eax
                cmp     ecx, edx
                jbe     short loc_485FCC
                lea     eax, [ebx-3F211E69h]
                xor     edx, edx
                add     esi, 0D04F82B4h
                or      edx, eax
                mov     eax, [esp+28h+var_10]
                jmp     short loc_485FEC
; ---------------------------------------------------------------------------

loc_485FCC:                             ; CODE XREF: VBNCB_unnamed_80001f27+A4¡üj
                mov     edx, [esp+28h+var_14]
                xor     esi, esi
                add     edx, 72DD0D91h
                xor     edi, 0D8C06DCEh
                xor     edx, ebx
                xor     edx, [esp+28h+var_C]
                xor     edx, 8E8F859Dh
                or      esi, edi

loc_485FEC:                             ; CODE XREF: VBNCB_unnamed_80001f27+BA¡üj
                cmp     [esp+28h+var_8], 0
                mov     edi, [esp+28h+var_18]
                movzx   ecx, al
                setz    bl
                xor     ecx, 5Eh
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                mov     [edi+ecx*8-400h], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f27 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___68       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, esi
                and     [esp+48h+var_4], 0
                xor     ebx, edi
                movzx   ecx, bl
                mov     [esp+48h+var_8], ecx
                mov     [esp+48h+var_34], edx
                push    offset dword_40A6EC
                mov     eax, [ecx+edx-26h]
                mov     dword ptr [esp+4Ch+var_14], eax
                mov     eax, [ecx+edx-22h]
                mov     dword ptr [esp+4Ch+var_14+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+4Ch+var_38], esi
                mov     ecx, [edx+eax*8-410h]
                mov     eax, [edx+eax*8-40Ch]
                mov     dword ptr [esp+4Ch+var_24+4], eax
                lea     eax, [edi+4AA5B74Ch]
                add     eax, esi
                mov     dword ptr [esp+4Ch+var_24], ecx
                mov     ecx, [esp+4Ch+var_34]
                mov     edx, eax
                xor     edx, 0A4CC45E1h
                mov     [esp+4Ch+var_C], eax
                call    VBN_TransformContext
                shr     [esp+48h+var_38], 4
                lea     ecx, [edi+4AA5B74Ch]
                add     ecx, esi
                mov     eax, esi
                lea     edx, [eax-47C0935h]
                add     eax, 599F15CCh
                xor     eax, ecx
                xor     edx, ebx
                xor     eax, ebx
                mov     [esp+48h+var_18], edx
                mov     [esp+48h+var_28], eax
                mov     eax, edi
                shl     eax, 4
                add     [esp+48h+var_38], eax
                mov     eax, [esp+48h+var_38]
                xor     eax, edx
                xor     eax, ecx
                lea     ecx, [esi-528A147Eh]
                add     ecx, edi
                mov     [esp+48h+var_38], eax
                xor     ecx, [esp+48h+var_28]
                lea     eax, [edi+420A0917h]
                xor     eax, [esp+48h+var_38]
                xor     ecx, edx
                xor     eax, [esp+48h+var_28]
                mov     [esp+48h+var_30], ecx
                xor     ecx, [esp+48h+var_38]
                xor     ecx, ebx
                mov     [esp+48h+var_2C], eax
                xor     ecx, 7E67060Eh
                mov     eax, ecx
                mov     [esp+48h+var_1C], ecx
                shr     eax, 8
                xor     cl, 41h
                add     al, 12h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                sub     ebx, esi
                mov     esi, [esp+48h+var_30]
                sbb     edx, edi
                add     ebx, dword ptr [esp+48h+var_24]
                adc     edx, dword ptr [esp+48h+var_24+4]
                add     esi, 0D579255Bh
                xor     ecx, ecx
                mov     eax, [esp+48h+var_2C]
                mov     edi, [esp+48h+var_34]
                xor     eax, 0A1EC6C83h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+48h+var_1C]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 8Ah
                mov     [ebx+4], esi
                shr     ecx, 18h
                xor     ecx, 0AAh
                mov     [edi+eax*8], ebx
                mov     ebx, [esp+48h+var_18]
                mov     [edi+eax*8+4], edx
                mov     al, bl
                xor     al, 0A7h
                movzx   eax, al
                cdq
                mov     [edi+ecx*8], eax
                mov     eax, ebx
                mov     [edi+ecx*8+4], edx
                shr     eax, 10h
                xor     al, 0C9h
                shr     ebx, 8
                movzx   eax, al
                xor     bl, 48h
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [esp+48h+var_C]
                sbb     edx, esi
                add     eax, dword ptr [esp+48h+var_14]
                movzx   esi, cl
                adc     edx, dword ptr [esp+48h+var_14+4]
                mov     ecx, [esp+48h+var_30]
                movzx   ecx, cl
                xor     esi, ecx
                mov     ecx, [esp+48h+var_2C]
                movzx   ecx, cl
                xor     esi, ecx
                mov     ecx, [esp+48h+var_38]
                xor     esi, [esp+48h+var_8]
                add     ecx, 0A33FE426h
                mov     [edi+esi*8-138h], eax
                xor     eax, eax
                mov     [edi+esi*8-134h], edx
                mov     edx, [esp+48h+var_28]
                pop     edi
                pop     esi
                xor     edx, 0D4A4CD48h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___68       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___86       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, eax
                and     [esp+50h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_0]
                lea     edx, [eax+7B9C11F8h]
                shl     ebx, 4
                mov     eax, esi
                shr     eax, 4
                add     ebx, eax
                mov     [esp+54h+var_4C], edx
                mov     eax, edx
                mov     [esp+54h+var_44], ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 87h
                push    edi
                mov     edi, ecx
                push    offset dword_40A61C
                mov     [esp+5Ch+var_2C], edi
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     dword ptr [esp+5Ch+var_38], ecx
                movzx   eax, bl
                mov     [esp+5Ch+var_18], eax
                mov     ecx, [edi+eax*8-170h]
                mov     eax, [edi+eax*8-16Ch]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 18h
                mov     edx, ebx
                mov     [esp+5Ch+var_28], ecx
                xor     ecx, ecx
                shr     edx, 18h
                sub     edx, 0B2h
                add     edx, [edi+eax*8-3A0h]
                mov     [esp+5Ch+var_20], edx
                adc     ecx, [edi+eax*8-39Ch]
                mov     eax, ebx
                mov     edx, [esp+5Ch+var_4C]
                lea     ebx, [esi+7D31E73Ah]
                mov     [esp+5Ch+var_1C], ecx
                xor     ebx, edx
                shr     eax, 10h
                movzx   ecx, dl
                xor     ecx, 8Ah
                movzx   eax, al
                xor     eax, 0FEh
                mov     [esp+5Ch+var_3C], ebx
                mov     ecx, [ecx+edi]
                add     ecx, eax
                mov     eax, edx
                shr     eax, 8
                lea     edx, [ebx+0B62D8FDh]
                movzx   eax, al
                mov     eax, [eax+edi-0Bh]
                mov     eax, [eax+ecx*4]
                mov     ecx, edi
                mov     [esp+5Ch+var_30], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                lea     ecx, [esi+493A1ECEh]
                mov     edx, [ebp+arg_4]
                sub     eax, esi
                xor     eax, [esp+58h+var_44]
                xor     ecx, ebx
                xor     eax, [esp+58h+var_4C]
                mov     ebx, esi
                xor     ecx, [esp+58h+var_44]
                sub     ebx, edx
                mov     [esp+58h+var_C], eax
                mov     [esp+58h+var_8], ecx
                xor     ebx, eax
                xor     edx, esi
                xor     ebx, [esp+58h+var_3C]
                xor     edx, ecx
                xor     edx, eax
                xor     ebx, 4B20DD6Ah
                mov     eax, ebx
                mov     [esp+58h+var_48], edx
                xor     eax, ecx
                movzx   edi, bl
                xor     eax, [esp+58h+var_4C]
                xor     esi, esi
                mov     [esp+58h+var_40], eax
                sub     edi, 76h ; 'v'
                mov     eax, ebx
                shr     eax, 8
                add     al, 30h ; '0'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                mov     edx, [esp+58h+var_48]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     eax, 135E6E86h
                xor     ecx, ecx
                add     edx, 53DF3915h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_4C]
                mov     ebx, [esp+58h+var_2C]
                mov     edx, [esp+58h+var_30]
                movzx   eax, cl
                and     dword ptr [ebx+eax*8-234h], 0
                mov     [ebx+eax*8-238h], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 87h
                mov     [eax+ebx], edx
                mov     edx, [esp+58h+var_24]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 27h
                mov     [ebx+eax*8-4E8h], edx
                mov     edx, [esp+58h+var_1C]
                mov     [ebx+eax*8-4E4h], edx
                mov     eax, [esp+58h+var_40]
                mov     [ebx+ecx*8], edi
                mov     [ebx+ecx*8+4], esi
                mov     edx, [esp+58h+var_C]
                movzx   ecx, al
                xor     edx, 408E20B5h
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, 41h
                xor     ecx, [esp+58h+var_18]
                pop     edi
                pop     esi
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+50h+var_10]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                add     ecx, 1E65A700h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___86       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___31_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_4]
                sub     eax, [ebp+arg_0]
                push    ebx
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    esi
                mov     esi, ecx
                xor     eax, 80h
                push    edi
                push    offset dword_40BBE0
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_10], ecx
                lea     edx, [ecx-210CB233h]
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                add     al, 7Bh ; '{'
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 37h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                adc     edx, ebx
                mov     [ecx+1BCh], edx
                xor     edx, edx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                xor     eax, eax
                xor     ecx, [ebp+var_10]
                xor     eax, 280D5B3Eh
                xor     ecx, [ebp+var_4]
                pop     edi
                xor     ecx, 7FD97441h
                or      edx, eax
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___31_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___15       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shr     edx, 4
                lea     ebx, [esi+58487DA9h]
                add     edx, eax
                mov     [esp+50h+var_44], ecx
                movzx   eax, dl
                add     ebx, edi
                mov     [esp+50h+var_38], edx
                mov     [esp+50h+var_3C], ebx
                push    offset dword_40BA40
                mov     ecx, [ecx+eax*8+0A8h]
                mov     dword ptr [esp+54h+var_14], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+0ACh]
                mov     dword ptr [esp+54h+var_14+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 6Fh
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+54h+var_34], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 85h
                mov     ecx, [ecx+eax*8]
                mov     [esp+54h+var_2C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+54h+var_28], eax
                movzx   eax, bl
                mov     ecx, [ecx+eax*8-270h]
                mov     [esp+54h+var_C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8-26Ch]
                mov     [esp+54h+var_8], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_44]
                mov     eax, [eax+edx*8-5E8h]
                mov     eax, [eax+ecx-1Bh]
                mov     ecx, [esp+54h+var_44]
                mov     [esp+54h+var_1C], eax
                mov     eax, esi
                sub     eax, edi
                mov     ebx, eax
                mov     [esp+54h+var_40], eax
                xor     ebx, [esp+54h+var_38]
                xor     ebx, 0D04AE7D0h
                mov     edx, ebx
                mov     [esp+54h+var_20], ebx
                xor     edx, 0CBF50017h
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_40]
                mov     eax, edi
                mov     edx, [esp+50h+var_38]
                sub     eax, esi
                xor     eax, [esp+50h+var_3C]
                lea     esi, [edi+776E34B8h]
                xor     ecx, ebx
                xor     eax, edx
                xor     ecx, [esp+50h+var_3C]
                xor     esi, eax
                xor     ecx, 0D2D94052h
                mov     [esp+50h+var_18], eax
                xor     esi, ebx
                mov     [esp+50h+var_40], ecx
                mov     [esp+50h+var_4], esi
                lea     ecx, [edi-4A70163Bh]
                xor     ecx, [esp+50h+var_40]
                xor     ecx, eax
                mov     eax, esi
                xor     eax, [esp+50h+var_40]
                mov     ebx, ecx
                xor     eax, edx
                mov     [esp+50h+var_24], ecx
                xor     eax, 66404884h
                xor     ebx, esi
                xor     ebx, [esp+50h+var_3C]
                xor     esi, esi
                xor     ebx, edx
                mov     [esp+50h+var_38], eax
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0E9h
                xor     al, 83h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_34+4]
                add     eax, 7C81C67Fh
                xor     ecx, ecx
                xor     edx, 49EC0DBEh
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_44]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                mov     [eax+edx-89h], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [eax+edx-85h], ecx
                mov     [edx+ebx*8-380h], edi
                mov     edi, edx
                mov     ecx, [esp+50h+var_1C]
                mov     [edi+ebx*8-37Ch], esi
                mov     ebx, [esp+50h+var_38]
                xor     ebx, [esp+50h+var_24]
                xor     ebx, [esp+50h+var_20]
                xor     ebx, [esp+50h+var_3C]
                movzx   eax, bl
                and     dword ptr [edi+eax*8-354h], 0
                mov     [edi+eax*8-358h], ecx
                xor     ecx, ecx
                mov     eax, [esp+50h+var_18]
                movzx   edx, ax
                mov     eax, ebx
                sub     edx, 2DFBh
                add     edx, dword ptr [esp+50h+var_14]
                adc     ecx, dword ptr [esp+50h+var_14+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 70h
                shr     ebx, 10h
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+50h+var_C]
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_40]
                movzx   eax, bl
                add     edx, 15211D82h
                xor     eax, 47h
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [edi+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                pop     edi
                add     ecx, 4C7A218h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___15       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000218e proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, esi
                push    edi
                mov     [ebp+var_8], ecx
                mov     eax, esi
                shr     eax, 4
                mov     edi, edx
                shl     edi, 4
                mov     ecx, edx
                add     edi, eax
                sub     ecx, esi
                sub     ebx, edx
                mov     [ebp+var_4], edi
                xor     ebx, 74F72503h
                mov     eax, ecx
                xor     eax, ebx
                xor     esi, edx
                mov     edx, [ebp+var_4]
                xor     esi, eax
                mov     [ebp+var_C], eax
                xor     ecx, edi
                xor     esi, edx
                mov     eax, ebx
                shr     eax, 8
                xor     esi, 0EE6C4A31h
                xor     edi, edi
                movzx   eax, al
                or      edi, esi
                xor     eax, 0CFh
                mov     esi, [ebp+var_8]
                xor     ecx, ebx
                add     ecx, 5AE88E3Bh
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4867FD
                movzx   eax, bl
                xor     eax, 62h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4867FD
                mov     eax, [ebp+var_C]
                lea     ecx, [edx+36784428h]
                xor     edi, edi
                add     eax, 2330C5FFh
                or      edi, eax

loc_4867FD:                             ; CODE XREF: VBNCB_unnamed_8000218e+6D¡üj
                                        ; VBNCB_unnamed_8000218e+79¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000218e endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___19_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                mov     ebx, [ebp+arg_4]
                shl     eax, 4
                push    esi
                mov     esi, ebx
                shr     esi, 4
                add     esi, eax
                mov     eax, edx
                sub     eax, ebx
                mov     [ebp+var_8], esi
                add     edx, 1FD2C784h
                push    edi
                mov     edi, ecx
                lea     ecx, [ebx-0E5D6B57h]
                add     ebx, edx
                mov     [ebp+var_4], edi
                xor     eax, ecx
                xor     ebx, esi
                xor     eax, 0EF9FE79Ah
                xor     ebx, ecx
                mov     [ebp+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                xor     eax, 0B452h
                movzx   ecx, cl
                movzx   eax, ax
                cdq
                push    offset dword_40C950
                mov     esi, [ecx+edi-14h]
                mov     edi, [ecx+edi-10h]
                sub     esi, eax
                mov     ecx, [ebp+var_4]
                sbb     edi, edx
                xor     bl, 46h
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+arg_4]
                add     edx, 0E6A216EFh
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                sub     edx, 2F7D63B0h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx+3A3E1D4Fh]
                mov     edx, [ebp+var_8]
                add     edx, 1760E54Eh
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___19_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_1__2       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     edx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                and     [esp+30h+var_4], 0
                lea     eax, [esi-6A8AFC59h]
                mov     [esp+30h+var_24], edx
                lea     ebx, [esi-67EE2E21h]
                mov     [esp+30h+var_14], eax
                sub     esi, edi
                lea     ecx, [edi-20A0058Bh]
                xor     esi, ecx
                movzx   eax, cl
                xor     esi, 81C17A8Eh
                add     ebx, edi
                mov     [esp+30h+var_18], esi
                push    offset dword_40C8C0
                mov     esi, [eax+edx+0Fh]
                mov     eax, [eax+edx+13h]
                mov     dword ptr [esp+34h+var_20+4], eax
                mov     eax, ecx
                shr     eax, 8
                xor     al, 4Ch
                mov     dword ptr [esp+34h+var_20], esi
                mov     esi, [ebp+arg_0]
                movzx   eax, al
                cdq
                mov     [esp+34h+var_8], edx
                mov     edx, edi
                xor     edx, esi
                mov     [esp+34h+var_C], eax
                add     esi, 2E266ACh
                add     edi, 0FD21AA04h
                xor     esi, edx
                xor     edi, edx
                xor     esi, ecx
                add     edx, 3EDCD30Bh
                mov     ecx, [esp+34h+var_24]
                mov     [esp+34h+var_10], esi
                call    VBN_TransformContext
                mov     eax, dword ptr [esp+30h+var_20]
                or      eax, dword ptr [esp+30h+var_20+4]
                jnz     short loc_48697A
                mov     cl, 1
                jmp     short loc_48697C
; ---------------------------------------------------------------------------

loc_48697A:                             ; CODE XREF: vBng_1__2+A4¡üj
                xor     cl, cl

loc_48697C:                             ; CODE XREF: vBng_1__2+A8¡üj
                mov     eax, [esp+30h+var_18]
                xor     edi, eax
                mov     edx, edi
                xor     edx, [esp+30h+var_14]
                xor     edx, esi
                cmp     cl, 1
                jnz     short loc_4869A4
                lea     esi, [eax-74AC252Ch]
                xor     ebx, ebx
                mov     eax, [esp+30h+var_10]
                xor     eax, 0A9B16674h
                or      ebx, eax
                jmp     short loc_4869B8
; ---------------------------------------------------------------------------

loc_4869A4:                             ; CODE XREF: vBng_1__2+BD¡üj
                xor     ebx, esi
                xor     esi, esi
                xor     ebx, eax
                lea     eax, [edi-741F7BA3h]
                add     ebx, 30F2ADD8h
                or      esi, eax

loc_4869B8:                             ; CODE XREF: vBng_1__2+D2¡üj
                mov     eax, [esp+30h+var_24]
                mov     edi, dword ptr [esp+30h+var_20]
                movzx   ecx, dl
                shr     edx, 8
                mov     [eax+ecx*8-178h], edi
                mov     edi, dword ptr [esp+30h+var_20+4]
                mov     [eax+ecx*8-174h], edi
                movzx   ecx, dl
                mov     edx, [esp+30h+var_C]
                pop     edi
                mov     [ecx+eax-66h], edx
                mov     edx, [esp+2Ch+var_8]
                mov     [ecx+eax-62h], edx
                mov     edx, esi
                pop     esi
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__2       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___74_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_10], 0
                sub     eax, edx
                xor     edx, [ebp+arg_0]
                mov     [ebp+var_C], eax
                xor     eax, 0E2F0219Fh
                push    ebx
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    esi
                xor     eax, 8Dh
                mov     [ebp+var_10], edx
                push    edi
                xor     edx, 0C357CF38h
                mov     [ebp+var_8], ecx
                push    offset dword_40BBA0
                mov     ebx, [eax+ecx]
                sub     edx, 72AFE97Eh
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 0F6h
                shr     eax, 10h
                add     al, 46h ; 'F'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+var_C]
                xor     eax, [ebp+var_4]
                mov     ecx, [ebp+var_10]
                xor     eax, 83904D59h
                pop     edi
                xor     ecx, 0BB72ADD6h
                add     eax, 1F63E394h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___74_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___89_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     eax, esi
                mov     [ebp+var_8], eax
                mov     [ebp+var_4], ecx
                push    edi
                lea     edx, [esi+15F02BDAh]
                xor     esi, esi
                mov     eax, edx
                movzx   ecx, dl
                shr     eax, 8
                xor     ecx, 0FBh
                movzx   edi, al
                mov     eax, [ebp+var_4]
                sub     edi, 0A2h
                push    offset dword_40A8C0
                add     edi, [ecx+eax]
                adc     esi, [ecx+eax+4]
                mov     eax, edx
                mov     ecx, [ebp+arg_0]
                shr     eax, 10h
                xor     al, 49h
                movzx   eax, al
                cdq
                sub     edi, eax
                lea     eax, [ecx+15F02BDAh]
                sbb     esi, edx
                mov     edx, ecx
                shr     edx, 4
                shl     ebx, 4
                add     edx, ebx
                mov     ebx, [ebp+var_4]
                xor     edx, [ebp+var_8]
                mov     ecx, ebx
                xor     edx, eax
                add     edx, 60D91C05h
                call    VBN_TransformContext
                mov     [ebx+1BCh], esi
                xor     edx, edx
                mov     esi, [ebp+arg_0]
                mov     [ebx+1B8h], edi
                pop     edi
                lea     ecx, [esi+15F02BDAh]
                lea     eax, [esi-5ADD61DDh]
                xor     eax, ecx
                mov     ecx, [ebp+var_8]
                add     ecx, 0D288995Ch
                add     eax, 5A8916F7h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                Retn 8
loc_40C0C0:                             ; DATA XREF: vBng___14_stk+13¡ýo
                push    ds
                xchg    eax, ebx
                Retf

                
vBng___89_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___31       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                shr     ebx, 4
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                add     ebx, eax
                mov     [esp+58h+var_48], esi
                mov     eax, edi
                mov     [esp+58h+var_38], ebx
                sub     eax, [ebp+arg_4]
                mov     edx, eax
                mov     [esp+58h+var_4C], eax
                movzx   eax, bl
                xor     edx, 0BD886F9Ah
                mov     [esp+58h+var_44], edx
                push    offset dword_40C410
                mov     ecx, [eax+esi-1Bh]
                mov     eax, [eax+esi-17h]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     ecx, [eax+esi-0CFh]
                mov     eax, [eax+esi-0CBh]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [eax+esi+2Ah]
                mov     eax, [eax+esi+2Eh]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 28h
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, dl
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                mov     esi, [esi+eax*8-0E0h]
                mov     eax, edi
                shr     eax, 4
                add     ecx, eax
                xor     ecx, ebx
                mov     [esp+5Ch+var_3C], ecx
                lea     edx, [ecx+258AC0B1h]
                mov     ecx, [esp+5Ch+var_48]
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_44]
                mov     eax, edx
                mov     ecx, [esp+58h+var_3C]
                xor     [esp+58h+var_4C], ecx
                xor     [esp+58h+var_4C], edx
                xor     [esp+58h+var_4C], 89C1D93Ch
                shr     eax, 8
                movzx   eax, al
                xor     eax, 9Dh
                mov     eax, [eax+esi]
                mov     esi, [ebp+arg_4]
                mov     [esp+58h+var_20], eax
                lea     eax, [esi-7513B65Bh]
                sub     esi, edi
                xor     eax, edx
                mov     edx, esi
                xor     esi, [esp+58h+var_4C]
                xor     eax, ebx
                xor     edx, eax
                mov     [esp+58h+var_1C], eax
                xor     edx, ecx
                xor     esi, eax
                mov     [esp+58h+var_8], edx
                mov     [esp+58h+var_2C], esi
                mov     eax, edx
                xor     eax, [esp+58h+var_4C]
                xor     eax, ebx
                mov     ebx, esi
                xor     eax, 977BD18Bh
                xor     ebx, edx
                xor     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_38]
                mov     [esp+58h+var_40], eax
                mov     cl, bl
                xor     cl, 0B3h
                mov     eax, ebx
                shr     eax, 8
                add     al, 60h ; '`'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     edx, [esp+58h+var_2C]
                sbb     ecx, edi
                add     dword ptr [esp+58h+var_34], eax
                mov     eax, [esp+58h+var_40]
                adc     ecx, dword ptr [esp+58h+var_34+4]
                add     eax, 4EF5260Ch
                mov     edi, dword ptr [esp+58h+var_34]
                lea     esi, [edx-2900DF17h]
                mov     dword ptr [esp+58h+var_34+4], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                shr     eax, 10h
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edi+4], esi
                mov     esi, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 13h
                shr     ebx, 18h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [esi+eax*8+4], ecx
                xor     ecx, ecx
                and     dword ptr [esi+ebx*8-124h], 0
                mov     eax, [esp+58h+var_20]
                mov     [esi+ebx*8-128h], eax
                mov     ebx, [esp+58h+var_40]
                mov     eax, [esp+58h+var_1C]
                xor     ebx, edx
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_44]
                movzx   edx, al
                sub     edx, 0AEh
                movzx   eax, bl
                add     edx, dword ptr [esp+58h+var_18]
                adc     ecx, dword ptr [esp+58h+var_18+4]
                mov     [esi+eax*8-3C4h], ecx
                mov     ecx, dword ptr [esp+58h+var_34+4]
                mov     [esi+eax*8-3C8h], edx
                mov     eax, ebx
                mov     edx, [esp+58h+var_4C]
                shr     eax, 8
                xor     edx, 4F5D2E9Bh
                movzx   eax, al
                xor     eax, 0E3h
                shr     ebx, 10h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [esi+eax*8], edi
                movzx   eax, bl
                pop     edi
                mov     [eax+esi+10h], ecx
                mov     ecx, [esp+54h+var_C]
                mov     [eax+esi+14h], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                xor     ecx, 552B7C86h
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___31       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800020a0 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                and     [esp+24h+var_C], 0
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                xor     ebx, [ebp+arg_0]
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     [esp+28h+var_4], esi
                mov     eax, [edx+esi-3Dh]
                mov     esi, [ebp+arg_0]
                mov     edx, [eax+ecx-0Ch]
                mov     eax, esi
                mov     ecx, edi
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+28h+var_14], edx
                mov     eax, ecx
                xor     eax, 1EB242CEh
                cmp     eax, edx
                setnbe  [esp+28h+var_15]
                sub     [esp+28h+var_14], eax
                add     esi, 64DAD82Fh
                add     esi, edi
                xor     esi, ebx
                mov     [esp+28h+var_10], esi
                mov     esi, [ebp+arg_0]
                sub     esi, edi
                sub     edi, [ebp+arg_0]
                xor     esi, ecx
                xor     esi, ebx
                mov     ebx, [esp+28h+var_10]
                xor     edi, ebx
                xor     esi, 97ECCC1Dh
                xor     edi, ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 7D1C52B8h
                xor     ecx, edi
                xor     ecx, esi
                mov     [esp+28h+var_10], ecx
                cmp     eax, edx
                jbe     short loc_486E68
                xor     eax, eax
                lea     edx, [ebx+1DF01ED5h]
                xor     esi, 51199667h
                or      eax, esi
                jmp     short loc_486E83
; ---------------------------------------------------------------------------

loc_486E68:                             ; CODE XREF: VBNCB_unnamed_800020a0+94¡üj
                mov     eax, [ebp+arg_0]
                xor     edx, edx
                add     eax, 66ABC37Ah
                xor     edi, 0C33E3715h
                xor     eax, esi
                xor     eax, ebx
                xor     eax, 59F3ECh
                or      edx, edi

loc_486E83:                             ; CODE XREF: VBNCB_unnamed_800020a0+A6¡üj
                mov     esi, [esp+28h+var_4]
                cmp     [esp+28h+var_14], 0
                movzx   ecx, cl
                setz    bl
                pop     edi
                mov     [esi+ecx*8+150h], bl
                mov     ecx, [esp+24h+var_10]
                mov     bl, [esp+24h+var_15]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esi+ecx*8-1F0h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020a0 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_1__5       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx
                and     [ebp+var_C], 0
                mov     ecx, ebx
                xor     ecx, [ebp+arg_0]
                add     ebx, 0F9D5ABE7h
                mov     eax, ecx
                mov     [ebp+var_4], edx
                shr     eax, 8
                movzx   eax, al
                push    esi
                push    edi
                mov     [ebp+var_8], ecx
                mov     esi, [eax+edx-23h]
                mov     edi, [eax+edx-1Fh]
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     [ebp+var_C], ebx
                xor     edx, ebx
                movzx   eax, cl
                mov     ebx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     eax, 0E6h
                mov     eax, [eax+ecx]
                movzx   ecx, dl
                shr     edx, 8
                mov     [ecx+ebx-66h], eax
                mov     eax, ebx
                and     dword ptr [ecx+eax-62h], 0
                mov     ecx, ebx
                mov     ebx, [ebp+var_C]
                movzx   eax, dl
                xor     ebx, 190147CAh
                xor     edx, edx
                mov     [ecx+eax*8-5B8h], esi
                mov     [ecx+eax*8-5B4h], edi
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     eax, ecx
                xor     eax, [ebp+var_8]
                pop     edi
                xor     eax, 58DCB591h
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__5       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___180_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                add     eax, 0E586680Dh
                add     eax, edx
                mov     [ebp+var_8], ecx
                push    ebx
                mov     [ebp+var_4], eax
                add     edx, 0F639E357h
                movzx   eax, al
                xor     edx, 0CA6F0BBh
                push    esi
                xor     eax, 6Ah
                push    edi
                push    offset dword_40C930
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 3
                shr     eax, 10h
                add     eax, 2A2Ch
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                mov     edx, [ebp+arg_0]
                add     esi, ebx
                mov     ebx, [ebp+arg_4]
                mov     [eax+1B8h], esi
                adc     ecx, edi
                shr     ebx, 4
                mov     [eax+1BCh], ecx
                lea     esi, [edx-9C61CA9h]
                mov     eax, edx
                lea     ecx, [edx+59E68B49h]
                shl     eax, 4
                xor     ecx, esi
                xor     ecx, [ebp+var_4]
                add     ebx, eax
                xor     ebx, [ebp+var_4]
                xor     eax, eax
                xor     ebx, 7E390D5Bh
                add     ecx, 6B147AB3h
                pop     edi
                pop     esi
                mov     edx, ebx
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___180_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___63       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                mov     [esp+5Ch+var_50], esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                mov     ebx, edi
                shr     ecx, 4
                shl     edx, 4
                add     edx, eax
                shl     ebx, 4
                add     ebx, ecx
                mov     [esp+60h+var_38], edx
                mov     eax, ebx
                mov     [esp+60h+var_48], ebx
                xor     eax, edx
                mov     [esp+60h+var_44], eax
                movzx   eax, dl
                push    offset dword_40C194
                mov     ecx, [eax+esi+37h]
                mov     eax, [eax+esi+3Bh]
                mov     [esp+64h+var_14], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+64h+var_18], ecx
                mov     ecx, [esi+eax*8-2F0h]
                mov     eax, [esi+eax*8-2ECh]
                mov     dword ptr [esp+64h+var_20+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+64h+var_20], ecx
                mov     ecx, [eax+esi+33h]
                mov     eax, [eax+esi+37h]
                mov     [esp+64h+var_28], eax
                mov     eax, edx
                mov     edx, [esp+64h+var_50]
                shr     eax, 18h
                xor     eax, 0EEh
                mov     [esp+64h+var_2C], ecx
                mov     esi, [eax+esi]
                movzx   eax, bl
                mov     ebx, [edx+eax*8+164h]
                mov     ecx, [edx+eax*8+160h]
                mov     dword ptr [esp+64h+var_34+4], ebx
                mov     ebx, [esp+64h+var_44]
                mov     dword ptr [esp+64h+var_34], ecx
                mov     ecx, [esp+64h+var_50]
                lea     edx, [ebx+73CBBCA8h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     edx, [esp+60h+var_38]
                add     eax, 0DF1FCB56h
                xor     eax, [esp+60h+var_48]
                xor     eax, edx
                movzx   ecx, al
                mov     [esp+60h+var_10], ecx
                mov     [esp+60h+var_24], eax
                mov     ecx, [ecx+esi+4Dh]
                mov     [esp+60h+var_C], ecx
                mov     ecx, edi
                sub     ecx, [ebp+arg_4]
                mov     esi, ecx
                xor     ecx, eax
                xor     esi, ebx
                xor     ecx, ebx
                xor     esi, [esp+60h+var_48]
                xor     ecx, 3FB3D17Bh
                mov     ebx, [ebp+arg_4]
                xor     esi, 60313909h
                sub     ebx, edi
                mov     [esp+60h+var_8], esi
                xor     ebx, esi
                mov     [esp+60h+var_38], ecx
                xor     ebx, eax
                mov     [esp+60h+var_4C], ebx
                xor     ecx, esi
                movzx   edi, bl
                xor     ecx, edx
                mov     eax, ebx
                xor     eax, [esp+60h+var_38]
                xor     ecx, 833DF0Dh
                xor     eax, [esp+60h+var_48]
                xor     esi, esi
                xor     eax, edx
                mov     [esp+60h+var_40], ecx
                mov     [esp+60h+var_3C], eax
                mov     eax, ebx
                shr     eax, 8
                sub     al, 70h ; 'p'
                mov     ebx, [esp+60h+var_40]
                movzx   eax, al
                dec     edi
                cdq
                sub     edi, eax
                mov     eax, [esp+60h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+60h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+60h+var_34+4]
                add     eax, 0EE27CABAh
                xor     ebx, [esp+60h+var_4C]
                xor     ecx, ecx
                xor     ebx, [esp+60h+var_44]
                or      ecx, eax
                xor     ebx, [esp+60h+var_48]
                xor     edx, 397EBBB0h
                mov     [edi], ecx
                mov     ecx, [esp+60h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+60h+var_50]
                movzx   eax, bl
                mov     dword ptr [esp+60h+var_34+4], esi
                mov     esi, [esp+60h+var_50]
                mov     [eax+edx-0B3h], ecx
                mov     ecx, [esp+60h+var_28]
                mov     [eax+edx-0AFh], ecx
                xor     ecx, ecx
                mov     eax, [esp+60h+var_24]
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                add     edx, 13h
                add     edx, dword ptr [esp+60h+var_20]
                adc     ecx, dword ptr [esp+60h+var_20+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B5h
                mov     [esi+eax*8], edx
                mov     edx, esi
                mov     esi, dword ptr [esp+60h+var_34+4]
                mov     [edx+eax*8+4], ecx
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 87h
                shr     ebx, 18h
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                mov     eax, [esp+60h+var_18]
                mov     [edx+ebx*8-650h], eax
                mov     eax, [esp+60h+var_14]
                mov     [edx+ebx*8-64Ch], eax
                mov     eax, [esp+60h+var_44]
                movzx   ecx, al
                mov     eax, [esp+60h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_C]
                xor     ecx, [esp+60h+var_10]
                and     dword ptr [edx+ecx*8-54Ch], 0
                mov     [edx+ecx*8-550h], eax
                mov     edx, [esp+60h+var_8]
                add     edx, 503DD646h
                mov     ecx, [esp+60h+var_38]
                xor     eax, eax
                pop     edi
                xor     ecx, 0B8552AF0h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___63       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___169      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                sub     eax, esi
                mov     [esp+58h+var_4C], ecx
                mov     ebx, eax
                mov     [esp+58h+var_44], eax
                xor     ebx, 0D28C5C9Dh
                and     [esp+58h+var_4], 0
                movzx   eax, bl
                xor     edx, edi
                mov     [esp+58h+var_48], edx
                xor     edx, ebx
                mov     [esp+58h+var_38], edx
                xor     edx, 0AF850D66h
                push    offset dword_40C17C
                mov     ecx, [ecx+eax*8-1C8h]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-1C4h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 17h
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-480h]
                mov     [esp+5Ch+var_40], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-47Ch]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0E9h
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_18], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_48]
                mov     ecx, [esp+58h+var_40]
                movzx   eax, dl
                xor     eax, 75h
                mov     eax, [ecx+eax*4]
                mov     [esp+58h+var_20], eax
                mov     eax, [esp+58h+var_44]
                xor     eax, edx
                lea     edx, [esi+279CC70Bh]
                xor     eax, ebx
                lea     esi, [edi-4DCEBC5Ch]
                xor     eax, 6C63A309h
                add     edx, edi
                xor     edx, [esp+58h+var_38]
                xor     esi, eax
                xor     esi, [esp+58h+var_38]
                xor     edx, [esp+58h+var_48]
                mov     ecx, esi
                mov     [esp+58h+var_44], eax
                xor     ecx, edx
                lea     eax, [edi+71C96AE2h]
                mov     [esp+58h+var_C], edx
                xor     eax, edx
                mov     [esp+58h+var_8], esi
                xor     eax, [esp+58h+var_44]
                xor     ecx, ebx
                xor     ecx, 0C22FA61h
                mov     [esp+58h+var_2C], eax
                mov     [esp+58h+var_3C], ecx
                mov     ecx, eax
                xor     ecx, esi
                xor     ecx, [esp+58h+var_48]
                xor     ecx, ebx
                mov     eax, ecx
                mov     [esp+58h+var_28], ecx
                shr     eax, 8
                xor     cl, 0D8h
                sub     al, 65h ; 'e'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+58h+var_2C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                pop     edi
                adc     edx, dword ptr [esp+54h+var_34+4]
                xor     eax, 8C4174A0h
                xor     ecx, ecx
                xor     esi, 46FD8DC9h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_28]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+54h+var_4C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [esi+eax*8-400h], ebx
                mov     ebx, [esp+54h+var_3C]
                xor     ebx, [esp+54h+var_2C]
                xor     ebx, [esp+54h+var_38]
                xor     ebx, [esp+54h+var_48]
                mov     [esi+eax*8-3FCh], edx
                mov     eax, [esp+54h+var_40]
                mov     [ecx+esi+16h], eax
                mov     eax, [esp+54h+var_24]
                mov     [ecx+esi+1Ah], eax
                mov     ecx, [esp+54h+var_20]
                movzx   eax, bl
                and     dword ptr [esi+eax*8-0C4h], 0
                mov     [esi+eax*8-0C8h], ecx
                mov     eax, ebx
                mov     ecx, [esp+54h+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 13h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_18]
                mov     [esi+eax*8+4], ecx
                mov     eax, [esp+54h+var_44]
                xor     al, 0D8h
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+54h+var_14]
                adc     edx, dword ptr [esp+54h+var_14+4]
                shr     ebx, 10h
                movzx   ecx, bl
                mov     [esi+ecx*8-618h], eax
                xor     eax, eax
                mov     [esi+ecx*8-614h], edx
                mov     ecx, [esp+54h+var_8]
                mov     edx, [esp+54h+var_C]
                xor     ecx, 7874F5EFh
                pop     esi
                add     edx, 29D4D6D1h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___169      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___46_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, eax
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                xor     edx, ebx
                push    esi
                push    edi
                lea     edi, [eax+5AA18A66h]
                mov     esi, ecx
                lea     ecx, [eax+5377A545h]
                mov     [ebp+var_4], esi
                add     edi, ebx
                xor     edx, ecx
                sub     ebx, eax
                mov     [ebp+var_8], edx
                xor     ebx, edi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                add     al, 33h ; '3'
                mov     esi, [ecx+esi+96h]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C810
                mov     ecx, [ecx+eax+9Ah]
                sbb     ecx, edx
                movzx   eax, bl
                mov     edx, [ebp+arg_0]
                sub     eax, 12h
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                add     edx, 427101F9h
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, 0A8460D22h
                mov     ecx, eax
                call    VBN_TransformContext
                xor     esi, 91EB21EAh
                lea     edx, [edi+489FF59h]
                xor     eax, eax
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___46_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___138      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, esi
                mov     eax, edi
                shl     ebx, 4
                shr     eax, 4
                sub     edx, edi
                add     ebx, eax
                mov     [esp+58h+var_4C], ecx
                movzx   eax, bl
                xor     eax, 12h
                mov     [esp+58h+var_48], edx
                push    offset dword_40AD40
                xor     edx, 0AA180361h
                mov     [esp+5Ch+var_40], ebx
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_3C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0A8h
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-2D0h]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8-2CCh]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_3C]
                mov     edx, ebx
                xor     edx, esi
                xor     edx, edi
                movzx   eax, dl
                mov     [esp+58h+var_8], eax
                mov     [esp+58h+var_20], edx
                mov     eax, [ecx+eax*4+38h]
                mov     ecx, esi
                mov     [esp+58h+var_24], eax
                mov     eax, edi
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                lea     eax, [edi-73D7FE98h]
                xor     ecx, [esp+58h+var_48]
                add     eax, esi
                xor     ecx, ebx
                lea     ebx, [edi-36658CBFh]
                mov     [esp+58h+var_44], ecx
                xor     ebx, edx
                xor     ebx, [esp+58h+var_48]
                lea     ecx, [edi+0ACE1CB1h]
                add     ecx, esi
                mov     [esp+58h+var_4], ebx
                xor     ecx, [esp+58h+var_44]
                xor     eax, ebx
                xor     ecx, edx
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                mov     [esp+58h+var_28], ecx
                xor     eax, ebx
                xor     eax, [esp+58h+var_40]
                xor     eax, 0E2D8408Dh
                mov     [esp+58h+var_34], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 28h
                sub     al, 15h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_38]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     dword ptr [esp+58h+var_30], ebx
                adc     eax, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_30+4], eax
                xor     esi, 0AD269D7Eh
                mov     eax, [esp+58h+var_34]
                xor     edi, edi
                add     eax, 0A597F898h
                or      esi, edi
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_4C]
                mov     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_28]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_40]
                movzx   eax, bl
                mov     [esi+eax*8-550h], ecx
                xor     ecx, ecx
                mov     [esi+eax*8-54Ch], edi
                mov     eax, [esp+58h+var_20]
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 85h
                add     edx, dword ptr [esp+58h+var_1C]
                adc     ecx, dword ptr [esp+58h+var_1C+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 89h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_3C]
                mov     [esi+eax*8], edx
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                mov     edx, [esp+58h+var_44]
                mov     [eax+esi+1Dh], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [eax+esi+21h], ecx
                mov     eax, [esp+58h+var_10]
                mov     [esi+ebx*8-5D8h], eax
                mov     eax, [esp+58h+var_C]
                mov     [esi+ebx*8-5D4h], eax
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, dword ptr [esp+58h+var_30]
                xor     ecx, 7Bh
                xor     ecx, [esp+58h+var_8]
                mov     [esi+ecx*8], eax
                mov     eax, dword ptr [esp+58h+var_30+4]
                mov     [esi+ecx*8+4], eax
                mov     ecx, [esp+58h+var_4]
                xor     eax, eax
                add     ecx, 98DC9898h
                xor     edx, 0CF6E7146h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___138      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___164      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                mov     eax, esi
                mov     [esp+54h+var_48], edx
                sub     eax, [ebp+arg_4]
                mov     ecx, eax
                and     [esp+54h+var_4], 0
                xor     eax, ebx
                mov     [esp+54h+var_34], ebx
                xor     eax, 361B3417h
                xor     ecx, 46FC76B8h
                mov     [esp+54h+var_44], eax
                movzx   eax, bl
                push    edi
                mov     edi, [esp+58h+var_48]
                mov     [esp+58h+var_3C], ecx
                mov     edx, [eax+edx-22h]
                mov     dword ptr [esp+58h+var_30], edx
                mov     edx, [esp+58h+var_48]
                push    offset dword_40A958
                mov     eax, [eax+edx-1Eh]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 5Ah
                mov     edx, [edx+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, [ebp+arg_4]
                add     eax, 0A8D21717h
                mov     [esp+5Ch+var_28], edx
                add     eax, esi
                xor     eax, ecx
                mov     ecx, ebx
                xor     eax, ebx
                shr     ecx, 18h
                mov     [esp+5Ch+var_40], eax
                mov     eax, [esp+5Ch+var_44]
                mov     eax, [edx+eax-16FAF273h]
                mov     [esp+5Ch+var_18], eax
                mov     al, byte ptr [esp+5Ch+var_40]
                xor     al, 69h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-20h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8-1Ch]
                mov     ecx, ebx
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 0B1h
                mov     [esp+5Ch+var_1C], edx
                mov     eax, [ecx+eax]
                mov     [esp+5Ch+var_14], eax
                mov     eax, edi
                mov     edi, [ebp+arg_4]
                mov     eax, [ecx+eax+4]
                mov     ecx, [esp+5Ch+var_48]
                lea     ebx, [edi+269F4ADCh]
                xor     ebx, [esp+5Ch+var_44]
                xor     ebx, [esp+5Ch+var_3C]
                mov     [esp+5Ch+var_10], eax
                mov     [esp+5Ch+var_38], ebx
                lea     edx, [ebx+88A5049h]
                call    VBN_TransformContext
                shl     esi, 4
                mov     edx, edi
                shr     edx, 4
                add     edx, esi
                lea     esi, [edi+7183CD6Dh]
                xor     edx, [esp+58h+var_40]
                xor     esi, ebx
                xor     edx, [esp+58h+var_44]
                xor     esi, [esp+58h+var_40]
                mov     [esp+58h+var_C], edx
                mov     ebx, edx
                mov     [esp+58h+var_8], esi
                xor     ebx, [esp+58h+var_38]
                mov     ecx, esi
                xor     ebx, [esp+58h+var_34]
                xor     ecx, edx
                mov     edx, [esp+58h+var_3C]
                xor     ebx, 0A2C77475h
                xor     ecx, edx
                movzx   edi, bl
                xor     ecx, [esp+58h+var_34]
                mov     eax, ebx
                xor     eax, esi
                mov     [esp+58h+var_3C], ecx
                xor     eax, [esp+58h+var_44]
                xor     esi, esi
                xor     eax, edx
                sub     edi, 60h ; '`'
                mov     [esp+58h+var_34], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 95h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_30+4]
                xor     eax, 0BF4C4643h
                xor     ecx, ecx
                xor     edx, 7CEF4A0h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_48]
                mov     ebx, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 7Dh
                mov     [eax+edx], ebx
                mov     ebx, [esp+58h+var_24]
                mov     [eax+edx+4], ebx
                mov     eax, ecx
                shr     eax, 8
                mov     ebx, edx
                movzx   eax, al
                xor     eax, 0C0h
                mov     edx, [esp+58h+var_3C]
                mov     [ebx+eax*8+4], esi
                mov     esi, [esp+58h+var_20]
                mov     [ebx+eax*8], edi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 85h
                mov     [ebx+eax*8+120h], esi
                mov     esi, [esp+58h+var_1C]
                mov     [ebx+eax*8+124h], esi
                and     dword ptr [ebx+ecx*8+4], 0
                mov     eax, [esp+58h+var_18]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, dl
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                mov     [ebx+ecx*8-90h], eax
                mov     eax, [esp+58h+var_10]
                mov     [ebx+ecx*8-8Ch], eax
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                mov     edx, [esp+58h+var_C]
                add     ecx, 0FBA9F99h
                pop     edi
                pop     esi
                add     edx, 0E5F98891h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___164      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002263 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     [ebp+var_8], ecx
                mov     eax, esi
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                lea     ecx, [esi+52CAB1FEh]
                add     ecx, edx
                mov     eax, esi
                xor     ecx, ebx
                sub     eax, edx
                mov     [ebp+var_4], ecx
                xor     eax, 44FE7B5Ch
                lea     ecx, [esi+6D1A700Dh]
                mov     [ebp+var_C], eax
                xor     esi, edx
                xor     ecx, eax
                mov     edx, [ebp+var_4]
                xor     ecx, ebx
                xor     esi, edx
                sub     ecx, 1FEC6EBh
                xor     esi, eax
                mov     eax, ebx
                shr     eax, 8
                sub     esi, 1B651B13h
                push    edi
                xor     edi, edi
                movzx   eax, al
                or      edi, esi
                xor     eax, 0Ah
                mov     esi, [ebp+var_8]
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_487AD4
                movzx   eax, bl
                cmp     byte ptr [esi+eax*8-568h], 0
                jnz     short loc_487AD4
                mov     ecx, [ebp+var_C]
                lea     eax, [edx+4306F591h]
                xor     edi, edi
                add     ecx, 2B146535h
                or      edi, eax

loc_487AD4:                             ; CODE XREF: VBNCB_unnamed_80002263+72¡üj
                                        ; VBNCB_unnamed_80002263+7F¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002263 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___4        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                sub     edx, edi
                xor     edx, 2F208586h
                mov     [esp+58h+var_4C], ecx
                mov     ebx, edi
                mov     [esp+58h+var_48], edx
                shr     ebx, 4
                add     ebx, eax
                and     [esp+58h+var_4], 0
                movzx   eax, dl
                mov     [esp+58h+var_44], ebx
                push    offset dword_40BC90
                mov     ecx, [eax+ecx-4Ch]
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx-48h]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 10h
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_4C]
                mov     eax, [eax+edx*8]
                movzx   edx, bl
                mov     [esp+5Ch+var_14], edx
                mov     eax, [eax+ecx-79h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                mov     ebx, [esp+5Ch+var_4C]
                shr     eax, 10h
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 4Fh ; 'O'
                add     ecx, [ebx+edx*8-4B8h]
                mov     [esp+5Ch+var_24], ecx
                adc     eax, [ebx+edx*8-4B4h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 18h
                xor     eax, 0E0h
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     ebx, edi
                mov     [esp+5Ch+var_28], eax
                mov     eax, esi
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                mov     [esp+5Ch+var_2C], ecx
                xor     ebx, [esp+5Ch+var_48]
                mov     ecx, [esp+5Ch+var_4C]
                mov     edx, ebx
                xor     edx, 2091701Ch
                mov     [esp+5Ch+var_40], ebx
                call    VBN_TransformContext
                lea     eax, [esi-4656A83Eh]
                mov     edx, edi
                add     eax, edi
                xor     eax, [esp+58h+var_44]
                xor     eax, [esp+58h+var_48]
                xor     edx, esi
                mov     [esp+58h+var_C], eax
                xor     edx, ebx
                lea     ecx, [edi+2116FCE7h]
                xor     edx, [esp+58h+var_44]
                lea     ebx, [edi+678068A3h]
                xor     ebx, eax
                mov     [esp+58h+var_8], edx
                xor     ebx, [esp+58h+var_40]
                xor     ecx, edx
                xor     ecx, eax
                movzx   edi, bl
                mov     eax, ebx
                mov     [esp+58h+var_30], ecx
                xor     eax, edx
                xor     esi, esi
                xor     eax, [esp+58h+var_48]
                sub     edi, 8Bh
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                shr     eax, 8
                add     al, 6Ah ; 'j'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                lea     edx, [ecx-6C2C60EEh]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     eax, 0E9F31289h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_30]
                mov     ecx, edx
                xor     ecx, ebx
                mov     ebx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                movzx   eax, cl
                xor     eax, 0E2h
                mov     [ebx+eax*8+4], esi
                mov     esi, [esp+58h+var_2C]
                mov     [ebx+eax*8], edi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-5E8h], esi
                mov     esi, [esp+58h+var_28]
                mov     [ebx+eax*8-5E4h], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 87h
                mov     [ebx+eax*8-260h], esi
                mov     esi, [esp+58h+var_20]
                mov     [ebx+eax*8-25Ch], esi
                mov     eax, [esp+58h+var_1C]
                mov     [ecx+ebx], eax
                mov     eax, [esp+58h+var_18]
                mov     [ecx+ebx+4], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+58h+var_C]
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 0D5h
                xor     ecx, [esp+58h+var_14]
                add     edx, 0ABD69F7Dh
                and     dword ptr [ebx+ecx*8+4], 0
                mov     [ebx+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                add     ecx, 0A93ABD9h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___4        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800020b1 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     [ebp+var_8], ecx
                lea     eax, [edx-148CE704h]
                shr     ebx, 4
                push    edi
                lea     ecx, [esi-742AA66Fh]
                xor     eax, ecx
                lea     edi, [esi-1907D703h]
                mov     [ebp+var_4], eax
                mov     eax, esi
                shl     eax, 4
                add     ebx, eax
                lea     eax, [edx-1D158977h]
                add     eax, esi
                lea     edx, [esi-742AA66Fh]
                xor     eax, [ebp+var_4]
                xor     ebx, edi
                mov     esi, [ebp+var_8]
                xor     eax, edi
                xor     ebx, ecx
                sub     eax, 17A3054Dh
                xor     ecx, ecx
                or      ecx, eax
                movzx   eax, dl
                xor     eax, 22h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_487DC9
                shr     edx, 8
                movzx   eax, dl
                cmp     byte ptr [esi+eax*8-118h], 0
                jnz     short loc_487DC9
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                add     eax, 7058FCC1h
                xor     edi, 3B4148C2h
                or      ecx, eax
                jmp     short loc_487DCF
; ---------------------------------------------------------------------------

loc_487DC9:                             ; CODE XREF: VBNCB_unnamed_800020b1+63¡üj
                                        ; VBNCB_unnamed_800020b1+73¡üj
                lea     edi, [ebx-5082E00h]

loc_487DCF:                             ; CODE XREF: VBNCB_unnamed_800020b1+87¡üj
                mov     edx, edi
                mov     eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020b1 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___15_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                mov     edx, ecx
                mov     ecx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [ebp+var_8], edx
                movzx   eax, cl
                push    edi
                push    offset dword_40BFB0
                mov     ebx, [eax+edx+80h]
                mov     edi, [eax+edx+84h]
                mov     edx, esi
                xor     edx, [ebp+arg_0]
                lea     eax, [esi+12A02C6Ch]
                mov     [ebp+var_4], edx
                xor     edx, eax
                xor     [ebp+var_4], ecx
                xor     edx, ecx
                mov     ecx, [ebp+var_8]
                xor     edx, 4CF8CAA7h
                mov     [ebp+var_C], eax
                call    VBN_TransformContext
                lea     ecx, [esi+618481ABh]
                xor     ecx, [ebp+var_4]
                lea     eax, [esi+12A02C6Ch]
                xor     ecx, eax
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 78h ; 'x'
                sub     esi, 96h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                mov     edx, [ebp+var_C]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                add     edx, 87F7040Bh
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_4]
                pop     edi
                xor     ecx, 0FDC0DF80h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___15_stk   EndP



VBNCB_unnamed_80001fc9 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     [esp+30h+var_4], esi
                lea     eax, [ecx-67D50FBAh]
                add     eax, edi
                lea     ebx, [ecx+612DE5F4h]
                xor     ebx, eax
                mov     [esp+30h+var_18], eax
                movzx   eax, al
                lea     edx, [ecx+73AFA56Eh]
                add     edx, edi
                movzx   ecx, bl
                mov     eax, [eax+esi-16h]
                mov     esi, [eax+ecx+11h]
                lea     ecx, [edx+7226EB11h]
                mov     eax, esi
                sub     eax, ecx
                cmp     ecx, esi
                mov     [esp+30h+var_10], eax
                mov     eax, [ebp+arg_0]
                setnbe  [esp+30h+var_1D]
                shl     eax, 4
                shr     edi, 4
                add     edi, eax
                mov     eax, [ebp+arg_0]
                xor     edi, edx
                add     eax, 0B5BDD98Eh
                xor     eax, ebx
                mov     [esp+30h+var_1C], edi
                mov     edi, [esp+30h+var_18]
                xor     eax, edx
                mov     edx, [ebp+arg_4]
                xor     [esp+30h+var_1C], edi
                mov     [esp+30h+var_18], eax
                mov     eax, [ebp+arg_0]
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                mov     eax, [esp+30h+var_1C]
                xor     edx, eax
                xor     edx, ebx
                mov     ebx, [esp+30h+var_18]
                mov     [esp+30h+var_14], edx
                xor     edx, ebx
                xor     edx, edi
                xor     edx, 0F8FFED05h
                mov     [esp+30h+var_18], edx
                cmp     ecx, esi
                jbe     short loc_498AC6
                mov     esi, eax
                xor     edx, edx
                xor     ebx, 0EA96AD8Bh
                xor     esi, 402B8946h
                or      edx, ebx
                jmp     short loc_498AE6
; ---------------------------------------------------------------------------

loc_498AC6:                             ; CODE XREF: VBNCB_unnamed_80001fc9+B0¡üj
                mov     edx, [ebp+arg_0]
                xor     esi, esi
                add     edx, 864562A7h
                xor     edx, ebx
                xor     edx, eax
                mov     eax, [esp+30h+var_14]
                add     eax, 0CE0E6332h
                sub     edx, 5CC4C4E1h
                or      esi, eax

loc_498AE6:                             ; CODE XREF: VBNCB_unnamed_80001fc9+C4¡üj
                cmp     [esp+30h+var_10], 0
                mov     eax, [esp+30h+var_18]
                mov     edi, [esp+30h+var_4]
                setz    bl
                movzx   ecx, al
                xor     ecx, 56h
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                xor     ecx, 5
                mov     [edi+ecx*8], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001fc9 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___103_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_C], 0
                push    ebx
                shl     eax, 4
                mov     ebx, edx
                push    esi
                mov     esi, [ebp+arg_4]
                xor     ebx, esi
                mov     [ebp+var_4], ecx
                mov     ecx, esi
                push    edi
                lea     edi, [edx+4380D98Eh]
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_8], edi
                xor     ebx, edi
                lea     eax, [esi+414F8E1Ch]
                mov     edi, [ebp+var_4]
                xor     eax, ecx
                mov     [ebp+var_C], eax
                xor     ebx, ecx
                mov     eax, ebx
                movzx   ecx, cl
                shr     eax, 8
                add     al, 77h ; 'w'
                movzx   eax, al
                mov     esi, [ecx+edi-3Ch]
                mov     edi, [ecx+edi-38h]
                mov     ecx, [ebp+var_4]
                cdq
                sub     esi, eax
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sbb     edi, edx
                sub     eax, 31h ; '1'
                mov     edx, [ebp+arg_4]
                add     esi, eax
                mov     eax, [ebp+arg_0]
                adc     edi, 0
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                push    offset dword_40C5E0
                xor     edx, 98D28B37h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx+121922CDh]
                mov     edx, [ebp+var_8]
                xor     edx, 4576BAD4h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___103_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___6        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, ebx
                mov     [esp+58h+var_44], esi
                mov     ecx, edi
                mov     [esp+58h+var_38], edx
                shr     ecx, 4
                lea     eax, [edi+744F8E67h]
                mov     [esp+58h+var_2C], eax
                mov     eax, ebx
                shl     eax, 4
                add     ecx, eax
                movzx   eax, dl
                xor     ecx, edx
                mov     [esp+58h+var_48], ecx
                push    offset dword_40C6D0
                mov     ecx, [eax+esi-65h]
                mov     eax, [eax+esi-61h]
                mov     dword ptr [esp+5Ch+var_10+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 3Ah
                mov     dword ptr [esp+5Ch+var_10], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B6h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 18h
                mov     [esp+5Ch+var_20], ecx
                lea     edx, [edx-317F1335h]
                mov     ecx, [eax+esi+40h]
                mov     eax, [eax+esi+44h]
                mov     [esp+5Ch+var_24], eax
                lea     eax, [edi+744F8E67h]
                movzx   eax, al
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     esi, [eax+esi+10h]
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_38]
                lea     ecx, [edi+744F8E67h]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+esi-81h]
                lea     esi, [edi+744F8E67h]
                mov     [esp+58h+var_18], eax
                lea     eax, [ebx-6E8DAB69h]
                add     eax, edi
                add     ebx, 0A9FFDBCh
                xor     eax, ecx
                add     ebx, edi
                mov     ecx, edx
                xor     eax, edx
                xor     ecx, [esp+58h+var_48]
                xor     ecx, esi
                mov     [esp+58h+var_14], eax
                mov     esi, edx
                mov     [esp+58h+var_38], ecx
                xor     esi, eax
                xor     ebx, ecx
                xor     esi, [esp+58h+var_48]
                xor     ebx, eax
                mov     ecx, esi
                mov     [esp+58h+var_8], esi
                xor     ecx, [esp+58h+var_38]
                mov     eax, ebx
                xor     ecx, edx
                xor     eax, esi
                xor     ecx, 7228F77Eh
                lea     esi, [edi+744F8E67h]
                mov     [esp+58h+var_40], ecx
                xor     eax, esi
                movzx   edi, bl
                xor     eax, edx
                xor     esi, esi
                mov     [esp+58h+var_3C], eax
                sub     edi, 0E5h
                mov     eax, ebx
                shr     eax, 8
                sub     al, 0Bh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 0AD220B0h
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_34], esi
                or      ecx, eax
                mov     esi, [esp+58h+var_44]
                mov     eax, [esp+58h+var_40]
                xor     edx, 0A22B34D2h
                xor     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                mov     ebx, eax
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_2C]
                mov     dword ptr [esp+58h+var_34+4], eax
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_44]
                movzx   eax, bl
                mov     [eax+edx+1], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [eax+edx+5], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 36h
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+58h+var_1C]
                mov     [edx+eax*8+4], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_18]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 9
                and     dword ptr [edx+eax*8+4], 0
                mov     [edx+eax*8], ecx
                mov     eax, [esp+58h+var_14]
                movzx   edx, al
                xor     eax, eax
                lea     ecx, [edx-29h]
                add     ecx, dword ptr [esp+58h+var_10]
                adc     eax, dword ptr [esp+58h+var_10+4]
                shr     ebx, 18h
                xor     ebx, 0DBh
                mov     [esi+ebx*8], ecx
                mov     ecx, esi
                mov     [ecx+ebx*8+4], eax
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, esi
                mov     esi, dword ptr [esp+58h+var_34]
                xor     ecx, edx
                mov     [eax+ecx*8+28h], edi
                mov     edx, [esp+58h+var_38]
                mov     [eax+ecx*8+2Ch], esi
                xor     edx, 3397F45Ah
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                add     ecx, 0FD64682h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___6        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000237c proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     ebx, edx
                mov     [ebp+var_4], ecx
                sub     ebx, eax
                lea     esi, [eax-7CC397B1h]
                push    edi
                lea     ecx, [eax-89B7A2Bh]
                mov     edi, eax
                sub     edi, edx
                add     ecx, edx
                xor     edx, eax
                xor     ebx, esi
                xor     edx, ebx
                mov     [ebp+var_8], ebx
                mov     ebx, [ebp+var_4]
                xor     edi, ecx
                xor     edi, esi
                xor     edx, ecx
                sub     edx, 5DDEB7AFh
                xor     esi, esi
                or      esi, edx
                xor     edi, 0FE2EB77Eh
                lea     edx, [eax-7CC397B1h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E7h
                cmp     byte ptr [ebx+eax*8], 0
                mov     ebx, [ebp+var_8]
                jnz     short loc_498F0B
                movzx   eax, dl
                mov     edx, [ebp+var_4]
                cmp     byte ptr [edx+eax*8-28h], 0
                jnz     short loc_498F0B
                xor     esi, esi
                lea     eax, [ebx+448C3FD1h]
                xor     ecx, 0F0CFBC0Ch
                or      esi, eax
                jmp     short loc_498F0D
; ---------------------------------------------------------------------------

loc_498F0B:                             ; CODE XREF: VBNCB_unnamed_8000237c+6A¡üj
                                        ; VBNCB_unnamed_8000237c+77¡üj
                mov     ecx, edi

loc_498F0D:                             ; CODE XREF: VBNCB_unnamed_8000237c+89¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000237c endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_8000214f proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, eax
                mov     [ebp+var_4], ecx
                mov     ebx, edx
                lea     esi, [edx-466091FDh]
                sub     ebx, eax
                sub     edi, edx
                add     eax, 338986D4h
                xor     edi, ebx
                xor     eax, esi
                xor     edi, 1CCF54F0h
                xor     eax, ebx
                mov     [ebp+var_C], edi
                add     eax, 53AB973Bh
                xor     ecx, ecx
                mov     [ebp+var_8], eax
                lea     eax, [edx-7722E46Dh]
                mov     edx, [ebp+var_8]
                xor     eax, edi
                mov     edi, [ebp+var_4]
                xor     eax, esi
                sub     eax, 2AB18031h
                or      ecx, eax
                movzx   eax, bl
                cmp     byte ptr [edi+eax*8-200h], 0
                mov     edi, [ebp+var_C]
                jnz     short loc_498FAD
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 0ACh
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_498FAD
                xor     ecx, ecx
                xor     edi, 4D090BF2h
                xor     esi, 95370740h
                or      ecx, edi
                jmp     short loc_498FAF
; ---------------------------------------------------------------------------

loc_498FAD:                             ; CODE XREF: VBNCB_unnamed_8000214f+65¡üj
                                        ; VBNCB_unnamed_8000214f+79¡üj
                mov     esi, edx

loc_498FAF:                             ; CODE XREF: VBNCB_unnamed_8000214f+8B¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000214f endp

VBNCB_unnamed_800022c1 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                mov     ebx, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                mov     [esp+28h+var_C], edi
                mov     [esp+28h+var_18], ebx
                mov     ebx, [ebp+arg_0]
                lea     edx, [ecx-266D9D7Eh]
                lea     eax, [ecx+302D9416h]
                sub     ecx, [ebp+arg_4]
                mov     [esp+28h+var_14], ecx
                xor     ecx, eax
                xor     ecx, 53700E45h
                movzx   eax, al
                mov     [esp+28h+var_10], ecx
                movzx   ecx, cl
                xor     ecx, 98h
                mov     eax, [eax+edi+35h]
                mov     edi, [ebp+arg_4]
                mov     esi, [eax+ecx]
                mov     ecx, edx
                xor     ecx, 87DE0F6h
                mov     eax, esi
                sub     eax, ecx
                cmp     ecx, esi
                mov     [esp+28h+var_8], eax
                mov     eax, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                sub     [esp+28h+var_18], ebx
                mov     ebx, [esp+28h+var_10]
                xor     [esp+28h+var_18], ebx
                xor     [esp+28h+var_18], edx
                shl     edi, 4
                shr     eax, 4
                add     edi, eax
                mov     eax, [ebp+arg_0]
                xor     edi, edx
                add     eax, 302D9416h
                mov     edx, [esp+28h+var_14]
                xor     edi, eax
                xor     edx, edi
                xor     edx, ebx
                xor     edx, 5AE836E1h
                mov     ebx, edx
                mov     [esp+28h+var_14], edx
                mov     edx, [esp+28h+var_18]
                xor     ebx, edx
                xor     ebx, eax
                xor     ebx, 0E484EDD2h
                mov     [esp+28h+var_10], ebx
                cmp     ecx, esi
                jbe     short loc_499090
                xor     eax, eax
                xor     edx, 1456B6DCh
                xor     edi, 9413239Eh
                or      eax, edx
                jmp     short loc_4990B2
; ---------------------------------------------------------------------------

loc_499090:                             ; CODE XREF: VBNCB_unnamed_800022c1+BC¡üj
                mov     eax, [ebp+arg_0]
                mov     esi, [esp+28h+var_14]
                add     eax, 0FBB007FCh
                add     eax, [ebp+arg_4]
                xor     esi, 0FC1449B2h
                xor     eax, edx
                xor     eax, edi
                xor     edi, edi
                xor     eax, 73759AD2h
                or      edi, esi

loc_4990B2:                             ; CODE XREF: VBNCB_unnamed_800022c1+CE¡üj
                mov     edx, [esp+28h+var_C]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, bl
                mov     bl, [esp+28h+var_19]
                mov     [edx+ecx*8-3D0h], bl
                setz    bl
                mov     ecx, [esp+28h+var_10]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0A9h
                mov     [edx+ecx*8], bl
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022c1 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___189_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, ecx
                shr     eax, 4
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                add     ecx, eax
                mov     [ebp+var_8], esi
                movzx   eax, cl
                mov     [ebp+var_4], ecx
                lea     ecx, [edx+63779619h]
                mov     edx, [ebp+arg_4]
                push    edi
                mov     ebx, [eax+esi+0A8h]
                mov     edi, [eax+esi+0ACh]
                mov     eax, [ebp+arg_0]
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                mov     [ebp+var_C], ecx
                xor     edx, ecx
                mov     ecx, esi
                xor     edx, [ebp+var_4]
                push    offset dword_40A580
                xor     edx, 1F9CF4E7h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 38h ; '8'
                shr     eax, 10h
                xor     al, 71h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_0]
                sub     eax, [ebp+arg_4]
                xor     eax, [ebp+var_4]
                mov     ecx, [ebp+var_C]
                xor     eax, 0DBF4128Ah
                pop     edi
                add     ecx, 9332E11Ah
                sub     eax, 71B0A202h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___189_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___188_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                and     [ebp+var_10], 0
                mov     ecx, esi
                mov     [ebp+var_4], edi
                xor     ecx, edx
                movzx   eax, cl
                push    offset dword_40A6D0
                mov     ebx, [eax+edi+9Eh]
                mov     edi, [eax+edi+0A2h]
                lea     eax, [esi+20849B6Ah]
                add     eax, edx
                mov     [ebp+var_C], ebx
                mov     [ebp+var_8], eax
                mov     eax, edx
                shr     edx, 4
                sub     eax, esi
                xor     eax, ecx
                shl     esi, 4
                add     edx, esi
                mov     [ebp+var_10], eax
                mov     ebx, edx
                xor     edx, eax
                xor     ebx, [ebp+var_8]
                xor     edx, [ebp+var_8]
                xor     ebx, ecx
                mov     ecx, [ebp+var_4]
                add     edx, 64B87D4Ah
                call    VBN_TransformContext
                mov     eax, ebx
                xor     bl, 0BCh
                shr     eax, 8
                xor     al, 66h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_10]
                mov     edx, [ebp+var_8]
                xor     ecx, 86A98B81h
                pop     edi
                pop     esi
                xor     edx, 0E439AA23h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___188_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___157      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                xor     edx, edi
                movzx   eax, dl
                mov     [esp+58h+var_48], ecx
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_40], edx
                mov     esi, [ecx+eax*8-678h]
                mov     eax, [ecx+eax*8-674h]
                mov     [esp+58h+var_18], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+58h+var_1C], esi
                push    offset dword_40BE6C
                mov     ecx, [eax+ecx+11h]
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+15h]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edi
                sub     eax, [ebp+arg_4]
                mov     ebx, eax
                mov     [esp+5Ch+var_44], eax
                xor     ebx, 0E1213367h
                movzx   eax, bl
                mov     [esp+5Ch+var_24], ebx
                mov     eax, [esi+eax*4-98h]
                mov     esi, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, 0E6h
                xor     al, 6Dh
                movzx   eax, al
                cdq
                add     eax, [ecx+esi]
                mov     [esp+5Ch+var_14], eax
                adc     edx, [ecx+esi+4]
                mov     ecx, [esp+5Ch+var_40]
                shr     ecx, 18h
                xor     ecx, 84h
                mov     [esp+5Ch+var_10], edx
                mov     eax, [ecx+esi]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, [ecx+esi+4]
                mov     esi, [ebp+arg_4]
                mov     ecx, [esp+5Ch+var_48]
                add     esi, 302E333Fh
                add     esi, edi
                mov     [esp+5Ch+var_28], eax
                xor     esi, [esp+5Ch+var_40]
                mov     edx, esi
                xor     edx, 0C6A0C4B0h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, [esp+58h+var_40]
                sub     edx, edi
                mov     ecx, [esp+58h+var_44]
                xor     eax, ebx
                xor     eax, [esp+58h+var_40]
                xor     edx, esi
                xor     edx, ebx
                shr     edi, 4
                mov     ebx, [ebp+arg_4]
                xor     ecx, eax
                shl     ebx, 4
                xor     ecx, esi
                add     ebx, edi
                mov     [esp+58h+var_C], eax
                xor     ecx, 0E35B19A7h
                mov     [esp+58h+var_8], edx
                xor     ebx, edx
                mov     [esp+58h+var_44], ecx
                xor     ebx, eax
                xor     ecx, edx
                mov     [esp+58h+var_3C], ebx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, 0E1BEEFD7h
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     cl, 7Ah
                xor     al, 37h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+58h+var_44]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_38]
                mov     edi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_38+4]
                add     eax, 678D51A3h
                xor     ecx, ecx
                add     esi, 0C869773Ah
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_30]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_2C]
                movzx   eax, al
                xor     eax, 0BCh
                shr     ecx, 18h
                xor     ecx, 0B5h
                mov     [edi+eax*8], esi
                mov     esi, [esp+58h+var_28]
                mov     [edi+eax*8+4], esi
                mov     esi, edi
                pop     edi
                mov     [esi+ecx*8+4], edx
                mov     edx, [esp+54h+var_3C]
                xor     edx, [esp+54h+var_44]
                xor     edx, [esp+54h+var_24]
                xor     edx, [esp+54h+var_40]
                mov     [esi+ecx*8], ebx
                mov     ecx, [esp+54h+var_20]
                movzx   eax, dl
                and     dword ptr [esi+eax*8-65Ch], 0
                mov     [esi+eax*8-660h], ecx
                mov     eax, edx
                mov     ecx, [esp+54h+var_1C]
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                mov     [eax+esi-1Eh], ecx
                mov     ecx, [esp+54h+var_18]
                mov     [eax+esi-1Ah], ecx
                mov     ecx, [esp+54h+var_14]
                movzx   eax, dl
                mov     edx, [esp+54h+var_C]
                xor     eax, 95h
                add     edx, 2F96E802h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [esi+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                xor     ecx, 0F7AA3C2Eh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___157      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_1__6       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     edx, 4C0429FDh
                add     edx, ebx
                mov     [ebp+var_4], ecx
                movzx   eax, dl
                xor     eax, 0Eh
                mov     [ebp+var_C], edx
                push    esi
                push    edi
                mov     esi, [eax+ecx]
                mov     edi, [eax+ecx+4]
                mov     eax, [ebp+arg_4]
                sub     eax, ebx
                mov     [ebp+var_8], esi
                sub     ebx, [ebp+arg_4]
                mov     esi, [ebp+var_4]
                xor     ebx, eax
                mov     [ebp+var_10], eax
                xor     ebx, edx
                mov     eax, edx
                xor     ebx, 0B99AFA20h
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [ebp+var_4]
                movzx   edx, bl
                shr     ebx, 8
                mov     eax, [eax+ecx*8-300h]
                mov     [edx+esi], eax
                mov     eax, esi
                mov     eax, [eax+ecx*8-2FCh]
                mov     ecx, esi
                mov     esi, [ebp+var_8]
                mov     [edx+ecx+4], eax
                xor     edx, edx
                movzx   eax, bl
                mov     [ecx+eax*8-100h], esi
                mov     [ecx+eax*8-0FCh], edi
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     eax, ecx
                mov     ecx, [ebp+var_10]
                xor     eax, [ebp+var_C]
                xor     ecx, 6DFC1A3Ch
                pop     edi
                pop     esi
                xor     eax, 0FD59FD79h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__6       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___123      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+50h+var_4], 0
                lea     ebx, [edx+58656B52h]
                mov     [esp+50h+var_44], edi
                mov     ecx, edx
                mov     [esp+50h+var_34], ebx
                shl     ecx, 4
                add     ecx, eax
                movzx   eax, bl
                xor     eax, 93h
                mov     [esp+50h+var_3C], ecx
                mov     esi, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+50h+var_1C], eax
                mov     [esp+50h+var_20], esi
                movzx   esi, cl
                mov     [esp+50h+var_C], esi
                mov     eax, [esi+edi-0C3h]
                mov     [esp+50h+var_30], eax
                mov     eax, [esi+edi-0BFh]
                lea     esi, [edx+58656B52h]
                mov     [esp+50h+var_2C], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ebx, ecx
                xor     eax, 0B4h
                shr     ebx, 18h
                xor     ecx, ecx
                add     ebx, 0Fh
                add     ebx, [edi+eax*8]
                mov     [esp+50h+var_28], ebx
                adc     ecx, [edi+eax*8+4]
                mov     ebx, [esp+50h+var_3C]
                mov     eax, ebx
                shr     eax, 8
                mov     [esp+50h+var_24], ecx
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [edi+ecx*8-300h]
                add     ecx, eax
                mov     eax, esi
                shr     eax, 8
                movzx   eax, al
                xor     eax, 44h
                mov     eax, [eax+edi]
                mov     eax, [eax+ecx*4-3C8h]
                mov     ecx, ebx
                mov     [esp+50h+var_8], eax
                xor     ecx, esi
                mov     eax, edx
                mov     [esp+50h+var_10], ecx
                sub     eax, [ebp+arg_0]
                xor     eax, ebx
                xor     eax, esi
                mov     esi, edx
                mov     [esp+50h+var_38], eax
                mov     eax, [ebp+arg_0]
                shr     esi, 4
                shl     eax, 4
                add     esi, eax
                lea     eax, [edx+58656B52h]
                xor     esi, ecx
                xor     esi, ebx
                mov     ebx, [ebp+arg_0]
                mov     edi, ebx
                xor     ebx, esi
                xor     ebx, [esp+50h+var_38]
                sub     edi, edx
                xor     edi, [esp+50h+var_38]
                xor     edi, ecx
                xor     edi, 176455E2h
                xor     ebx, edx
                mov     [esp+50h+var_40], ebx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                mov     ebx, [esp+50h+var_44]
                xor     ecx, 0F2h
                shr     eax, 8
                add     eax, 4F72h
                movzx   eax, ax
                mov     ebx, [ecx+ebx]
                cdq
                sub     ebx, eax
                mov     eax, [esp+50h+var_44]
                push    offset dword_40A81C
                mov     ecx, [ecx+eax+4]
                mov     al, byte ptr [esp+54h+var_40]
                sbb     ecx, edx
                xor     al, 70h
                movzx   eax, al
                cdq
                add     ebx, eax
                lea     eax, [edi-555EA8C0h]
                mov     [esp+54h+var_18], ebx
                adc     ecx, edx
                mov     edx, esi
                mov     [esp+54h+var_14], ecx
                xor     edx, 9443ED70h
                xor     ecx, ecx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_44]
                mov     [ebx+4], edx
                mov     ebx, edi
                xor     ebx, esi
                xor     ebx, [esp+54h+var_34]
                xor     ebx, 0FF08E7FAh
                lea     edx, [ebx-225DC100h]
                call    VBN_TransformContext
                mov     esi, [esp+50h+var_44]
                mov     ecx, [esp+50h+var_40]
                mov     edx, [esp+50h+var_30]
                xor     ecx, edi
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_34]
                movzx   eax, cl
                mov     [eax+esi-5], edx
                mov     edx, [esp+50h+var_2C]
                mov     [eax+esi-1], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_28]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-6A8h], edx
                mov     edx, [esp+50h+var_24]
                mov     [esi+eax*8-6A4h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_20]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 2Ah
                shr     ecx, 18h
                mov     [esi+eax*8], edx
                mov     edx, [esp+50h+var_1C]
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+50h+var_18]
                mov     edx, [esp+50h+var_10]
                mov     [esi+ecx*8-2B8h], eax
                mov     eax, [esp+50h+var_14]
                mov     [esi+ecx*8-2B4h], eax
                movzx   ecx, dl
                add     edx, 62B84726h
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, [esp+50h+var_C]
                and     dword ptr [esi+ecx*8-53Ch], 0
                mov     [esi+ecx*8-540h], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_38]
                pop     edi
                xor     ecx, 0A0E3E6D4h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___123      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__5       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                push    esi
                mov     esi, ecx
                movzx   eax, dl
                xor     eax, 6Ch
                mov     [esp+34h+var_18], esi
                push    edi
                mov     [esp+38h+var_20], edx
                mov     [esp+38h+var_C], edx
                mov     ecx, [eax+esi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 31h
                mov     [esp+38h+var_1C], ecx
                mov     ecx, [esp+38h+var_18]
                push    offset dword_40BE30
                mov     eax, [eax+esi]
                lea     esi, [ebx-1C0B39F9h]
                shr     eax, 5
                mov     [esp+3Ch+var_14], eax
                mov     eax, edx
                shr     eax, 10h
                mov     edx, esi
                movzx   edi, al
                xor     edx, 0D77BF186h
                sub     edi, 1Eh
                mov     [esp+3Ch+var_8], edi
                call    VBN_TransformContext
                mov     edx, [esp+38h+var_1C]
                lea     ecx, [ebx-7D8E81C6h]
                xor     ecx, [esp+38h+var_20]
                movzx   eax, cx
                xor     eax, 0A3CCh
                mov     [eax+edx], edi
                lea     eax, [ebx-114722F1h]
                mov     edi, [esp+38h+var_20]
                xor     eax, esi
                xor     eax, edi
                mov     [esp+38h+var_24], edi
                mov     edi, [ebp+arg_4]
                xor     [esp+38h+var_24], ecx
                add     edi, 0D0330556h
                xor     [esp+38h+var_24], esi
                add     edi, ebx
                add     ebx, 25C698Eh
                movzx   edx, ax
                xor     edi, eax
                mov     [esp+38h+var_28], ebx
                mov     ebx, [esp+38h+var_24]
                xor     edi, ecx
                xor     [esp+38h+var_28], ebx
                xor     edx, 0CA4Bh
                xor     [esp+38h+var_28], eax
                mov     eax, [esp+38h+var_28]
                and     edx, [esp+38h+var_14]
                xor     eax, edi
                xor     eax, esi
                shr     ecx, 10h
                xor     [esp+38h+var_20], eax
                xor     ecx, 0EEA3h
                mov     eax, edx
                mov     [esp+38h+var_10], edx
                mov     edx, [esp+38h+var_1C]
                sub     eax, [ecx+edx]
                jz      short loc_4998C4
                xor     edx, edx
                lea     eax, [edi+1C3C228Dh]
                xor     ebx, 2E484913h
                or      edx, eax
                jmp     short loc_4998E5
; ---------------------------------------------------------------------------

loc_4998C4:                             ; CODE XREF: vBng_h__5+100¡üj
                mov     eax, [esp+38h+var_28]
                mov     edx, edi
                xor     edx, ebx
                add     eax, 60164FB2h
                xor     edx, [esp+38h+var_C]
                xor     ebx, ebx
                xor     edx, 39A053BDh
                sub     edx, 56AA837Bh
                or      ebx, eax

loc_4998E5:                             ; CODE XREF: vBng_h__5+112¡üj
                mov     esi, [esp+38h+var_18]
                mov     ecx, [esp+38h+var_20]
                mov     edi, [esp+38h+var_8]
                movzx   eax, cl
                and     dword ptr [esi+eax*8-354h], 0
                mov     [esi+eax*8-358h], edi
                mov     eax, ecx
                mov     edi, [esp+38h+var_14]
                shr     eax, 8
                shr     ecx, 10h
                movzx   eax, al
                movzx   ecx, cl
                xor     ecx, 2Ah
                and     dword ptr [esi+eax*8-104h], 0
                mov     [esi+eax*8-108h], edi
                mov     eax, [esp+38h+var_10]
                and     dword ptr [esi+ecx*8+4], 0
                pop     edi
                mov     [esi+ecx*8], eax
                mov     eax, edx
                pop     esi
                mov     edx, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__5       endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___20_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     edx, [ebp+arg_0]
                and     [ebp+var_14], 0
                push    ebx
                push    esi
                lea     eax, [edx-318C11F3h]
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    edi
                mov     edi, ecx
                push    offset dword_40C4D0
                mov     [ebp+var_C], edi
                mov     ecx, [eax+edi-36h]
                mov     ebx, [eax+edi-32h]
                lea     eax, [edx+1343BE5Ch]
                add     eax, [ebp+arg_4]
                mov     [ebp+var_8], ecx
                mov     ecx, edi
                mov     [ebp+var_10], eax
                lea     edx, [eax-4468B384h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                sub     ecx, [ebp+arg_0]
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                mov     [ebp+var_14], ecx
                shr     eax, 8
                xor     cl, 54h
                sub     eax, 1167h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+arg_0]
                xor     ebx, [ebp+arg_4]
                xor     eax, eax
                mov     [ecx+1BCh], edx
                mov     edx, ebx
                xor     ebx, [ebp+var_14]
                xor     edx, [ebp+var_10]
                xor     ebx, [ebp+var_10]
                xor     edx, [ebp+var_4]
                xor     ebx, 67B899BBh
                pop     edi
                xor     edx, 8E99C5B7h
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___20_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___105_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                push    esi
                mov     esi, ecx
                movzx   eax, dl
                push    edi
                mov     [ebp+var_4], edx
                xor     edx, 0EDB94927h
                push    offset dword_40C260
                mov     ecx, [eax+esi+85h]
                mov     ebx, [eax+esi+89h]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                mov     [ebp+var_C], esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 10h
                xor     al, 98h
                shr     ecx, 8
                movzx   eax, al
                xor     cl, 2Ah
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+var_4]
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                sub     edx, [ebp+arg_0]
                add     ecx, 0DE7EB7A8h
                xor     ecx, ebx
                xor     edx, ebx
                xor     ecx, ebx
                sub     edx, 4C90CE20h
                pop     edi
                add     ecx, 37F10062h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___105_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___203      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, ecx
                shr     eax, 4
                mov     ebx, edi
                shl     ebx, 4
                lea     edx, [ecx+21AF56CAh]
                add     ebx, eax
                mov     [esp+50h+var_30], esi
                lea     eax, [ecx-330438D6h]
                mov     [esp+50h+var_38], ebx
                mov     [esp+50h+var_3C], eax
                add     edx, edi
                xor     edx, ebx
                movzx   eax, bl
                mov     [esp+50h+var_28], edx
                mov     ebx, [eax+esi+10h]
                mov     esi, [esp+50h+var_38]
                mov     eax, esi
                shr     eax, 8
                movzx   eax, al
                mov     [esp+50h+var_44], ebx
                mov     ebx, [esp+50h+var_30]
                mov     ebx, [ebx+eax*8-150h]
                mov     eax, esi
                shr     eax, 18h
                mov     [esp+50h+var_40], ebx
                mov     ebx, [esp+50h+var_30]
                mov     ebx, [eax+ebx-7]
                mov     [esp+50h+var_C], ebx
                mov     ebx, [esp+50h+var_30]
                mov     eax, [eax+ebx-3]
                lea     ebx, [edi-0D5E6B4Eh]
                mov     [esp+50h+var_8], eax
                mov     eax, [esp+50h+var_3C]
                xor     ebx, eax
                movzx   eax, al
                xor     ebx, esi
                mov     esi, [esp+50h+var_30]
                xor     eax, 0F7h
                mov     esi, [eax+esi]
                mov     eax, [esp+50h+var_3C]
                shr     eax, 8
                movzx   eax, ax
                xor     eax, 49Ah
                mov     [esp+50h+var_10], esi
                mov     esi, [esp+50h+var_44]
                mov     eax, [eax+esi]
                mov     esi, [esp+50h+var_40]
                mov     [esi], eax
                lea     eax, [ecx-3AC8AA0Ch]
                add     eax, edi
                movzx   ecx, dl
                mov     edi, [esp+50h+var_44]
                xor     eax, edx
                xor     eax, [esp+50h+var_3C]
                mov     [esp+50h+var_24], eax
                mov     eax, [esp+50h+var_3C]
                shr     eax, 18h
                mov     eax, [eax+edi+11h]
                mov     [ecx+esi-62h], eax
                mov     eax, edx
                shr     eax, 8
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                xor     esi, 1Ah
                movzx   ecx, al
                xor     edx, edx
                xor     eax, eax
                dec     ecx
                inc     eax
                call    __allshl
                mov     ecx, edi
                mov     ecx, [esi+ecx]
                mov     esi, [esp+50h+var_40]
                mov     [eax+esi], ecx
                mov     edx, [ebp+arg_0]
                sub     edx, [ebp+arg_4]
                mov     eax, edx
                movzx   ecx, bx
                xor     eax, ebx
                xor     ecx, 5D3Ah
                xor     eax, [esp+50h+var_28]
                xor     eax, 3411ACB5h
                mov     [esp+50h+var_20], eax
                mov     eax, [esp+50h+var_28]
                shr     eax, 18h
                mov     eax, [eax+edi-44h]
                mov     [ecx+esi], eax
                mov     eax, ebx
                shr     eax, 10h
                mov     ecx, ebx
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 6
                mov     eax, [eax+edi+72h]
                mov     [ecx+esi], eax
                mov     eax, [esp+50h+var_24]
                xor     edx, eax
                xor     edx, ebx
                xor     edx, 30B22244h
                mov     [esp+50h+var_2C], edx
                movzx   edx, al
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+edi+57h]
                mov     edx, [esp+50h+var_24]
                mov     [ecx+esi-6Ah], eax
                mov     eax, edx
                shr     eax, 10h
                mov     ecx, edx
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 8
                mov     eax, [eax+edi+97h]
                mov     [ecx+esi], eax
                mov     eax, [esp+50h+var_20]
                mov     ecx, eax
                xor     ecx, edx
                movzx   edx, al
                xor     ecx, [esp+50h+var_38]
                xor     edx, 0DFh
                shr     eax, 8
                xor     ecx, 0EE0A7FCDh
                mov     [esp+50h+var_34], ecx
                movzx   ecx, al
                mov     eax, [edx+edi]
                xor     ecx, 41h
                mov     edx, [esp+50h+var_40]
                mov     [ecx+esi], eax
                mov     esi, [esp+50h+var_20]
                mov     eax, esi
                shr     eax, 10h
                mov     ecx, esi
                movzx   eax, al
                xor     eax, 0F1h
                shr     ecx, 18h
                mov     eax, [eax+edi]
                mov     [ecx+edx-3Ch], eax
                mov     ecx, [esp+50h+var_2C]
                mov     eax, ecx
                xor     eax, esi
                movzx   edx, cx
                xor     eax, [esp+50h+var_3C]
                xor     [esp+50h+var_38], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [edx+edi-0CED1h]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx-0CBh], eax
                mov     ecx, [esp+50h+var_2C]
                mov     eax, [edi]
                mov     edi, edx
                shr     ecx, 18h
                xor     ecx, 90h
                mov     [ecx+edi], eax
                mov     ecx, [esp+50h+var_34]
                mov     eax, ecx
                xor     eax, [esp+50h+var_2C]
                xor     eax, [esp+50h+var_28]
                xor     [esp+50h+var_3C], eax
                mov     eax, ecx
                xor     eax, ebx
                mov     edx, [esp+50h+var_38]
                xor     eax, [esp+50h+var_28]
                xor     eax, edx
                mov     [esp+50h+var_1C], eax
                mov     eax, ecx
                xor     eax, 2DFB012Fh
                movzx   ecx, dl
                mov     edx, [esp+50h+var_44]
                xor     ecx, 8Dh
                mov     eax, [eax+edx]
                mov     [ecx+edi], eax
                mov     eax, [esp+50h+var_38]
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_38]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                xor     ecx, 6Fh
                mov     eax, [edx+eax-5]
                mov     [ecx+edi], eax
                mov     edi, [esp+50h+var_24]
                mov     eax, edi
                mov     ecx, [esp+50h+var_3C]
                xor     eax, ebx
                xor     eax, ecx
                mov     ebx, [esp+50h+var_40]
                xor     eax, [esp+50h+var_38]
                mov     edx, [esp+50h+var_44]
                mov     [esp+50h+var_24], eax
                mov     eax, [esp+50h+var_38]
                shr     eax, 18h
                xor     eax, 0C0h
                movzx   ecx, cl
                xor     ecx, 0Fh
                mov     eax, [eax+edx]
                mov     [ecx+ebx], eax
                mov     eax, [esp+50h+var_3C]
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_3C]
                xor     edx, 6Eh
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                xor     ecx, 2Ch
                mov     eax, [edx+eax]
                mov     edx, [esp+50h+var_1C]
                mov     [ecx+ebx], eax
                mov     eax, esi
                xor     eax, edi
                movzx   ecx, dx
                mov     edi, [esp+50h+var_44]
                xor     eax, edx
                xor     eax, [esp+50h+var_3C]
                mov     [esp+50h+var_28], eax
                mov     eax, [esp+50h+var_3C]
                shr     eax, 18h
                xor     eax, 22h
                mov     eax, [eax+edi]
                mov     [ecx+ebx-0D30Ah], eax
                mov     eax, edx
                shr     eax, 10h
                mov     ecx, edx
                movzx   eax, al
                xor     eax, 0DEh
                shr     ecx, 18h
                xor     ecx, 23h
                mov     eax, [eax+edi]
                mov     [ecx+ebx], eax
                mov     ebx, [esp+50h+var_2C]
                mov     eax, [esp+50h+var_24]
                xor     ebx, esi
                xor     ebx, eax
                mov     esi, [esp+50h+var_40]
                xor     ebx, edx
                movzx   edx, al
                shr     eax, 8
                xor     edx, 0ADh
                movzx   ecx, al
                mov     [esp+50h+var_18], ebx
                mov     eax, [edx+edi]
                mov     [ecx+esi+4], eax
                mov     edi, [esp+50h+var_24]
                mov     eax, edi
                shr     eax, 10h
                mov     ecx, edi
                movzx   eax, al
                mov     edx, [esp+50h+var_44]
                shr     ecx, 18h
                mov     eax, [eax+edx+58h]
                mov     [ecx+esi+40h], eax
                mov     eax, [esp+50h+var_34]
                xor     eax, [esp+50h+var_2C]
                mov     ecx, [esp+50h+var_28]
                xor     eax, ecx
                xor     eax, edi
                movzx   edx, cl
                mov     edi, [esp+50h+var_44]
                xor     edx, 5Bh
                mov     [esp+50h+var_20], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+edi]
                xor     ecx, 32h
                mov     edx, [esp+50h+var_40]
                mov     [ecx+esi], eax
                mov     esi, [esp+50h+var_28]
                mov     eax, esi
                shr     eax, 10h
                mov     ecx, esi
                movzx   eax, al
                xor     eax, 0FAh
                shr     ecx, 18h
                mov     eax, [eax+edi]
                mov     [ecx+edx-39h], eax
                mov     eax, [esp+50h+var_34]
                xor     eax, ebx
                movzx   edx, bl
                xor     eax, esi
                xor     edx, 0FDh
                xor     eax, [esp+50h+var_38]
                mov     [esp+50h+var_34], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+edi]
                xor     ecx, 55h
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     edx, [esp+50h+var_20]
                mov     eax, edx
                xor     eax, ebx
                movzx   ecx, dl
                xor     eax, [esp+50h+var_3C]
                xor     [esp+50h+var_38], eax
                mov     eax, ebx
                mov     ebx, [esp+50h+var_40]
                shr     eax, 10h
                xor     eax, 8F80h
                mov     eax, [eax+edi]
                mov     [ecx+ebx-68h], eax
                mov     eax, edx
                shr     eax, 8
                mov     ecx, edx
                movzx   eax, al
                shr     ecx, 10h
                xor     eax, 0D4h
                xor     ecx, 14BAh
                mov     eax, [eax+edi]
                mov     [ecx+ebx], eax
                mov     ecx, [esp+50h+var_34]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+50h+var_1C]
                xor     [esp+50h+var_3C], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   edx, cl
                movzx   ecx, al
                xor     ecx, 0F3h
                mov     eax, [edx+edi-1Ch]
                mov     edx, ebx
                mov     [ecx+edx], eax
                mov     edx, [esp+50h+var_34]
                mov     eax, edx
                shr     eax, 10h
                mov     ecx, edx
                xor     edx, [esp+50h+var_24]
                xor     edx, [esp+50h+var_1C]
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0E7h
                mov     eax, [eax+edi+62h]
                mov     edi, ebx
                mov     [ecx+edi], eax
                mov     ecx, [esp+50h+var_38]
                xor     edx, ecx
                mov     eax, ecx
                mov     [esp+50h+var_2C], edx
                shr     eax, 8
                movzx   edx, cl
                movzx   ecx, ax
                mov     eax, [esp+50h+var_44]
                xor     ecx, 0E1FAh
                mov     eax, [edx+eax+0A1h]
                mov     edx, ebx
                mov     ebx, esi
                mov     esi, [esp+50h+var_44]
                xor     ebx, [esp+50h+var_24]
                mov     [ecx+edx], eax
                mov     ecx, [esp+50h+var_3C]
                xor     ebx, ecx
                mov     eax, [esp+50h+var_38]
                xor     ebx, eax
                shr     eax, 18h
                movzx   ecx, cx
                xor     ecx, 3E15h
                mov     [esp+50h+var_1C], ebx
                mov     eax, [eax+esi+0Fh]
                mov     [ecx+edx], eax
                mov     ecx, [esp+50h+var_3C]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 56h
                shr     ecx, 18h
                xor     ecx, 22h
                mov     eax, [eax+esi]
                mov     esi, [esp+50h+var_18]
                xor     esi, [esp+50h+var_28]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_2C]
                xor     esi, eax
                movzx   edx, al
                shr     eax, 8
                xor     edx, 7Ch
                xor     esi, [esp+50h+var_3C]
                movzx   ecx, ax
                mov     eax, [esp+50h+var_44]
                xor     ecx, 41E6h
                mov     [esp+50h+var_28], esi
                mov     eax, [edx+eax]
                mov     edx, edi
                mov     edi, [esp+50h+var_44]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_20]
                xor     eax, [esp+50h+var_18]
                xor     eax, ebx
                movzx   ecx, bl
                xor     eax, [esp+50h+var_2C]
                mov     [esp+50h+var_24], eax
                mov     eax, [esp+50h+var_2C]
                shr     eax, 18h
                xor     ecx, 14h
                mov     eax, [eax+edi-71h]
                mov     [ecx+edx], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     edx, 0CAh
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 29h
                mov     ebx, [esp+50h+var_34]
                xor     ebx, [esp+50h+var_20]
                xor     ebx, esi
                mov     eax, [edx+eax]
                mov     edx, [esp+50h+var_40]
                xor     ebx, [esp+50h+var_1C]
                mov     [ecx+edx], eax
                mov     eax, esi
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edi
                movzx   edx, si
                mov     eax, [edx+eax-0D2CFh]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx-2Dh], eax
                mov     edx, [esp+50h+var_24]
                mov     eax, [esp+50h+var_34]
                xor     eax, edx
                movzx   ecx, dl
                xor     eax, esi
                xor     ecx, 6Dh
                xor     eax, [esp+50h+var_38]
                mov     [esp+50h+var_34], eax
                mov     eax, esi
                shr     eax, 18h
                mov     esi, edi
                mov     eax, [eax+esi-15h]
                mov     esi, [esp+50h+var_40]
                mov     [ecx+esi], eax
                mov     eax, edx
                mov     esi, [esp+50h+var_24]
                shr     eax, 8
                movzx   edx, al
                mov     eax, esi
                shr     eax, 10h
                xor     edx, 0F5h
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 36h
                mov     eax, [edx+eax]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     eax, ebx
                xor     eax, esi
                movzx   ecx, bl
                xor     eax, [esp+50h+var_3C]
                xor     ecx, 77h
                xor     [esp+50h+var_38], eax
                mov     eax, esi
                shr     eax, 18h
                mov     eax, [eax+edi]
                mov     [ecx+edx], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     edx, 6Ah
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 80h
                mov     eax, [edx+eax]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     edx, [esp+50h+var_34]
                mov     eax, edx
                xor     eax, ebx
                xor     eax, [esp+50h+var_2C]
                xor     [esp+50h+var_3C], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0C0h
                mov     esi, [esp+50h+var_44]
                movzx   ecx, dl
                xor     ecx, 0Dh
                mov     eax, [eax+edi]
                mov     edi, [esp+50h+var_40]
                mov     [ecx+edi], eax
                mov     eax, edx
                shr     eax, 8
                mov     ecx, edx
                movzx   eax, ax
                xor     eax, 0FCC7h
                shr     ecx, 18h
                mov     eax, [eax+esi]
                mov     [ecx+edi-7], eax
                mov     edi, edx
                mov     ecx, [esp+50h+var_28]
                xor     ecx, [esp+50h+var_1C]
                mov     eax, [esp+50h+var_3C]
                xor     ecx, eax
                mov     edx, [esp+50h+var_38]
                xor     ecx, edx
                xor     edi, [esp+50h+var_1C]
                xor     edi, [esp+50h+var_2C]
                mov     [esp+50h+var_2C], ecx
                xor     edi, edx
                movzx   ecx, al
                mov     eax, esi
                xor     ecx, 0BFh
                mov     eax, [eax+edx+60F681A0h]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_3C]
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_3C]
                xor     edx, 1Dh
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, esi
                mov     eax, [edx+eax]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx-4Bh], eax
                mov     eax, [esp+50h+var_24]
                xor     eax, [esp+50h+var_28]
                mov     edx, [esp+50h+var_2C]
                xor     eax, edi
                xor     eax, [esp+50h+var_3C]
                mov     [esp+50h+var_28], eax
                mov     eax, ebx
                xor     eax, [esp+50h+var_24]
                xor     eax, edx
                movzx   ecx, dl
                xor     eax, edi
                xor     ecx, 34h
                mov     [esp+50h+var_24], eax
                mov     eax, esi
                mov     esi, [esp+50h+var_40]
                mov     eax, [eax+edi-3BE15C31h]
                mov     [ecx+esi], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_2C]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                xor     ecx, 0B2h
                mov     eax, [edx+eax+29h]
                mov     edx, [esp+50h+var_28]
                mov     [ecx+esi], eax
                mov     eax, [esp+50h+var_34]
                xor     eax, ebx
                movzx   ecx, dl
                xor     eax, edx
                xor     eax, [esp+50h+var_2C]
                mov     [esp+50h+var_20], eax
                mov     eax, [esp+50h+var_2C]
                shr     eax, 18h
                xor     eax, 0ECh
                mov     ebx, [esp+50h+var_44]
                mov     eax, [eax+ebx]
                mov     [ecx+esi-2Ch], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     esi, [esp+50h+var_28]
                mov     eax, esi
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                xor     ecx, 0A9h
                mov     eax, [edx+eax-77h]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     edx, [esp+50h+var_24]
                mov     eax, [esp+50h+var_34]
                xor     eax, edx
                movzx   ecx, dl
                xor     eax, esi
                xor     eax, [esp+50h+var_38]
                mov     [esp+50h+var_34], eax
                mov     eax, esi
                shr     eax, 18h
                mov     esi, ebx
                xor     eax, 0F2h
                mov     eax, [eax+esi]
                mov     esi, [esp+50h+var_40]
                mov     [ecx+esi+0B1h], eax
                mov     eax, edx
                mov     esi, [esp+50h+var_24]
                shr     eax, 8
                movzx   edx, al
                mov     eax, esi
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                mov     ebx, [esp+50h+var_3C]
                mov     eax, [edx+eax+74h]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx+63h], eax
                mov     edx, [esp+50h+var_20]
                mov     eax, edx
                xor     eax, esi
                movzx   ecx, dl
                xor     eax, ebx
                xor     ecx, 96h
                xor     [esp+50h+var_38], eax
                mov     eax, esi
                mov     esi, [esp+50h+var_44]
                shr     eax, 18h
                mov     eax, [eax+esi+1Dh]
                mov     esi, [esp+50h+var_40]
                mov     [ecx+esi], eax
                mov     eax, edx
                mov     esi, [esp+50h+var_20]
                shr     eax, 8
                movzx   edx, al
                mov     eax, esi
                shr     eax, 10h
                xor     edx, 75h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                xor     ecx, 2Fh
                mov     eax, [edx+eax]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     edx, [esp+50h+var_34]
                mov     eax, edx
                xor     eax, esi
                movzx   ecx, dl
                xor     eax, edi
                xor     ebx, eax
                mov     eax, esi
                mov     esi, [esp+50h+var_44]
                shr     eax, 18h
                xor     ecx, 0CAh
                mov     [esp+50h+var_3C], ebx
                mov     eax, [eax+esi+0ABh]
                mov     esi, [esp+50h+var_40]
                mov     [ecx+esi], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_34]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                mov     eax, [edx+eax+5Dh]
                mov     edx, esi
                mov     [ecx+edx+0Fh], eax
                mov     eax, [esp+50h+var_34]
                mov     esi, eax
                xor     esi, [esp+50h+var_2C]
                mov     ecx, [esp+50h+var_38]
                xor     esi, edi
                mov     edi, [esp+50h+var_44]
                xor     esi, ecx
                shr     eax, 18h
                movzx   ecx, cl
                xor     ecx, 8Ah
                mov     [esp+50h+var_1C], esi
                mov     eax, [eax+edi+0Bh]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_38]
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_38]
                xor     edx, 0C3h
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [edx+edi]
                mov     edx, [esp+50h+var_40]
                mov     edi, [esp+50h+var_28]
                xor     edi, [esp+50h+var_2C]
                mov     [ecx+edx+78h], eax
                mov     ecx, ebx
                mov     eax, [esp+50h+var_38]
                xor     edi, ecx
                mov     ebx, [esp+50h+var_44]
                xor     edi, eax
                shr     eax, 18h
                movzx   ecx, cl
                xor     ecx, 52h
                mov     [esp+50h+var_2C], edi
                mov     eax, [eax+ebx-9]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_3C]
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [edx+ebx+1Dh]
                mov     edx, [esp+50h+var_40]
                mov     ebx, [esp+50h+var_24]
                xor     ebx, [esp+50h+var_28]
                xor     ebx, esi
                mov     [ecx+edx+7Ch], eax
                mov     eax, esi
                xor     ebx, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                xor     ecx, 0C6h
                movzx   edx, si
                mov     esi, [esp+50h+var_40]
                mov     [esp+50h+var_28], ebx
                mov     eax, [edx+eax-0D2DDh]
                mov     [ecx+esi], eax
                mov     eax, edi
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                movzx   edx, di
                xor     edx, 0EC3Ch
                mov     eax, [edx+eax]
                mov     [ecx+esi+0D9h], eax
                mov     eax, ebx
                movzx   edx, bl
                xor     edx, 64h
                shr     eax, 8
                movzx   ecx, ax
                mov     eax, [esp+50h+var_44]
                xor     ecx, 0ADBh
                mov     eax, [edx+eax]
                mov     [ecx+esi], eax
                mov     eax, ebx
                mov     ecx, [esp+50h+var_20]
                mov     esi, ecx
                xor     esi, [esp+50h+var_24]
                mov     edx, [esp+50h+var_44]
                xor     esi, edi
                xor     esi, [esp+50h+var_1C]
                mov     ebx, [esp+50h+var_34]
                shr     eax, 18h
                xor     ebx, ecx
                xor     ebx, [esp+50h+var_28]
                xor     eax, 49h
                xor     ebx, edi
                mov     [esp+50h+var_20], esi
                mov     edi, [esp+50h+var_44]
                mov     [esp+50h+var_18], ebx
                mov     eax, [eax+edx]
                mov     edx, [esp+50h+var_40]
                mov     [edx+esi-69A76210h], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                xor     ecx, 0EDh
                movzx   edx, bl
                mov     eax, [edx+eax+18h]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     eax, ebx
                shr     eax, 10h
                mov     ecx, ebx
                mov     ebx, [esp+50h+var_44]
                movzx   eax, al
                xor     eax, 73h
                shr     ecx, 18h
                mov     eax, [eax+ebx]
                mov     ebx, esi
                xor     ebx, [esp+50h+var_34]
                xor     ebx, [esp+50h+var_28]
                xor     ebx, [esp+50h+var_38]
                mov     [ecx+edx+2Bh], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                movzx   edx, bl
                xor     ecx, 0B5h
                mov     eax, [edx+edi-9Ch]
                mov     edx, [esp+50h+var_40]
                mov     [ecx+edx], eax
                mov     eax, ebx
                shr     eax, 10h
                mov     ecx, ebx
                movzx   eax, al
                shr     ecx, 18h
                mov     eax, [eax+edi+50h]
                mov     edi, ebx
                mov     [ecx+edx+3Ch], eax
                mov     eax, [esp+50h+var_18]
                mov     ecx, eax
                xor     ecx, esi
                xor     edi, eax
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                mov     esi, [esp+50h+var_44]
                xor     edi, [esp+50h+var_1C]
                xor     edi, [esp+50h+var_3C]
                movzx   eax, cl
                xor     eax, 48h
                mov     [esp+50h+var_18], ecx
                mov     eax, [eax+esi]
                mov     esi, edx
                mov     [esi+edi+7AAE5039h], eax
                mov     esi, ecx
                xor     esi, ebx
                xor     esi, [esp+50h+var_2C]
                xor     esi, [esp+50h+var_1C]
                mov     ecx, [esp+50h+var_2C]
                mov     edx, esi
                mov     ebx, [esp+50h+var_30]
                xor     edx, edi
                xor     edx, [esp+50h+var_20]
                xor     edx, [esp+50h+var_28]
                xor     edi, [esp+50h+var_18]
                shr     ecx, 18h
                movzx   eax, dl
                xor     ecx, 1Dh
                add     ecx, [esp+50h+var_10]
                shr     edx, 8
                mov     [ebx+eax*8-4F0h], ecx
                mov     ecx, ebx
                and     dword ptr [ecx+eax*8-4ECh], 0
                mov     ecx, [esp+50h+var_C]
                movzx   eax, dl
                mov     edx, ebx
                mov     [eax+edx-1Ch], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [eax+edx-18h], ecx
                lea     ecx, [esi+36F3969Bh]
                mov     eax, [esp+50h+var_28]
                xor     edx, edx
                xor     eax, edi
                xor     eax, [esp+50h+var_2C]
                pop     edi
                pop     esi
                sub     eax, 39E71520h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___203      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___12_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                shl     edx, 4
                add     edx, eax
                mov     eax, edx
                mov     [ebp+var_4], edx
                shr     eax, 8
                push    esi
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                sub     esi, 76h ; 'v'
                add     al, 67h ; 'g'
                movzx   eax, al
                cdq
                push    edi
                lea     edi, [ecx-226E3543h]
                xor     ecx, ecx
                sub     esi, eax
                push    offset dword_40CA20
                sbb     ecx, edx
                mov     edx, [ebp+var_4]
                movzx   eax, dl
                mov     edx, [ebp+var_8]
                add     esi, [eax+edx+0A0h]
                adc     ecx, [eax+edx+0A4h]
                mov     [edx+1B8h], esi
                mov     esi, [ebp+arg_0]
                mov     [edx+1BCh], ecx
                mov     edx, esi
                mov     ecx, [ebp+var_8]
                sub     edx, ebx
                xor     edx, edi
                xor     edx, [ebp+var_4]
                xor     edx, 78A2D13Ah
                add     edx, 5C693A7Ch
                call    VBN_TransformContext
                lea     eax, [esi-594C9452h]
                xor     edx, edx
                add     eax, ebx
                lea     ecx, [edi+777D9E3h]
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                xor     eax, 0FF7FED8h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___12_stk   endp

vBng___133_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     edx, 4
                shr     eax, 4
                add     eax, edx
                push    edi
                mov     edi, ecx
                mov     [ebp+var_C], eax
                lea     ecx, [ebx+345304EFh]
                mov     [ebp+var_4], edi
                shr     ebx, 4
                lea     edx, [esi-62993F4Ah]
                xor     edx, eax
                shl     esi, 4
                add     ebx, esi
                mov     [ebp+var_10], ecx
                xor     ebx, ecx
                mov     [ebp+var_8], edx
                xor     ebx, eax
                movzx   ecx, al
                xor     ecx, 0A8h
                mov     eax, ebx
                shr     eax, 8
                xor     eax, 5Fh
                movzx   eax, ax
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                mov     ecx, [ebp+var_4]
                cdq
                sub     esi, eax
                push    offset dword_40A690
                sbb     edi, edx
                xor     bl, 96h
                movzx   eax, bl
                mov     ebx, [ebp+var_10]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+var_C]
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                sub     edx, 491BB3F1h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     edx, [ebx-19C54E59h]
                mov     ecx, [ebp+var_8]
                xor     ecx, 0BB55BD8Ch
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___133_stk  endp

vBng___54       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                sub     edx, edi
                xor     edx, 81B03892h
                mov     [esp+50h+var_3C], esi
                movzx   eax, dl
                mov     [esp+50h+var_40], edx
                push    offset dword_40AD54
                mov     ecx, [eax+esi-71h]
                mov     eax, [eax+esi-6Dh]
                mov     [esp+54h+var_C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EAh
                mov     [esp+54h+var_10], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_1C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+54h+var_20], ecx
                shr     edx, 18h
                xor     edx, 0ACh
                mov     ecx, [eax+esi-53h]
                mov     eax, [eax+esi-4Fh]
                mov     dword ptr [esp+54h+var_2C+4], eax
                mov     eax, ebx
                shl     eax, 4
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     ecx, edi
                shr     ecx, 4
                add     ecx, eax
                mov     eax, ecx
                mov     [esp+54h+var_44], ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+esi]
                mov     eax, [eax+ecx+8Ah]
                mov     [esp+54h+var_8], eax
                mov     eax, [esp+54h+var_44]
                movzx   eax, al
                mov     ecx, [esi+eax*8-0F0h]
                mov     eax, [esi+eax*8-0ECh]
                mov     esi, edi
                mov     dword ptr [esp+54h+var_18+4], eax
                mov     eax, ebx
                shl     esi, 4
                shr     eax, 4
                add     esi, eax
                mov     dword ptr [esp+54h+var_18], ecx
                xor     esi, [esp+54h+var_40]
                mov     ecx, [esp+54h+var_3C]
                mov     edx, esi
                xor     edx, 0A5156EDEh
                call    VBN_TransformContext
                mov     eax, edi
                lea     ecx, [ebx+33BBC651h]
                sub     eax, ebx
                add     ecx, edi
                mov     edx, eax
                xor     eax, esi
                xor     eax, [esp+50h+var_44]
                xor     edx, [esp+50h+var_44]
                xor     edx, [esp+50h+var_40]
                mov     [esp+50h+var_34], eax
                lea     eax, [ebx-45FA8896h]
                xor     ecx, [esp+50h+var_34]
                xor     eax, edx
                xor     eax, esi
                mov     [esp+50h+var_4], edx
                xor     ecx, edx
                mov     [esp+50h+var_24], eax
                mov     [esp+50h+var_38], ecx
                mov     ebx, eax
                xor     ebx, [esp+50h+var_34]
                xor     ebx, [esp+50h+var_40]
                xor     ebx, 6F111D8Dh
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 3Ah
                xor     al, 0BCh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+50h+var_30], eax
                mov     eax, edx
                mov     edx, [esp+50h+var_30]
                sub     edx, esi
                mov     esi, [esp+50h+var_24]
                sbb     eax, edi
                add     edx, dword ptr [esp+50h+var_2C]
                pop     edi
                adc     eax, dword ptr [esp+4Ch+var_2C+4]
                xor     ecx, ecx
                mov     dword ptr [esp+4Ch+var_2C+4], eax
                xor     esi, 131B3CD3h
                mov     eax, [esp+4Ch+var_38]
                add     eax, 5EB222C3h
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+4Ch+var_20]
                mov     [edx+4], esi
                mov     esi, [esp+4Ch+var_3C]
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+esi-0DBh], ecx
                mov     ecx, [esp+4Ch+var_1C]
                mov     [eax+esi-0D7h], ecx
                mov     eax, [esp+4Ch+var_44]
                shr     eax, 10h
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 1Bh
                add     ecx, dword ptr [esp+4Ch+var_18]
                adc     eax, dword ptr [esp+4Ch+var_18+4]
                shr     ebx, 18h
                xor     ebx, 0EAh
                mov     [esi+ebx*8], ecx
                mov     ecx, [esp+4Ch+var_38]
                xor     ecx, [esp+4Ch+var_24]
                xor     ecx, [esp+4Ch+var_44]
                xor     ecx, [esp+4Ch+var_40]
                mov     [esi+ebx*8+4], eax
                mov     ebx, [esp+4Ch+var_3C]
                mov     esi, [esp+4Ch+var_10]
                movzx   eax, cl
                xor     eax, 0Ah
                mov     [ebx+eax*8], esi
                mov     esi, [esp+4Ch+var_C]
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+4Ch+var_8]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 57h
                shr     ecx, 10h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], esi
                movzx   eax, cl
                mov     ecx, dword ptr [esp+4Ch+var_2C+4]
                pop     esi
                mov     [ebx+eax*8+134h], ecx
                mov     ecx, [esp+48h+var_34]
                mov     [ebx+eax*8+130h], edx
                xor     ecx, 37D57C7Ah
                mov     edx, [esp+48h+var_4]
                xor     eax, eax
                add     edx, 0F1BC8C37h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___54       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___98       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, edx
                mov     [esp+54h+var_40], esi
                sub     ecx, ebx
                lea     eax, [ebx-424EFC05h]
                add     eax, edx
                mov     [esp+54h+var_38], ecx
                mov     [esp+54h+var_4C], eax
                lea     eax, [edx+344459B6h]
                xor     eax, ecx
                mov     [esp+54h+var_48], eax
                movzx   eax, cl
                xor     eax, 0C7h
                push    edi
                push    offset dword_40C5B0
                mov     edx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_34], edx
                mov     edx, [eax+esi-26h]
                mov     eax, [eax+esi-22h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_24], edx
                mov     edx, [esi+eax*8-30h]
                mov     eax, [esi+eax*8-2Ch]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_14], edx
                mov     edx, [esp+5Ch+var_48]
                mov     ecx, [eax+esi-0CCh]
                mov     eax, [eax+esi-0C8h]
                mov     [esp+5Ch+var_28], eax
                lea     edx, [edx+7B4E470Eh]
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     edi, [eax+esi+4Bh]
                movzx   eax, cl
                mov     ecx, [esp+5Ch+var_40]
                xor     eax, 0F2h
                mov     esi, [esi+eax*8]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, [esp+58h+var_4C]
                add     edx, 4A86ADE3h
                mov     ecx, [esp+58h+var_38]
                xor     edx, eax
                shr     eax, 10h
                xor     edx, ecx
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_18], edx
                mov     esi, ecx
                xor     esi, [esp+58h+var_48]
                xor     esi, [esp+58h+var_4C]
                mov     eax, [edi+eax*4-80h]
                lea     edi, [ebx-513770F4h]
                mov     [esp+58h+var_1C], eax
                xor     edi, edx
                mov     eax, [ebp+arg_4]
                xor     edi, [esp+58h+var_48]
                xor     eax, ebx
                mov     ebx, eax
                mov     [esp+58h+var_C], esi
                mov     [esp+58h+var_8], edi
                xor     ebx, esi
                mov     [esp+58h+var_44], eax
                xor     ebx, edx
                mov     eax, edi
                xor     eax, esi
                mov     [esp+58h+var_44], ebx
                xor     eax, ecx
                xor     eax, 2AF97981h
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                xor     eax, edi
                xor     eax, [esp+58h+var_4C]
                xor     eax, ecx
                mov     cl, bl
                mov     [esp+58h+var_38], eax
                xor     cl, 95h
                mov     eax, ebx
                shr     eax, 8
                sub     al, 4Bh ; 'K'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_38]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_3C]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     ecx, ecx
                xor     eax, 0FE2F1F5Fh
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi+311A2845h]
                mov     ecx, edi
                mov     [ebx+4], esi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_4C]
                mov     edi, [esp+58h+var_40]
                mov     esi, [esp+58h+var_2C]
                movzx   eax, cl
                mov     [eax+edi+4], esi
                mov     esi, [esp+58h+var_28]
                mov     [eax+edi+8], esi
                mov     eax, ecx
                shr     eax, 8
                xor     esi, esi
                movzx   eax, al
                xor     eax, 0A3h
                mov     [edi+eax*8+4], edx
                mov     edx, [esp+58h+var_24]
                mov     [edi+eax*8], ebx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0C4h
                mov     [edi+eax*8-4C8h], edx
                mov     edx, [esp+58h+var_20]
                mov     [edi+eax*8-4C4h], edx
                mov     eax, [esp+58h+var_1C]
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                movzx   edx, al
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                lea     edi, [edx-2Eh]
                movzx   eax, al
                add     edi, dword ptr [esp+58h+var_14]
                adc     esi, dword ptr [esp+58h+var_14+4]
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                xor     ecx, 0A7h
                xor     ecx, edx
                mov     edx, [esp+58h+var_C]
                mov     [eax+ecx*8], edi
                add     edx, 3BB589ACh
                mov     [eax+ecx*8+4], esi
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                xor     ecx, 3778F0Eh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___98       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___154_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, ecx
                xor     ecx, ecx
                push    offset dword_40BA60
                lea     edx, [edi-42740B96h]
                mov     eax, edx
                shr     eax, 8
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                sub     esi, 0E7h
                xor     al, 7Dh
                movzx   eax, al
                cdq
                sub     esi, eax
                sbb     ecx, edx
                lea     edx, [edi-42740B96h]
                movzx   eax, dl
                lea     edx, [edi-0AA9BA2Dh]
                add     esi, [eax+ebx+74h]
                adc     ecx, [eax+ebx+78h]
                lea     eax, [edi-42740B96h]
                mov     [ebx+1B8h], esi
                lea     esi, [edi-643A7F37h]
                xor     edx, esi
                mov     [ebx+1BCh], ecx
                xor     edx, eax
                mov     ecx, ebx
                xor     edx, 0B00A893Eh
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                lea     edx, [edi-42740B96h]
                add     eax, 770EFC19h
                xor     esi, 1AD45A30h
                xor     eax, edx
                xor     edx, edx
                pop     edi
                xor     eax, 8400B0Ch
                or      edx, esi
                pop     esi
                pop     ebx
                pop     ebp
                retn    8
vBng___154_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___151_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                sub     edx, [ebp+arg_4]
                mov     [ebp+var_4], ecx
                xor     edx, 0BB7EFCBEh
                mov     [ebp+var_C], edx
                lea     ecx, [ebx-23740A27h]
                add     ecx, [ebp+arg_4]
                mov     eax, ecx
                mov     [ebp+var_8], ecx
                shr     eax, 8
                xor     al, 0B5h
                shr     ecx, 10h
                movzx   eax, al
                add     cl, 42h ; 'B'
                push    esi
                cdq
                push    edi
                mov     edi, edx
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_8]
                cdq
                sub     esi, eax
                movzx   eax, cl
                push    offset dword_40AA90
                sbb     edi, edx
                mov     edx, [ebp+var_4]
                add     esi, [eax+edx+59h]
                adc     edi, [eax+edx+5Dh]
                mov     [edx+1B8h], esi
                mov     esi, [ebp+arg_4]
                mov     [edx+1BCh], edi
                mov     edx, esi
                mov     edi, [ebp+var_C]
                shr     edx, 4
                shl     ebx, 4
                add     edx, ebx
                xor     edx, edi
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, 1F1B4083h
                call    VBN_TransformContext
                lea     eax, [esi-330F6D65h]
                xor     edx, edx
                xor     eax, [ebp+var_8]
                lea     ecx, [edi-3B1D0C9Dh]
                pop     edi
                pop     esi
                xor     eax, 690BC001h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___151_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800020b7 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_21          = byte ptr -21h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                and     [esp+24h+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                mov     edx, ebx
                push    esi
                mov     esi, [ebp+arg_4]
                sub     edx, esi
                mov     [esp+2Ch+var_14], ecx
                lea     ecx, [ebx-11C2ED43h]
                add     ecx, esi
                push    edi
                mov     edi, esi
                mov     [esp+30h+var_20], ecx
                mov     esi, [esp+30h+var_14]
                xor     edx, ecx
                shl     edi, 4
                xor     edx, 16138F6h
                add     edi, eax
                mov     [esp+30h+var_C], ecx
                movzx   eax, cl
                xor     eax, 0EFh
                movzx   ecx, cl
                mov     eax, [eax+esi]
                mov     esi, [eax+ecx-67h]
                lea     ecx, [edx-221EA8FDh]
                mov     eax, esi
                sub     eax, ecx
                cmp     ecx, esi
                mov     [esp+30h+var_8], eax
                mov     eax, [ebp+arg_4]
                setnbe  [esp+30h+var_21]
                xor     eax, ebx
                shl     ebx, 4
                xor     eax, edx
                xor     eax, edi
                mov     [esp+30h+var_1C], eax
                mov     eax, [ebp+arg_4]
                add     eax, 58D46983h
                xor     eax, [esp+30h+var_20]
                xor     eax, edx
                mov     edx, [ebp+arg_4]
                shr     edx, 4
                add     edx, ebx
                mov     [esp+30h+var_10], eax
                xor     edx, [esp+30h+var_1C]
                mov     ebx, [esp+30h+var_10]
                mov     [esp+30h+var_18], edx
                mov     edx, [esp+30h+var_20]
                mov     eax, [esp+30h+var_18]
                xor     eax, edx
                mov     [esp+30h+var_18], eax
                xor     eax, ebx
                xor     eax, edi
                xor     edx, eax
                mov     [esp+30h+var_20], edx
                cmp     ecx, esi
                jbe     short loc_49AE08
                mov     esi, [esp+30h+var_1C]
                xor     edx, edx
                xor     ebx, 38799736h
                xor     esi, 0AA0D7F91h
                or      edx, ebx
                jmp     short loc_49AE25
; ---------------------------------------------------------------------------

loc_49AE08:                             ; CODE XREF: VBNCB_unnamed_800020b7+C0¡üj
                mov     eax, [esp+30h+var_18]
                mov     edx, ebx
                xor     edx, [esp+30h+var_1C]
                xor     esi, esi
                xor     edx, [esp+30h+var_C]
                add     eax, 5BF41BCBh
                xor     edx, 1A5BA2B8h
                or      esi, eax

loc_49AE25:                             ; CODE XREF: VBNCB_unnamed_800020b7+D6¡üj
                mov     eax, [esp+30h+var_20]
                mov     edi, [esp+30h+var_14]
                cmp     [esp+30h+var_8], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [edi+ecx*8+118h], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_21]
                xor     ecx, 7
                mov     [edi+ecx*8], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020b7 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___51_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     ebx, eax
                sub     ebx, edx
                lea     esi, [edx-633B9662h]
                push    edi
                mov     edi, ecx
                mov     [ebp+var_8], esi
                lea     ecx, [eax-56A04114h]
                mov     [ebp+var_4], edi
                add     ecx, edx
                xor     ebx, ecx
                xor     ebx, 740F38A6h
                mov     [ebp+var_C], ebx
                lea     ebx, [eax+6B710DCh]
                add     ebx, edx
                xor     ebx, esi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0F5h
                mov     esi, [ecx+edi-46h]
                mov     edi, [ecx+edi-42h]
                movzx   eax, al
                cdq
                mov     ecx, [ebp+var_4]
                sub     esi, eax
                push    offset dword_40C050
                sbb     edi, edx
                xor     bl, 97h
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                mov     eax, [ebp+arg_0]
                adc     edi, edx
                mov     edx, [ebp+arg_4]
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                xor     edx, 0CC7E3FB4h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ebx, 0AAFEE21Dh
                mov     edx, [ebp+var_8]
                xor     edx, 0C4CD532Fh
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___51_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___28       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                mov     edx, ecx
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, edi
                sub     ebx, eax
                mov     [esp+58h+var_48], edx
                xor     ebx, 0DC3AC411h
                and     [esp+58h+var_4], 0
                push    offset dword_40C9C0
                lea     esi, [eax+edi]
                add     eax, 2191C340h
                xor     eax, ebx
                lea     ecx, [esi+316AFEFh]
                mov     [esp+5Ch+var_44], eax
                movzx   eax, bl
                mov     edx, [eax+edx-9]
                mov     dword ptr [esp+5Ch+var_38], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+edx-5]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 10h
                mov     edx, [eax+edx]
                mov     dword ptr [esp+5Ch+var_14], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+edx+4]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0DDh
                mov     edx, [eax+edx]
                mov     [esp+5Ch+var_20], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_1C], eax
                movzx   eax, cl
                mov     edx, [eax+edx+4Bh]
                mov     [esp+5Ch+var_30], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+edx+4Fh]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     eax, [edx+eax*8-98h]
                mov     edx, [esp+5Ch+var_44]
                mov     eax, [eax+edx+23D34FE2h]
                mov     [esp+5Ch+var_28], eax
                mov     eax, [ebp+arg_4]
                xor     eax, edi
                xor     eax, ecx
                mov     ecx, [esp+5Ch+var_48]
                xor     eax, ebx
                mov     [esp+5Ch+var_40], eax
                lea     edx, [eax+68349B57h]
                call    VBN_TransformContext
                add     edi, 6DD5FA50h
                lea     edx, [esi+5D5BB09Ah]
                xor     edi, [esp+58h+var_40]
                lea     eax, [esi+316AFEFh]
                xor     edx, [esp+58h+var_44]
                add     esi, 54FF3BB4h
                xor     edi, [esp+58h+var_44]
                xor     edx, eax
                xor     esi, edx
                mov     [esp+58h+var_18], edx
                xor     esi, [esp+58h+var_40]
                mov     ecx, edi
                xor     ecx, edx
                mov     [esp+58h+var_C], edi
                xor     ecx, ebx
                mov     [esp+58h+var_8], esi
                xor     ecx, 468530DEh
                mov     edx, esi
                mov     [esp+58h+var_24], ecx
                xor     edx, edi
                xor     edx, eax
                xor     edx, ebx
                mov     ebx, ecx
                xor     ebx, esi
                mov     [esp+58h+var_3C], edx
                xor     ebx, [esp+58h+var_44]
                xor     esi, esi
                xor     ebx, eax
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0B7h
                sub     al, 4Bh ; 'K'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                lea     edx, [ecx+2D761FC8h]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     eax, 417B077Eh
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_30]
                shr     eax, 10h
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 0C1h
                shr     ebx, 18h
                xor     ebx, 0B7h
                mov     [eax+edx], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     [eax+edx+4], ecx
                and     dword ptr [edx+ebx*8+4], 0
                mov     eax, [esp+58h+var_28]
                mov     [edx+ebx*8], eax
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_44]
                mov     ecx, [esp+58h+var_20]
                movzx   eax, bl
                xor     eax, 4Bh
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 3Dh
                pop     edi
                pop     esi
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+50h+var_1C]
                mov     [edx+eax*8+4], ecx
                xor     ecx, ecx
                mov     eax, [esp+50h+var_18]
                movzx   edx, al
                sub     edx, 8Bh
                add     edx, dword ptr [esp+50h+var_14]
                adc     ecx, dword ptr [esp+50h+var_14+4]
                shr     ebx, 10h
                movzx   eax, bl
                mov     ebx, [esp+50h+var_48]
                xor     eax, 0BBh
                mov     [ebx+eax*8+4], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [ebx+eax*8], edx
                add     ecx, 22D731C9h
                mov     edx, [esp+50h+var_C]
                xor     eax, eax
                add     edx, 3822C0A2h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___28       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___101_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                lea     edx, [ebx-237E1FF8h]
                mov     [ebp+var_8], ecx
                mov     [ebp+var_4], edx
                xor     ecx, ecx
                push    offset dword_40ACC0
                lea     eax, [edi+90C078h]
                mov     [ebp+var_C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                sub     esi, 0A6h
                sub     al, 2Dh ; '-'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                movzx   eax, al
                sbb     ecx, edx
                mov     edx, [ebp+var_8]
                add     esi, [eax+edx-43h]
                adc     ecx, [eax+edx-3Fh]
                add     ebx, ebx
                mov     [edx+1B8h], esi
                shr     edi, 4
                mov     [edx+1BCh], ecx
                mov     ecx, [ebp+var_8]
                lea     esi, [edi+ebx*8]
                mov     edi, [ebp+var_C]
                mov     edx, esi
                xor     edx, edi
                xor     edx, [ebp+var_4]
                sub     edx, 153AD005h
                call    VBN_TransformContext
                xor     esi, [ebp+var_4]
                xor     edi, 0F142A109h
                xor     edx, edx
                or      edx, edi
                pop     edi
                lea     eax, [esi+2F22D410h]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___101_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800023fa proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_21          = byte ptr -21h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, ecx
                shl     eax, 4
                lea     ebx, [ecx-758ECF28h]
                shr     edi, 4
                add     edi, eax
                mov     [esp+30h+var_4], esi
                lea     edx, [ecx-3D7434A1h]
                movzx   eax, bl
                xor     edx, ebx
                xor     eax, 0C7h
                movzx   ecx, dl
                mov     [esp+30h+var_20], edx
                mov     edx, [ebp+arg_0]
                mov     eax, [eax+esi]
                mov     esi, [eax+ecx-41h]
                mov     ecx, edi
                xor     ecx, 9D1C82A9h
                mov     eax, esi
                cmp     ecx, esi
                setnbe  [esp+30h+var_21]
                add     edx, 0F1B594CAh
                add     edx, [ebp+arg_4]
                sub     eax, ecx
                xor     edx, edi
                mov     [esp+30h+var_14], eax
                mov     eax, [ebp+arg_0]
                xor     edx, ebx
                mov     [esp+30h+var_18], edx
                mov     edx, [ebp+arg_4]
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                mov     [esp+30h+var_1C], edx
                mov     edx, [esp+30h+var_20]
                mov     eax, [esp+30h+var_1C]
                xor     eax, edx
                xor     eax, edi
                mov     edi, [ebp+arg_4]
                mov     [esp+30h+var_1C], eax
                lea     eax, [edi-62470512h]
                mov     [esp+30h+var_20], eax
                mov     eax, [esp+30h+var_18]
                xor     [esp+30h+var_20], eax
                xor     [esp+30h+var_20], edx
                mov     edx, [esp+30h+var_20]
                xor     edx, [esp+30h+var_1C]
                xor     edx, ebx
                xor     edx, 0D8377AA1h
                mov     [esp+30h+var_10], edx
                cmp     ecx, esi
                jbe     short loc_49B2ED
                mov     edx, eax
                xor     edi, edi
                mov     eax, [esp+30h+var_1C]
                xor     edx, 0E315611Ah
                add     eax, 3BD0EDEAh
                or      edi, eax
                jmp     short loc_49B309
; ---------------------------------------------------------------------------

loc_49B2ED:                             ; CODE XREF: VBNCB_unnamed_800023fa+C4¡üj
                sub     edi, [ebp+arg_0]
                xor     edx, edx
                xor     edi, [esp+30h+var_1C]
                xor     edi, eax
                mov     eax, [esp+30h+var_20]
                add     eax, 0E945D89Ah
                xor     edi, 4AAB3688h
                or      edx, eax

loc_49B309:                             ; CODE XREF: VBNCB_unnamed_800023fa+DB¡üj
                mov     eax, [esp+30h+var_10]
                mov     esi, [esp+30h+var_4]
                cmp     [esp+30h+var_14], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-420h], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_21]
                mov     [esi+ecx*8-1B8h], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023fa endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___104      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                sub     eax, ecx
                mov     [esp+5Ch+var_50], esi
                xor     eax, 4D7782E5h
                mov     [esp+5Ch+var_4C], eax
                shr     eax, 8
                lea     edx, [ecx-310AFC1Ah]
                movzx   eax, al
                add     edx, ebx
                xor     eax, 59h
                mov     [esp+5Ch+var_48], edx
                push    edi
                push    offset dword_40C500
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+64h+var_34], eax
                movzx   eax, dl
                mov     [esp+64h+var_4], eax
                xor     eax, 1Bh
                mov     [esp+64h+var_40], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     edi, [eax+esi]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 73h
                mov     [esp+64h+var_38], edi
                mov     edi, [esp+64h+var_50]
                mov     esi, [esi+eax*8]
                movzx   eax, cl
                mov     ecx, [esp+64h+var_50]
                mov     ecx, [ecx+eax*8-408h]
                mov     [esp+64h+var_20], ecx
                mov     ecx, [esp+64h+var_50]
                mov     eax, [ecx+eax*8-404h]
                mov     [esp+64h+var_1C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 62h
                shr     edx, 18h
                add     edx, 1Dh
                mov     ecx, [eax+ecx]
                mov     [esp+64h+var_18], ecx
                mov     ecx, [esp+64h+var_50]
                mov     eax, [eax+ecx+4]
                xor     ecx, ecx
                mov     [esp+64h+var_14], eax
                mov     eax, [esp+64h+var_4C]
                shr     eax, 18h
                xor     eax, 7Ah
                add     edx, [eax+edi]
                mov     [esp+64h+var_28], edx
                mov     edx, edi
                adc     ecx, [eax+edx+4]
                mov     [esp+64h+var_24], ecx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                shr     ebx, 4
                add     ebx, ecx
                mov     ecx, edi
                mov     eax, ebx
                xor     eax, [esp+64h+var_4C]
                mov     [esp+64h+var_44], eax
                lea     edx, [eax+30791D67h]
                call    VBN_TransformContext
                mov     eax, [esp+60h+var_48]
                mov     edi, [esp+60h+var_38]
                mov     ecx, [ebp+arg_0]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C1h
                add     eax, esi
                mov     esi, [ebp+arg_4]
                mov     eax, [edi+eax*4]
                mov     [esp+60h+var_10], eax
                lea     eax, [ecx-672CC76Ah]
                add     eax, esi
                add     esi, 279E2F1Ah
                xor     eax, [esp+60h+var_48]
                add     ecx, esi
                xor     eax, [esp+60h+var_4C]
                xor     ecx, [esp+60h+var_44]
                xor     ebx, eax
                xor     ecx, [esp+60h+var_48]
                xor     ebx, [esp+60h+var_44]
                mov     [esp+60h+var_3C], eax
                mov     eax, ebx
                shr     eax, 8
                sub     al, 4Dh ; 'M'
                mov     [esp+60h+var_38], ecx
                movzx   eax, al
                mov     cl, bl
                cdq
                xor     cl, 0D0h
                mov     esi, eax
                mov     [esp+60h+var_2C], ebx
                movzx   eax, cl
                mov     edi, edx
                cdq
                sub     eax, esi
                mov     ecx, edx
                sbb     ecx, edi
                add     eax, [esp+60h+var_40]
                mov     [esp+60h+var_30], eax
                adc     ecx, [esp+60h+var_34]
                mov     eax, [ebp+arg_0]
                xor     ebx, [esp+60h+var_38]
                xor     ebx, [esp+60h+var_4C]
                mov     esi, [esp+60h+var_30]
                xor     ebx, 91D3E2E6h
                mov     [esp+60h+var_34], ecx
                mov     ecx, [ebp+arg_4]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     edi, [esp+60h+var_50]
                xor     ecx, [esp+60h+var_38]
                lea     eax, [ebx+3F0EE180h]
                xor     ecx, [esp+60h+var_3C]
                mov     [esp+60h+var_40], ecx
                lea     edx, [ecx-7EAF0F06h]
                xor     ecx, ecx
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+60h+var_40]
                xor     ecx, [esp+60h+var_2C]
                xor     ecx, [esp+60h+var_48]
                xor     ecx, [esp+60h+var_4C]
                mov     [esi+4], edx
                mov     edx, [esp+60h+var_28]
                movzx   eax, cl
                xor     eax, 0D2h
                mov     [edi+eax*8], edx
                mov     edx, [esp+60h+var_24]
                mov     [edi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+60h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-2C0h], edx
                mov     edx, [esp+60h+var_1C]
                mov     [edi+eax*8-2BCh], edx
                mov     eax, ecx
                mov     edx, [esp+60h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 57h
                mov     [eax+edi-32h], edx
                mov     edx, [esp+60h+var_14]
                mov     [eax+edi-2Eh], edx
                mov     edx, edi
                mov     eax, [esp+60h+var_10]
                and     dword ptr [edx+ecx*8+4], 0
                mov     [edx+ecx*8], eax
                mov     eax, [esp+60h+var_44]
                movzx   ecx, al
                mov     eax, [esp+60h+var_40]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+60h+var_34]
                xor     ecx, [esp+60h+var_4]
                pop     edi
                mov     [edx+ecx*8-0C4h], eax
                xor     eax, eax
                mov     [edx+ecx*8-0C8h], esi
                mov     ecx, [esp+5Ch+var_38]
                mov     edx, [esp+5Ch+var_3C]
                xor     ecx, 5E9635CEh
                pop     esi
                add     edx, 40E448F3h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___104      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800021a1 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, edi
                xor     eax, edx
                mov     [ebp+var_C], ecx
                mov     [ebp+var_4], eax
                mov     ebx, edi
                mov     eax, edx
                shr     ebx, 4
                shl     eax, 4
                lea     ecx, [edi+edx]
                add     ebx, eax
                lea     esi, [ecx+11C0E687h]
                xor     ebx, [ebp+var_4]
                lea     eax, [ecx-76F25AA4h]
                mov     ecx, [ebp+var_C]
                xor     eax, ebx
                xor     eax, esi
                sub     edi, edx
                xor     eax, 0C99058EDh
                xor     edx, edx
                or      edx, eax
                xor     edi, esi
                mov     eax, [ebp+var_4]
                xor     edi, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [ecx+eax*8-478h], 0
                mov     ecx, [ebp+var_4]
                jnz     short loc_49B64C
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cmp     byte ptr [ecx+eax*8-3D0h], 0
                jnz     short loc_49B64C
                xor     edx, edx
                lea     eax, [ebx-632A5C8Fh]
                xor     esi, 295CDFAh
                or      edx, eax
                jmp     short loc_49B652
; ---------------------------------------------------------------------------

loc_49B64C:                             ; CODE XREF: VBNCB_unnamed_800021a1+68¡üj
                                        ; VBNCB_unnamed_800021a1+78¡üj
                lea     esi, [edi-79A2DB6Dh]

loc_49B652:                             ; CODE XREF: VBNCB_unnamed_800021a1+8A¡üj
                pop     edi
                mov     eax, edx
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021a1 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___170      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     edx, esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                sub     edx, ebx
                mov     [esp+58h+var_48], edi
                xor     edx, 63420A7Fh
                mov     ecx, ebx
                shl     ecx, 4
                mov     eax, esi
                shr     eax, 4
                add     eax, ecx
                mov     [esp+58h+var_40], edx
                mov     [esp+58h+var_44], eax
                movzx   eax, dl
                xor     eax, 71h
                push    offset dword_40BCE8
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_38], ecx
                mov     ecx, [eax+edi-0A0h]
                mov     eax, [eax+edi-9Ch]
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 95h
                mov     [esp+5Ch+var_C], ecx
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+5Ch+var_14], eax
                mov     eax, [esp+5Ch+var_44]
                movzx   eax, ax
                xor     eax, 2B84h
                mov     [esp+5Ch+var_18], ecx
                mov     eax, [eax+ecx]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+edi-48h]
                mov     eax, [eax+edi-44h]
                mov     edi, esi
                mov     dword ptr [esp+5Ch+var_20+4], eax
                xor     edi, ebx
                mov     eax, edi
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_48]
                xor     eax, edx
                mov     edx, eax
                mov     [esp+5Ch+var_3C], eax
                xor     edx, 4810AA80h
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_44]
                mov     ecx, ebx
                xor     edi, edx
                shr     ecx, 4
                xor     edi, [esp+58h+var_40]
                mov     ebx, edx
                mov     eax, esi
                mov     [esp+58h+var_34], edi
                shl     eax, 4
                xor     ebx, edi
                xor     ebx, [esp+58h+var_3C]
                add     ecx, eax
                xor     ecx, [esp+58h+var_3C]
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, edx
                xor     al, 8
                mov     [esp+58h+var_30], ecx
                movzx   eax, al
                mov     [esp+58h+var_28], ebx
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                mov     edi, eax
                mov     eax, edx
                sub     edi, ecx
                mov     ecx, [ebp+arg_0]
                sbb     eax, esi
                add     edi, [esp+58h+var_38]
                mov     esi, [esp+58h+var_48]
                adc     eax, [esp+58h+var_2C]
                mov     [esp+58h+var_2C], eax
                mov     eax, [ebp+arg_4]
                add     eax, 117AA52Ah
                add     ecx, eax
                mov     eax, ebx
                xor     eax, [esp+58h+var_30]
                xor     eax, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_30]
                xor     eax, 71F91FA0h
                xor     ecx, [esp+58h+var_34]
                mov     [esp+58h+var_10], eax
                mov     edx, ecx
                add     eax, 0AD31CD22h
                mov     [esp+58h+var_38], ecx
                mov     ebx, [esp+58h+var_38]
                xor     ecx, ecx
                xor     ebx, [esp+58h+var_28]
                or      ecx, eax
                xor     ebx, [esp+58h+var_44]
                xor     edx, 0CC416A8Dh
                xor     ebx, [esp+58h+var_40]
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edi+4], edx
                movzx   eax, bl
                mov     [esi+eax*8], ecx
                mov     ecx, esi
                and     dword ptr [ecx+eax*8+4], 0
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [ecx+eax*8-378h], edi
                mov     edi, esi
                mov     ecx, [esp+58h+var_2C]
                mov     [edi+eax*8-374h], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_44]
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 12h
                add     edx, dword ptr [esp+58h+var_20]
                adc     ecx, dword ptr [esp+58h+var_20+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 61h
                shr     ebx, 18h
                xor     ebx, 60h
                mov     [edi+eax*8+4], ecx
                mov     [edi+eax*8], edx
                mov     eax, [esp+58h+var_18]
                mov     [ebx+edi], eax
                mov     eax, [esp+58h+var_14]
                mov     [ebx+edi+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                xor     ecx, 0EEh
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_8]
                mov     edx, [esp+58h+var_34]
                mov     [edi+ecx*8+4], eax
                xor     edx, 4070AA7Ch
                mov     ecx, [esp+58h+var_30]
                xor     eax, eax
                pop     edi
                add     ecx, 7AB4A931h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___170      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___57_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                push    ebx
                shl     eax, 4
                mov     ebx, edx
                push    esi
                push    edi
                mov     edi, ecx
                mov     [ebp+var_8], edx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_4], edi
                xor     eax, eax
                xor     ebx, ecx
                xor     eax, [ebp+arg_4]
                mov     [ebp+var_C], eax
                mov     eax, edx
                shr     eax, 8
                xor     al, 0D8h
                movzx   ecx, cl
                movzx   eax, al
                cdq
                push    offset dword_40C8E0
                mov     esi, [ecx+edi-2Dh]
                mov     edi, [ecx+edi-29h]
                sub     esi, eax
                mov     ecx, [ebp+var_8]
                sbb     edi, edx
                movzx   eax, cl
                sub     eax, 9Eh
                mov     edx, ecx
                mov     ecx, [ebp+var_4]
                add     esi, eax
                adc     edi, 0
                xor     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                xor     edx, ebx
                xor     edx, 1DCDFC4Eh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx-29ABCF3Eh]
                mov     edx, [ebp+var_8]
                add     edx, 0D6E6FAAAh
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___57_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__8       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, [ebp+arg_0]
                movzx   eax, dl
                xor     eax, 14h
                mov     [esp+28h+var_18], ecx
                and     [esp+28h+var_C], 0
                push    offset dword_40A960
                mov     ebx, [ecx+eax*8]
                mov     ecx, edi
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     [esp+2Ch+var_14], ebx
                mov     eax, edx
                mov     [esp+2Ch+var_10], ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B3h
                lea     esi, [ecx+34389441h]
                xor     esi, [eax+ebx]
                mov     ebx, edi
                xor     ebx, [ebp+arg_0]
                add     edi, 358A3CDCh
                xor     edi, ecx
                xor     ebx, edx
                mov     ecx, [esp+2Ch+var_18]
                xor     edi, edx
                lea     edx, [edi+419A061Ah]
                call    VBN_TransformContext
                mov     ecx, [esp+28h+var_14]
                mov     edx, [ebp+arg_4]
                movzx   eax, bl
                add     edx, 928709A9h
                xor     eax, 0C0h
                xor     edx, ebx
                xor     edx, [esp+28h+var_10]
                sub     edx, 6414AFBAh
                mov     [eax+ecx], esi
                xor     eax, eax
                mov     ecx, [ebp+arg_0]
                add     ecx, 0C398192h
                xor     ecx, edi
                xor     ecx, ebx
                pop     edi
                add     ecx, 7B550F7Ch
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__8       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_h__3_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                mov     [ebp+var_4], eax
                push    ebx
                mov     ebx, ecx
                movzx   ecx, al
                shr     eax, 10h
                xor     eax, 0F5A0h
                movzx   eax, ax
                cdq
                push    esi
                mov     esi, [ebx+ecx*8-4F0h]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    edi
                mov     edi, [ebx+ecx*8-4ECh]
                mov     ecx, ebx
                sbb     edi, edx
                shr     eax, 8
                xor     al, 1Ah
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [ebp+arg_4]
                push    offset dword_40C3C4
                adc     edi, edx
                sub     eax, [ebp+arg_0]
                mov     edx, eax
                mov     [ebp+var_8], eax
                xor     edx, 65E82543h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     ecx, [ebp+var_8]
                xor     ecx, eax
                mov     [ebx+1BCh], edi
                pop     edi
                mov     [ebx+1B8h], esi
                xor     eax, 0B221E5E7h
                pop     esi
                or      edx, eax
                lea     eax, [ecx-5C4A58FAh]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__3_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f87 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                mov     [ebp+var_4], ecx
                mov     ecx, edx
                shl     ecx, 4
                add     ecx, eax
                mov     eax, esi
                sub     eax, edx
                add     esi, 0F86DCDB1h
                push    edi
                mov     edi, eax
                mov     ebx, eax
                xor     edi, ecx
                xor     ebx, 2407CFA4h
                xor     edi, 0FA6B54CCh
                add     edx, esi
                xor     eax, edi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                xor     eax, ebx
                xor     eax, 20F58E87h
                xor     esi, esi
                sub     eax, 2ADDBD6Ch
                xor     edx, ebx
                or      esi, eax
                xor     edx, ecx
                movzx   eax, cl
                xor     edx, 495B1E59h
                xor     eax, 5Eh
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_49BB50
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                xor     eax, 22h
                cmp     byte ptr [ecx+eax*8], 0
                jnz     short loc_49BB50
                xor     esi, esi
                lea     edx, [ebx-498653D9h]
                xor     edi, 0B1949B65h
                or      esi, edi

loc_49BB50:                             ; CODE XREF: VBNCB_unnamed_80001f87+6C¡üj
                                        ; VBNCB_unnamed_80001f87+7E¡üj
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f87 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002177 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     [ebp+var_4], ecx
                mov     esi, edx
                sub     esi, eax
                lea     ecx, [edx+0F548EF0h]
                add     ecx, eax
                mov     ebx, eax
                push    edi
                mov     edi, eax
                xor     esi, 4F580E95h
                xor     edi, edx
                sub     ebx, edx
                xor     edi, ebx
                mov     eax, esi
                xor     eax, 0BE86AD62h
                mov     [ebp+var_8], edi
                xor     edx, edx
                xor     ecx, edi
                mov     edi, [ebp+var_4]
                or      edx, eax
                movzx   eax, bl
                xor     ecx, esi
                xor     eax, 0B8h
                sub     ecx, 0D5E10AFh
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_49BBE2
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 64h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_49BBE2
                xor     ecx, ecx
                lea     eax, [edi+66561BFAh]
                lea     edx, [esi+2223BCBBh]
                or      ecx, eax

loc_49BBE2:                             ; CODE XREF: VBNCB_unnamed_80002177+5E¡üj
                                        ; VBNCB_unnamed_80002177+70¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002177 endp


; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__2       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                and     [esp+38h+var_4], 0
                mov     [esp+38h+var_28], esi
                push    offset dword_40C320
                lea     ebx, [edi+5283BBB6h]
                add     ebx, [ebp+arg_4]
                movzx   eax, bl
                xor     eax, 76h
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+3Ch+var_20+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+3Ch+var_20], ecx
                mov     ecx, [eax+esi-31h]
                mov     esi, [ebp+arg_4]
                sub     esi, edi
                mov     [esp+3Ch+var_8], ecx
                mov     ecx, [esp+3Ch+var_28]
                lea     edx, [esi+0C44287Dh]
                call    VBN_TransformContext
                mov     ecx, esi
                lea     eax, [edi+6802EC12h]
                xor     eax, esi
                xor     ecx, ebx
                xor     eax, ebx
                mov     [esp+38h+var_24], ecx
                mov     ebx, edi
                mov     [esp+38h+var_14], eax
                sub     ebx, [ebp+arg_4]
                mov     [esp+38h+var_18], ebx
                xor     ebx, ecx
                mov     ecx, [ebp+arg_4]
                xor     ebx, esi
                xor     ecx, edi
                xor     ebx, 0EC3EB014h
                xor     ecx, ebx
                xor     ecx, eax
                mov     eax, ecx
                mov     [esp+38h+var_10], ecx
                shr     eax, 8
                xor     cl, 79h
                add     al, 18h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ecx, eax
                sub     ecx, esi
                mov     esi, [esp+38h+var_18]
                sbb     edx, edi
                add     ecx, dword ptr [esp+38h+var_20]
                mov     edi, [esp+38h+var_14]
                adc     edx, dword ptr [esp+38h+var_20+4]
                xor     esi, edi
                xor     esi, [esp+38h+var_24]
                xor     eax, eax
                xor     ebx, 7976CD17h
                xor     esi, 0FAD9189Ah
                or      eax, ebx
                mov     [ecx], esi
                mov     ebx, [esp+38h+var_10]
                mov     esi, [esp+38h+var_28]
                mov     [ecx+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0BEh
                shr     ebx, 18h
                mov     [esi+eax*8], ecx
                mov     [esi+eax*8+4], edx
                mov     eax, [esp+38h+var_8]
                and     dword ptr [esi+ebx*8+74h], 0
                mov     [esi+ebx*8+70h], eax
                mov     edx, [esp+38h+var_24]
                xor     edi, 0ACCAA3DDh
                xor     eax, eax
                xor     edx, 120D8EF4h
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__2       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___27_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_10], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ebx
                shr     eax, 4
                xor     esi, edx
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_10], esi
                xor     ebx, esi
                push    edi
                mov     edi, ecx
                mov     [ebp+var_C], ebx
                lea     ecx, [edx+43697FE4h]
                mov     [ebp+var_4], edi
                lea     ebx, [edx-526A07F0h]
                mov     [ebp+var_8], ecx
                mov     edx, esi
                xor     ebx, ecx
                movzx   eax, dl
                xor     ebx, edx
                xor     edx, [ebp+var_C]
                xor     edx, [ebp+var_8]
                push    offset dword_40C000
                mov     ecx, [eax+edi+2Ah]
                xor     edx, 439A16B9h
                mov     edi, [eax+edi+2Eh]
                mov     [ebp+var_10], ecx
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 5Eh ; '^'
                sub     esi, 8Ah
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                add     edx, 6BEA1609h
                mov     ecx, [ebp+var_C]
                xor     eax, eax
                pop     edi
                add     ecx, 419D7756h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___27_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___179      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                add     eax, 7E3E4C6h
                and     [esp+4Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     eax, ebx
                mov     [esp+50h+var_48], eax
                push    esi
                mov     esi, ecx
                lea     edx, [ebx-1E8C6EF8h]
                mov     [esp+54h+var_44], esi
                lea     eax, [ebx-35653761h]
                mov     [esp+54h+var_30], edx
                xor     eax, edx
                mov     [esp+54h+var_4C], eax
                movzx   eax, dl
                xor     eax, 91h
                push    edi
                push    offset dword_40BB8C
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_28], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B1h
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     ecx, [eax+esi-14h]
                mov     eax, [eax+esi-10h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 18h
                xor     eax, 0EBh
                mov     [esp+5Ch+var_24], ecx
                mov     edi, [esi+eax*8]
                mov     esi, [esi+eax*8+4]
                movzx   eax, dl
                mov     edx, [esp+5Ch+var_4C]
                xor     edx, 0C8A335BAh
                mov     eax, [ecx+eax*4+130h]
                mov     ecx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_8], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                lea     ecx, [ebx-1E8C6EF8h]
                add     eax, 5D05CCF8h
                lea     edx, [ebx+655B58AFh]
                xor     eax, [esp+58h+var_48]
                xor     eax, ecx
                mov     ecx, [ebp+arg_4]
                xor     ecx, ebx
                mov     [esp+58h+var_1C], eax
                mov     [esp+58h+var_40], ecx
                xor     edx, eax
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_48]
                mov     ebx, [esp+58h+var_40]
                xor     edx, [esp+58h+var_4C]
                xor     ebx, ecx
                xor     ebx, eax
                mov     [esp+58h+var_38], ecx
                mov     eax, ebx
                mov     [esp+58h+var_40], ebx
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 26h
                movzx   ebx, bl
                movzx   eax, al
                sub     ebx, 0E4h
                mov     [esp+58h+var_34], edx
                cdq
                sub     ebx, eax
                sbb     ecx, edx
                add     ebx, edi
                mov     [esp+58h+var_3C], ebx
                adc     ecx, esi
                mov     ebx, [esp+58h+var_34]
                xor     ebx, [esp+58h+var_38]
                mov     esi, [esp+58h+var_40]
                mov     eax, esi
                xor     eax, [esp+58h+var_34]
                xor     eax, [esp+58h+var_48]
                mov     edi, [esp+58h+var_3C]
                mov     [esp+58h+var_10], ecx
                mov     ecx, [esp+58h+var_30]
                xor     eax, ecx
                xor     ebx, ecx
                mov     [esp+58h+var_40], eax
                add     eax, 0A96F85BFh
                xor     ebx, 0DA9EBF7Dh
                xor     ecx, ecx
                mov     [esp+58h+var_30], ebx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_2C]
                lea     edx, [ebx-1F68EA87h]
                mov     [edi+4], edx
                xor     ebx, esi
                xor     ebx, [esp+58h+var_4C]
                xor     ebx, [esp+58h+var_48]
                mov     edx, [esp+58h+var_44]
                movzx   eax, bl
                mov     edi, [esp+58h+var_44]
                mov     [edx+eax*8-3C8h], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edx+eax*8-3C4h], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edx-5Fh], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+edx-5Bh], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_1C]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-36h]
                add     edx, dword ptr [esp+58h+var_18]
                adc     ecx, dword ptr [esp+58h+var_18+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 17h
                shr     ebx, 18h
                mov     [edi+eax*8], edx
                mov     edx, edi
                mov     edi, [esp+58h+var_3C]
                mov     [edx+eax*8+4], ecx
                mov     eax, [esp+58h+var_10]
                mov     [edx+ebx*8-48Ch], eax
                mov     eax, [esp+58h+var_4C]
                movzx   ecx, al
                mov     eax, [esp+58h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     [edx+ebx*8-490h], edi
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_8]
                xor     ecx, esi
                pop     edi
                pop     esi
                pop     ebx
                and     dword ptr [edx+ecx*8-484h], 0
                mov     [edx+ecx*8-488h], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_34]
                mov     edx, [esp+4Ch+var_38]
                xor     ecx, 7B697EF9h
                add     edx, 667D9CA8h
                or      eax, ecx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___179      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___192      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                mov     edx, esi
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_0]
                sub     edx, edi
                mov     eax, edx
                mov     [esp+58h+var_48], ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 6Dh
                mov     [esp+58h+var_40], edx
                push    offset dword_40C338
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [eax+ebx+20h]
                mov     eax, [eax+ebx+24h]
                mov     ebx, esi
                mov     [esp+5Ch+var_24], eax
                xor     ebx, edi
                movzx   eax, bl
                xor     eax, 94h
                mov     [esp+5Ch+var_28], ecx
                mov     [esp+5Ch+var_3C], ebx
                mov     eax, [ecx+eax*2]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                mov     ebx, [esp+5Ch+var_48]
                shr     eax, 8
                xor     al, 5Eh
                movzx   ecx, dl
                movzx   eax, al
                cdq
                add     eax, [ecx+ebx-2Eh]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ebx
                adc     edx, [ecx+eax-2Ah]
                mov     ecx, [esp+5Ch+var_40]
                shr     ecx, 10h
                movzx   ecx, cl
                mov     [esp+5Ch+var_14], edx
                mov     eax, [ecx+eax+94h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                mov     eax, [ecx+eax+98h]
                mov     ecx, ebx
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edi
                sub     eax, esi
                mov     esi, eax
                mov     [esp+5Ch+var_44], eax
                xor     esi, [esp+5Ch+var_40]
                xor     esi, 0EE2B5188h
                mov     edx, esi
                xor     edx, 20C71177h
                call    VBN_TransformContext
                mov     ebx, [esp+58h+var_3C]
                mov     ecx, ebx
                mov     edx, [esp+58h+var_44]
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_40]
                mov     eax, edx
                xor     eax, esi
                shl     edi, 4
                xor     eax, ebx
                mov     [esp+58h+var_C], ecx
                mov     ebx, [ebp+arg_4]
                xor     eax, 80DD3B73h
                shr     ebx, 4
                add     ebx, edi
                mov     [esp+58h+var_8], eax
                xor     ebx, ecx
                xor     ebx, esi
                mov     [esp+58h+var_2C], ebx
                xor     ebx, eax
                xor     edx, eax
                xor     ebx, [esp+58h+var_40]
                xor     edx, ecx
                xor     ebx, 30907641h
                xor     edx, 0A4EEC797h
                mov     eax, ebx
                mov     [esp+58h+var_44], edx
                shr     eax, 8
                mov     cl, bl
                xor     eax, 0FC9Ah
                xor     cl, 96h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_38], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_38]
                sub     edx, esi
                mov     esi, [esp+58h+var_2C]
                sbb     eax, edi
                add     edx, dword ptr [esp+58h+var_34]
                pop     edi
                adc     eax, dword ptr [esp+54h+var_34+4]
                xor     ecx, ecx
                mov     dword ptr [esp+54h+var_34+4], eax
                xor     esi, 5617B590h
                mov     eax, [esp+54h+var_44]
                xor     eax, 4DB3C985h
                shr     ebx, 18h
                or      ecx, eax
                mov     eax, [esp+54h+var_28]
                mov     [edx], ecx
                mov     [edx+4], esi
                mov     esi, [esp+54h+var_48]
                mov     ecx, [esp+54h+var_20]
                mov     [ebx+esi-80h], eax
                mov     eax, [esp+54h+var_24]
                mov     [ebx+esi-7Ch], eax
                mov     ebx, [esp+54h+var_44]
                xor     ebx, [esp+54h+var_2C]
                xor     ebx, [esp+54h+var_3C]
                xor     ebx, [esp+54h+var_40]
                movzx   eax, bl
                xor     eax, 0A7h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_1C]
                mov     [esi+eax*8+4], ecx
                mov     eax, ebx
                mov     ecx, dword ptr [esp+54h+var_34+4]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-4ECh], ecx
                mov     ecx, [esp+54h+var_18]
                mov     [esi+eax*8-4F0h], edx
                mov     eax, ebx
                mov     edx, [esp+54h+var_C]
                shr     eax, 10h
                xor     edx, 5CE50089h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 3Ah
                mov     [esi+eax*8-260h], ecx
                mov     ecx, [esp+54h+var_14]
                mov     [esi+eax*8-25Ch], ecx
                mov     eax, [esp+54h+var_10]
                and     dword ptr [esi+ebx*8+4], 0
                mov     ecx, [esp+54h+var_8]
                mov     [esi+ebx*8], eax
                add     ecx, 0B7FB8CFh
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___192      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002a6f proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ecx
                mov     ecx, [ebp+arg_4]
                sub     ebx, ecx
                xor     ebx, 0A072C9A7h
                mov     [esp+18h+var_10], edx
                movzx   eax, bl
                push    esi
                push    edi
                mov     [esp+20h+var_C], eax
                mov     edi, [edx+eax*8-470h]
                mov     esi, [edx+eax*8-46Ch]
                lea     edx, [ecx-30E5655Fh]
                mov     ecx, [esp+20h+var_10]
                push    offset dword_40BB80
                mov     eax, [edi]
                mov     [esp+24h+var_8], eax
                mov     eax, [edi+4]
                mov     [esp+24h+var_4], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                shr     ebx, 8
                xor     bl, 8Ah
                movzx   eax, bl
                mov     ebx, [esp+20h+var_10]
                cdq
                add     eax, edi
                pop     edi
                adc     edx, esi
                sub     cl, byte ptr [ebp+arg_4]
                movzx   ecx, cl
                xor     ecx, 54h
                xor     ecx, [esp+1Ch+var_C]
                pop     esi
                mov     [ecx+ebx-0B3h], eax
                mov     eax, [esp+18h+var_8]
                mov     [ecx+ebx-0AFh], edx
                mov     edx, [esp+18h+var_4]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002a6f EndP

vBng___154      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                sub     eax, esi
                mov     [esp+58h+var_48], ebx
                mov     edx, eax
                mov     [esp+58h+var_40], eax
                xor     edx, 0DF9E267Dh
                and     [esp+58h+var_4], 0
                movzx   eax, dl
                mov     [esp+58h+var_34], edx
                push    offset dword_40C140
                mov     ecx, [eax+ebx+8Ch]
                mov     eax, [eax+ebx+90h]
                mov     [esp+5Ch+var_C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 4Bh
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 5Dh
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     ebx, esi
                mov     [esp+5Ch+var_18], eax
                xor     esi, edi
                mov     eax, edi
                shr     ebx, 4
                shl     eax, 4
                add     ebx, eax
                mov     [esp+5Ch+var_1C], ecx
                movzx   eax, bl
                sub     eax, 47h ; 'G'
                mov     [esp+5Ch+var_44], esi
                add     eax, eax
                mov     [esp+5Ch+var_38], ebx
                xor     esi, edx
                mov     eax, [ecx+eax*8]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_14], eax
                mov     eax, edx
                shr     eax, 10h
                lea     edx, [esi-49D01E78h]
                movzx   eax, al
                mov     ecx, [eax+ecx+0Ch]
                mov     dword ptr [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+10h]
                mov     dword ptr [esp+5Ch+var_28+4], eax
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_40]
                lea     ecx, [edi+3424D9E9h]
                xor     eax, esi
                shr     edi, 4
                xor     eax, ebx
                xor     ecx, ebx
                mov     ebx, [ebp+arg_4]
                xor     eax, 0C770E5Bh
                xor     ecx, [esp+58h+var_34]
                shl     ebx, 4
                mov     [esp+58h+var_40], eax
                add     ebx, edi
                mov     eax, [esp+58h+var_44]
                xor     ebx, ecx
                xor     eax, [esp+58h+var_40]
                xor     ebx, esi
                xor     eax, ecx
                mov     [esp+58h+var_3C], ebx
                xor     ebx, [esp+58h+var_40]
                mov     [esp+58h+var_8], ecx
                mov     [esp+58h+var_44], eax
                xor     ebx, [esp+58h+var_34]
                xor     ebx, 7940C08Bh
                mov     eax, ebx
                mov     [esp+58h+var_20], ebx
                shr     eax, 8
                xor     bl, 0A7h
                xor     al, 0B5h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, bl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_48]
                adc     eax, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_30+4], eax
                xor     esi, 9C2BBCB5h
                mov     eax, [esp+58h+var_44]
                add     eax, 0A2F7C803h
                or      ecx, eax
                mov     eax, [esp+58h+var_38]
                mov     [ebx], ecx
                xor     ecx, ecx
                shr     eax, 8
                movzx   edx, al
                mov     [ebx+4], esi
                sub     edx, 6
                add     edx, dword ptr [esp+58h+var_28]
                mov     esi, [esp+58h+var_20]
                mov     eax, esi
                adc     ecx, dword ptr [esp+58h+var_28+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 97h
                shr     esi, 18h
                mov     [edi+eax*8], edx
                mov     edx, edi
                mov     [edx+eax*8+4], ecx
                mov     eax, [esp+58h+var_1C]
                mov     [esi+edx-0D7h], eax
                mov     eax, [esp+58h+var_18]
                mov     [esi+edx-0D3h], eax
                mov     esi, edi
                mov     edx, [esp+58h+var_44]
                xor     edx, [esp+58h+var_3C]
                xor     edx, [esp+58h+var_38]
                xor     edx, [esp+58h+var_34]
                mov     ecx, dword ptr [esp+58h+var_30+4]
                movzx   eax, dl
                xor     eax, 0DEh
                pop     edi
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+54h+var_14]
                mov     [esi+eax*8], ebx
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                and     dword ptr [esi+eax*8+8Ch], 0
                mov     [esi+eax*8+88h], ecx
                mov     ecx, [esp+54h+var_10]
                movzx   eax, dl
                mov     edx, [esp+54h+var_8]
                xor     edx, 0E6C966F4h
                mov     [esi+eax*8-548h], ecx
                mov     ecx, [esp+54h+var_C]
                mov     [esi+eax*8-544h], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_40]
                add     ecx, 799503A3h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___154      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800023bf proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                push    esi
                and     [esp+2Ch+var_C], 0
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                sub     edx, edi
                xor     edx, 0D2107EFCh
                mov     [esp+30h+var_4], esi
                mov     eax, edx
                shr     eax, 8
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, 60h
                mov     eax, [eax+esi+44h]
                mov     esi, [ecx+eax]
                lea     eax, [ebx-1F1C878Ch]
                add     eax, edi
                mov     [esp+30h+var_18], esi
                mov     ecx, eax
                mov     ebx, edi
                xor     ecx, 307C0FDBh
                cmp     ecx, esi
                setnbe  [esp+30h+var_1D]
                xor     ebx, [ebp+arg_0]
                sub     esi, ecx
                mov     [esp+30h+var_10], esi
                mov     esi, ebx
                xor     esi, edx
                xor     ebx, eax
                xor     ebx, edx
                mov     [esp+30h+var_1C], esi
                mov     edx, [ebp+arg_0]
                lea     esi, [edx+73F9FB04h]
                add     esi, edi
                xor     esi, [esp+30h+var_1C]
                xor     esi, eax
                lea     eax, [edx-42AAE57h]
                xor     eax, esi
                xor     eax, ebx
                cmp     ecx, [esp+30h+var_18]
                jbe     short loc_497C47
                mov     edx, [esp+30h+var_1C]
                xor     edi, edi
                xor     ebx, 0CE0F7ACBh
                add     edx, 0DA14D756h
                or      edi, ebx
                jmp     short loc_497C67
; ---------------------------------------------------------------------------

loc_497C47:                             ; CODE XREF: VBNCB_unnamed_800023bf+8F¡üj
                shr     edi, 4
                mov     ecx, esi
                shl     edx, 4
                xor     ecx, 10465A98h
                add     edi, edx
                xor     edx, edx
                xor     edi, ebx
                xor     edi, [esp+30h+var_1C]
                sub     edi, 7BEA4E1h
                or      edx, ecx

loc_497C67:                             ; CODE XREF: VBNCB_unnamed_800023bf+A5¡üj
                mov     esi, [esp+30h+var_4]
                cmp     [esp+30h+var_10], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-1F0h], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                mov     [esi+ecx*8-58h], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023bf endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002344 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                mov     [esp+2Ch+var_14], ecx
                lea     ebx, [eax-0E0BAE3Dh]
                lea     esi, [eax-4383C051h]
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+2Ch+var_14]
                xor     ecx, 22h
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, [edx+eax-95h]
                mov     edx, [eax+ecx]
                mov     ecx, esi
                xor     ecx, 563BB247h
                mov     eax, edx
                cmp     ecx, edx
                setnbe  [esp+30h+var_1D]
                sub     eax, ecx
                mov     [esp+30h+var_8], eax
                mov     eax, [ebp+arg_4]
                lea     ebx, [eax+edi]
                lea     edi, [ebx-7BD1257Dh]
                mov     [esp+30h+var_10], ebx
                lea     ebx, [eax-0E0BAE3Dh]
                shr     eax, 4
                xor     edi, ebx
                mov     [esp+30h+var_1C], eax
                mov     [esp+30h+var_18], edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                add     [esp+30h+var_1C], eax
                mov     eax, [esp+30h+var_1C]
                xor     eax, esi
                xor     eax, ebx
                mov     ebx, [ebp+arg_4]
                mov     [esp+30h+var_1C], eax
                mov     eax, edi
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                lea     eax, [edi+779CDB64h]
                xor     ebx, [esp+30h+var_18]
                xor     ebx, esi
                xor     eax, ebx
                mov     [esp+30h+var_C], ebx
                mov     ebx, [esp+30h+var_1C]
                xor     eax, ebx
                mov     [esp+30h+var_1C], eax
                cmp     ecx, edx
                jbe     short loc_497D75
                mov     edx, [esp+30h+var_18]
                xor     eax, eax
                xor     ebx, 0E6CF3E1Fh
                add     edx, 37835F53h
                or      eax, ebx
                jmp     short loc_497D97
; ---------------------------------------------------------------------------

loc_497D75:                             ; CODE XREF: VBNCB_unnamed_80002344+BD¡üj
                mov     eax, [esp+30h+var_10]
                xor     edx, edx
                mov     ecx, [esp+30h+var_C]
                add     eax, 0CF9112B4h
                xor     eax, ebx
                xor     ecx, 1223A475h
                xor     eax, [esp+30h+var_18]
                xor     eax, 0F68265E6h
                or      edx, ecx

loc_497D97:                             ; CODE XREF: VBNCB_unnamed_80002344+D3¡üj
                mov     ecx, [esp+30h+var_1C]
                mov     esi, [esp+30h+var_14]
                mov     bl, [esp+30h+var_1D]
                cmp     [esp+30h+var_8], 0
                movzx   ecx, cl
                pop     edi
                mov     [esi+ecx*8+58h], bl
                setz    bl
                mov     ecx, [esp+2Ch+var_1C]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esi+ecx*8-4E0h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002344 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___171_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                mov     [ebp+var_4], ecx
                mov     ecx, edx
                shl     eax, 4
                add     edx, edx
                shr     ecx, 4
                add     ecx, eax
                lea     ebx, [esi+7F1B48B6h]
                shr     esi, 4
                push    edi
                mov     [ebp+var_C], ecx
                movzx   ecx, bl
                lea     edi, [esi+edx*8]
                xor     ecx, 0DCh
                mov     esi, [ebp+var_4]
                mov     eax, edi
                xor     eax, ebx
                mov     [ebp+var_8], eax
                mov     eax, ebx
                shr     eax, 8
                mov     esi, [ecx+esi]
                sub     al, 65h ; 'e'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C910
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sub     eax, 74h ; 't'
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edi, esi
                xor     edi, ebx
                mov     [eax+1BCh], ecx
                xor     edi, 1A64B86Dh
                mov     ecx, eax
                mov     edx, edi
                call    VBN_TransformContext
                pop     edi
                lea     ecx, [esi-31DB5C9Ch]
                xor     eax, eax
                pop     esi
                lea     edx, [ebx+799DF968h]
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___171_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002220 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                mov     [ebp+var_8], ecx
                mov     ecx, edi
                shr     edx, 4
                sub     ecx, esi
                add     eax, edx
                lea     ebx, [edi-19F4B303h]
                add     ebx, esi
                mov     [ebp+var_4], eax
                mov     esi, [ebp+var_8]
                xor     ebx, eax
                xor     ecx, ebx
                xor     edx, edx
                xor     ecx, eax
                lea     eax, [edi-677D34B6h]
                xor     eax, 9997EB4Ah
                xor     ecx, 444B885Ah
                or      edx, eax
                add     ecx, 3960D867h
                mov     eax, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 12h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_497F58
                mov     eax, [ebp+var_4]
                movzx   eax, al
                xor     eax, 0CDh
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_497F58
                mov     edx, [ebp+var_4]
                xor     ecx, ecx
                xor     ebx, 0D521D6DDh
                add     edx, 0C05728B6h
                or      ecx, ebx

loc_497F58:                             ; CODE XREF: VBNCB_unnamed_80002220+62¡üj
                                        ; VBNCB_unnamed_80002220+73¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002220 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__38      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 34h
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+3Ch+var_C], 0
                mov     ecx, [ebp+arg_0]
                xor     ecx, [ebp+arg_4]
                movzx   eax, cl
                push    edi
                mov     [esp+40h+var_24], esi
                mov     [esp+40h+var_34], ecx
                mov     ebx, [eax+esi+52h]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40A5E0
                mov     [esp+44h+var_14], ebx
                mov     edx, [eax+esi-5]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+44h+var_10], edx
                mov     edx, [ebp+arg_0]
                mov     edi, [eax+esi-26h]
                mov     esi, [eax+esi-22h]
                mov     eax, ecx
                mov     ecx, [esp+44h+var_24]
                shr     eax, 18h
                xor     eax, 98h
                mov     ecx, [eax+ecx]
                mov     eax, [ebp+arg_4]
                add     eax, 0B68C3BCFh
                mov     [esp+44h+var_20], ecx
                mov     ecx, [esp+44h+var_24]
                add     edx, eax
                xor     edx, 0A3FF2767h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                xor     edx, edx
                add     eax, 37951A4Bh
                xor     eax, [esp+40h+var_34]
                movzx   ecx, al
                mov     [esp+40h+var_30], eax
                xor     ecx, 0F6h
                xor     eax, eax
                inc     eax
                call    __allshl
                mov     ecx, [esp+40h+var_20]
                shld    esi, edi, 2
                mov     esi, [esp+40h+var_14]
                mov     ebx, [eax+ebx]
                add     ecx, ebx
                mov     eax, [esi]
                mov     edx, [eax+edi*4]
                mov     eax, [esp+40h+var_30]
                mov     edi, [ebp+arg_0]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 32h
                mov     [eax+esi], ecx
                lea     ecx, [edi-4973C431h]
                add     ecx, [ebp+arg_4]
                lea     eax, [edi-5A9B765Bh]
                xor     eax, ecx
                xor     eax, [esp+40h+var_34]
                mov     [esp+40h+var_14], eax
                mov     eax, [ebp+arg_4]
                shr     eax, 4
                mov     [esp+40h+var_34], eax
                mov     eax, edi
                shl     eax, 4
                add     [esp+40h+var_34], eax
                mov     eax, [esp+40h+var_34]
                xor     eax, [esp+40h+var_30]
                xor     eax, ecx
                mov     [esp+40h+var_34], eax
                mov     eax, [esp+40h+var_14]
                movzx   edi, al
                mov     eax, [esp+40h+var_30]
                shr     eax, 8
                movzx   ecx, al
                xor     ecx, 0F4h
                movzx   eax, bl
                and     ecx, eax
                mov     eax, [esp+40h+var_10]
                xor     eax, edx
                xor     edx, edx
                call    __aullshr
                mov     ecx, [esp+40h+var_20]
                mov     esi, eax
                mov     eax, [esp+40h+var_30]
                xor     edx, edx
                shr     eax, 18h
                sub     eax, 28h ; '('
                movzx   ecx, cl
                call    __allshl
                mov     edx, [ebp+arg_4]
                mov     ecx, eax
                mov     ebx, [esp+40h+var_34]
                mov     eax, edi
                xor     eax, 0F1h
                sub     ecx, eax
                mov     al, byte ptr [ebp+arg_0]
                sub     al, dl
                and     esi, ecx
                movzx   ecx, al
                movzx   eax, bl
                xor     ebx, 6284768Fh
                xor     ecx, eax
                mov     eax, [esp+40h+var_24]
                xor     ecx, 0B6h
                xor     ecx, edi
                pop     edi
                and     dword ptr [eax+ecx*8+4], 0
                mov     [eax+ecx*8], esi
                mov     eax, [ebp+arg_0]
                sub     eax, edx
                xor     edx, edx
                xor     eax, [esp+3Ch+var_14]
                xor     eax, [esp+3Ch+var_30]
                xor     eax, 47C13A72h
                sub     eax, 546350B7h
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__38      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002327 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                mov     [ebp+var_4], ecx
                mov     ecx, edx
                sub     ecx, esi
                shl     eax, 4
                push    edi
                mov     edi, esi
                shr     ebx, 4
                add     ebx, eax
                xor     edi, edx
                xor     ecx, 0B73FE5CCh
                sub     esi, edx
                xor     edi, ebx
                mov     eax, ecx
                xor     esi, edi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                xor     eax, 7AC03575h
                xor     edx, edx
                xor     esi, ecx
                or      edx, eax
                add     esi, 5AE0A673h
                movzx   eax, bl
                cmp     byte ptr [edi+eax*8-610h], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_4981A5
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 68h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_4981A5
                xor     esi, esi
                xor     edi, 3372801Fh
                xor     ecx, 3F8F1B79h
                or      esi, edi
                jmp     short loc_4981A7
; ---------------------------------------------------------------------------

loc_4981A5:                             ; CODE XREF: VBNCB_unnamed_80002327+5F¡üj
                                        ; VBNCB_unnamed_80002327+71¡üj
                mov     ecx, edx

loc_4981A7:                             ; CODE XREF: VBNCB_unnamed_80002327+83¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002327 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___42_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                shl     eax, 4
                mov     edx, esi
                shr     edx, 4
                add     edx, eax
                mov     [ebp+var_C], ebx
                movzx   eax, dl
                xor     eax, 39h
                mov     [ebp+var_4], edx
                push    edi
                push    offset dword_40BB10
                xor     edx, 0BA9B0B95h
                mov     ecx, [eax+ebx]
                mov     edi, [eax+ebx+4]
                mov     [ebp+var_8], ecx
                mov     ecx, ebx
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                lea     ebx, [esi+6B8C8D95h]
                add     ebx, ecx
                add     ecx, 2E1F978Ah
                xor     ebx, [ebp+var_4]
                xor     ecx, ebx
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 6Ch ; 'l'
                sub     esi, 7Ch ; '|'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_0]
                lea     ecx, [ebx-3E5ECCAEh]
                add     eax, 2A850DDDh
                xor     eax, [ebp+var_4]
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                xor     eax, 79014973h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___42_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__13      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_4]
                mov     edx, ecx
                add     eax, 0CC92BDEDh
                and     [esp+1Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, eax
                mov     [esp+20h+var_10], edx
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 1Ah
                push    esi
                push    edi
                push    offset dword_40A32C
                mov     ecx, [edx+eax*8]
                movzx   eax, bl
                mov     edi, [edx+eax*8-408h]
                mov     eax, ebx
                mov     edx, [ebp+arg_0]
                xor     edx, [ebp+arg_4]
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+2Ch+var_14], edx
                mov     esi, [eax+ecx-7Bh]
                mov     ecx, edx
                xor     ecx, ebx
                mov     [esp+2Ch+var_18], ecx
                mov     ecx, [ebp+arg_0]
                sub     ecx, [ebp+arg_4]
                mov     [esp+2Ch+var_C], ecx
                xor     ecx, edx
                xor     ecx, ebx
                xor     ecx, 0E73B25C8h
                mov     [esp+2Ch+var_8], ecx
                lea     edx, [ecx+71BB9674h]
                mov     ecx, [esp+2Ch+var_10]
                call    VBN_TransformContext
                shr     ebx, 18h
                sub     edi, ebx
                sub     edi, esi
                add     edi, 4Fh ; 'O'
                jz      short loc_49831E
                mov     esi, [esp+28h+var_18]
                xor     eax, eax
                mov     ecx, [esp+28h+var_14]
                xor     esi, 4B51AF77h
                add     ecx, 7F131036h
                or      eax, esi
                jmp     short loc_498348
; ---------------------------------------------------------------------------

loc_49831E:                             ; CODE XREF: vBng_h__13+92¡üj
                mov     ecx, [ebp+arg_4]
                xor     eax, eax
                sub     ecx, [ebp+arg_0]
                mov     edx, [esp+28h+var_C]
                xor     edx, [esp+28h+var_8]
                xor     ecx, [esp+28h+var_18]
                xor     edx, [esp+28h+var_18]
                xor     ecx, [esp+28h+var_14]
                xor     edx, 81DF9717h
                xor     ecx, 86DD0E00h
                or      eax, edx

loc_498348:                             ; CODE XREF: vBng_h__13+AC¡üj
                pop     edi
                pop     esi
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__13      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f9b proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, edx
                mov     [ebp+var_4], ecx
                push    edi
                mov     edi, edx
                shl     esi, 4
                sub     edi, eax
                lea     ebx, [edx+0D6804Ch]
                shr     eax, 4
                add     edx, 0A28F14C5h
                add     esi, eax
                xor     ecx, ecx
                xor     esi, ebx
                mov     eax, ebx
                xor     eax, 6EDD57A7h
                mov     [ebp+var_8], esi
                xor     edx, esi
                or      ecx, eax
                mov     esi, [ebp+var_4]
                xor     edx, edi
                movzx   eax, bl
                xor     edx, 0DB34EF64h
                xor     eax, 0C1h
                cmp     byte ptr [esi+eax*8], 0
                mov     esi, [ebp+var_8]
                jnz     short loc_4983DD
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 25h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_4983DD
                xor     edx, edx
                lea     ecx, [edi-77D3C9A9h]
                xor     esi, 159230Bh
                or      edx, esi

loc_4983DD:                             ; CODE XREF: VBNCB_unnamed_80001f9b+59¡üj
                                        ; VBNCB_unnamed_80001f9b+6B¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f9b endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___164_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_4]
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, eax
                mov     [ebp+var_8], ecx
                xor     eax, [ebp+arg_0]
                mov     ecx, ebx
                xor     ecx, 95191AC9h
                mov     [ebp+var_C], eax
                mov     eax, ecx
                mov     [ebp+var_4], ecx
                shr     eax, 10h
                xor     eax, 492Fh
                shr     ecx, 8
                movzx   eax, ax
                xor     cl, 90h
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                push    edi
                mov     edi, edx
                movzx   ecx, cl
                cdq
                sub     eax, esi
                mov     esi, [ebp+var_C]
                push    offset dword_40C060
                sbb     edx, edi
                mov     edi, [ebp+var_8]
                add     eax, [ecx+edi+10h]
                adc     edx, [ecx+edi+14h]
                xor     ebx, esi
                xor     ebx, [ebp+var_4]
                mov     ecx, edi
                mov     [edi+1BCh], edx
                xor     ebx, 0F448F79Ah
                mov     edx, ebx
                mov     [edi+1B8h], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                xor     esi, 0BDF672DFh
                add     eax, 0BD6244D7h
                xor     edx, edx
                add     eax, [ebp+arg_4]
                xor     eax, [ebp+var_4]
                pop     edi
                sub     eax, 71033BFCh
                or      edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___164_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___61_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                mov     eax, ebx
                mov     [ebp+var_4], ecx
                xor     eax, 0CC5A975h
                mov     edx, ebx
                mov     [ebp+var_8], eax
                xor     edx, 84CFD13Ah
                push    esi
                push    edi
                mov     eax, edx
                movzx   ecx, dl
                shr     eax, 8
                xor     ecx, 0A9h
                movzx   edi, al
                xor     esi, esi
                mov     eax, [ebp+var_4]
                sub     edi, 60h ; '`'
                mov     [ebp+var_C], edx
                push    offset dword_40C0D0
                add     edi, [ecx+eax]
                adc     esi, [ecx+eax+4]
                mov     eax, edx
                shr     eax, 10h
                xor     al, 1
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, eax
                sbb     esi, edx
                mov     [eax+1B8h], edi
                mov     edi, [ebp+var_8]
                xor     ebx, edi
                xor     ebx, [ebp+var_C]
                xor     ebx, 38816DAEh
                mov     [eax+1BCh], esi
                lea     edx, [ebx+0AB2DC2Ah]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                xor     edi, 53BC43E5h
                add     eax, 559B1A6h
                xor     edx, edx
                xor     eax, [ebp+var_C]
                sub     eax, 378C0AC3h
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___61_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___33       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     [esp+50h+var_44], ebx
                and     [esp+50h+var_4], 0
                push    offset dword_40BF84
                lea     edx, [edi-6A1BCEAAh]
                mov     eax, edx
                mov     [esp+54h+var_40], edx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ebx+eax*8-508h]
                mov     eax, [ebx+eax*8-504h]
                mov     [esp+54h+var_24], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 7Eh
                mov     [esp+54h+var_28], ecx
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                lea     ebx, [esi+4A401A58h]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     eax, ebx
                shr     eax, 8
                mov     dword ptr [esp+54h+var_34], ecx
                movzx   ecx, al
                mov     eax, [esp+54h+var_44]
                xor     ecx, 25h
                movzx   edx, bl
                mov     [esp+54h+var_38], ebx
                mov     eax, [eax+edx*8-2C8h]
                mov     eax, [eax+ecx]
                mov     [esp+54h+var_2C], eax
                mov     eax, [esp+54h+var_40]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                mov     ebx, [esp+54h+var_44]
                xor     ecx, 0D9h
                shr     eax, 10h
                xor     al, 0ECh
                movzx   eax, al
                cdq
                add     eax, [ecx+ebx]
                mov     [esp+54h+var_1C], eax
                mov     eax, ebx
                adc     edx, [ecx+eax+4]
                add     esi, 0DDAA401Ah
                mov     [esp+54h+var_18], edx
                add     esi, edi
                mov     edx, [esp+54h+var_40]
                xor     esi, edx
                movzx   ecx, dl
                mov     edx, esi
                xor     edx, 5748FA32h
                mov     eax, [ecx+eax-3Bh]
                mov     [esp+54h+var_14], eax
                mov     eax, ebx
                mov     eax, [ecx+eax-37h]
                mov     ecx, ebx
                mov     [esp+54h+var_10], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     edx, edi
                mov     ebx, [ebp+arg_4]
                xor     edx, eax
                xor     edx, [esp+50h+var_38]
                add     eax, 5F9414FAh
                xor     edx, [esp+50h+var_40]
                add     eax, edi
                mov     ecx, ebx
                mov     [esp+50h+var_C], edx
                xor     eax, esi
                sub     ecx, edi
                xor     eax, [esp+50h+var_38]
                xor     ecx, edx
                mov     [esp+50h+var_8], eax
                xor     ecx, esi
                shl     ebx, 4
                xor     esi, esi
                shr     edi, 4
                add     ebx, edi
                mov     [esp+50h+var_20], ecx
                xor     ebx, eax
                xor     ebx, edx
                mov     [esp+50h+var_3C], ebx
                mov     ebx, ecx
                xor     ebx, eax
                xor     ebx, [esp+50h+var_40]
                xor     ebx, 0CD58401Eh
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 14h
                add     al, 62h ; 'b'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_34+4]
                add     eax, 0B60764BFh
                xor     ecx, ecx
                xor     edx, 1CF3403Ah
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_44]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                and     dword ptr [edx+eax*8+0FCh], 0
                mov     [edx+eax*8+0F8h], ecx
                mov     eax, [esp+50h+var_28]
                mov     [ebx+edx-37h], eax
                mov     eax, [esp+50h+var_24]
                mov     [ebx+edx-33h], eax
                mov     edx, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_20]
                xor     edx, [esp+50h+var_38]
                xor     edx, [esp+50h+var_40]
                mov     ebx, [esp+50h+var_44]
                mov     ecx, [esp+50h+var_1C]
                movzx   eax, dl
                xor     eax, 0B3h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                pop     edi
                pop     esi
                mov     [ebx+eax*8-4F0h], ecx
                mov     ecx, [esp+48h+var_18]
                mov     [ebx+eax*8-4ECh], ecx
                mov     ecx, [esp+48h+var_14]
                movzx   eax, dl
                mov     edx, [esp+48h+var_C]
                xor     eax, 0ECh
                xor     edx, 0AC053AA9h
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+48h+var_10]
                mov     [ebx+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_8]
                xor     ecx, 0BAA24786h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___33       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___84       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                lea     edx, [eax-195F21A4h]
                and     [esp+54h+var_4], 0
                xor     eax, ebx
                mov     [esp+54h+var_2C], edx
                mov     [esp+54h+var_44], eax
                mov     esi, ecx
                xor     eax, edx
                mov     [esp+54h+var_48], esi
                mov     [esp+54h+var_40], eax
                lea     ecx, [ebx-202A4E99h]
                mov     eax, edx
                mov     [esp+54h+var_3C], ecx
                shr     eax, 10h
                movzx   eax, al
                push    edi
                push    offset dword_40AB30
                mov     ebx, [esi+eax*8-228h]
                mov     eax, [esi+eax*8-224h]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                movzx   eax, cl
                xor     eax, 5Bh
                mov     dword ptr [esp+5Ch+var_1C], ebx
                mov     edi, [eax+esi]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [esi+eax*8-668h]
                mov     ebx, [esi+eax*8-664h]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 4Dh
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, [esi+eax*8]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8-98h]
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8-94h]
                mov     [esp+5Ch+var_C], eax
                movzx   eax, dl
                mov     edx, [esp+5Ch+var_40]
                xor     edx, 5647428Bh
                mov     ecx, [eax+ecx-84h]
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx-80h]
                mov     [esp+5Ch+var_20], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_44]
                mov     eax, [esp+58h+var_3C]
                xor     ecx, eax
                mov     edx, [esp+58h+var_2C]
                xor     ecx, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 6Eh
                mov     [esp+58h+var_2C], ecx
                add     eax, esi
                mov     esi, [ebp+arg_0]
                mov     eax, [edi+eax*4]
                mov     [esp+58h+var_14], eax
                mov     eax, [ebp+arg_4]
                sub     esi, eax
                xor     esi, [esp+58h+var_40]
                xor     esi, [esp+58h+var_3C]
                xor     esi, 0FEB01842h
                mov     [esp+58h+var_34], esi
                lea     esi, [eax-57453681h]
                mov     eax, [esp+58h+var_44]
                xor     esi, ecx
                xor     esi, [esp+58h+var_40]
                xor     eax, [esp+58h+var_34]
                mov     [esp+58h+var_8], esi
                xor     eax, ecx
                mov     [esp+58h+var_44], eax
                mov     ecx, esi
                xor     ecx, [esp+58h+var_34]
                xor     eax, esi
                xor     eax, [esp+58h+var_3C]
                xor     ecx, edx
                xor     eax, edx
                xor     ecx, 8788DA6Eh
                mov     [esp+58h+var_30], eax
                xor     esi, esi
                mov     eax, [esp+58h+var_44]
                shr     eax, 8
                xor     eax, 4FAFh
                mov     [esp+58h+var_38], ecx
                mov     ecx, [esp+58h+var_44]
                movzx   eax, ax
                cdq
                movzx   edi, cl
                sub     edi, 0C2h
                sub     edi, eax
                mov     eax, [esp+58h+var_30]
                sbb     esi, edx
                add     edi, [esp+58h+var_28]
                mov     edx, [esp+58h+var_38]
                adc     esi, ebx
                mov     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_44]
                xor     eax, 0F0EBD6CEh
                xor     ebx, [esp+58h+var_40]
                xor     ecx, ecx
                xor     ebx, [esp+58h+var_3C]
                or      ecx, eax
                mov     [edi], ecx
                add     edx, 9C7EC01Ah
                mov     ecx, [esp+58h+var_24]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                movzx   eax, bl
                xor     eax, 0B2h
                mov     [esp+58h+var_28], esi
                mov     esi, [esp+58h+var_48]
                mov     [eax+edx], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+edx+4], ecx
                mov     ecx, ebx
                mov     al, byte ptr [esp+58h+var_2C]
                xor     al, 5Bh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                adc     edx, dword ptr [esp+58h+var_1C+4]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 64h
                mov     [esi+ecx*8], eax
                mov     eax, esi
                mov     [eax+ecx*8+4], edx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_14]
                mov     edx, esi
                shr     eax, 10h
                movzx   eax, al
                mov     esi, [esp+58h+var_28]
                shr     ebx, 18h
                and     dword ptr [edx+eax*8-234h], 0
                mov     [edx+eax*8-238h], ecx
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     [edx+ebx*8-378h], edi
                mov     eax, [esp+58h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     [edx+ebx*8-374h], esi
                mov     eax, [esp+58h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 8
                mov     [edx+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [edx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                mov     edx, [esp+58h+var_34]
                add     ecx, 39B6492h
                pop     edi
                pop     esi
                xor     edx, 93827AFAh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___84       endp





VBNCB_unnamed_800020dc proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_8], ecx
                lea     esi, [edi+edx]
                mov     [ebp+var_4], ebx
                lea     ecx, [esi-49A01929h]
                shr     edi, 4
                lea     eax, [esi+49EB8082h]
                mov     esi, [ebp+var_8]
                xor     eax, [ebp+var_4]
                lea     ebx, [edx+2097906Eh]
                shl     edx, 4
                xor     eax, ecx
                add     edi, edx
                sub     eax, 3F75A34Ah
                xor     edx, edx
                xor     ebx, ecx
                xor     edi, ebx
                or      edx, eax
                xor     edi, [ebp+var_4]
                movzx   eax, cl
                add     edi, 1EB74F16h
                cmp     byte ptr [esi+eax*8+0D8h], 0
                mov     esi, [ebp+var_4]
                jnz     short loc_4A3BA0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [ebp+var_8]
                cmp     byte ptr [ecx+eax*8-5F8h], 0
                jnz     short loc_4A3BA0
                xor     edi, edi
                lea     edx, [esi+35AF4DF7h]
                xor     ebx, 0A2F06DEBh
                or      edi, ebx

loc_4A3BA0:                             ; CODE XREF: VBNCB_unnamed_800020dc+6B¡üj
                                        ; VBNCB_unnamed_800020dc+7E¡üj
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020dc EndP







End DllEntryPoint
