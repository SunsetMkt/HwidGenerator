.Const

.Data?

.Data
dword_40BC5C    dd 0E4CB7B10h, 1EB51EDFh, 0D06A23D7h, 2 dup(0)
                                        ; DATA XREF: vBng___11+36¡ýo
dword_40BC30    DD 0BC58DA2BH, 0D13BE1EBH, 0D71B7E30H, 3D5CE91AH
dword_40BC20    DD 0DF95481EH, 8ED9FDCFH, 823A5377H, 0E94EBCFBH
dword_40A98C    DD 0E802D113H, 1E58BB18H, 0E99A6B16H, 2 Dup(0)
dword_40A980    DD 5412D109H, 509337B8H, 0C8C2DACH
dword_40A9B0    DD 7E92E532H, 0FE424CEDH, 69E6C112H, 0
dword_40BCA8    DD 0BC1BA626H, 43C536BDH, 0A17EA2AAH, 3 Dup(0)
dword_40BCC0    DD 0D53F2B12H, 66E658DH, 60901DF2H, 0D13F063AH
dword_40BC08    DD 0F806B423H, 0B06F041DH, 0C67CA3C7H, 3 Dup(0)
dword_40A510    DD 394C8C13H, 0F5A4A80DH, 878C72A2H, 72F41494H
dword_40BC40    DD 19D97B2BH, 0E66D6899H, 0CD994985H, 7B8665B2H
dword_40A540    DD 9CAB7D13H, 0BD36536DH, 6C2C7425H, 0A133AB80H
dword_40A9A0    DD 90DF7213H, 6924F0CFH, 0A7300D95H, 2EC35FACH

include ECProtos.inc ; .Code


sub_40BC9C      proc near               ; DATA XREF: vBng___44+49¡ýo
                pop     ds
                add     ebp, [ebx]
                dec     ebx
                inc     ebp
                retn
sub_40BC9C EndP ; sp-analysis failed
sub_40A730      proc near               ; DATA XREF: vBng___166_stk+25¡ýo
                adc     dh, bh
                adc     al, 94h
                retn
sub_40A730 EndP
sub_40A9D0      proc near               ; DATA XREF: vBng___145_stk+41¡ýo
                adc     ebx, ebx
                scasd
                sti
                shl     dword ptr [edx+edi*2-47h], cl
                cld
                das
                db      36h
                retn
sub_40A9D0 EndP
sub_40BC70 Proc Far                ; DATA XREF: vBng___13_stk+1E¡ýo
            	Assume Fs:Nothing
                and     [eax+ebx*8], dl
                inc     edi
                mov     cl, 52h ; 'R'
                adc     al, 32h ; '2'
                xchg    eax, ecx
                db      67h
                Pop Ds
                ;Fisttp DWord Ptr Fs:[Edx]
                inc     eax

loc_40BC7E:                             ; DATA XREF: vBng___139_stk+2F¡ýo
                rcr     byte ptr [ebx+1Fh], cl
                push    52233F0Bh
                adc     al, 73h ; 's'
                push    es
                retf
sub_40BC70 EndP

__allmul        proc near               ; CODE XREF: SafeMul2+2A¡üp
                                        ; VBNCB_unnamed_8000106b+FF¡üp ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h

                mov     eax, [esp+arg_4]
                mov     ecx, [esp+arg_C]
                or      ecx, eax
                mov     ecx, [esp+arg_8]
                jnz     short loc_4B0CA9
                mov     eax, [esp+arg_0]
                mul     ecx
                retn    10h
; ---------------------------------------------------------------------------

loc_4B0CA9:                             ; CODE XREF: __allmul+E¡üj
                push    ebx
                mul     ecx
                mov     ebx, eax
                mov     eax, [esp+4+arg_0]
                mul     [esp+4+arg_C]
                add     ebx, eax
                mov     eax, [esp+4+arg_0]
                mul     ecx
                add     edx, ebx
                pop     ebx
                retn    10h
__allmul EndP
vBng___21       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     [esp+40h+var_3C], ecx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ecx, edi
                shl     ecx, 4
                add     ecx, eax
                mov     esi, [esp+48h+var_3C]
                mov     eax, ecx
                mov     [esp+48h+var_38], ecx
                shr     eax, 8
                lea     ebx, [edi+262A2B82h]
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 78h
                movzx   ecx, al
                mov     eax, [esp+48h+var_3C]
                mov     [esp+48h+var_2C], ebx
                mov     eax, [eax+edx*8]
                mov     eax, [eax+ecx-72h]
                xor     ecx, ecx
                mov     [esp+48h+var_10], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, [esp+48h+var_38]
                sub     edx, 23h ; '#'
                movzx   eax, al
                add     edx, [eax+esi-48h]
                mov     dword ptr [esp+48h+var_18], edx
                mov     edx, esi
                adc     ecx, [eax+edx-44h]
                mov     dword ptr [esp+48h+var_18+4], ecx
                movzx   ecx, bl
                mov     [esp+48h+var_C], ecx
                mov     eax, [ecx+edx+86h]
                mov     [esp+48h+var_20], eax
                mov     eax, [ecx+edx+8Ah]
                mov     ecx, [esp+48h+var_38]
                mov     [esp+48h+var_1C], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B9h
                mov     edx, [edx+eax*8]
                mov     [esp+48h+var_8], edx
                mov     edx, esi
                mov     eax, [edx+eax*8+4]
                mov     edx, [ebp+arg_0]
                mov     [esp+48h+var_4], eax
                sub     edx, edi
                lea     eax, [edi-659C789Eh]
                xor     edx, ecx
                xor     eax, ebx
                xor     edx, 18E5E8FDh
                xor     eax, ecx
                mov     [esp+48h+var_28], edx
                mov     ebx, edi
                mov     [esp+48h+var_34], eax
                sub     ebx, [ebp+arg_0]
                mov     edi, esi
                xor     ebx, edx
                shr     ecx, 18h
                xor     ebx, [esp+48h+var_2C]
                mov     eax, ebx
                shr     eax, 8
                mov     esi, [ecx+edi-25h]
                xor     eax, 0D7F3h
                mov     edi, [ecx+edi-21h]
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     al, bl
                sbb     edi, edx
                xor     al, 0CFh
                movzx   eax, al
                cdq
                mov     ecx, [ebp+arg_4]
                add     esi, eax
                mov     eax, [ebp+arg_0]
                adc     edi, edx
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                xor     ecx, [esp+48h+var_34]
                xor     ecx, [esp+48h+var_28]
                mov     [esp+48h+var_30], ecx
                push    offset dword_40A400
                lea     edx, [ecx+57CE8898h]
                mov     ecx, [esp+4Ch+var_3C]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     eax, [esp+48h+var_30]
                add     ecx, 0DE6E178Ch
                xor     ecx, ebx
                xor     eax, ebx
                xor     ecx, [esp+48h+var_34]
                mov     ebx, [esp+48h+var_38]
                xor     eax, ebx
                mov     [esp+48h+var_38], eax
                xor     eax, 848EC508h
                mov     [esp+48h+var_24], ecx
                lea     edx, [ecx-7992D22Dh]
                xor     ecx, ecx
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+48h+var_24]
                xor     ecx, [esp+48h+var_30]
                xor     ecx, [esp+48h+var_2C]
                xor     ecx, ebx
                mov     [esi+4], edx
                mov     edx, [esp+48h+var_3C]
                mov     ebx, [esp+48h+var_20]
                movzx   eax, cl
                mov     [edx+eax*8-588h], ebx
                mov     ebx, [esp+48h+var_1C]
                mov     [edx+eax*8-584h], ebx
                mov     eax, ecx
                mov     ebx, dword ptr [esp+48h+var_18]
                shr     eax, 8
                movzx   eax, al
                mov     [edx+eax*8+60h], ebx
                mov     ebx, dword ptr [esp+48h+var_18+4]
                mov     [edx+eax*8+64h], ebx
                mov     eax, ecx
                shr     eax, 10h
                mov     ebx, edx
                movzx   eax, al
                xor     eax, 0EDh
                shr     ecx, 18h
                xor     ecx, 75h
                mov     [ebx+eax*8], esi
                mov     esi, edx
                mov     ebx, [esp+48h+var_28]
                mov     edx, [esp+48h+var_24]
                mov     [esi+eax*8+4], edi
                and     dword ptr [esi+ecx*8+4], 0
                mov     eax, [esp+48h+var_10]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+48h+var_38]
                movzx   eax, al
                movzx   ecx, bl
                xor     ebx, 0B73A18A2h
                xor     ecx, eax
                movzx   eax, dl
                xor     ecx, eax
                mov     edx, ebx
                mov     eax, [esp+48h+var_8]
                xor     ecx, 1Fh
                xor     ecx, [esp+48h+var_C]
                pop     edi
                mov     [ecx+esi-0DFh], eax
                mov     eax, [esp+44h+var_4]
                mov     [ecx+esi-0DBh], eax
                xor     eax, eax
                mov     ecx, [esp+44h+var_34]
                xor     ecx, 0F31EDC8Eh
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___21       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___149      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                lea     ebx, [edx-48CFF0CDh]
                push    edi
                mov     [esp+50h+var_40], ecx
                mov     ecx, edx
                shl     ecx, 4
                lea     edi, [esi-352845A3h]
                add     ecx, eax
                mov     esi, [esp+50h+var_40]
                add     edi, edx
                movzx   eax, cl
                xor     eax, 84h
                and     [esp+50h+var_30], 0
                and     [esp+50h+var_4], 0
                xor     ebx, ecx
                mov     [esp+50h+var_34], edi
                mov     [esp+50h+var_20], ebx
                mov     esi, [eax+esi]
                mov     [esp+50h+var_28], esi
                mov     esi, [esp+50h+var_40]
                mov     [esp+50h+var_24], ecx
                mov     eax, [eax+esi+4]
                mov     [esp+50h+var_8], eax
                mov     eax, edi
                mov     edi, [esp+50h+var_28]
                xor     eax, 7AF630Fh
                mov     eax, [eax+edi]
                mov     [esp+50h+var_1C], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 25h
                movzx   edi, bl
                mov     [esp+50h+var_C], edi
                add     edi, 0FFFFFFDAh
                add     edi, [esi+eax*8]
                mov     [esp+50h+var_18], edi
                mov     edi, [esp+50h+var_30]
                adc     edi, [esi+eax*8+4]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+50h+var_30], edi
                mov     edi, [eax+esi-0BEh]
                mov     eax, [eax+esi-0BAh]
                mov     esi, [ebp+arg_0]
                mov     [esp+50h+var_10], eax
                mov     [esp+50h+var_14], edi
                lea     eax, [esi+5A465861h]
                add     eax, edx
                mov     edi, eax
                mov     [esp+50h+var_3C], eax
                xor     edi, [esp+50h+var_34]
                xor     edi, ecx
                shr     ecx, 18h
                mov     [esp+50h+var_3C], edi
                mov     edi, edx
                xor     edx, esi
                sub     edi, esi
                xor     edx, [esp+50h+var_3C]
                xor     edi, ebx
                xor     edi, [esp+50h+var_34]
                xor     edx, ebx
                mov     ebx, [esp+50h+var_40]
                mov     eax, edx
                shr     eax, 8
                xor     al, 0C3h
                mov     [esp+50h+var_2C], edi
                movzx   eax, al
                mov     edi, [ecx+ebx-5Ah]
                mov     ebx, [ecx+ebx-56h]
                mov     [esp+50h+var_38], edx
                cdq
                sub     edi, eax
                mov     al, byte ptr [esp+50h+var_38]
                sbb     ebx, edx
                mov     ecx, [esp+50h+var_40]
                xor     al, 72h
                movzx   eax, al
                cdq
                add     edi, eax
                push    offset dword_40A59C
                adc     ebx, edx
                add     esi, 0BE1BB57Fh
                xor     esi, [esp+54h+var_2C]
                xor     esi, [esp+54h+var_3C]
                lea     edx, [esi-24490B54h]
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_38]
                mov     eax, esi
                xor     eax, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_2C]
                xor     eax, [esp+50h+var_34]
                mov     edx, [esp+50h+var_24]
                xor     ecx, edx
                xor     eax, edx
                xor     ecx, 0CEE6D948h
                mov     [esp+50h+var_38], eax
                xor     eax, 6F15500h
                mov     [esp+50h+var_24], ecx
                lea     edx, [ecx-18F6EF2Dh]
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_24]
                mov     ecx, edx
                xor     ecx, esi
                mov     esi, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_20]
                xor     ecx, [esp+50h+var_34]
                movzx   eax, cl
                xor     eax, 51h
                mov     [esi+eax*8], edi
                mov     edi, esi
                mov     esi, [esp+50h+var_1C]
                mov     [edi+eax*8+4], ebx
                mov     eax, ecx
                mov     ebx, [esp+50h+var_30]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [edi+eax*8-2B4h], 0
                mov     [edi+eax*8-2B8h], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_18]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 33h
                shr     ecx, 18h
                xor     ecx, 0BEh
                mov     [edi+eax*8+4], ebx
                mov     ebx, [esp+50h+var_3C]
                mov     [edi+eax*8], esi
                mov     eax, [esp+50h+var_14]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+50h+var_10]
                mov     [edi+ecx*8+4], eax
                movzx   eax, dl
                lea     edx, [ebx+1271AB57h]
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_28]
                xor     ecx, 23h
                xor     ecx, [esp+50h+var_C]
                mov     [ecx+edi], eax
                mov     eax, [esp+50h+var_8]
                mov     [ecx+edi+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_2C]
                pop     edi
                add     ecx, 336D7E79h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___149      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800021bb proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, ecx
                and     [esp+1Ch+var_C], 0
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                lea     ebx, [ecx-2D990ABDh]
                xor     eax, edi
                mov     [esp+28h+var_4], edx
                xor     ebx, eax
                mov     [esp+28h+var_18], eax
                mov     esi, [esp+28h+var_18]
                movzx   eax, al
                xor     eax, 0A0h
                movzx   ecx, bl
                xor     ecx, 35h
                mov     eax, [eax+edx]
                mov     edx, [eax+ecx]
                mov     ecx, esi
                xor     ecx, 0E13B5BFFh
                mov     eax, edx
                sub     eax, ecx
                cmp     ecx, edx
                mov     [esp+28h+var_10], eax
                mov     eax, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                shl     eax, 4
                shr     edi, 4
                add     edi, eax
                mov     eax, [ebp+arg_4]
                add     eax, 59037FCBh
                xor     eax, ebx
                xor     eax, esi
                mov     [esp+28h+var_18], eax
                mov     eax, [ebp+arg_0]
                add     eax, 6A8F8C54h
                xor     eax, edi
                xor     eax, ebx
                mov     ebx, [esp+28h+var_18]
                mov     [esp+28h+var_14], eax
                xor     eax, ebx
                xor     eax, esi
                xor     eax, 0A104EE2Eh
                mov     [esp+28h+var_18], eax
                cmp     ecx, edx
                jbe     short loc_49C120
                xor     edx, edx
                lea     eax, [ebx+15510BC9h]
                xor     edi, 11ED169h
                or      edx, eax
                jmp     short loc_49C143
; ---------------------------------------------------------------------------

loc_49C120:                             ; CODE XREF: VBNCB_unnamed_800021bb+9C¡üj
                mov     edx, [ebp+arg_0]
                mov     eax, [esp+28h+var_14]
                add     edx, 0DEF39F48h
                add     edx, [ebp+arg_4]
                add     eax, 0DF8C952Bh
                xor     edx, ebx
                xor     edx, edi
                xor     edi, edi
                sub     edx, 5E8CF5BBh
                or      edi, eax

loc_49C143:                             ; CODE XREF: VBNCB_unnamed_800021bb+AE¡üj
                mov     eax, [esp+28h+var_18]
                mov     esi, [esp+28h+var_4]
                cmp     [esp+28h+var_10], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                mov     [esi+ecx*8-218h], al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021bb endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000241f proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, eax
                and     [esp+10h+var_4], 0
                xor     ebx, [ebp+arg_0]
                lea     edx, [eax-7F6ECEC7h]
                push    esi
                mov     esi, ecx
                mov     [esp+14h+var_8], edx
                mov     ecx, eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     eax, ecx
                push    edi
                mov     edi, eax
                xor     eax, edx
                xor     eax, ebx
                xor     edi, ebx
                mov     [esp+18h+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                movzx   eax, bl
                xor     edx, 0F5h
                mov     ebx, [esp+18h+var_8]
                mov     ecx, [eax+esi-0Ah]
                mov     eax, ebx
                xor     eax, 9BC8F988h
                cmp     eax, [edx+ecx]
                jbe     short loc_49C1FA
                mov     eax, [esp+18h+var_C]
                lea     esi, [edi+41957B0Eh]
                xor     edx, edx
                add     eax, 0E04AF7FCh
                or      edx, eax
                jmp     short loc_49C222
; ---------------------------------------------------------------------------

loc_49C1FA:                             ; CODE XREF: VBNCB_unnamed_8000241f+63¡üj
                mov     ecx, [ebp+arg_4]
                xor     esi, esi
                mov     edx, ecx
                add     ecx, 47A6A52Ch
                sub     edx, [ebp+arg_0]
                xor     ecx, edi
                xor     edx, [esp+18h+var_C]
                xor     ecx, ebx
                xor     edx, edi
                xor     ecx, 810F3BF0h
                sub     edx, 6AAC46CBh
                or      esi, ecx

loc_49C222:                             ; CODE XREF: VBNCB_unnamed_8000241f+78¡üj
                pop     edi
                mov     eax, edx
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000241f endp


vBng___173_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                and     [ebp+var_14], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                mov     eax, esi
                mov     [ebp+var_10], ebx
                xor     eax, [ebp+arg_4]
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 75h
                push    edi
                push    offset dword_40A940
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                mov     [ebp+var_C], eax
                mov     eax, esi
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_14], ecx
                lea     edx, [ecx+596EF38Ah]
                mov     ecx, ebx
                call    VBN_TransformContext
                lea     ebx, [esi+5BCEF022h]
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 44h
                xor     al, 0A8h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                mov     esi, [ebp+arg_0]
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     edi, [ebp+arg_4]
                adc     edx, [ebp+var_C]
                mov     [ecx+1BCh], edx
                lea     edx, [esi+51641EC2h]
                add     edx, edi
                mov     [ecx+1B8h], eax
                xor     edx, [ebp+var_14]
                sub     edi, esi
                xor     edx, [ebp+var_4]
                xor     edi, ebx
                xor     edi, [ebp+var_14]
                xor     eax, eax
                xor     edi, 83DF8F06h
                xor     edx, 590A4ADh
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___173_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___53       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [esp+4Ch+var_44], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                lea     ebx, [esi+75116B07h]
                add     ebx, edi
                lea     edx, [esi+44C5A45Eh]
                movzx   eax, bl
                mov     [esp+50h+var_30], edx
                push    offset dword_40BEF0
                mov     ecx, [ecx+eax*8+0C8h]
                mov     [esp+54h+var_18], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+0CCh]
                mov     [esp+54h+var_14], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 45h
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+54h+var_2C+4], eax
                movzx   eax, dl
                xor     eax, 0A3h
                mov     ecx, [eax+ecx]
                mov     [esp+54h+var_C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [eax+ecx+4]
                mov     [esp+54h+var_8], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                lea     eax, [esi+44C5A45Eh]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_44]
                mov     eax, [edx+eax-8Bh]
                mov     eax, [eax+ecx+0C9h]
                mov     ecx, [esp+54h+var_44]
                mov     [esp+54h+var_10], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, [ecx+eax*8-5F0h]
                mov     dword ptr [esp+54h+var_20], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8-5ECh]
                mov     dword ptr [esp+54h+var_20+4], eax
                lea     eax, [esi-43BEF92Ch]
                xor     eax, ebx
                mov     edx, eax
                mov     [esp+54h+var_34], eax
                xor     edx, 0D0A40897h
                call    VBN_TransformContext
                mov     ecx, edi
                mov     eax, esi
                shr     eax, 4
                mov     edx, edi
                shl     ecx, 4
                add     ecx, eax
                shr     edx, 4
                lea     eax, [esi+44C5A45Eh]
                xor     ecx, eax
                mov     eax, esi
                shl     eax, 4
                xor     ecx, ebx
                add     edx, eax
                mov     [esp+50h+var_24], ecx
                xor     edx, [esp+50h+var_34]
                lea     eax, [edi-23CF0F4Ch]
                xor     edx, [esp+50h+var_30]
                mov     [esp+50h+var_40], edx
                mov     edx, edi
                sub     edx, esi
                xor     edx, ecx
                xor     edx, [esp+50h+var_34]
                xor     eax, [esp+50h+var_40]
                mov     [esp+50h+var_4], edx
                xor     eax, ecx
                mov     ecx, edx
                xor     ecx, [esp+50h+var_40]
                mov     [esp+50h+var_38], eax
                xor     ecx, ebx
                mov     ebx, eax
                xor     ecx, 0E2FC247Dh
                xor     ebx, edx
                mov     [esp+50h+var_3C], ecx
                lea     eax, [esi+44C5A45Eh]
                xor     ebx, eax
                lea     eax, [esi+75116B07h]
                add     eax, edi
                xor     ebx, eax
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 0D2h
                xor     al, 0F2h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     esi, [esp+50h+var_38]
                sbb     ecx, edi
                add     dword ptr [esp+50h+var_2C], eax
                mov     eax, [esp+50h+var_3C]
                adc     ecx, dword ptr [esp+50h+var_2C+4]
                xor     esi, 55B13A97h
                mov     edi, dword ptr [esp+50h+var_2C]
                xor     eax, 0E906892h
                mov     dword ptr [esp+50h+var_2C+4], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, [esp+50h+var_24]
                movzx   edx, al
                mov     eax, ebx
                mov     [edi], ecx
                sub     edx, 9Ch
                xor     ecx, ecx
                mov     [edi+4], esi
                add     edx, dword ptr [esp+50h+var_20]
                mov     esi, [esp+50h+var_44]
                adc     ecx, dword ptr [esp+50h+var_20+4]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E8h
                shr     ebx, 18h
                xor     ebx, 49h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_30]
                mov     [esi+eax*8], edx
                mov     eax, [esp+50h+var_18]
                mov     edx, [esp+50h+var_10]
                mov     [esi+ebx*8], eax
                mov     eax, [esp+50h+var_14]
                mov     [esi+ebx*8+4], eax
                movzx   eax, cl
                xor     eax, 0EBh
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_C]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [eax+esi-0A4h], edx
                mov     edx, [esp+50h+var_8]
                mov     [eax+esi-0A0h], edx
                movzx   eax, cl
                mov     ecx, dword ptr [esp+50h+var_2C+4]
                xor     eax, 3Ch
                mov     [esi+eax*8], edi
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+50h+var_4]
                xor     eax, eax
                mov     edx, [esp+50h+var_40]
                add     ecx, 34272242h
                pop     edi
                pop     esi
                add     edx, 3CCA4076h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___53       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___192_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                and     [ebp+var_10], 0
                push    esi
                mov     esi, [ebp+arg_0]
                xor     edx, esi
                movzx   eax, dl
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], edi
                push    offset dword_40ABF0
                mov     ecx, [eax+edi+6Eh]
                mov     edi, [eax+edi+72h]
                mov     eax, ebx
                mov     [ebp+var_8], ecx
                sub     eax, esi
                lea     ecx, [esi-1E938EFBh]
                mov     [ebp+var_C], eax
                add     ecx, ebx
                add     ebx, 0FE8FBD90h
                xor     ecx, edx
                xor     ebx, eax
                xor     ebx, edx
                mov     [ebp+var_10], ecx
                lea     edx, [esi-4E7F67B0h]
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, eax
                xor     edx, 655A789h
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 6Dh ; 'm'
                sub     esi, 10h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                mov     edx, [ebp+var_C]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                add     edx, 0CDD6B537h
                mov     ecx, [ebp+var_10]
                xor     eax, eax
                pop     edi
                add     ecx, 8B0031EAh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___192_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___91_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                add     edx, 24858C14h
                mov     ecx, [ebp+arg_0]
                push    edi
                push    offset dword_40C1A0
                mov     [ebp+var_8], esi
                lea     eax, [ecx-25E329BDh]
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     ebx, [eax+esi+11h]
                mov     edi, [eax+esi+15h]
                lea     eax, [ecx+2C039634h]
                xor     edx, eax
                mov     ecx, esi
                xor     edx, [ebp+var_4]
                xor     edx, 29EC3278h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 0A9h
                shr     eax, 10h
                sub     al, 31h ; '1'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     esi, [ebp+arg_0]
                xor     edx, edx
                mov     [eax+1BCh], ecx
                pop     edi
                lea     ecx, [esi-25E329BDh]
                lea     eax, [esi-383748C3h]
                xor     eax, ecx
                lea     ecx, [esi+2C039634h]
                xor     ecx, 0ED37EAEBh
                add     eax, 780470EEh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___91_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___193      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     [esp+58h+var_4C], ecx
                lea     ebx, [esi+0A7E8E3Fh]
                and     [esp+58h+var_4], 0
                add     ebx, edi
                movzx   eax, bl
                lea     edx, [edi-6AC4CC0Dh]
                xor     eax, 27h
                mov     [esp+58h+var_48], edx
                add     edi, 0C260DE20h
                mov     [esp+58h+var_38], ebx
                xor     edi, ebx
                push    offset dword_40AD6C
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_40], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_1C], edi
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8+100h]
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+104h]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0A5h
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, [eax+ecx-86h]
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx-82h]
                mov     ecx, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_20], eax
                movzx   eax, dl
                mov     edx, edi
                xor     eax, 6Eh
                xor     edx, 0CA104E4Ch
                mov     eax, [ecx+eax*2]
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_28], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, esi
                shl     eax, 4
                mov     ecx, edx
                shr     ecx, 4
                add     edx, 50CBAD5Bh
                add     ecx, eax
                xor     edx, edi
                xor     ecx, [esp+58h+var_48]
                mov     eax, [ebp+arg_4]
                xor     ecx, ebx
                xor     edx, [esp+58h+var_48]
                add     eax, 10F16ADEh
                xor     eax, ecx
                mov     [esp+58h+var_18], ecx
                xor     eax, edi
                mov     [esp+58h+var_8], edx
                mov     edi, [ebp+arg_4]
                xor     edi, esi
                mov     [esp+58h+var_3C], eax
                xor     edi, edx
                xor     eax, edx
                xor     edi, ecx
                xor     eax, ebx
                mov     [esp+58h+var_2C], edi
                xor     eax, 0B9F4CBADh
                mov     ebx, edi
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_38]
                mov     [esp+58h+var_44], eax
                mov     cl, bl
                xor     cl, 42h
                mov     eax, ebx
                shr     eax, 8
                sub     al, 2Ah ; '*'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     esi, [esp+58h+var_2C]
                sbb     ecx, edi
                add     dword ptr [esp+58h+var_34], eax
                mov     eax, [esp+58h+var_44]
                adc     ecx, dword ptr [esp+58h+var_34+4]
                xor     esi, 5DC36963h
                mov     edi, dword ptr [esp+58h+var_34]
                xor     eax, 0E209B2A8h
                mov     dword ptr [esp+58h+var_34+4], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                shr     eax, 10h
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_28]
                movzx   eax, al
                xor     eax, 8Eh
                mov     [edi+4], esi
                mov     esi, [esp+58h+var_4C]
                shr     ebx, 18h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                mov     eax, [esp+58h+var_24]
                mov     [esi+ebx*8-220h], eax
                mov     eax, [esp+58h+var_20]
                mov     [esi+ebx*8-21Ch], eax
                mov     eax, [esp+58h+var_18]
                mov     ebx, [esp+58h+var_44]
                xor     al, 0DFh
                xor     ebx, [esp+58h+var_2C]
                xor     ebx, [esp+58h+var_1C]
                xor     ebx, [esp+58h+var_48]
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_14]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_14+4]
                xor     ecx, 62h
                mov     [esi+ecx*8], eax
                mov     eax, ebx
                mov     [esi+ecx*8+4], edx
                mov     ecx, dword ptr [esp+58h+var_34+4]
                mov     edx, [esp+58h+var_8]
                shr     eax, 8
                add     edx, 0A138C89h
                movzx   eax, al
                xor     eax, 5Fh
                shr     ebx, 10h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_40]
                mov     [esi+eax*8], edi
                movzx   eax, bl
                pop     edi
                mov     [eax+esi-3], ecx
                mov     ecx, [esp+54h+var_C]
                mov     [eax+esi+1], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_3C]
                xor     ecx, 726C2940h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___193      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800020e2 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                and     [esp+1Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                sub     ebx, edi
                mov     eax, ebx
                mov     [esp+28h+var_14], ecx
                shr     eax, 8
                movzx   edx, bl
                xor     edx, 0E8h
                movzx   ecx, al
                mov     eax, [esp+28h+var_14]
                lea     esi, [edi+7A48FF95h]
                xor     ecx, 0CBh
                mov     eax, [edx+eax]
                mov     ecx, [eax+ecx]
                lea     eax, [esi+40390230h]
                cmp     eax, ecx
                mov     edx, ecx
                setnbe  [esp+28h+var_19]
                sub     edx, eax
                mov     [esp+28h+var_C], edx
                mov     edx, edi
                xor     edx, [ebp+arg_4]
                add     edi, 0BBC0AAE1h
                mov     [esp+28h+var_18], edx
                xor     edx, esi
                xor     [esp+28h+var_18], ebx
                xor     edx, ebx
                xor     edi, [esp+28h+var_18]
                xor     edi, esi
                mov     [esp+28h+var_10], edx
                mov     esi, [ebp+arg_4]
                lea     ebx, [esi+10B743EBh]
                xor     ebx, edi
                xor     ebx, edx
                mov     [esp+28h+var_8], ebx
                cmp     eax, ecx
                jbe     short loc_49C9CB
                mov     ecx, [esp+28h+var_10]
                xor     eax, eax
                mov     edx, [esp+28h+var_18]
                xor     ecx, 0A0E7469h
                add     edx, 0C904CE62h
                or      eax, ecx
                jmp     short loc_49C9E6
; ---------------------------------------------------------------------------

loc_49C9CB:                             ; CODE XREF: VBNCB_unnamed_800020e2+8F¡üj
                lea     eax, [esi+4BDD185Eh]
                xor     edi, 69BCEB08h
                xor     eax, edx
                xor     edx, edx
                xor     eax, [esp+28h+var_18]
                xor     eax, 33137BAAh
                or      edx, edi

loc_49C9E6:                             ; CODE XREF: VBNCB_unnamed_800020e2+A9¡üj
                mov     esi, [esp+28h+var_14]
                cmp     [esp+28h+var_C], 0
                movzx   ecx, bl
                mov     bl, [esp+28h+var_19]
                pop     edi
                mov     [esi+ecx*8-128h], bl
                setz    bl
                mov     ecx, [esp+24h+var_8]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esi+ecx*8-58h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020e2 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___11       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                mov     [esp+4Ch+var_40], ebx
                push    edi
                mov     edi, [ebp+arg_4]
                lea     edx, [esi-397BF45Eh]
                and     [esp+50h+var_4], 0
                mov     eax, edx
                mov     [esp+50h+var_44], edx
                shr     eax, 18h
                xor     eax, 0CCh
                movzx   edx, dl
                push    offset dword_40BC5C
                mov     ecx, [ebx+eax*8]
                mov     eax, [ebx+eax*8+4]
                mov     ebx, edi
                mov     dword ptr [esp+54h+var_38+4], eax
                mov     eax, esi
                mov     esi, [esp+54h+var_40]
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     dword ptr [esp+54h+var_38], ecx
                movzx   eax, bl
                xor     eax, 5Ch
                mov     [esp+54h+var_24], ebx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_1C], eax
                mov     eax, ebx
                shr     eax, 8
                mov     [esp+54h+var_20], ecx
                movzx   ecx, al
                mov     eax, [esi+edx*8+40h]
                mov     eax, [eax+ecx-5Ch]
                mov     [esp+54h+var_10], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     eax, 1061h
                movzx   eax, ax
                cdq
                add     eax, [ecx+esi-0Dh]
                mov     [esp+54h+var_30], eax
                adc     edx, [ecx+esi-9]
                mov     ecx, [esp+54h+var_44]
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 39h
                mov     [esp+54h+var_2C], edx
                mov     eax, [ecx+esi]
                mov     [esp+54h+var_18], eax
                mov     eax, [ecx+esi+4]
                lea     esi, [edi-720B979Eh]
                xor     esi, [esp+54h+var_44]
                mov     ecx, [esp+54h+var_40]
                mov     edx, esi
                xor     edx, 0A5E879EEh
                mov     [esp+54h+var_14], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     edx, edi
                xor     edx, eax
                add     eax, 36397F87h
                xor     eax, esi
                xor     edx, ebx
                xor     edx, [esp+50h+var_44]
                xor     eax, ebx
                mov     ebx, [ebp+arg_0]
                mov     [esp+50h+var_C], edx
                mov     [esp+50h+var_8], eax
                lea     ecx, [ebx+1E50600Eh]
                add     ecx, edi
                xor     ecx, edx
                xor     ecx, esi
                sub     ebx, edi
                mov     [esp+50h+var_28], ecx
                xor     ebx, eax
                xor     esi, esi
                xor     ebx, edx
                xor     ebx, 34A6628Eh
                mov     [esp+50h+var_3C], ebx
                mov     ebx, ecx
                xor     ebx, eax
                xor     ebx, [esp+50h+var_44]
                xor     ebx, 107A7853h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 42h ; 'B'
                add     al, 47h ; 'G'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_38]
                lea     edx, [ecx-5BA72218h]
                adc     esi, dword ptr [esp+50h+var_38+4]
                xor     eax, 6B59FA37h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_30]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_40]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                mov     [edx+eax*8-6A8h], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     [edx+eax*8-6A4h], ecx
                mov     ecx, [esp+50h+var_20]
                mov     [edx+ebx*8-688h], edi
                mov     edi, edx
                mov     edx, [esp+50h+var_3C]
                xor     edx, [esp+50h+var_28]
                xor     edx, [esp+50h+var_24]
                xor     edx, [esp+50h+var_44]
                movzx   eax, dl
                xor     eax, 63h
                mov     [edi+ebx*8-684h], esi
                mov     [eax+edi], ecx
                mov     ecx, [esp+50h+var_1C]
                mov     [eax+edi+4], ecx
                mov     eax, edx
                mov     ecx, [esp+50h+var_18]
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                mov     [edi+eax*8-408h], ecx
                mov     ecx, [esp+50h+var_14]
                mov     [edi+eax*8-404h], ecx
                mov     ecx, [esp+50h+var_10]
                movzx   eax, dl
                mov     edx, [esp+50h+var_C]
                add     edx, 67D6EC8h
                and     dword ptr [edi+eax*8-4CCh], 0
                mov     [edi+eax*8-4D0h], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                pop     edi
                add     ecx, 0EBB87384h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___11       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800022bb proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, edx
                push    ebx
                mov     [ebp+var_C], ecx
                mov     ebx, edx
                push    esi
                mov     esi, [ebp+arg_0]
                sub     eax, esi
                mov     [ebp+var_4], eax
                mov     ecx, esi
                sub     ecx, edx
                shr     ebx, 4
                xor     ecx, eax
                mov     eax, esi
                shl     eax, 4
                xor     ecx, 4043A0E7h
                add     ebx, eax
                lea     eax, [esi+4EFADB3Fh]
                add     eax, edx
                push    edi
                lea     edi, [esi-5140AB7Fh]
                xor     eax, ecx
                mov     esi, [ebp+var_C]
                xor     ebx, edi
                xor     ebx, [ebp+var_4]
                xor     eax, edi
                xor     ebx, 0C3A5F68Dh
                xor     eax, 0FEC755EBh
                mov     [ebp+var_8], ebx
                xor     ebx, ebx
                mov     edx, [ebp+var_8]
                or      ebx, eax
                mov     eax, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-3F0h], 0
                jnz     short loc_49CCD6
                mov     eax, [ebp+var_4]
                movzx   eax, al
                xor     eax, 4Ch
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_49CCD6
                xor     ebx, ebx
                xor     ecx, 1185FFE7h
                xor     edi, 9301EEDFh
                or      ebx, ecx
                jmp     short loc_49CCD8
; ---------------------------------------------------------------------------

loc_49CCD6:                             ; CODE XREF: VBNCB_unnamed_800022bb+73¡üj
                                        ; VBNCB_unnamed_800022bb+82¡üj
                mov     edi, edx

loc_49CCD8:                             ; CODE XREF: VBNCB_unnamed_800022bb+94¡üj
                mov     edx, edi
                mov     eax, ebx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022bb endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___23       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, esi
                xor     ebx, edi
                mov     [esp+58h+var_48], edx
                movzx   eax, bl
                xor     eax, 32h
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_4C], ebx
                push    offset dword_40BFC0
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_24], eax
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, ebx
                shr     ecx, 8
                movzx   eax, cl
                movzx   ecx, cl
                xor     ecx, 0FEh
                mov     edx, [edx+eax*8-3B8h]
                mov     dword ptr [esp+5Ch+var_3C], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [edx+eax*8-3B4h]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     edx, [edx+eax*8-0B8h]
                mov     [esp+5Ch+var_30], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [edx+eax*8-0B4h]
                mov     [esp+5Ch+var_2C], eax
                movzx   eax, bl
                mov     [esp+5Ch+var_14], eax
                mov     eax, [edx+eax*8-640h]
                mov     eax, [eax+ecx]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 18h
                lea     ebx, [esi-1481B4B3h]
                xor     ebx, [esp+5Ch+var_4C]
                xor     eax, 0F0h
                mov     [esp+5Ch+var_18], ebx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     edx, ebx
                mov     dword ptr [esp+5Ch+var_20], ecx
                xor     edx, 3A40D57Ah
                mov     ecx, [esp+5Ch+var_48]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                call    VBN_TransformContext
                shl     esi, 4
                lea     ecx, [edi+25B24ABEh]
                mov     eax, edi
                shr     eax, 4
                add     esi, eax
                mov     eax, [esp+58h+var_4C]
                mov     edx, esi
                xor     esi, ebx
                xor     edx, eax
                xor     esi, eax
                xor     edx, eax
                mov     [esp+58h+var_8], esi
                xor     eax, esi
                mov     [esp+58h+var_C], edx
                xor     eax, edx
                xor     ecx, edx
                mov     [esp+58h+var_44], eax
                xor     ecx, ebx
                mov     eax, ecx
                mov     [esp+58h+var_34], ecx
                xor     eax, esi
                xor     eax, [esp+58h+var_4C]
                xor     eax, 34CC1049h
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                shr     eax, 8
                add     al, 2Bh ; '+'
                xor     cl, 0BFh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_3C]
                mov     edi, [esp+58h+var_44]
                adc     edx, dword ptr [esp+58h+var_3C+4]
                xor     ecx, ecx
                add     eax, 0B6CA930Ch
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-58E6A902h]
                mov     [ebx+4], esi
                mov     ecx, edi
                xor     ecx, [esp+58h+var_34]
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_4C]
                mov     esi, [esp+58h+var_48]
                movzx   eax, cl
                xor     eax, 0EAh
                mov     [esi+eax*8+4], edx
                mov     [esi+eax*8], ebx
                mov     eax, ecx
                mov     edx, [esp+58h+var_30]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+esi-90h], edx
                mov     edx, [esp+58h+var_2C]
                mov     [eax+esi-8Ch], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 10h
                movzx   eax, al
                mov     [esi+eax*8-588h], edx
                mov     edx, [esp+58h+var_24]
                mov     [esi+eax*8-584h], edx
                mov     eax, [esp+58h+var_4C]
                shr     eax, 10h
                xor     al, 1
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                adc     edx, dword ptr [esp+58h+var_20+4]
                shr     ecx, 18h
                xor     ecx, 1Ah
                mov     [esi+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                mov     [esi+ecx*8+4], edx
                mov     edx, [esp+58h+var_C]
                movzx   ecx, al
                add     edx, 0D3FB7C23h
                mov     eax, edi
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 18h
                xor     ecx, [esp+58h+var_14]
                pop     edi
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 0BDF7D33Fh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___23       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___1        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                sub     edx, eax
                mov     [esp+50h+var_44], ecx
                xor     edx, 0DF8D81Fh
                push    esi
                lea     esi, [eax+0D3D465Eh]
                mov     [esp+54h+var_38], edx
                lea     eax, [ebx-5B52362Eh]
                mov     [esp+54h+var_48], esi
                xor     eax, edx
                mov     esi, ecx
                mov     [esp+54h+var_4C], eax
                movzx   eax, dl
                push    edi
                push    offset dword_40BBD0
                mov     ecx, [esi+eax*8-528h]
                mov     eax, [esi+eax*8-524h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_1C], ecx
                mov     edi, [esi+eax*8-3A0h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+esi-88h]
                mov     eax, [eax+esi-84h]
                mov     dword ptr [esp+5Ch+var_28+4], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0ACh
                mov     dword ptr [esp+5Ch+var_28], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [ebp+arg_4]
                sub     eax, ebx
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_48]
                xor     eax, ecx
                xor     eax, edx
                mov     [esp+5Ch+var_40], eax
                movzx   eax, cl
                shr     ecx, 18h
                mov     edx, [eax+edi-0A0h]
                mov     eax, [eax+edi-9Ch]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, [esp+5Ch+var_4C]
                movzx   eax, al
                xor     eax, 0F3h
                mov     [esp+5Ch+var_30], edx
                sub     ecx, eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 10h
                movzx   eax, al
                sub     eax, 0FDh
                mov     edx, [ecx+edi-1Fh]
                and     edx, eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 10h
                add     al, 2
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                sub     eax, ecx
                mov     ecx, esi
                mov     [eax+edi-7], edx
                mov     edx, [esp+5Ch+var_40]
                lea     edx, [edx-5587321Dh]
                call    VBN_TransformContext
                mov     esi, [ebp+arg_4]
                mov     eax, [esp+58h+var_48]
                add     esi, ebx
                lea     ecx, [esi-11E4DCC5h]
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, eax
                shr     eax, 8
                movzx   edx, cl
                mov     [esp+58h+var_3C], ecx
                mov     [esp+58h+var_34], edx
                movzx   edx, al
                mov     eax, ecx
                mov     ecx, [esp+58h+var_34]
                sub     edx, 0C9h
                shr     eax, 8
                add     al, 5Dh ; ']'
                shl     edx, 8
                movzx   eax, al
                add     edx, offset dword_40ADD0
                sub     ecx, eax
                shr     ebx, 4
                mov     [ecx+edi-3Ch], edx
                and     dword ptr [ecx+edi-38h], 0
                mov     edi, [ebp+arg_4]
                shl     edi, 4
                add     edi, ebx
                lea     ebx, [esi-3571F546h]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_40]
                xor     edi, [esp+58h+var_40]
                mov     ecx, ebx
                xor     edi, [esp+58h+var_4C]
                mov     esi, [esp+58h+var_48]
                xor     ecx, edi
                xor     ecx, esi
                mov     [esp+58h+var_C], edi
                xor     ecx, [esp+58h+var_38]
                mov     eax, edi
                xor     eax, [esp+58h+var_3C]
                xor     eax, [esp+58h+var_38]
                xor     eax, 0ADE2B376h
                mov     [esp+58h+var_48], ecx
                mov     ecx, eax
                mov     [esp+58h+var_20], eax
                xor     ecx, ebx
                mov     [esp+58h+var_8], ebx
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, esi
                mov     eax, ecx
                mov     [esp+58h+var_38], ecx
                shr     eax, 8
                xor     cl, 0F1h
                xor     al, 41h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [esp+58h+var_48]
                sub     ebx, esi
                mov     esi, [esp+58h+var_20]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_28]
                mov     dword ptr [esp+58h+var_28], ebx
                adc     eax, dword ptr [esp+58h+var_28+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_28+4], eax
                xor     esi, 0B391BDF7h
                lea     eax, [edx+4D6990D4h]
                or      ecx, eax
                mov     eax, [esp+58h+var_38]
                shr     eax, 10h
                mov     [ebx], ecx
                mov     [ebx+4], esi
                mov     ebx, [esp+58h+var_44]
                mov     esi, [esp+58h+var_30]
                movzx   eax, al
                xor     eax, 0AFh
                mov     [ebx+eax*8], esi
                mov     esi, [esp+58h+var_2C]
                mov     [ebx+eax*8+4], esi
                mov     eax, [esp+58h+var_38]
                shr     eax, 18h
                xor     eax, 90h
                mov     ecx, [esp+58h+var_1C]
                mov     [eax+ebx], ecx
                mov     ecx, [esp+58h+var_18]
                mov     esi, [esp+58h+var_3C]
                mov     edi, [esp+58h+var_44]
                mov     [eax+ebx+4], ecx
                mov     ebx, edx
                xor     ebx, [esp+58h+var_20]
                mov     eax, esi
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_4C]
                shr     eax, 10h
                xor     al, 1Fh
                movzx   ecx, bl
                movzx   eax, al
                cdq
                shr     esi, 18h
                mov     [edi+ecx*8-4D8h], eax
                xor     esi, 0D7h
                mov     [edi+ecx*8-4D4h], edx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_14]
                mov     edx, dword ptr [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-20h], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [edi+eax*8-1Ch], ecx
                mov     eax, ebx
                shr     eax, 10h
                mov     ecx, esi
                movzx   eax, al
                mov     [eax+edi+8Ah], edx
                mov     edx, dword ptr [esp+58h+var_28+4]
                mov     [eax+edi+8Eh], edx
                xor     eax, eax
                inc     eax
                xor     edx, edx
                call    __allshl
                shr     ebx, 18h
                xor     ebx, 77h
                mov     edx, [esp+58h+var_C]
                add     edx, 8396C8DCh
                and     dword ptr [edi+ebx*8+4], 0
                mov     [edi+ebx*8], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_30]
                xor     ecx, 2Ah
                xor     ecx, [esp+58h+var_34]
                mov     [ecx+edi], eax
                mov     eax, [esp+58h+var_2C]
                mov     [ecx+edi+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                add     ecx, 5549F5F2h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___1        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_h__2_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     eax, [ebp+arg_0]
                mov     edx, ecx
                and     [ebp+var_14], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shr     eax, 4
                add     esi, 0AC22CDB3h
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_4], edx
                movzx   eax, bl
                xor     eax, 0Dh
                mov     [ebp+var_10], ebx
                push    edi
                push    offset dword_40BF70
                mov     [ebp+var_C], esi
                mov     ecx, [eax+edx]
                mov     edi, [eax+edx+4]
                mov     edx, esi
                mov     [ebp+var_8], ecx
                xor     edx, 34E60D5Ah
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                sub     eax, [ebp+arg_4]
                xor     eax, ebx
                mov     ebx, [ebp+arg_0]
                xor     ebx, [ebp+arg_4]
                xor     eax, 50E30D4Bh
                xor     ebx, eax
                mov     [ebp+var_14], eax
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 61h
                shr     eax, 8
                sub     al, 6Ch ; 'l'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                mov     ebx, [ebp+arg_4]
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ebx, 4
                add     eax, ebx
                mov     [ecx+1BCh], edx
                xor     eax, [ebp+var_C]
                xor     edx, edx
                xor     eax, [ebp+var_10]
                mov     ecx, [ebp+var_14]
                xor     eax, 44B32785h
                pop     edi
                add     ecx, 21B23F58h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__2_stk   endp

vBng___179_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 2CD0CF84h
                push    ebx
                mov     ebx, [ebp+arg_4]
                add     ecx, ebx
                mov     eax, ecx
                mov     [ebp+var_4], ecx
                shr     eax, 8
                xor     al, 9Ch
                shr     ecx, 10h
                movzx   eax, al
                sub     cl, 62h ; 'b'
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_8]
                push    edi
                mov     edi, edx
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                movzx   eax, al
                sbb     edi, edx
                mov     edx, [ebp+arg_0]
                push    offset dword_40A850
                add     esi, [eax+ecx-44h]
                adc     edi, [eax+ecx-40h]
                add     ebx, 45A600DAh
                mov     eax, [ebp+arg_0]
                add     edx, ebx
                add     eax, 6073BEBAh
                xor     edx, eax
                xor     edx, [ebp+var_4]
                sub     edx, 2BC1E99Fh
                call    VBN_TransformContext
                mov     ecx, [ebp+var_8]
                xor     edx, edx
                mov     ebx, [ebp+arg_4]
                xor     [ebp+var_4], ebx
                mov     eax, [ebp+var_4]
                mov     [ecx+1B8h], esi
                mov     [ecx+1BCh], edi
                mov     ecx, [ebp+arg_0]
                xor     eax, ecx
                add     ecx, 6073BEBAh
                xor     eax, 2A021A23h
                pop     edi
                add     ecx, 8C0741C7h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___179_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___8_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                xor     eax, eax
                push    ebx
                push    esi
                mov     [ebp+var_4], ecx
                mov     ecx, [ebp+arg_4]
                lea     ebx, [edx-3E46364Eh]
                xor     eax, ecx
                add     ebx, ecx
                mov     [ebp+var_C], eax
                mov     esi, ecx
                xor     esi, edx
                lea     eax, [edx+4C20D70h]
                sub     ecx, edx
                mov     [ebp+var_8], esi
                xor     eax, ebx
                xor     ecx, esi
                mov     [ebp+var_C], eax
                xor     ecx, ebx
                mov     eax, ecx
                xor     esi, esi
                shr     eax, 8
                sub     al, 9
                push    edi
                movzx   eax, al
                cdq
                movzx   edi, cl
                mov     ecx, [ebp+var_4]
                sub     edi, 7Dh ; '}'
                sub     edi, eax
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sbb     esi, edx
                mov     edx, [ebp+arg_4]
                push    offset dword_40BFA0
                add     edi, [eax+ecx+45h]
                adc     esi, [eax+ecx+49h]
                xor     edx, [ebp+arg_0]
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                xor     edx, 366F51D6h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                xor     ebx, 0A2BA4FA5h
                mov     edx, [ebp+var_8]
                xor     eax, eax
                add     edx, 19FB6766h
                or      eax, ebx
                mov     [ecx+1B8h], edi
                pop     edi
                mov     [ecx+1BCh], esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___8_stk    endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000223d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     eax, [ebp+arg_4]
                mov     [esp+24h+var_1C], eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                mov     [esp+30h+var_C], ebx
                lea     edi, [eax+esi]
                lea     eax, [edi+3F655FB2h]
                movzx   edx, al
                shr     eax, 8
                xor     edx, 78h
                movzx   ecx, al
                mov     eax, [edx+ebx]
                mov     edx, esi
                sub     edx, [esp+30h+var_1C]
                mov     ebx, [eax+ecx-3Ch]
                mov     eax, esi
                mov     ecx, [esp+30h+var_1C]
                xor     esi, esi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     eax, [edi+3F655FB2h]
                xor     edx, eax
                mov     [esp+30h+var_14], ecx
                mov     ecx, [esp+30h+var_1C]
                xor     edx, 0D4BDB6ECh
                mov     eax, edx
                xor     eax, 1806245Ch
                or      esi, eax
                mov     eax, ebx
                sub     eax, esi
                cmp     esi, ebx
                mov     [esp+30h+var_8], eax
                mov     eax, [ebp+arg_0]
                setnbe  [esp+30h+var_1D]
                sub     ecx, eax
                add     eax, 2D73134Eh
                xor     ecx, [esp+30h+var_14]
                mov     [esp+30h+var_1C], ecx
                lea     ecx, [edi+3F655FB2h]
                xor     [esp+30h+var_1C], ecx
                add     edi, 15FE6085h
                xor     eax, [esp+30h+var_1C]
                xor     edi, edx
                xor     eax, edx
                mov     [esp+30h+var_18], edi
                mov     edi, [esp+30h+var_14]
                xor     [esp+30h+var_18], edi
                mov     edx, [esp+30h+var_18]
                mov     [esp+30h+var_14], eax
                xor     eax, edx
                xor     eax, ecx
                xor     eax, 6C2E6DD8h
                mov     [esp+30h+var_10], eax
                cmp     esi, ebx
                jbe     short loc_49D567
                mov     ecx, [esp+30h+var_18]
                xor     edi, edi
                mov     edx, [esp+30h+var_1C]
                xor     ecx, 1429A7EBh
                add     edx, 8CA12E9Dh
                or      edi, ecx
                jmp     short loc_49D584
; ---------------------------------------------------------------------------

loc_49D567:                             ; CODE XREF: VBNCB_unnamed_8000223d+CB¡üj
                mov     eax, [esp+30h+var_14]
                xor     edi, edx
                xor     edi, [esp+30h+var_1C]
                add     eax, 0E8C13E4Dh
                xor     edx, edx
                xor     edi, 0E67384C9h
                or      edx, eax
                mov     eax, [esp+30h+var_10]

loc_49D584:                             ; CODE XREF: VBNCB_unnamed_8000223d+E5¡üj
                mov     esi, [esp+30h+var_C]
                mov     bl, [esp+30h+var_1D]
                cmp     [esp+30h+var_8], 0
                movzx   ecx, al
                mov     [esi+ecx*8-458h], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 34h
                pop     edi
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000223d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___106_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ecx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, edi
                lea     eax, [ebx-6582DDB1h]
                mov     [ebp+var_4], edx
                mov     [ebp+var_10], eax
                movzx   eax, al
                xor     eax, 53h
                shr     esi, 4
                push    offset dword_40BF20
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     [ebp+var_C], eax
                mov     eax, ebx
                shl     eax, 4
                add     esi, eax
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+var_4]
                mov     edx, esi
                xor     edx, 7AE40234h
                call    VBN_TransformContext
                add     edi, 11F303C9h
                lea     eax, [ebx-6582DDB1h]
                add     edi, ebx
                add     ebx, 0F1BFF76Dh
                xor     edi, eax
                xor     ebx, edi
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 50h
                shr     eax, 8
                xor     al, 0CCh
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, [ebp+var_C]
                xor     edi, 4CC3E92Dh
                mov     [ecx+1B8h], eax
                xor     eax, eax
                mov     [ecx+1BCh], edx
                mov     edx, edi
                mov     ecx, [ebp+var_10]
                pop     edi
                add     ecx, 0DAE3C3E8h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___106_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800022a7 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, esi
                mov     [ebp+var_C], ecx
                mov     eax, edi
                shr     eax, 4
                mov     ecx, esi
                shl     ecx, 4
                sub     edx, edi
                add     ecx, eax
                shr     ebx, 4
                mov     eax, edi
                mov     [ebp+var_4], ecx
                shl     eax, 4
                xor     edx, ecx
                add     ebx, eax
                xor     edi, esi
                mov     eax, [ebp+var_4]
                xor     edi, ebx
                mov     esi, [ebp+var_C]
                xor     eax, edx
                xor     eax, ebx
                xor     edi, ecx
                add     eax, 389F167Eh
                xor     ecx, ecx
                or      ecx, eax
                xor     edi, 0EE7F13ABh
                mov     eax, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-630h], 0
                jnz     short loc_49D70B
                mov     eax, [ebp+var_4]
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-88h], 0
                jnz     short loc_49D70B
                xor     ecx, ecx
                lea     edi, [ebx-72AC5F93h]
                xor     edx, 493D5170h
                or      ecx, edx

loc_49D70B:                             ; CODE XREF: VBNCB_unnamed_800022a7+69¡üj
                                        ; VBNCB_unnamed_800022a7+79¡üj
                mov     edx, edi
                mov     eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022a7 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___142_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     [ebp+var_4], ecx
                mov     ecx, edx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     eax, [esi+37689ABBh]
                add     eax, edx
                lea     ebx, [esi-1D89F945h]
                xor     ebx, ecx
                shr     esi, 4
                add     edx, edx
                mov     [ebp+var_C], eax
                push    edi
                mov     [ebp+var_8], ebx
                push    offset dword_40C890
                lea     edi, [esi+edx*8]
                mov     esi, [ebp+var_4]
                mov     ebx, edi
                xor     ebx, eax
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0B5h
                mov     esi, [ecx+esi+4Bh]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4Fh]
                sbb     ecx, edx
                xor     bl, 0ACh
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                xor     edi, ebx
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_C]
                xor     edi, esi
                mov     [eax+1BCh], ecx
                mov     ecx, eax
                lea     edx, [edi+21567827h]
                call    VBN_TransformContext
                pop     edi
                lea     edx, [esi-20E76506h]
                xor     eax, eax
                lea     ecx, [ebx-3907DE92h]
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___142_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___12       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, eax
                and     [esp+50h+var_4], 0
                push    esi
                lea     edx, [eax-59E1C372h]
                mov     esi, [ebp+arg_0]
                movzx   eax, dl
                xor     ebx, esi
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_4C], edx
                mov     [esp+58h+var_3C], ebx
                push    offset dword_40A878
                mov     [esp+5Ch+var_44], edi
                mov     ecx, [edi+eax*8-470h]
                mov     eax, [edi+eax*8-46Ch]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B6h
                mov     dword ptr [esp+5Ch+var_38], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_2C], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0DFh
                mov     [esp+5Ch+var_30], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                mov     [esp+5Ch+var_28], ecx
                movzx   ecx, al
                mov     eax, [edx+edi+38h]
                xor     ecx, 77h
                mov     eax, [eax+ecx]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                movzx   ecx, bl
                mov     ebx, [ebp+arg_4]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                sub     edx, 49h ; 'I'
                mov     [esp+5Ch+var_18], ecx
                add     edx, [edi+ecx*8+60h]
                mov     [esp+5Ch+var_14], edx
                adc     eax, [edi+ecx*8+64h]
                mov     ecx, edi
                mov     [esp+5Ch+var_10], eax
                mov     eax, esi
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                xor     ebx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_1C], ebx
                lea     edx, [ebx+2D258B66h]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     edi, [esi-70082CC6h]
                add     edi, [ebp+arg_4]
                mov     eax, esi
                xor     edi, [esp+58h+var_3C]
                xor     edi, [esp+58h+var_4C]
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                mov     [esp+58h+var_C], edi
                mov     eax, [ebp+arg_4]
                xor     edx, ebx
                xor     edx, [esp+58h+var_3C]
                sub     eax, esi
                mov     [esp+58h+var_8], edx
                xor     eax, edi
                xor     eax, ebx
                lea     ecx, [esi-55CEF9B5h]
                xor     ecx, edx
                mov     [esp+58h+var_40], eax
                mov     ebx, eax
                xor     ecx, edi
                shr     eax, 8
                xor     ebx, edx
                xor     ebx, [esp+58h+var_4C]
                xor     al, 4Ah
                mov     [esp+58h+var_48], ecx
                xor     esi, esi
                mov     ecx, [esp+58h+var_40]
                xor     ebx, 3377739Eh
                movzx   eax, al
                cdq
                movzx   edi, cl
                sub     edi, 4Fh ; 'O'
                sub     edi, eax
                lea     eax, [ebx-9E2469Fh]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                mov     edx, [esp+58h+var_48]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     ecx, ecx
                or      ecx, eax
                mov     dword ptr [esp+58h+var_38+4], esi
                mov     esi, [esp+58h+var_44]
                xor     edx, 98FFD2C3h
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_4C]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_30]
                movzx   eax, cl
                xor     eax, 0D6h
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_2C]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 3Fh
                mov     [eax+esi], edx
                mov     edx, [esp+58h+var_24]
                mov     [eax+esi+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [esi+eax*8-430h], edx
                mov     edx, esi
                mov     esi, dword ptr [esp+58h+var_38+4]
                and     dword ptr [edx+eax*8-42Ch], 0
                mov     eax, [esp+58h+var_1C]
                mov     [edx+ecx*8-138h], edi
                mov     [edx+ecx*8-134h], esi
                mov     edx, [esp+58h+var_48]
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+58h+var_44]
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, [esp+58h+var_18]
                pop     edi
                pop     esi
                mov     [edx+ecx*8-268h], eax
                mov     eax, [esp+50h+var_10]
                mov     [edx+ecx*8-264h], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                mov     edx, [esp+50h+var_C]
                add     ecx, 482A1370h
                xor     edx, 93578894h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___12       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___67       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                sub     eax, ecx
                mov     [ebp+var_C], esi
                push    edi
                mov     edi, eax
                mov     [ebp+var_4], eax
                shl     ecx, 4
                mov     eax, ebx
                shr     eax, 4
                xor     edi, 2F3A807h
                add     ecx, eax
                mov     [ebp+var_8], ecx
                push    offset dword_40ABA0
                lea     edx, [ecx-11A96118h]
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                add     bl, 37h ; '7'
                xor     ecx, edi
                movzx   esi, bl
                mov     ebx, [ebp+var_8]
                mov     eax, edi
                mov     [ebp+var_10], ecx
                xor     eax, 2858h
                movzx   ecx, cl
                xor     esi, ecx
                movzx   eax, ax
                movzx   ecx, bl
                xor     esi, ecx
                cdq
                mov     ecx, [ebp+var_C]
                xor     esi, 81h
                mov     [esi+ecx], eax
                mov     eax, [ebp+var_4]
                xor     eax, ebx
                mov     [esi+ecx+4], edx
                mov     ecx, [ebp+var_10]
                xor     eax, edi
                pop     edi
                xor     eax, 2FDD9C3Bh
                xor     edx, edx
                xor     ecx, 0E20C83BAh
                add     eax, 5B8EE28Eh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___67       endp

; void __cdecl g_chkMacroETWProvider__()




vBng___118_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                lea     eax, [ebx-70F4EE08h]
                mov     ecx, edi
                mov     [ebp+var_4], esi
                sub     ecx, ebx
                sub     edx, edi
                xor     ecx, 894B96B8h
                shl     ebx, 4
                xor     eax, ecx
                mov     [ebp+var_C], edx
                mov     [ebp+var_8], eax
                mov     eax, edi
                shr     eax, 4
                add     ebx, eax
                xor     ebx, edx
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                add     eax, 86Dh
                mov     esi, [ecx+esi+58h]
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C3E0
                mov     ecx, [ecx+eax+5Ch]
                sbb     ecx, edx
                xor     bl, 0D6h
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+arg_4]
                mov     esi, [ebp+var_8]
                shr     edx, 4
                shl     edi, 4
                add     edx, edi
                mov     [ebx+1BCh], ecx
                mov     edi, [ebp+var_C]
                xor     edx, esi
                xor     edx, edi
                mov     ecx, ebx
                xor     edx, 0B6B80033h
                call    VBN_TransformContext
                xor     edi, 0C761DEAAh
                lea     ecx, [esi-1CDBC8A6h]
                mov     edx, edi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___118_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___121_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                sub     edx, edi
                mov     ecx, edx
                mov     [ebp+var_4], esi
                xor     ecx, 0A547E3BDh
                mov     eax, edi
                sub     eax, [ebp+arg_0]
                xor     edx, ecx
                mov     [ebp+var_C], eax
                lea     ebx, [edi-3B15B403h]
                xor     ebx, eax
                xor     edx, 0F4007A4Ah
                xor     ebx, ecx
                mov     [ebp+var_8], edx
                not     cl
                mov     eax, ebx
                shr     eax, 8
                sub     al, 11h
                movzx   ecx, cl
                movzx   eax, al
                cdq
                push    offset dword_40C2C0
                mov     esi, [ecx+esi]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 0ABh
                movzx   eax, bl
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                lea     edx, [edi-5D907DD4h]
                mov     edi, [ebp+var_8]
                xor     edx, edi
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_C]
                xor     edx, esi
                mov     [eax+1BCh], ecx
                xor     edx, 1072FCh
                mov     ecx, eax
                call    VBN_TransformContext
                lea     ecx, [edi-570A1476h]
                xor     eax, eax
                pop     edi
                lea     edx, [esi+45D2AFEEh]
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___121_stk  endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___70_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                shl     edx, 4
                xor     ebx, 123CCCD6h
                add     eax, edx
                push    esi
                mov     [ebp+var_4], eax
                push    edi
                mov     edi, ecx
                movzx   ecx, al
                xor     ecx, 0C2h
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0D9h
                movzx   eax, al
                mov     esi, [ecx+edi]
                mov     ecx, [ecx+edi+4]
                cdq
                sub     esi, eax
                push    offset dword_40BB30
                sbb     ecx, edx
                xor     bl, 90h
                movzx   eax, bl
                cdq
                add     esi, eax
                mov     [edi+1B8h], esi
                mov     esi, [ebp+var_4]
                adc     ecx, edx
                mov     edx, esi
                mov     [edi+1BCh], ecx
                xor     edx, [ebp+arg_4]
                mov     ecx, edi
                xor     edx, [ebp+arg_0]
                xor     edx, 41401383h
                call    VBN_TransformContext
                pop     edi
                lea     edx, [esi+260DB624h]
                xor     eax, eax
                pop     esi
                or      eax, 0A3D3AFDh
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___70_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___111      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                shr     edx, 4
                add     edx, eax
                mov     [esp+54h+var_48], esi
                push    edi
                lea     eax, [ecx-5B7783E4h]
                mov     [esp+58h+var_3C], edx
                mov     [esp+58h+var_4C], eax
                lea     eax, [ecx-11D222C4h]
                xor     eax, edx
                mov     [esp+58h+var_40], eax
                movzx   eax, dl
                xor     eax, 0D9h
                push    offset dword_40AC10
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                mov     eax, [esp+5Ch+var_4C]
                movzx   eax, al
                xor     eax, 3Ch
                mov     [esp+5Ch+var_38], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     edi, [esi+eax*8+148h]
                mov     eax, edx
                shr     eax, 18h
                mov     esi, [eax+esi-5Eh]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 4Eh
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_40]
                shr     eax, 10h
                xor     edx, 6B5AD16h
                movzx   eax, al
                xor     eax, 0DAh
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_28], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                mov     ecx, edx
                xor     ecx, [ebp+arg_4]
                mov     eax, [esp+58h+var_4C]
                xor     ecx, eax
                xor     ecx, [esp+58h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_24], ecx
                lea     esi, [edx-7AD6E5D5h]
                mov     eax, [edi+eax*4-13Ch]
                mov     edi, [ebp+arg_4]
                add     esi, edi
                mov     [esp+58h+var_18], eax
                xor     esi, ecx
                mov     eax, [esp+58h+var_3C]
                xor     eax, [esp+58h+var_40]
                xor     eax, [esp+58h+var_4C]
                xor     esi, [esp+58h+var_40]
                mov     [esp+58h+var_34], eax
                sub     edi, edx
                mov     [esp+58h+var_30], esi
                mov     edx, edi
                mov     [esp+58h+var_44], edi
                xor     edx, eax
                xor     edx, ecx
                mov     eax, edx
                mov     [esp+58h+var_44], edx
                mov     cl, byte ptr [esp+58h+var_44]
                shr     eax, 8
                xor     cl, 5
                xor     al, 0FEh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     edx, [esp+58h+var_3C]
                sbb     ecx, edi
                add     [esp+58h+var_38], eax
                mov     eax, [esp+58h+var_44]
                adc     ecx, ebx
                mov     edi, [esp+58h+var_38]
                xor     eax, [esp+58h+var_30]
                xor     eax, [esp+58h+var_4C]
                mov     ebx, [esp+58h+var_30]
                xor     eax, edx
                xor     ebx, [esp+58h+var_34]
                xor     ebx, edx
                mov     [esp+58h+var_10], eax
                xor     eax, 0EC17E05Dh
                mov     [esp+58h+var_14], ecx
                xor     ebx, 3932F103h
                xor     ecx, ecx
                or      ecx, eax
                mov     [esp+58h+var_3C], ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_2C]
                lea     edx, [ebx+35C019D2h]
                xor     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_4C]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                mov     edi, [esp+58h+var_48]
                movzx   eax, bl
                mov     [eax+edx-1Dh], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [eax+edx-19h], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_24]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-25h]
                add     edx, dword ptr [esp+58h+var_20]
                adc     ecx, dword ptr [esp+58h+var_20+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 64h
                mov     [edi+eax*8], edx
                mov     edx, edi
                mov     edi, [esp+58h+var_38]
                mov     [edx+eax*8+4], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_18]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Bh
                shr     ebx, 18h
                and     dword ptr [edx+eax*8+4], 0
                xor     ebx, 78h
                mov     [edx+eax*8], ecx
                mov     eax, [esp+58h+var_14]
                mov     [edx+ebx*8+4], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                mov     [edx+ebx*8], edi
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                xor     ecx, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     [edx+ecx*8-408h], eax
                mov     eax, [esp+4Ch+var_8]
                mov     [edx+ecx*8-404h], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_30]
                mov     edx, [esp+4Ch+var_34]
                xor     ecx, 0E6C46C3Dh
                add     edx, 3E7DAA0Fh
                or      eax, ecx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___111      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___8        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     edx, edi
                mov     [esp+50h+var_40], esi
                shl     edx, 4
                add     eax, edx
                lea     edx, [ebx-3EE2FD80h]
                mov     [esp+50h+var_44], eax
                add     edx, edi
                movzx   eax, dl
                mov     ebx, [esp+50h+var_40]
                push    offset dword_40BA4C
                mov     ecx, [esi+eax*8-308h]
                mov     eax, [esi+eax*8-304h]
                mov     dword ptr [esp+54h+var_18+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 71h
                mov     dword ptr [esp+54h+var_18], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_28], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+54h+var_34], ecx
                mov     ecx, [eax+esi+49h]
                mov     eax, [eax+esi+4Dh]
                mov     [esp+54h+var_20], eax
                mov     eax, [esp+54h+var_44]
                movzx   eax, al
                xor     eax, 0B1h
                mov     [esp+54h+var_24], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_4], eax
                mov     eax, edx
                shr     eax, 8
                mov     [esp+54h+var_8], ecx
                movzx   ecx, al
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   esi, al
                mov     eax, [esp+54h+var_44]
                sub     esi, 0C8h
                add     esi, [ebx+ecx*8+108h]
                xor     eax, edx
                mov     edx, eax
                mov     [esp+54h+var_38], eax
                xor     edx, 2089620Ah
                mov     ecx, ebx
                call    VBN_TransformContext
                mov     eax, [esi]
                mov     esi, edi
                mov     ebx, [ebp+arg_0]
                mov     ecx, [esp+50h+var_44]
                shr     esi, 4
                xor     ecx, ecx
                mov     [esp+50h+var_10], eax
                mov     eax, ebx
                shl     eax, 4
                lea     edx, [ebx-3EE2FD80h]
                add     esi, eax
                add     edx, edi
                xor     esi, [esp+50h+var_38]
                xor     ecx, edx
                xor     esi, [esp+50h+var_44]
                mov     [esp+50h+var_30], esi
                mov     esi, ebx
                sub     esi, edi
                mov     [esp+50h+var_1C], ecx
                xor     esi, ecx
                xor     esi, [esp+50h+var_38]
                xor     esi, 122E19B2h
                mov     [esp+50h+var_2C], esi
                mov     eax, [esp+50h+var_2C]
                lea     esi, [ebx-4DA963DEh]
                xor     eax, [esp+50h+var_30]
                xor     edi, edi
                xor     esi, [esp+50h+var_30]
                xor     eax, edx
                xor     esi, ecx
                xor     eax, 6274723Fh
                mov     [esp+50h+var_3C], eax
                mov     ebx, esi
                xor     ebx, [esp+50h+var_2C]
                xor     ebx, [esp+50h+var_44]
                xor     ebx, edx
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 0DCh
                add     al, 7Ch ; '|'
                movzx   eax, al
                cdq
                sub     ecx, eax
                mov     eax, [esp+50h+var_3C]
                sbb     edi, edx
                add     [esp+50h+var_34], ecx
                mov     edx, esi
                adc     edi, [esp+50h+var_28]
                xor     eax, 0AAAB9651h
                xor     ecx, ecx
                xor     edx, 2651D62Ah
                or      ecx, eax
                mov     eax, [esp+50h+var_34]
                mov     [eax], ecx
                mov     [eax+4], edx
                mov     eax, ebx
                mov     edx, [esp+50h+var_40]
                mov     ecx, [esp+50h+var_24]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 10h
                mov     [eax+edx], ecx
                mov     ecx, [esp+50h+var_20]
                mov     [eax+edx+4], ecx
                mov     eax, [esp+50h+var_1C]
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 46h ; 'F'
                add     ecx, dword ptr [esp+50h+var_18]
                adc     eax, dword ptr [esp+50h+var_18+4]
                shr     ebx, 18h
                mov     [edx+ebx*8-1E0h], ecx
                mov     ecx, [esp+50h+var_3C]
                mov     [edx+ebx*8-1DCh], eax
                xor     ecx, esi
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_44]
                mov     ebx, [esp+50h+var_40]
                mov     edx, [esp+50h+var_10]
                movzx   eax, cl
                xor     eax, 0D4h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_8]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 6Fh
                shr     ecx, 10h
                mov     [ebx+eax*8], edx
                mov     edx, [esp+50h+var_4]
                mov     [ebx+eax*8+4], edx
                mov     edx, [esp+50h+var_30]
                movzx   eax, cl
                add     edx, 0E3B4C758h
                mov     ecx, [esp+50h+var_34]
                xor     eax, 0D3h
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     [ebx+eax*8+4], edi
                xor     ecx, 0CB40DD3h
                xor     eax, eax
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___8        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___26       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                push    edi
                mov     edi, ecx
                and     [esp+50h+var_4], 0
                mov     ecx, ebx
                mov     [esp+50h+var_3C], edi
                shl     ecx, 4
                add     ecx, eax
                mov     eax, ebx
                xor     eax, esi
                mov     [esp+50h+var_38], ecx
                mov     [esp+50h+var_40], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, [esp+50h+var_40]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edi+edx*8-490h]
                xor     ecx, 5
                mov     eax, [eax+ecx]
                mov     [esp+50h+var_2C], eax
                mov     eax, [esp+50h+var_40]
                movzx   edx, al
                shr     eax, 10h
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 38h ; '8'
                mov     [esp+50h+var_10], edx
                add     ecx, [edi+edx*8+0B0h]
                mov     [esp+50h+var_28], ecx
                adc     eax, [edi+edx*8+0B4h]
                mov     edx, [esp+50h+var_38]
                mov     [esp+50h+var_24], eax
                movzx   eax, dl
                xor     eax, 3Ch
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+50h+var_8], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+50h+var_C], ecx
                mov     ecx, [eax+edi-39h]
                mov     eax, [eax+edi-35h]
                mov     edi, esi
                mov     [esp+50h+var_1C], eax
                sub     edi, ebx
                mov     eax, edi
                mov     [esp+50h+var_20], ecx
                mov     ecx, [esp+50h+var_40]
                xor     eax, edx
                xor     eax, 4EE90B94h
                lea     edx, [ebx-2DDA54BAh]
                add     esi, 0CEBD7FB6h
                mov     [esp+50h+var_30], eax
                add     esi, ebx
                xor     edi, ecx
                mov     ebx, [esp+50h+var_3C]
                xor     esi, eax
                xor     edi, eax
                xor     esi, ecx
                mov     eax, [esp+50h+var_38]
                xor     edx, esi
                shr     eax, 8
                xor     edx, ecx
                movzx   ecx, al
                xor     edi, 426BBA4Ch
                mov     eax, edx
                mov     [esp+50h+var_34], edx
                shr     eax, 8
                xor     ecx, 0CEh
                sub     al, 5Dh ; ']'
                movzx   eax, al
                cdq
                mov     ebx, [ecx+ebx]
                sub     ebx, eax
                mov     eax, [esp+50h+var_3C]
                push    offset dword_40BDB8
                mov     ecx, [ecx+eax+4]
                mov     al, byte ptr [esp+54h+var_34]
                sbb     ecx, edx
                xor     al, 5Ah
                movzx   eax, al
                cdq
                add     ebx, eax
                mov     eax, edi
                mov     [esp+54h+var_18], ebx
                adc     ecx, edx
                xor     eax, 31F7D49Ah
                mov     [esp+54h+var_14], ecx
                mov     edx, esi
                xor     ecx, ecx
                xor     edx, 0D6FA011Eh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_3C]
                mov     [ebx+4], edx
                mov     ebx, edi
                xor     ebx, esi
                xor     ebx, [esp+54h+var_38]
                xor     ebx, 0DBEAA56Dh
                lea     edx, [ebx-7E8787C8h]
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_34]
                mov     ecx, edx
                mov     esi, [esp+50h+var_2C]
                xor     ecx, edi
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_38]
                mov     edi, [esp+50h+var_3C]
                movzx   eax, cl
                and     dword ptr [edi+eax*8-2C4h], 0
                mov     [edi+eax*8-2C8h], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F1h
                mov     [edi+eax*8], esi
                mov     esi, [esp+50h+var_24]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 12h
                mov     [eax+edi-91h], esi
                mov     esi, [esp+50h+var_1C]
                mov     [eax+edi-8Dh], esi
                mov     eax, [esp+50h+var_18]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+50h+var_14]
                mov     [edi+ecx*8+4], eax
                mov     eax, [esp+50h+var_30]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+50h+var_40]
                xor     ecx, eax
                xor     ecx, [esp+50h+var_10]
                xor     edx, 17F64F11h
                mov     eax, [esp+50h+var_C]
                mov     [edi+ecx*8-3A0h], eax
                mov     eax, [esp+50h+var_8]
                mov     [edi+ecx*8-39Ch], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_30]
                pop     edi
                xor     ecx, 2EC18C4Ch
                or      eax, edx
                pop     esi
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___26       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_1_         proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = qword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                sub     eax, ecx
                mov     [esp+24h+var_14], esi
                mov     ebx, eax
                mov     [esp+24h+var_1C], eax
                xor     ebx, 0BB76D65Eh
                add     ecx, 85A09A3Ah
                movzx   eax, bl
                add     edx, ecx
                mov     ecx, [esp+24h+var_14]
                xor     edx, 0B4448EA6h
                push    edi
                push    offset dword_40A8A4
                mov     edi, [esi+eax*8-4E8h]
                mov     esi, [esi+eax*8-4E4h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+2Ch+var_10], ebx
                and     dword ptr [eax+edi-0B1h], 0
                and     dword ptr [eax+edi-0ADh], 0
                call    VBN_TransformContext
                xor     ebx, [ebp+arg_4]
                xor     eax, eax
                xor     ebx, [ebp+arg_0]
                inc     eax
                movzx   ecx, bl
                xor     edx, edx
                xor     ecx, 0A6h
                mov     [esp+28h+var_18], ebx
                call    __allshl
                xor     ecx, ecx
                and     dword ptr [eax+edi], 0
                and     dword ptr [eax+edi+4], 0
                mov     eax, ebx
                shr     eax, 8
                movzx   ebx, al
                mov     eax, [esp+28h+var_18]
                sub     ebx, 29h ; ')'
                shr     eax, 10h
                sub     al, 23h ; '#'
                movzx   eax, al
                cdq
                sub     ebx, eax
                sbb     ecx, edx
                add     ebx, edi
                mov     edi, [esp+28h+var_18]
                adc     ecx, esi
                mov     dword ptr [esp+28h+var_C], ebx
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                and     dword ptr [ebx], 0
                and     dword ptr [ebx+4], 0
                mov     dword ptr [esp+28h+var_C+4], ecx
                mov     ecx, [esp+28h+var_1C]
                lea     edx, [esi-7A5F65C6h]
                add     edx, [ebp+arg_4]
                xor     ecx, edx
                shr     eax, 4
                xor     ecx, [esp+28h+var_10]
                mov     ebx, ecx
                mov     [esp+28h+var_1C], ecx
                mov     ecx, [ebp+arg_4]
                xor     ebx, 0EC5D4097h
                shl     ecx, 4
                add     eax, ecx
                shr     edi, 18h
                mov     [esp+28h+var_4], eax
                sub     edi, 7Bh ; '{'
                xor     eax, [esp+28h+var_18]
                xor     eax, edx
                xor     esi, esi
                mov     [esp+28h+var_10], eax
                lea     eax, [ebx-3Dh]
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [ebp+arg_0]
                sbb     esi, edx
                add     edi, dword ptr [esp+28h+var_C]
                adc     esi, dword ptr [esp+28h+var_C+4]
                xor     edx, edx
                sub     al, byte ptr [ebp+arg_4]
                movzx   ecx, al
                mov     eax, [esp+28h+var_10]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+28h+var_14]
                xor     ecx, 0CDh
                mov     [ecx+eax], edi
                mov     [ecx+eax+4], esi
                mov     ecx, [esp+28h+var_4]
                xor     ecx, [esp+28h+var_1C]
                xor     ecx, [esp+28h+var_18]
                mov     eax, [esp+28h+var_10]
                xor     ecx, 0EC5D4097h
                pop     edi
                xor     eax, 3424B44h
                pop     esi
                or      edx, eax
                lea     eax, [ecx+0AC6FDDBh]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1_         endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002226 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                and     [esp+1Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                push    edi
                mov     edi, ecx
                movzx   edx, bl
                mov     eax, ebx
                mov     [esp+28h+var_C], edi
                shr     eax, 8
                movzx   ecx, ax
                mov     eax, [edx+edi-1]
                mov     edi, [ebp+arg_4]
                mov     edx, [eax+ecx-0EB31h]
                mov     ecx, ebx
                xor     ecx, 575032DAh
                mov     eax, edx
                cmp     ecx, edx
                setnbe  [esp+28h+var_15]
                sub     eax, ecx
                mov     [esp+28h+var_8], eax
                mov     eax, esi
                shl     eax, 4
                shr     edi, 4
                add     edi, eax
                mov     eax, esi
                sub     eax, [ebp+arg_4]
                xor     edi, ebx
                add     esi, 0F4569F61h
                mov     [esp+28h+var_14], eax
                xor     [esp+28h+var_14], 0A2E8F5A9h
                xor     esi, edi
                xor     esi, ebx
                mov     ebx, eax
                xor     ebx, esi
                mov     [esp+28h+var_10], esi
                mov     esi, [esp+28h+var_14]
                xor     ebx, esi
                xor     ebx, 57D67A9Bh
                mov     [esp+28h+var_14], ebx
                cmp     ecx, edx
                jbe     short loc_49E626
                xor     eax, eax
                xor     esi, 69BDB947h
                xor     edi, 50999D98h
                or      eax, esi
                jmp     short loc_49E63D
; ---------------------------------------------------------------------------

loc_49E626:                             ; CODE XREF: VBNCB_unnamed_80002226+92¡üj
                mov     ecx, [esp+28h+var_10]
                xor     eax, esi
                xor     eax, edi
                xor     ecx, 0BA3ACFD7h
                xor     edi, edi
                xor     eax, 8BE37ADDh
                or      edi, ecx

loc_49E63D:                             ; CODE XREF: VBNCB_unnamed_80002226+A4¡üj
                mov     edx, [esp+28h+var_C]
                movzx   ecx, bl
                mov     bl, [esp+28h+var_15]
                xor     ecx, 71h
                cmp     [esp+28h+var_8], 0
                mov     [edx+ecx*8], bl
                setz    bl
                mov     ecx, [esp+28h+var_14]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 49h
                mov     [edx+ecx*8], bl
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002226 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___134_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     eax, [edx-0B9D849Eh]
                mov     [ebp+var_4], ecx
                add     eax, esi
                add     edx, 94F15FCDh
                movzx   eax, al
                add     edx, 0EBDAE6A5h
                xor     eax, 5Bh
                add     edx, esi
                push    edi
                push    offset dword_40A490
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     eax, [edx-0B9D849Eh]
                add     eax, esi
                lea     ecx, [edx+237A8696h]
                xor     ecx, eax
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                sub     esi, 27h ; '''
                xor     al, 0Dh
                mov     [ebp+var_8], ecx
                xor     ecx, ecx
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, ebx
                mov     ebx, [ebp+arg_4]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                mov     ecx, [ebp+arg_0]
                lea     edx, [ebx+1DCE7C1Dh]
                lea     esi, [ebx-6B0EA033h]
                add     esi, ecx
                lea     eax, [ebx-0B9D849Eh]
                add     eax, ecx
                add     ebx, 0ADB72D79h
                add     ecx, ebx
                xor     edx, esi
                xor     ecx, [ebp+var_8]
                xor     edx, eax
                xor     ecx, esi
                xor     eax, eax
                pop     edi
                xor     ecx, 80E1D8FDh
                sub     edx, 191DE1A1h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___134_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800021a7 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, edi
                shl     eax, 4
                shr     esi, 4
                add     esi, eax
                mov     [esp+28h+var_10], ecx
                lea     ebx, [edi+257B46BDh]
                movzx   eax, bl
                lea     edx, [edi+64259170h]
                xor     edx, ebx
                mov     [esp+28h+var_14], edx
                movzx   ecx, dl
                mov     edx, [esp+28h+var_10]
                xor     ecx, 0D9h
                mov     eax, [eax+edx-43h]
                mov     ecx, [eax+ecx]
                mov     eax, esi
                xor     eax, 0FE7B5828h
                mov     edx, ecx
                cmp     eax, ecx
                setnbe  [esp+28h+var_19]
                sub     edx, eax
                mov     [esp+28h+var_8], edx
                mov     edx, [ebp+arg_0]
                add     edx, 9A4A2FD4h
                add     edx, edi
                xor     edx, esi
                xor     edx, ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 0C442E94Dh
                mov     [esp+28h+var_C], edx
                mov     edx, [esp+28h+var_14]
                add     ebx, edi
                xor     ebx, edx
                xor     ebx, esi
                lea     esi, [edi-725BE239h]
                mov     [esp+28h+var_18], esi
                mov     esi, [esp+28h+var_C]
                xor     [esp+28h+var_18], esi
                xor     [esp+28h+var_18], edx
                mov     edx, [esp+28h+var_18]
                xor     edx, ebx
                mov     [esp+28h+var_14], ebx
                lea     ebx, [edi+257B46BDh]
                xor     edx, ebx
                xor     edx, 3D51ADFAh
                cmp     eax, ecx
                jbe     short loc_49E81E
                mov     eax, [esp+28h+var_14]
                xor     edi, edi
                add     eax, 2CA3E149h
                xor     esi, 0C9B93F2Bh
                or      edi, eax
                jmp     short loc_49E842
; ---------------------------------------------------------------------------

loc_49E81E:                             ; CODE XREF: VBNCB_unnamed_800021a7+B7¡üj
                mov     eax, [ebp+arg_0]
                shl     edi, 4
                shr     eax, 4
                add     edi, eax
                mov     eax, [esp+28h+var_18]
                xor     edi, [esp+28h+var_14]
                xor     eax, 9BE54A6Bh
                xor     edi, esi
                xor     esi, esi
                xor     edi, 7A870931h
                or      esi, eax

loc_49E842:                             ; CODE XREF: VBNCB_unnamed_800021a7+CC¡üj
                mov     eax, [esp+28h+var_10]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, dl
                setz    bl
                shr     edx, 8
                mov     [eax+ecx*8-510h], bl
                movzx   ecx, dl
                mov     dl, [esp+28h+var_19]
                mov     [eax+ecx*8-658h], dl
                mov     eax, edi
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021a7 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___152_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                sub     eax, [ebp+arg_4]
                xor     eax, 0A8B7AA25h
                mov     [ebp+var_8], eax
                movzx   eax, al
                xor     eax, 3Dh
                push    edi
                mov     edi, ecx
                push    offset dword_40AA80
                mov     [ebp+var_10], edi
                mov     ecx, [eax+edi]
                mov     ebx, [eax+edi+4]
                mov     eax, esi
                mov     [ebp+var_C], ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_4], ecx
                lea     edx, [ecx+0F253DFFh]
                mov     ecx, edi
                call    VBN_TransformContext
                mov     edi, [ebp+arg_4]
                lea     ecx, [esi+43730BE9h]
                sub     edi, esi
                mov     [ebp+var_14], edi
                xor     edi, [ebp+var_8]
                xor     ecx, edi
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                sub     esi, 38h ; '8'
                xor     al, 6Ch
                xor     ecx, ecx
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_10]
                sbb     ecx, edx
                add     esi, [ebp+var_C]
                adc     ecx, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edi, 0C25B04DEh
                mov     eax, [ebp+var_14]
                xor     edx, edx
                xor     eax, [ebp+var_4]
                xor     eax, [ebp+var_8]
                xor     eax, 1984CF20h
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___152_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000232d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                push    edi
                mov     edi, ecx
                movzx   edx, bl
                xor     edx, 0BCh
                mov     [esp+28h+var_C], edi
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+edi]
                mov     edi, [ebp+arg_4]
                shr     edi, 4
                mov     edx, [eax+ecx+3Fh]
                mov     eax, esi
                shl     eax, 4
                mov     ecx, edx
                add     edi, eax
                mov     eax, edi
                xor     eax, 7B02ABA5h
                sub     ecx, eax
                cmp     eax, edx
                mov     [esp+28h+var_10], ecx
                mov     ecx, edi
                setnbe  [esp+28h+var_15]
                xor     ecx, ebx
                xor     ebx, ecx
                mov     [esp+28h+var_14], ecx
                mov     ecx, [ebp+arg_4]
                xor     ebx, edi
                add     ecx, 22B4716h
                xor     ecx, ebx
                xor     ecx, edi
                mov     [esp+28h+var_8], ecx
                cmp     eax, edx
                jbe     short loc_49E9D6
                mov     edx, [esp+28h+var_14]
                lea     eax, [edi+4BF87C3Eh]
                xor     esi, esi
                add     edx, 912699F3h
                or      esi, eax
                jmp     short loc_49E9EF
; ---------------------------------------------------------------------------

loc_49E9D6:                             ; CODE XREF: VBNCB_unnamed_8000232d+7E¡üj
                sub     esi, [ebp+arg_4]
                xor     edx, edx
                xor     esi, edi
                xor     ebx, 3545369Eh
                xor     esi, [esp+28h+var_14]
                xor     esi, 0C0E27354h
                or      edx, ebx

loc_49E9EF:                             ; CODE XREF: VBNCB_unnamed_8000232d+94¡üj
                cmp     [esp+28h+var_10], 0
                mov     edi, [esp+28h+var_C]
                mov     eax, [esp+28h+var_8]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 6Eh
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_15]
                xor     ecx, 0A9h
                mov     [edi+ecx*8], al
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000232d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__7       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx
                sub     ebx, [ebp+arg_0]
                movzx   eax, bl
                and     [esp+18h+var_4], 0
                push    esi
                push    edi
                mov     ecx, [eax+edx+4Ah]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Fh
                mov     [esp+20h+var_10], edx
                push    offset dword_40A74C
                mov     edi, [edx+eax*8]
                mov     eax, ebx
                shr     eax, 10h
                xor     eax, 1E60h
                mov     esi, [eax+ecx]
                mov     eax, [ebp+arg_4]
                mov     ecx, [esp+24h+var_10]
                add     eax, 26C8F15Bh
                xor     eax, ebx
                mov     edx, eax
                mov     [esp+24h+var_C], eax
                xor     edx, 0E29564FCh
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                lea     edx, [ecx-0B956E1Eh]
                add     ecx, 0C36074D3h
                add     eax, ecx
                xor     edx, eax
                mov     ecx, edx
                mov     edx, [ebp+arg_0]
                add     edx, 124B7288h
                xor     ecx, ebx
                mov     ebx, [ebp+arg_4]
                add     edx, ebx
                xor     edx, [esp+20h+var_C]
                xor     edx, eax
                mov     [esp+20h+var_14], ecx
                movzx   eax, al
                sub     edi, eax
                mov     [esp+20h+var_10], edx
                sub     edi, esi
                add     edi, 0B8h
                jz      short loc_49EAEF
                mov     eax, [esp+20h+var_10]
                xor     edx, edx
                xor     eax, 0A58E8319h
                xor     ecx, 0B6164568h
                or      edx, eax
                jmp     short loc_49EB1D
; ---------------------------------------------------------------------------

loc_49EAEF:                             ; CODE XREF: vBng_h__7+A8¡üj
                mov     eax, [ebp+arg_0]
                mov     edx, ebx
                xor     ebx, [ebp+arg_0]
                xor     ebx, [esp+20h+var_14]
                xor     ebx, [esp+20h+var_C]
                shl     edx, 4
                xor     ebx, 1663DCAFh
                shr     eax, 4
                add     edx, eax
                xor     edx, [esp+20h+var_10]
                xor     edx, ecx
                xor     ecx, ecx
                xor     edx, 0EEB931B0h
                or      ecx, ebx

loc_49EB1D:                             ; CODE XREF: vBng_h__7+BD¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__7       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001ff1 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                and     [esp+20h+var_4], 0
                push    esi
                mov     [esp+24h+var_14], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                shl     ebx, 4
                lea     esi, [ecx-7AD67A72h]
                add     ebx, eax
                add     esi, edi
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+28h+var_14]
                mov     eax, [edx+eax-9Ch]
                mov     edx, [eax+ecx+1]
                lea     ecx, [esi-7F2C0F98h]
                mov     eax, edx
                sub     eax, ecx
                cmp     ecx, edx
                mov     [esp+28h+var_8], eax
                mov     eax, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                sub     eax, edi
                mov     [esp+28h+var_18], eax
                xor     eax, esi
                xor     [esp+28h+var_18], ebx
                xor     eax, ebx
                xor     [esp+28h+var_18], 9F9C8485h
                xor     eax, 886EDF8Ch
                mov     [esp+28h+var_C], eax
                mov     ebx, edi
                mov     eax, edi
                shr     ebx, 4
                xor     eax, [ebp+arg_0]
                xor     eax, [esp+28h+var_18]
                xor     eax, esi
                mov     [esp+28h+var_10], eax
                mov     eax, [ebp+arg_0]
                mov     esi, [esp+28h+var_10]
                shl     eax, 4
                add     ebx, eax
                mov     eax, [esp+28h+var_C]
                xor     ebx, esi
                xor     ebx, eax
                mov     [esp+28h+var_C], ebx
                cmp     ecx, edx
                jbe     short loc_49EBF7
                mov     edx, [esp+28h+var_18]
                xor     edi, edi
                xor     eax, 899B6065h
                add     edx, 1865CAD3h
                or      edi, eax
                jmp     short loc_49EC10
; ---------------------------------------------------------------------------

loc_49EBF7:                             ; CODE XREF: VBNCB_unnamed_80001ff1+B0¡üj
                xor     edi, [ebp+arg_0]
                xor     edx, edx
                xor     edi, eax
                xor     esi, 41BFBF98h
                xor     edi, [esp+28h+var_18]
                add     edi, 218922C9h
                or      edx, esi

loc_49EC10:                             ; CODE XREF: VBNCB_unnamed_80001ff1+C5¡üj
                mov     esi, [esp+28h+var_14]
                mov     al, [esp+28h+var_19]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, bl
                setz    bl
                mov     [esi+ecx*8-350h], al
                mov     eax, [esp+28h+var_C]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                pop     edi
                mov     [esi+ecx*8-340h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001ff1 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___44       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shr     edx, 4
                add     edx, eax
                mov     [esp+60h+var_4C], ecx
                mov     eax, ebx
                mov     [esp+60h+var_38], edx
                sub     eax, edi
                xor     eax, 0E246CDC6h
                mov     [esp+60h+var_50], eax
                lea     eax, [edi+2BF06FB7h]
                xor     eax, edx
                mov     [esp+60h+var_48], eax
                movzx   eax, dl
                xor     eax, 0A4h
                push    offset sub_40BC9C
                mov     esi, [eax+ecx]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Bh
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+64h+var_14], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+64h+var_14+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-4F8h]
                mov     dword ptr [esp+64h+var_34], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     eax, [ecx+eax*8-4F4h]
                mov     dword ptr [esp+64h+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     edx, ecx
                xor     eax, 79h
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     [esp+64h+var_24], eax
                mov     eax, [esp+64h+var_50]
                movzx   eax, al
                xor     eax, 0F3h
                mov     [esp+64h+var_28], ecx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     edx, [esp+64h+var_48]
                mov     [esp+64h+var_20], ecx
                mov     ecx, [esp+64h+var_4C]
                mov     [esp+64h+var_1C], eax
                lea     edx, [edx-748FE9F2h]
                call    VBN_TransformContext
                mov     edx, [esp+60h+var_38]
                lea     eax, [ebx-76CFF7FBh]
                xor     eax, [esp+60h+var_50]
                mov     ecx, edi
                xor     eax, edx
                shl     ecx, 4
                mov     [esp+60h+var_40], eax
                movzx   eax, al
                mov     [esp+60h+var_C], eax
                mov     eax, [eax+esi-3Bh]
                mov     [esp+60h+var_18], eax
                mov     eax, ebx
                shr     eax, 4
                add     ecx, eax
                mov     esi, ecx
                xor     ecx, [esp+60h+var_40]
                xor     esi, [esp+60h+var_48]
                xor     esi, [esp+60h+var_50]
                xor     ecx, [esp+60h+var_48]
                mov     [esp+60h+var_38], ecx
                lea     ecx, [ebx+12CDD43Ch]
                mov     [esp+60h+var_8], esi
                mov     eax, [esp+60h+var_38]
                add     ecx, edi
                xor     eax, esi
                xor     ecx, esi
                xor     ecx, [esp+60h+var_40]
                xor     eax, edx
                xor     eax, 57A03A24h
                mov     [esp+60h+var_2C], ecx
                mov     [esp+60h+var_44], eax
                mov     eax, ecx
                xor     eax, [esp+60h+var_38]
                xor     eax, [esp+60h+var_50]
                xor     eax, edx
                mov     [esp+60h+var_3C], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 69h
                xor     al, 0F3h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+60h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+60h+var_44]
                sbb     edx, edi
                add     ebx, dword ptr [esp+60h+var_34]
                mov     edi, [esp+60h+var_4C]
                adc     edx, dword ptr [esp+60h+var_34+4]
                xor     eax, 9D33B2A0h
                xor     ecx, ecx
                xor     esi, 917329B4h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+60h+var_44]
                xor     ecx, [esp+60h+var_2C]
                xor     ecx, [esp+60h+var_48]
                xor     ecx, [esp+60h+var_50]
                movzx   eax, cl
                xor     eax, 83h
                mov     [ebx+4], esi
                mov     [edi+eax*8+4], edx
                mov     edx, [esp+60h+var_28]
                mov     [edi+eax*8], ebx
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Fh
                mov     [eax+edi], edx
                mov     edx, [esp+60h+var_24]
                mov     [eax+edi+4], edx
                mov     eax, ecx
                mov     edx, [esp+60h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0E9h
                mov     [edi+eax*8-278h], edx
                mov     edx, [esp+60h+var_1C]
                mov     [edi+eax*8-274h], edx
                mov     eax, [esp+60h+var_18]
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                mov     eax, [esp+60h+var_40]
                mov     ecx, [esp+60h+var_48]
                shr     eax, 8
                xor     al, 3Eh
                movzx   esi, cl
                mov     ecx, [esp+60h+var_44]
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+60h+var_14]
                movzx   ecx, cl
                adc     edx, dword ptr [esp+60h+var_14+4]
                xor     esi, ecx
                mov     ecx, [esp+60h+var_3C]
                movzx   ecx, cl
                xor     esi, ecx
                mov     ecx, [esp+60h+var_38]
                xor     esi, 62h
                xor     esi, [esp+60h+var_C]
                add     ecx, 0BCD23E07h
                mov     [edi+esi*8], eax
                xor     eax, eax
                mov     [edi+esi*8+4], edx
                mov     edx, [esp+60h+var_8]
                pop     edi
                pop     esi
                add     edx, 2CBCE0D8h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___44       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___137_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                push    ebx
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                mov     [ebp+var_C], ecx
                movzx   eax, dl
                push    esi
                push    edi
                mov     [ebp+var_4], edx
                xor     edx, 0F8F3E0CBh
                mov     ebx, [eax+ecx-40h]
                mov     edi, [eax+ecx-3Ch]
                push    offset dword_40A5E8
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 0CCh
                shr     eax, 10h
                add     al, 3
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                add     esi, ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                xor     ebx, [ebp+arg_0]
                mov     [eax+1BCh], ecx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_4]
                xor     ebx, ecx
                shr     edx, 4
                xor     ebx, ecx
                shl     eax, 4
                xor     ebx, 2D3F1A3Dh
                add     edx, eax
                xor     eax, eax
                xor     edx, ecx
                pop     edi
                sub     edx, 4ECEF271h
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___137_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___7        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     ebx, ecx
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+58h+var_48], edi
                movzx   eax, bl
                lea     edx, [ecx-597D80DFh]
                add     edx, esi
                mov     [esp+58h+var_4C], edx
                mov     ecx, [eax+edi-2Eh]
                mov     eax, [eax+edi-2Ah]
                mov     [esp+58h+var_28], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D1h
                mov     [esp+58h+var_2C], ecx
                push    offset dword_40C760
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [edi+eax*8-568h]
                mov     eax, [edi+eax*8-564h]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                movzx   eax, dl
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, [eax+edi+1Eh]
                mov     eax, [eax+edi+22h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, [esp+5Ch+var_4C]
                xor     edx, 0CCh
                shr     eax, 8
                mov     [esp+5Ch+var_20], ecx
                movzx   ecx, al
                mov     eax, [edi+edx*8]
                mov     edi, esi
                xor     edi, [ebp+arg_4]
                xor     edi, ebx
                mov     [esp+5Ch+var_24], edi
                mov     eax, [eax+ecx+2]
                mov     ecx, [esp+5Ch+var_48]
                lea     edx, [edi-2D10DC00h]
                mov     [esp+5Ch+var_C], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     ecx, [esi+67917469h]
                mov     eax, [ebp+arg_4]
                add     ecx, edx
                xor     ecx, [esp+58h+var_4C]
                sub     eax, esi
                xor     ecx, ebx
                add     edx, 0AA5C9BC4h
                xor     eax, ecx
                mov     [esp+58h+var_18], ecx
                xor     eax, edi
                add     edx, esi
                mov     [esp+58h+var_40], eax
                xor     edx, edi
                xor     edx, [esp+58h+var_4C]
                lea     eax, [esi+145CDA15h]
                xor     eax, edx
                mov     [esp+58h+var_8], edx
                xor     eax, ecx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, edx
                mov     [esp+58h+var_34], eax
                xor     ecx, ebx
                xor     ecx, 0D4F91479h
                mov     [esp+58h+var_44], ecx
                mov     ecx, eax
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, ebx
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     cl, 0Dh
                xor     al, 60h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_44]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_3C]
                mov     edi, [esp+58h+var_34]
                adc     edx, dword ptr [esp+58h+var_3C+4]
                xor     ecx, ecx
                xor     eax, 4E3D1BFAh
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-3165B351h]
                mov     ecx, [esp+58h+var_30]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0D7h
                mov     [esi+eax*8-580h], ebx
                mov     ebx, [esp+58h+var_44]
                mov     [esi+eax*8-57Ch], edx
                xor     ebx, edi
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_4C]
                mov     eax, [esp+58h+var_2C]
                mov     [ecx+esi], eax
                mov     eax, [esp+58h+var_28]
                mov     [ecx+esi+4], eax
                mov     ecx, [esp+58h+var_20]
                movzx   eax, bl
                pop     edi
                mov     [esi+eax*8+0F0h], ecx
                mov     ecx, [esp+54h+var_1C]
                mov     [esi+eax*8+0F4h], ecx
                xor     ecx, ecx
                mov     eax, [esp+54h+var_18]
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 16h
                add     edx, dword ptr [esp+54h+var_14]
                adc     ecx, dword ptr [esp+54h+var_14+4]
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 10h
                mov     [esi+eax*8-0DCh], ecx
                mov     ecx, [esp+54h+var_C]
                mov     [esi+eax*8-0E0h], edx
                mov     edx, [esp+54h+var_8]
                movzx   eax, bl
                add     edx, 0D2357A0Bh
                and     dword ptr [esi+eax*8-10Ch], 0
                mov     [esi+eax*8-110h], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_40]
                xor     ecx, 77655C26h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___7        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___163_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     edx, [ebp+arg_4]
                push    ebx
                and     [ebp+var_14], 0
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                push    offset dword_40BC30
                lea     eax, [edx+esi]
                mov     [ebp+var_C], edi
                mov     [ebp+var_10], eax
                add     eax, 9CEA88FEh
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     ecx, [eax+edi+4]
                mov     ebx, [eax+edi+8]
                mov     eax, esi
                mov     [ebp+var_8], ecx
                mov     ecx, edx
                shr     ecx, 4
                xor     edx, esi
                shl     eax, 4
                add     ecx, eax
                xor     edx, ecx
                mov     [ebp+var_14], ecx
                xor     edx, [ebp+var_4]
                mov     ecx, edi
                add     edx, 524D0A4h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 34h
                shr     ecx, 10h
                movzx   eax, al
                sub     cl, 28h ; '('
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_14]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                xor     edx, edx
                mov     eax, [ebp+var_10]
                xor     ecx, 21584F7Bh
                add     eax, 7D62CC5Fh
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                xor     eax, 0BA3974F4h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___163_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__22      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                push    offset dword_40A840
                lea     ebx, [edi+30C36C79h]
                add     ebx, [ebp+arg_4]
                movzx   eax, bl
                xor     eax, 0ACh
                mov     edx, [ecx+eax*8]
                mov     eax, edi
                sub     eax, [ebp+arg_4]
                mov     esi, eax
                mov     [esp+24h+var_10], edx
                xor     esi, 44D227A0h
                mov     [esp+24h+var_C], eax
                lea     edx, [esi+0AC470Bh]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, ebx
                xor     eax, ecx
                xor     eax, edi
                add     edi, 31A1305Dh
                mov     [esp+20h+var_8], eax
                xor     edi, esi
                lea     edx, [ecx+560A50E2h]
                xor     edi, ebx
                xor     edx, eax
                movzx   eax, al
                xor     edx, esi
                mov     esi, [esp+20h+var_10]
                mov     ecx, [eax+esi-37h]
                xor     ecx, edi
                movzx   eax, dl
                xor     ecx, 88A841A4h
                mov     [eax+esi-75h], ecx
                mov     eax, [ebp+arg_4]
                mov     ecx, [esp+20h+var_C]
                add     eax, 2789EF82h
                xor     eax, edx
                xor     ecx, edi
                xor     ecx, [esp+20h+var_8]
                xor     eax, edi
                pop     edi
                xor     edx, edx
                xor     ecx, 0AAAE7125h
                pop     esi
                xor     eax, 0FE13D3FFh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__22      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___170_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                lea     ebx, [eax-65BE7201h]
                lea     esi, [edx+0F98B68Ch]
                mov     [ebp+var_4], ebx
                add     esi, eax
                mov     ebx, eax
                mov     eax, edx
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                xor     ebx, [ebp+var_4]
                push    edi
                mov     edi, ecx
                lea     ecx, [edx-48AD7DC8h]
                xor     ebx, ecx
                mov     [ebp+var_8], edi
                xor     esi, ecx
                mov     eax, ebx
                shr     eax, 8
                add     al, 3
                movzx   ecx, cl
                movzx   eax, al
                cdq
                mov     [ebp+var_C], esi
                mov     esi, [ecx+edi+99h]
                mov     edi, [ecx+edi+9Dh]
                sub     esi, eax
                mov     ecx, [ebp+var_8]
                sbb     edi, edx
                movzx   eax, bl
                mov     edx, [ebp+arg_0]
                sub     eax, 3Eh ; '>'
                mov     ebx, [ebp+var_C]
                add     esi, eax
                push    offset dword_40C2B0
                adc     edi, 0
                sub     edx, [ebp+arg_4]
                xor     edx, ebx
                xor     edx, [ebp+var_4]
                xor     edx, 66E9F520h
                add     edx, 4A69BC7Bh
                call    VBN_TransformContext
                mov     eax, [ebp+var_8]
                xor     ebx, 5A8F0F0Eh
                mov     edx, [ebp+var_4]
                xor     edx, 0D32731F7h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___170_stk  endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___166_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                push    edi
                mov     edi, ecx
                shr     eax, 4
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                shl     edx, 4
                add     edx, eax
                mov     [ebp+var_8], edi
                movzx   eax, dl
                push    offset sub_40A730
                mov     ebx, [eax+edi-40h]
                mov     edi, [eax+edi-3Ch]
                lea     eax, [esi+20A398E2h]
                mov     [ebp+var_C], eax
                lea     eax, [ecx-6BAC1A03h]
                shr     ecx, 4
                xor     eax, edx
                shl     esi, 4
                add     ecx, esi
                mov     [ebp+var_10], eax
                xor     ecx, [ebp+var_C]
                xor     ecx, edx
                xor     edx, eax
                xor     edx, [ebp+var_C]
                mov     [ebp+var_4], ecx
                xor     edx, 16D1C486h
                mov     ecx, [ebp+var_8]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                shr     eax, 8
                sub     al, 4Ah ; 'J'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_4]
                xor     al, 18h
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_8]
                sbb     edx, esi
                add     eax, ebx
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_10]
                mov     edx, [ebp+var_C]
                xor     ecx, 1194D7FEh
                pop     edi
                pop     esi
                xor     edx, 49FB1443h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___166_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___101      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shl     eax, 4
                mov     [esp+44h+var_44], ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     ecx, ebx
                push    esi
                shr     ecx, 4
                mov     esi, ebx
                add     eax, ecx
                and     [esp+4Ch+var_4], 0
                mov     [esp+4Ch+var_40], eax
                sub     esi, edx
                mov     ecx, esi
                mov     [esp+4Ch+var_38], esi
                mov     esi, [esp+4Ch+var_44]
                xor     edx, ebx
                xor     edx, ecx
                movzx   eax, cl
                mov     [esp+4Ch+var_3C], edx
                push    edi
                push    offset dword_40A430
                mov     edx, [eax+esi-0A0h]
                mov     eax, [eax+esi-9Ch]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Bh
                mov     dword ptr [esp+54h+var_34], edx
                mov     edi, [eax+esi]
                mov     eax, ecx
                shr     eax, 18h
                mov     edx, [esi+eax*8-5F8h]
                mov     eax, [esi+eax*8-5F4h]
                mov     dword ptr [esp+54h+var_20+4], eax
                mov     eax, [esp+54h+var_40]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D4h
                mov     dword ptr [esp+54h+var_20], edx
                mov     edx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_10], eax
                mov     eax, ecx
                mov     ecx, [esp+54h+var_44]
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+54h+var_14], edx
                mov     edx, [esp+54h+var_40]
                mov     esi, [eax+esi+9Ah]
                movzx   eax, dl
                xor     edx, 82046BF7h
                xor     eax, 0F4h
                mov     ecx, [eax+ecx]
                mov     [esp+54h+var_2C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [eax+ecx+4]
                mov     [esp+54h+var_28], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                lea     edx, [ebx+141EE74Bh]
                mov     eax, [esp+50h+var_3C]
                add     edx, ecx
                mov     ebx, [esp+50h+var_40]
                xor     edx, eax
                xor     eax, 0FC0FF6h
                xor     edx, ebx
                add     eax, esi
                mov     [esp+50h+var_24], edx
                mov     eax, [edi+eax*4]
                lea     edi, [ecx-2D1011CAh]
                mov     ecx, [esp+50h+var_3C]
                xor     edi, edx
                xor     ecx, edx
                mov     [esp+50h+var_C], eax
                xor     ecx, [esp+50h+var_38]
                xor     edi, ebx
                mov     [esp+50h+var_8], edi
                xor     ecx, 6B835AF1h
                mov     eax, edi
                mov     [esp+50h+var_18], ecx
                xor     eax, [esp+50h+var_3C]
                xor     esi, esi
                xor     eax, ebx
                mov     ebx, ecx
                xor     [esp+50h+var_38], eax
                xor     ebx, edi
                xor     ebx, [esp+50h+var_3C]
                xor     ebx, [esp+50h+var_40]
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 8Dh
                xor     al, 0D2h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                lea     edx, [ecx+363F5076h]
                adc     esi, dword ptr [esp+50h+var_34+4]
                xor     eax, 0E3791DA3h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_44]
                shr     eax, 10h
                movzx   eax, al
                mov     [edx+eax*8-5C8h], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edx+eax*8-5C4h], ecx
                mov     eax, [esp+50h+var_24]
                mov     ecx, [esp+50h+var_44]
                xor     al, 0BBh
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+50h+var_20]
                adc     edx, dword ptr [esp+50h+var_20+4]
                shr     ebx, 18h
                xor     ebx, 2Fh
                mov     [ecx+ebx*8], eax
                mov     [ecx+ebx*8+4], edx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_18]
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_3C]
                mov     ebx, [esp+50h+var_44]
                mov     edx, [esp+50h+var_14]
                movzx   eax, cl
                mov     [eax+ebx-49h], edx
                mov     edx, [esp+50h+var_10]
                mov     [eax+ebx-45h], edx
                mov     eax, ecx
                shr     eax, 8
                mov     edx, ebx
                movzx   eax, al
                xor     eax, 0FEh
                shr     ecx, 10h
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                movzx   eax, cl
                mov     ecx, [esp+50h+var_C]
                pop     edi
                pop     esi
                and     dword ptr [edx+eax*8-464h], 0
                mov     [edx+eax*8-468h], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_8]
                mov     edx, [esp+48h+var_3C]
                add     ecx, 95EF107Bh
                xor     edx, 7415028Fh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___101      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng_1          proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     ecx, ebx
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     [ebp+var_4], edx
                mov     eax, ecx
                mov     [ebp+var_8], ecx
                shr     eax, 8
                movzx   eax, al
                push    esi
                push    edi
                push    offset dword_40A950
                mov     edi, [edx+eax*8+148h]
                mov     eax, [edx+eax*8+14Ch]
                mov     [ebp+var_10], eax
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                mov     [ebp+var_C], edi
                mov     esi, [eax+edx-0Ah]
                lea     edx, [ebx-5D4EC3AAh]
                call    VBN_TransformContext
                mov     eax, [edi]
                mov     edi, [edi+4]
                mov     [ebp+var_14], eax
                mov     eax, [ebp+arg_0]
                add     eax, 128637EFh
                add     ebx, eax
                xor     ebx, [ebp+var_8]
                push    esi             ; Size
                Call crt_malloc
                mov     esi, [ebp+var_4]
                mov     edx, [ebp+var_C]
                pop     ecx
                movzx   ecx, bl
                and     dword ptr [ecx+esi-4Ch], 0
                add     edx, 8
                mov     [ecx+esi-50h], eax
                mov     eax, [ebp+var_10]
                adc     eax, 0
                shr     ebx, 8
                movzx   ecx, bl
                mov     [ecx+esi+15h], edx
                mov     edx, edi
                pop     edi
                mov     [ecx+esi+19h], eax
                mov     eax, [ebp+var_14]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1          endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___71       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, ecx
                mov     ebx, esi
                mov     ecx, [ebp+arg_0]
                sub     edx, ecx
                mov     eax, ecx
                shr     ebx, 4
                shl     eax, 4
                add     esi, ecx
                add     ebx, eax
                mov     [esp+58h+var_48], edi
                movzx   eax, dl
                xor     eax, 6Bh
                mov     [esp+58h+var_44], ebx
                mov     [esp+58h+var_40], edx
                mov     ecx, [esp+58h+var_48]
                push    offset dword_40C85C
                mov     ebx, [edi+eax*8]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0ECh
                mov     edi, [eax+edi]
                mov     [esp+5Ch+var_14], edi
                mov     edi, [esp+5Ch+var_48]
                mov     eax, [eax+edi+4]
                mov     [esp+5Ch+var_10], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0F4h
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 52h
                mov     dword ptr [esp+5Ch+var_1C], edx
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                mov     eax, [esp+5Ch+var_44]
                movzx   eax, al
                xor     eax, 7Ch
                mov     dword ptr [esp+5Ch+var_38], edx
                mov     edx, [esp+5Ch+var_48]
                mov     edi, [eax+edi]
                mov     eax, [esp+5Ch+var_40]
                shr     eax, 8
                movzx   eax, al
                mov     edx, [edx+eax*8-620h]
                mov     dword ptr [esp+5Ch+var_30], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [edx+eax*8-61Ch]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                lea     eax, [esi+2FD1E28h]
                xor     eax, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_3C], eax
                lea     edx, [eax+373ADBE3h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     eax, [esp+58h+var_44]
                mov     edx, ecx
                xor     edx, eax
                shr     eax, 10h
                xor     edx, [esp+58h+var_40]
                movzx   eax, al
                xor     eax, 94h
                mov     [esp+58h+var_20], edx
                add     eax, edi
                lea     edi, [esi-220A34F1h]
                mov     eax, [ebx+eax*4]
                mov     [esp+58h+var_28], eax
                xor     edi, [esp+58h+var_3C]
                xor     edi, [esp+58h+var_44]
                mov     esi, [ebp+arg_4]
                xor     ecx, edi
                xor     ecx, edx
                mov     [esp+58h+var_C], edi
                add     esi, 0E8567723h
                mov     [esp+58h+var_24], ecx
                xor     esi, edx
                mov     ebx, ecx
                xor     esi, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_40]
                xor     ebx, esi
                xor     ebx, [esp+58h+var_44]
                mov     eax, esi
                xor     eax, edi
                mov     [esp+58h+var_8], esi
                xor     eax, edx
                xor     ebx, edx
                xor     eax, 6D4DE73Bh
                movzx   edi, bl
                mov     [esp+58h+var_40], eax
                xor     esi, esi
                mov     eax, ebx
                sub     edi, 0FAh
                shr     eax, 8
                sub     al, 42h ; 'B'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_38]
                lea     edx, [ecx+32F2E7EAh]
                adc     esi, dword ptr [esp+58h+var_38+4]
                xor     eax, 671D084Dh
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_38+4], esi
                or      ecx, eax
                mov     esi, [esp+58h+var_48]
                mov     [edi], ecx
                mov     eax, ebx
                mov     ecx, dword ptr [esp+58h+var_30]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3Fh
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                shr     ebx, 18h
                mov     [edx+eax*8], ecx
                mov     ecx, dword ptr [esp+58h+var_30+4]
                mov     [edx+eax*8+4], ecx
                and     dword ptr [edx+ebx*8-2ACh], 0
                mov     eax, [esp+58h+var_28]
                mov     [edx+ebx*8-2B0h], eax
                mov     eax, [esp+58h+var_20]
                mov     ebx, [esp+58h+var_40]
                xor     al, 2Eh
                xor     ebx, [esp+58h+var_24]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_1C+4]
                xor     ecx, 14h
                mov     [esi+ecx*8], eax
                mov     eax, esi
                mov     [eax+ecx*8+4], edx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_14]
                mov     edx, esi
                mov     esi, dword ptr [esp+58h+var_38+4]
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 10h
                mov     [edx+eax*8-450h], edi
                mov     [edx+eax*8-44Ch], esi
                movzx   eax, bl
                xor     eax, 0CFh
                mov     [eax+edx], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [eax+edx+4], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                mov     edx, [esp+58h+var_C]
                add     ecx, 1B3BF6DCh
                pop     edi
                pop     esi
                xor     edx, 84DD74BFh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___71       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___65_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                mov     [ebp+var_4], ecx
                mov     ecx, edx
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     eax, [esi+6AB0B297h]
                push    edi
                mov     edi, edx
                add     eax, edx
                sub     edi, esi
                shl     edx, 4
                xor     eax, ecx
                shr     esi, 4
                add     edx, esi
                mov     [ebp+var_C], eax
                mov     esi, [ebp+var_4]
                mov     ebx, edx
                xor     edx, [ebp+var_C]
                xor     ebx, edi
                movzx   eax, cl
                xor     ebx, ecx
                mov     [ebp+var_8], edi
                xor     edx, [ebp+var_8]
                push    offset dword_40C510
                mov     ecx, [eax+esi-3Bh]
                sub     edx, 2D71FF70h
                mov     edi, [eax+esi-37h]
                mov     [ebp+var_10], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                xor     al, 0EDh
                sub     esi, 0AFh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, 0E8A8E9E8h
                mov     ecx, [ebp+var_C]
                xor     eax, eax
                pop     edi
                add     ecx, 0F59C87B0h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___65_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___32_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                and     [ebp+var_14], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                sub     eax, edi
                mov     [ebp+var_8], eax
                mov     esi, edi
                movzx   eax, al
                xor     esi, ebx
                mov     [ebp+var_4], edx
                push    offset dword_40BC20
                mov     [ebp+var_14], esi
                mov     ecx, [eax+edx+51h]
                mov     eax, [eax+edx+55h]
                lea     edx, [esi+4BE8F64Dh]
                mov     [ebp+var_C], ecx
                mov     ecx, [ebp+var_4]
                mov     [ebp+var_10], eax
                call    VBN_TransformContext
                sub     edi, ebx
                add     ebx, 2EDF4DACh
                xor     edi, [ebp+var_8]
                xor     edi, 0E24153C0h
                xor     ebx, edi
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 32h
                shr     eax, 8
                add     eax, 176Eh
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, [ebp+var_10]
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                add     eax, 7EA4022Dh
                mov     [ecx+1BCh], edx
                xor     eax, [ebp+var_14]
                lea     ecx, [edi-3EB9BB63h]
                xor     eax, [ebp+var_8]
                xor     edx, edx
                pop     edi
                pop     esi
                xor     eax, 46B5C30Eh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___32_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___175      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                mov     eax, [ebp+arg_0]
                xor     edx, edx
                shl     eax, 4
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+44h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+48h+var_38], esi
                mov     eax, ebx
                mov     [esp+48h+var_30], ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+esi+55h]
                mov     eax, [eax+esi+59h]
                mov     [esp+48h+var_C], eax
                movzx   eax, bl
                xor     eax, 0F2h
                mov     [esp+48h+var_10], ecx
                mov     eax, [ecx+eax*2]
                mov     [esp+48h+var_24], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, eax
                add     eax, 0FFFFFF55h
                xor     ecx, 0CBh
                add     eax, [ecx+esi]
                mov     [esp+48h+var_2C], eax
                adc     edx, [ecx+esi+4]
                movzx   eax, bl
                mov     [esp+48h+var_28], edx
                mov     edx, [ebp+arg_0]
                mov     ecx, [eax+esi+28h]
                mov     eax, [eax+esi+2Ch]
                mov     [esp+48h+var_1C], ecx
                lea     ecx, [edx-0D07F98Fh]
                add     ecx, edi
                mov     [esp+48h+var_18], eax
                xor     ecx, ebx
                mov     eax, edi
                sub     eax, edx
                mov     [esp+48h+var_14], ecx
                mov     ebx, edx
                mov     [esp+48h+var_8], eax
                mov     edx, [esp+48h+var_30]
                xor     ebx, edi
                xor     ebx, ecx
                mov     esi, edx
                xor     esi, eax
                xor     ebx, edx
                xor     esi, ecx
                mov     ecx, [ebp+arg_0]
                sub     ecx, edi
                mov     edi, [esp+48h+var_38]
                xor     ecx, ebx
                xor     ecx, eax
                mov     eax, ebx
                xor     ecx, 7B2CB71Fh
                shr     eax, 8
                mov     [esp+48h+var_34], ecx
                xor     al, 0F2h
                mov     ecx, edx
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 4Eh
                cdq
                mov     edi, [ecx+edi]
                sub     edi, eax
                mov     eax, [esp+48h+var_38]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                sub     eax, 89h
                add     edi, eax
                adc     ecx, 0
                mov     [esp+48h+var_20], ecx
                mov     ecx, [esp+48h+var_38]
                mov     eax, esi
                xor     eax, ebx
                mov     ebx, [esp+48h+var_30]
                xor     eax, ebx
                mov     edx, eax
                mov     [esp+48h+var_30], eax
                push    offset dword_40A98C
                xor     edx, 5305A0EFh
                call    VBN_TransformContext
                mov     eax, [esp+48h+var_34]
                lea     edx, [esi-1CBC7344h]
                add     eax, 455122C6h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+48h+var_34]
                xor     ecx, esi
                mov     [edi+4], edx
                mov     esi, [esp+48h+var_38]
                xor     ecx, ebx
                mov     edx, [esp+48h+var_2C]
                xor     ecx, ebx
                movzx   eax, cl
                mov     [esi+eax*8+0B0h], edx
                mov     edx, [esp+48h+var_28]
                mov     [esi+eax*8+0B4h], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_24]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [esi+eax*8-54Ch], 0
                mov     [esi+eax*8-550h], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 8Ah
                mov     [esi+eax*8-534h], edx
                mov     edx, [esp+48h+var_14]
                mov     [esi+eax*8-538h], edi
                mov     eax, [esp+48h+var_1C]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+48h+var_18]
                mov     [esi+ecx*8+4], eax
                mov     eax, [esp+48h+var_30]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                movzx   eax, dl
                xor     ecx, eax
                xor     edx, 472FF29Ch
                mov     eax, [esp+48h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+48h+var_10]
                xor     ecx, 5Ah
                pop     edi
                mov     [ecx+esi-0Fh], eax
                mov     eax, [esp+44h+var_C]
                mov     [ecx+esi-0Bh], eax
                xor     eax, eax
                mov     ecx, [esp+44h+var_8]
                xor     ecx, 0BF864790h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___175      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___94       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                sub     eax, ecx
                mov     [esp+54h+var_3C], esi
                xor     eax, 5EE313B3h
                shl     ecx, 4
                mov     [esp+54h+var_40], eax
                lea     edx, [ebx-27370E7Dh]
                mov     eax, ebx
                mov     [esp+54h+var_38], edx
                shr     eax, 4
                add     ecx, eax
                movzx   eax, dl
                xor     ecx, edx
                mov     [esp+54h+var_48], ecx
                push    edi
                mov     ecx, [eax+esi-2Fh]
                mov     eax, [eax+esi-2Bh]
                mov     [esp+58h+var_28], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+58h+var_2C], ecx
                push    offset dword_40C188
                mov     ecx, [eax+esi-4Dh]
                mov     eax, [eax+esi-49h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 43h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     edi, [eax+esi]
                mov     eax, edx
                shr     eax, 18h
                mov     ecx, [eax+esi+32h]
                mov     eax, [eax+esi+36h]
                mov     [esp+5Ch+var_1C], eax
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_40]
                movzx   eax, cl
                mov     edx, [esi+eax*8-448h]
                mov     eax, [esi+eax*8-444h]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, ecx
                mov     ecx, [esp+5Ch+var_3C]
                mov     dword ptr [esp+5Ch+var_18], edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                lea     edx, [edx-1DABFFBEh]
                mov     esi, [esi+eax*8-180h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     edx, [esp+58h+var_40]
                add     eax, 883060BAh
                mov     ecx, [esp+58h+var_38]
                xor     eax, edx
                xor     eax, ecx
                mov     [esp+58h+var_44], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                mov     eax, [edi+eax*4+0A8h]
                mov     edi, [ebp+arg_4]
                mov     [esp+58h+var_24], eax
                lea     eax, [edi+ebx]
                shr     edi, 4
                shl     ebx, 4
                lea     esi, [eax+5976B4Bh]
                xor     esi, [esp+58h+var_48]
                add     edi, ebx
                xor     edi, [esp+58h+var_44]
                xor     esi, edx
                xor     edi, [esp+58h+var_48]
                mov     [esp+58h+var_38], esi
                lea     esi, [eax+7C918A5h]
                mov     [esp+58h+var_8], edi
                xor     esi, [esp+58h+var_38]
                mov     edx, edi
                xor     esi, [esp+58h+var_44]
                xor     ebx, ebx
                xor     edx, [esp+58h+var_38]
                mov     eax, esi
                xor     eax, edi
                xor     edx, ecx
                mov     edi, [esp+58h+var_40]
                xor     edx, 0EFF1924Ah
                xor     eax, edi
                xor     eax, ecx
                mov     ecx, edx
                xor     ecx, esi
                mov     [esp+58h+var_40], eax
                xor     ecx, [esp+58h+var_48]
                movzx   eax, al
                xor     ecx, edi
                mov     [esp+58h+var_C], eax
                mov     [esp+58h+var_10], ecx
                lea     edi, [eax-0F8h]
                lea     eax, [ecx+7FA706FEh]
                sub     edi, eax
                lea     eax, [edx+22A0C054h]
                sbb     ebx, ebx
                add     edi, dword ptr [esp+58h+var_34]
                adc     ebx, dword ptr [esp+58h+var_34+4]
                xor     ecx, ecx
                or      ecx, eax
                xor     esi, 0D8D42F3Bh
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, edx
                mov     [edi+4], esi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                mov     esi, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_2C]
                movzx   eax, cl
                xor     eax, 49h
                mov     [eax+esi], edx
                mov     edx, [esp+58h+var_28]
                mov     [eax+esi+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [esi+eax*8-254h], 0
                mov     [esi+eax*8-258h], edx
                mov     eax, ecx
                shr     eax, 10h
                xor     edx, edx
                movzx   eax, al
                xor     eax, 6Fh
                shr     ecx, 18h
                xor     ecx, 0FAh
                mov     [esi+eax*8+4], ebx
                mov     ebx, [esp+58h+var_38]
                mov     [esi+eax*8], edi
                mov     eax, [esp+58h+var_20]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+58h+var_1C]
                mov     [esi+ecx*8+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   esi, al
                mov     eax, [esp+58h+var_10]
                sub     esi, 2
                add     esi, dword ptr [esp+58h+var_18]
                movzx   eax, al
                adc     edx, dword ptr [esp+58h+var_18+4]
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                xor     ecx, 0E4h
                xor     ecx, [esp+58h+var_C]
                mov     [eax+ecx*8], esi
                mov     [eax+ecx*8+4], edx
                lea     edx, [ebx-31F74E0Ah]
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 0F66229C8h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___94       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___32       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     edx, [ebp+arg_0]
                and     [esp+58h+var_4], 0
                add     edx, 8A1A154Ch
                add     edx, edi
                mov     [esp+58h+var_48], esi
                lea     ebx, [edi+69410C5Dh]
                mov     [esp+58h+var_44], edx
                movzx   eax, bl
                xor     eax, 19h
                push    offset dword_40AB3C
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D0h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [eax+esi+0ABh]
                mov     eax, [eax+esi+0AFh]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, [eax+esi-20h]
                mov     eax, [eax+esi-1Ch]
                mov     [esp+5Ch+var_28], eax
                movzx   eax, dl
                xor     eax, 15h
                mov     [esp+5Ch+var_2C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, [esi+eax*8]
                mov     eax, [ebp+arg_0]
                xor     eax, edi
                xor     eax, ebx
                mov     [esp+5Ch+var_38], eax
                lea     edx, [eax-3207E5E5h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     edx, [ebp+arg_0]
                add     ecx, 75385201h
                add     ecx, edi
                add     edx, 780890FDh
                xor     ecx, [esp+58h+var_44]
                xor     ecx, ebx
                movzx   eax, cl
                xor     edx, ecx
                xor     edx, [esp+58h+var_38]
                mov     [esp+58h+var_24], ecx
                mov     [esp+58h+var_8], edx
                mov     eax, [eax+esi-75h]
                mov     esi, edi
                sub     esi, [ebp+arg_0]
                xor     esi, [esp+58h+var_38]
                xor     esi, [esp+58h+var_44]
                mov     [esp+58h+var_10], eax
                mov     eax, [ebp+arg_0]
                sub     eax, edi
                mov     [esp+58h+var_C], esi
                xor     eax, esi
                xor     eax, ecx
                xor     eax, 321C1891h
                mov     [esp+58h+var_3C], eax
                mov     eax, edx
                mov     ecx, [esp+58h+var_3C]
                xor     eax, esi
                xor     eax, ebx
                xor     eax, 97062B7Fh
                mov     [esp+58h+var_40], eax
                mov     ebx, ecx
                lea     eax, [edi+69410C5Dh]
                xor     ebx, edx
                xor     esi, esi
                xor     ebx, [esp+58h+var_44]
                xor     ebx, eax
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 41h ; 'A'
                add     al, 46h ; 'F'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                lea     edx, [ecx+19056163h]
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 30BB252h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 0B9h
                mov     [edx+eax*8-2C0h], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [edx+eax*8-2BCh], ecx
                mov     eax, [esp+58h+var_24]
                mov     [edx+ebx*8], edi
                mov     edi, edx
                shr     eax, 8
                xor     al, 71h
                movzx   eax, al
                mov     [edi+ebx*8+4], esi
                mov     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_38]
                xor     ebx, [esp+58h+var_44]
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_20+4]
                xor     ecx, 0F9h
                mov     [edi+ecx*8], eax
                mov     eax, ebx
                shr     eax, 8
                mov     [edi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_18]
                mov     edx, [esp+58h+var_C]
                movzx   eax, al
                xor     edx, 0BC14A365h
                xor     eax, 2Dh
                shr     ebx, 10h
                mov     [eax+edi], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [eax+edi+4], ecx
                mov     ecx, [esp+58h+var_10]
                movzx   eax, bl
                xor     eax, 3Dh
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                add     ecx, 70477EF9h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___32       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___47       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, edi
                sub     eax, edi
                mov     [esp+58h+var_4C], ecx
                lea     ebx, [esi+60509331h]
                and     [esp+58h+var_4], 0
                xor     eax, ebx
                sub     edx, esi
                mov     [esp+58h+var_48], eax
                xor     edx, 0B4279654h
                movzx   eax, bl
                xor     eax, 0EFh
                mov     [esp+58h+var_44], edx
                push    offset dword_40AD48
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [eax+ecx+83h]
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+87h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0EBh
                mov     ecx, [eax+ecx]
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+4]
                mov     [esp+5Ch+var_24], eax
                movzx   eax, dl
                mov     edx, ebx
                shr     edx, 18h
                mov     ecx, [eax+ecx+1Ch]
                mov     dword ptr [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx+20h]
                mov     dword ptr [esp+5Ch+var_14+4], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_4C]
                mov     eax, [edx+eax-27h]
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+2Dh]
                mov     ecx, [esp+5Ch+var_4C]
                lea     edx, [edx-365DBB72h]
                mov     [esp+5Ch+var_C], eax
                call    VBN_TransformContext
                mov     edx, esi
                lea     ecx, [edi+6C72FBC9h]
                shl     edx, 4
                mov     eax, edi
                shr     eax, 4
                add     edx, eax
                mov     eax, edx
                xor     edx, [esp+58h+var_48]
                xor     edx, [esp+58h+var_44]
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_38], edx
                xor     eax, ebx
                xor     ecx, [esp+58h+var_38]
                mov     edx, edi
                xor     edx, eax
                mov     [esp+58h+var_18], eax
                xor     edx, esi
                xor     edx, [esp+58h+var_48]
                xor     ecx, eax
                mov     [esp+58h+var_8], edx
                mov     [esp+58h+var_2C], ecx
                mov     eax, edx
                xor     eax, [esp+58h+var_38]
                xor     eax, ebx
                xor     eax, 757EBD6Ah
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_44]
                xor     eax, ebx
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 15h
                sub     al, 21h ; '!'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+58h+var_40]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     eax, 76F890CDh
                xor     ecx, ecx
                xor     esi, 2971439h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_44]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_4C]
                movzx   eax, cl
                xor     eax, 42h
                mov     [esi+eax*8+4], edx
                mov     [esi+eax*8], ebx
                mov     eax, ecx
                mov     edx, [esp+58h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E1h
                mov     ebx, [esp+58h+var_18]
                mov     [eax+esi], edx
                mov     edx, [esp+58h+var_24]
                mov     [eax+esi+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 99h
                mov     [esi+eax*8], edx
                mov     edx, [esp+58h+var_1C]
                mov     [esi+eax*8+4], edx
                mov     al, bl
                xor     al, 0E7h
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_14]
                adc     edx, dword ptr [esp+58h+var_14+4]
                shr     ecx, 18h
                xor     ecx, 4Eh
                mov     [esi+ecx*8], eax
                mov     eax, [esp+58h+var_48]
                mov     [esi+ecx*8+4], edx
                movzx   ecx, al
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                xor     ecx, 87h
                and     dword ptr [esi+ecx*8+4], 0
                mov     edx, [esp+58h+var_38]
                mov     [esi+ecx*8], eax
                xor     edx, 0DB038F78h
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 7A3294A4h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___47       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___193_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, eax
                mov     [ebp+var_4], ecx
                lea     ecx, [eax+7844914Eh]
                push    edi
                mov     edi, [ebp+arg_4]
                sub     esi, edi
                add     ecx, edi
                mov     edx, esi
                xor     edx, 64A1E115h
                xor     esi, 3B31C516h
                xor     ecx, edx
                mov     [ebp+var_C], esi
                mov     ebx, edi
                mov     [ebp+var_8], ecx
                sub     ebx, eax
                movzx   ecx, dl
                xor     ebx, esi
                xor     ecx, 0FEh
                mov     esi, [ebp+var_4]
                xor     ebx, edx
                mov     eax, ebx
                shr     eax, 8
                sub     al, 80h ; ''
                mov     esi, [ecx+esi]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C7D0
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                sub     eax, 0BEh
                lea     edx, [edi+7A81833Ah]
                mov     edi, [ebp+var_C]
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, 9978A66Ah
                mov     ecx, eax
                call    VBN_TransformContext
                xor     esi, 5FEFD844h
                lea     edx, [edi-66AB6C94h]
                xor     eax, eax
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___193_stk  endp


;

vBng___141      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, esi
                shr     eax, 4
                mov     edx, edi
                shl     edx, 4
                add     edx, eax
                mov     [esp+58h+var_48], ebx
                lea     eax, [esi+21CFE4EAh]
                mov     [esp+58h+var_40], edx
                mov     [esp+58h+var_3C], eax
                movzx   eax, dl
                push    offset dword_40B9F0
                mov     ecx, [ebx+eax*8-310h]
                mov     eax, [ebx+eax*8-30Ch]
                mov     [esp+5Ch+var_8], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     ebx, [eax+ebx+0BFh]
                mov     [esp+5Ch+var_20], ebx
                mov     eax, [eax+ecx+0C3h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 42h
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     ecx, [ecx+eax*8+40h]
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+44h]
                mov     ecx, edi
                mov     dword ptr [esp+5Ch+var_18+4], eax
                lea     eax, [esi+21CFE4EAh]
                movzx   eax, al
                xor     eax, 9Ah
                shr     ecx, 4
                mov     eax, [ebx+eax*4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, esi
                shl     eax, 4
                add     eax, ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     ebx, eax
                mov     [esp+5Ch+var_44], eax
                xor     ebx, edx
                mov     edx, ebx
                mov     [esp+5Ch+var_10], ebx
                xor     edx, 82D5708Ch
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_44]
                lea     edx, [esi-4FFDF6A6h]
                add     edx, edi
                lea     ecx, [esi+21CFE4EAh]
                xor     eax, ecx
                xor     edx, ebx
                xor     eax, [esp+58h+var_40]
                xor     edx, ecx
                mov     [esp+58h+var_44], eax
                lea     ecx, [edi-218968BDh]
                xor     ecx, eax
                mov     [esp+58h+var_4], edx
                lea     eax, [edi-0AA01694h]
                xor     ecx, ebx
                xor     eax, edx
                mov     [esp+58h+var_28], ecx
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_40]
                xor     eax, 28D63328h
                mov     [esp+58h+var_34], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0B8h
                xor     al, 0DDh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_34]
                sub     ebx, esi
                mov     esi, [esp+58h+var_38]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_30+4]
                add     eax, 0E1EC16A5h
                xor     ecx, ecx
                xor     esi, 273DD4D4h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_40]
                movzx   eax, cl
                xor     eax, 0F5h
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_24]
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-5DCh], edx
                mov     [edi+eax*8-5E0h], ebx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                mov     ebx, [esp+58h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+edi-38h], edx
                mov     edx, [esp+58h+var_1C]
                mov     [eax+edi-34h], edx
                mov     eax, ebx
                shr     eax, 8
                xor     al, 37h
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_18]
                adc     edx, dword ptr [esp+58h+var_18+4]
                shr     ecx, 18h
                xor     ecx, 77h
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_10]
                mov     [edi+ecx*8+4], edx
                mov     edx, [esp+58h+var_44]
                movzx   eax, al
                add     edx, 0E339D8F9h
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                mov     [edi+ecx*8-1C8h], eax
                mov     eax, [esp+58h+var_8]
                mov     [edi+ecx*8-1C4h], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_4]
                xor     ecx, 7BC1A917h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___141      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___189      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, ecx
                and     [esp+44h+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ecx, edi
                shr     ecx, 4
                add     ecx, eax
                mov     [esp+50h+var_40], edx
                mov     eax, ecx
                mov     [esp+50h+var_44], ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 60h
                push    offset dword_40A980
                mov     esi, [eax+edx]
                mov     eax, [eax+edx+4]
                mov     [esp+54h+var_8], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     [esp+54h+var_C], esi
                mov     ecx, [eax+edx+16h]
                mov     eax, [eax+edx+1Ah]
                lea     edx, [edi-3E819E54h]
                mov     dword ptr [esp+54h+var_30+4], eax
                movzx   eax, dl
                mov     dword ptr [esp+54h+var_30], ecx
                mov     [esp+54h+var_1C], edx
                mov     eax, [esi+eax*4-254h]
                mov     esi, [esp+54h+var_40]
                mov     [esp+54h+var_10], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 75h
                xor     al, 77h
                movzx   eax, al
                cdq
                add     eax, [ecx+esi]
                mov     [esp+54h+var_28], eax
                adc     edx, [ecx+esi+4]
                mov     [esp+54h+var_24], edx
                mov     edx, [esp+54h+var_44]
                movzx   ecx, dl
                mov     eax, [ecx+esi-3Bh]
                mov     [esp+54h+var_18], eax
                mov     eax, [ecx+esi-37h]
                mov     ecx, ebx
                mov     [esp+54h+var_14], eax
                xor     ecx, edi
                xor     ecx, edx
                mov     esi, ebx
                sub     esi, edi
                mov     [esp+54h+var_38], ecx
                mov     eax, esi
                lea     edx, [edi-3E819E54h]
                xor     esi, ecx
                xor     eax, edx
                xor     eax, [esp+54h+var_44]
                xor     esi, edx
                mov     ecx, [esp+54h+var_40]
                xor     esi, 0F4843DE3h
                xor     eax, 783CDA90h
                mov     [esp+54h+var_34], eax
                lea     edx, [esi-7521DB0Dh]
                call    VBN_TransformContext
                lea     eax, [ebx-5935C913h]
                lea     ecx, [ebx-35DB5FB1h]
                add     eax, edi
                xor     ecx, [esp+50h+var_34]
                xor     eax, esi
                xor     ecx, [esp+50h+var_38]
                xor     eax, [esp+50h+var_34]
                mov     [esp+50h+var_20], ecx
                mov     [esp+50h+var_3C], eax
                mov     ebx, ecx
                xor     ebx, esi
                xor     esi, esi
                xor     ebx, [esp+50h+var_44]
                xor     ebx, 507C5BE7h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 53h ; 'S'
                add     al, 3Dh ; '='
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_30+4]
                xor     ecx, ecx
                add     eax, 69E75327h
                xor     edx, 865DA29Fh
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_40]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                mov     [edx+eax*8-630h], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [edx+eax*8-62Ch], ecx
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_20]
                xor     ecx, [esp+50h+var_1C]
                xor     ecx, [esp+50h+var_44]
                mov     [edx+ebx*8-5F8h], edi
                mov     edi, edx
                mov     edx, [esp+50h+var_18]
                movzx   eax, cl
                mov     [edi+ebx*8-5F4h], esi
                mov     [edi+eax*8-548h], edx
                mov     edx, [esp+50h+var_14]
                mov     [edi+eax*8-544h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_10]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 53h
                shr     ecx, 10h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_38]
                movzx   eax, cl
                add     edx, 5918E148h
                mov     ecx, [esp+50h+var_C]
                xor     eax, 5Bh
                mov     [eax+edi], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [eax+edi+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_34]
                pop     edi
                xor     ecx, 2DCC1321h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___189      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___79_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_4], ecx
                mov     ecx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                lea     edx, [ecx-0B0C3293h]
                xor     esi, esi
                add     edx, eax
                lea     ebx, [ecx-1F118E1Ch]
                add     eax, 0BFDB1DE3h
                mov     [ebp+var_8], edx
                add     eax, ecx
                add     ecx, 21AA8877h
                xor     ecx, edx
                xor     eax, ebx
                mov     [ebp+var_C], eax
                xor     ecx, ebx
                mov     eax, ecx
                movzx   edi, cl
                mov     ecx, [ebp+var_4]
                sub     edi, 0CAh
                shr     eax, 8
                sub     al, 5Fh ; '_'
                movzx   eax, al
                cdq
                sub     edi, eax
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sbb     esi, edx
                mov     edx, [ebp+arg_4]
                push    offset dword_40AAA0
                add     edi, [eax+ecx+7Ch]
                adc     esi, [eax+ecx+80h]
                add     edx, 1E2F6B2Ch
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                sub     edx, 1EE60FCAh
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                xor     ebx, 0A696505h
                mov     edx, [ebp+var_8]
                xor     eax, eax
                xor     edx, 334E45A0h
                or      eax, ebx
                mov     [ecx+1B8h], edi
                pop     edi
                mov     [ecx+1BCh], esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___79_stk   endp

VBNCB_unnamed_8000227c proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     eax, esi
                shl     ebx, 4
                shr     eax, 4
                add     ebx, eax
                mov     [ebp+var_8], ecx
                mov     eax, esi
                sub     eax, edx
                mov     ecx, eax
                xor     eax, ebx
                xor     eax, 39AB217Bh
                xor     ecx, 38ABC371h
                mov     [ebp+var_4], eax
                lea     eax, [esi+5329E991h]
                xor     eax, [ebp+var_4]
                mov     esi, [ebp+var_8]
                xor     eax, ecx
                push    edi
                lea     edi, [edx-3CB3159Dh]
                xor     eax, 18C2DE2h
                xor     edx, edx
                xor     edi, ecx
                or      edx, eax
                xor     edi, ebx
                movzx   eax, bl
                xor     edi, 6613841Fh
                xor     eax, 8Fh
                cmp     byte ptr [esi+eax*8], 0
                mov     esi, [ebp+var_4]
                jnz     short loc_487F31
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                xor     eax, 0Eh
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_487F31
                xor     edx, edx
                lea     eax, [esi-4A9EE433h]
                xor     ecx, 0E1EA3F3Eh
                or      edx, eax
                jmp     short loc_487F33
; ---------------------------------------------------------------------------

loc_487F31:                             ; CODE XREF: VBNCB_unnamed_8000227c+6B¡üj
                                        ; VBNCB_unnamed_8000227c+7D¡üj
                mov     ecx, edi

loc_487F33:                             ; CODE XREF: VBNCB_unnamed_8000227c+8F¡üj
                pop     edi
                pop     esi
                mov     eax, edx
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000227c endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___76       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                mov     [esp+54h+var_50], ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                lea     edx, [ebx+78BB850Bh]
                add     edx, edi
                mov     ecx, edi
                shr     ecx, 4
                add     ecx, eax
                movzx   esi, dl
                mov     eax, [esp+60h+var_50]
                mov     [esp+60h+var_18], esi
                mov     [esp+60h+var_4C], ecx
                mov     [esp+60h+var_48], edx
                mov     eax, [eax+esi*8-230h]
                mov     dword ptr [esp+60h+var_38], eax
                mov     eax, [esp+60h+var_50]
                push    4
                mov     eax, [eax+esi*8-22Ch]
                mov     esi, [esp+64h+var_50]
                mov     dword ptr [esp+64h+var_38+4], eax
                movzx   eax, cl
                mov     esi, [esi+eax*8+0B0h]
                mov     [esp+64h+var_24], esi
                mov     esi, [esp+64h+var_50]
                mov     eax, [esi+eax*8+0B4h]
                mov     [esp+64h+var_20], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, [eax+esi-33h]
                mov     eax, [eax+esi-2Fh]
                mov     [esp+64h+var_10], eax
                mov     eax, edx
                shr     eax, 8
                mov     [esp+64h+var_14], ecx
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 18h
                xor     al, 38h
                movzx   eax, al
                cdq
                add     eax, [esi+ecx*8-3B0h]
                mov     [esp+64h+var_2C], eax
                adc     edx, [esi+ecx*8-3ACh]
                mov     ecx, [esp+64h+var_4C]
                mov     eax, [esp+64h+var_48]
                shr     ecx, 10h
                movzx   esi, cl
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+64h+var_50]
                add     ecx, 9
                mov     [esp+64h+var_28], edx
                mov     eax, [esi+eax+66h]
                add     eax, ecx
                pop     ecx
                mul     ecx
                mov     ecx, [esp+60h+var_4C]
                shr     ecx, 8
                mov     esi, eax
                mov     eax, [esp+60h+var_50]
                movzx   ecx, cl
                xor     ecx, 3
                push    offset dword_40A92C
                add     esi, [ecx+eax]
                lea     eax, [ebx+71E2EF7h]
                xor     eax, [esp+64h+var_4C]
                mov     ecx, [esp+64h+var_50]
                mov     [esp+64h+var_44], eax
                lea     edx, [eax+1BDD2362h]
                call    VBN_TransformContext
                mov     eax, [esi]
                mov     ecx, ebx
                shl     edi, 4
                shr     ecx, 4
                mov     [esp+60h+var_1C], eax
                add     ecx, edi
                mov     edx, ecx
                lea     eax, [ebx+7DFF628Dh]
                xor     edx, [esp+60h+var_44]
                mov     esi, ecx
                xor     edx, [esp+60h+var_48]
                xor     esi, [esp+60h+var_48]
                xor     eax, edx
                xor     esi, [esp+60h+var_4C]
                xor     eax, esi
                mov     [esp+60h+var_8], edx
                mov     [esp+60h+var_40], eax
                xor     ecx, esi
                xor     ecx, [esp+60h+var_44]
                mov     eax, ecx
                mov     [esp+60h+var_30], ecx
                xor     eax, edx
                mov     [esp+60h+var_C], esi
                xor     eax, [esp+60h+var_4C]
                xor     eax, 2C254ABDh
                mov     [esp+60h+var_3C], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0DFh
                xor     al, 47h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+60h+var_3C]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+60h+var_38]
                mov     edi, [esp+60h+var_40]
                adc     edx, dword ptr [esp+60h+var_38+4]
                xor     ecx, ecx
                add     eax, 564DD6B0h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-545F7ABAh]
                mov     ecx, edi
                mov     [ebx+4], esi
                xor     ecx, [esp+60h+var_30]
                xor     ecx, [esp+60h+var_48]
                xor     ecx, [esp+60h+var_4C]
                mov     esi, [esp+60h+var_50]
                movzx   eax, cl
                xor     eax, 7Bh
                mov     [esi+eax*8+4], edx
                mov     edx, [esp+60h+var_2C]
                mov     [esi+eax*8], ebx
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-30h], edx
                mov     edx, [esp+60h+var_28]
                mov     [esi+eax*8-2Ch], edx
                mov     eax, ecx
                mov     edx, [esp+60h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 6Eh
                mov     [esi+eax*8-298h], edx
                mov     edx, [esp+60h+var_20]
                mov     [esi+eax*8-294h], edx
                and     dword ptr [esi+ecx*8+4], 0
                mov     eax, [esp+60h+var_1C]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+60h+var_44]
                movzx   ecx, al
                mov     eax, edi
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                xor     ecx, 0A1h
                xor     ecx, [esp+60h+var_18]
                mov     eax, [esp+60h+var_14]
                mov     edx, [esp+60h+var_C]
                mov     [ecx+esi], eax
                add     edx, 0E47E40FDh
                mov     eax, [esp+60h+var_10]
                mov     [ecx+esi+4], eax
                xor     eax, eax
                mov     ecx, [esp+60h+var_8]
                pop     edi
                add     ecx, 7BF8113Ch
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___76       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___64       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+4Ch+var_4], 0
                mov     ecx, [ebp+arg_4]
                lea     ebx, [eax+7EDC5A5h]
                add     eax, 53F6AF4Ch
                mov     [esp+4Ch+var_40], esi
                add     eax, [ebp+arg_4]
                mov     [esp+4Ch+var_3C], eax
                shr     eax, 8
                push    edi
                mov     edi, [ebp+arg_0]
                xor     ecx, edi
                xor     ecx, ebx
                mov     edx, [esp+50h+var_40]
                mov     [esp+50h+var_38], ecx
                movzx   ecx, al
                xor     ecx, 39h
                movzx   eax, bl
                mov     [esp+50h+var_34], ebx
                mov     eax, [eax+esi+99h]
                mov     eax, [ecx+eax]
                mov     [esp+50h+var_14], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+esi-3Fh]
                mov     eax, [eax+esi-3Bh]
                mov     [esp+50h+var_18], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 9Ah
                mov     [esp+50h+var_1C], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+50h+var_24], ecx
                mov     ecx, ebx
                mov     [esp+50h+var_20], eax
                mov     eax, [esp+50h+var_3C]
                shr     ecx, 18h
                shr     eax, 10h
                xor     ecx, 0EBh
                movzx   esi, al
                xor     eax, eax
                sub     esi, 0ABh
                add     esi, [ecx+edx]
                mov     [esp+50h+var_C], esi
                mov     esi, edx
                adc     eax, [ecx+esi+4]
                lea     ecx, [edi-24EBA2CDh]
                add     ecx, [ebp+arg_4]
                xor     ecx, ebx
                mov     [esp+50h+var_8], eax
                xor     ecx, [esp+50h+var_3C]
                mov     ebx, edi
                sub     ebx, [ebp+arg_4]
                mov     [esp+50h+var_44], ebx
                xor     ebx, [esp+50h+var_38]
                mov     eax, [esp+50h+var_44]
                xor     ebx, [esp+50h+var_3C]
                xor     eax, ecx
                xor     eax, [esp+50h+var_38]
                xor     ebx, 25BB2CDFh
                mov     edx, [esp+50h+var_44]
                xor     eax, 0D49CE588h
                xor     edx, ebx
                mov     [esp+50h+var_10], ecx
                xor     edx, ecx
                mov     [esp+50h+var_30], eax
                mov     ecx, eax
                mov     [esp+50h+var_44], edx
                xor     ecx, ebx
                xor     edx, 2CB28745h
                xor     ecx, [esp+50h+var_34]
                mov     eax, ecx
                mov     [esp+50h+var_28], edx
                xor     eax, 0F7D0BF29h
                mov     [esp+50h+var_2C], eax
                mov     eax, [esp+50h+var_3C]
                xor     ecx, 2436A6C7h
                movzx   eax, al
                push    offset dword_40C094
                mov     esi, [esi+eax*8-470h]
                sub     esi, ecx
                mov     ecx, [esp+54h+var_40]
                mov     edi, [ecx+eax*8-46Ch]
                mov     al, dl
                sbb     edi, 0
                xor     al, 93h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [esp+54h+var_30]
                adc     edi, edx
                xor     eax, 2E2B6A53h
                xor     ecx, ecx
                lea     edx, [ebx+5AD2E999h]
                or      ecx, eax
                mov     eax, [esp+54h+var_44]
                xor     eax, [esp+54h+var_30]
                xor     eax, [esp+54h+var_3C]
                xor     eax, [esp+54h+var_34]
                xor     eax, 2CB28745h
                mov     [esi], ecx
                mov     ecx, [esp+54h+var_40]
                mov     [esi+4], edx
                mov     [esp+54h+var_44], eax
                lea     edx, [eax+30420A91h]
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_2C]
                mov     ecx, edx
                xor     ecx, [esp+50h+var_28]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_3C]
                mov     ebx, [esp+50h+var_40]
                movzx   eax, cl
                xor     eax, 76h
                mov     [ebx+eax*8], esi
                mov     [ebx+eax*8+4], edi
                mov     eax, ecx
                mov     esi, [esp+50h+var_24]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 36h
                mov     [eax+ebx], esi
                mov     esi, [esp+50h+var_20]
                mov     [eax+ebx+4], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0A0h
                mov     [ebx+eax*8-1C8h], esi
                mov     esi, [esp+50h+var_18]
                mov     [ebx+eax*8-1C4h], esi
                and     dword ptr [ebx+ecx*8+4], 0
                mov     eax, [esp+50h+var_14]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+50h+var_38]
                mov     ebx, [esp+50h+var_10]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                movzx   eax, dl
                mov     edx, [esp+50h+var_40]
                xor     ecx, eax
                mov     eax, [esp+50h+var_44]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                mov     [edx+ecx*8-38h], eax
                mov     eax, [esp+50h+var_8]
                mov     [edx+ecx*8-34h], eax
                xor     eax, eax
                mov     edx, [esp+50h+var_38]
                lea     ecx, [ebx-290F7A20h]
                add     edx, 0B64B89D1h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___64       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___77       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                shl     edx, 4
                xor     ecx, ebx
                add     edx, eax
                mov     [esp+58h+var_48], edi
                lea     eax, [ebx+6B34EC41h]
                mov     [esp+58h+var_44], ecx
                xor     eax, edx
                mov     [esp+58h+var_3C], edx
                mov     [esp+58h+var_40], eax
                movzx   eax, dl
                push    offset dword_40C440
                mov     esi, [edi+eax*8-3C0h]
                mov     eax, [edi+eax*8-3BCh]
                mov     [esp+5Ch+var_18], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 14h
                mov     [esp+5Ch+var_1C], esi
                mov     esi, [esp+5Ch+var_48]
                mov     edi, [edi+eax*8]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 3
                mov     esi, [eax+esi]
                mov     [esp+5Ch+var_14], esi
                mov     esi, [esp+5Ch+var_48]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_10], eax
                movzx   eax, cl
                xor     eax, 19h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 9
                mov     dword ptr [esp+5Ch+var_24], ecx
                mov     ecx, esi
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, esi
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 10h
                xor     al, 0EDh
                movzx   eax, al
                cdq
                mov     edx, [esp+5Ch+var_40]
                mov     esi, eax
                mov     eax, [esp+5Ch+var_48]
                lea     edx, [edx-3A0CA9C6h]
                add     esi, [ecx+eax-38h]
                mov     ecx, eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_44]
                xor     eax, eax
                shld    eax, esi, 2
                mov     edx, ecx
                xor     edx, ecx
                xor     edx, [esp+58h+var_3C]
                mov     [esp+58h+var_28], edx
                mov     esi, [edi+esi*4]
                mov     edi, ecx
                xor     edi, [esp+58h+var_40]
                xor     edi, ecx
                mov     ecx, [ebp+arg_4]
                add     ebx, 4E5561ADh
                xor     ebx, edx
                mov     [esp+58h+var_C], edi
                xor     ebx, [esp+58h+var_40]
                add     ecx, 3C33FA4Bh
                xor     ecx, edi
                mov     [esp+58h+var_8], ebx
                xor     ecx, edx
                mov     eax, ebx
                mov     edx, [esp+58h+var_3C]
                xor     eax, edi
                xor     eax, edx
                mov     [esp+58h+var_2C], ecx
                xor     eax, 14DF4E70h
                xor     edi, edi
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                xor     eax, ebx
                movzx   ebx, cl
                xor     eax, [esp+58h+var_44]
                sub     ebx, 2
                xor     eax, edx
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                shr     eax, 8
                sub     al, 1Dh
                movzx   eax, al
                cdq
                sub     ebx, eax
                mov     eax, [esp+58h+var_38]
                sbb     edi, edx
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edx, [esp+58h+var_3C]
                adc     edi, dword ptr [esp+58h+var_34+4]
                xor     edx, 6E6C098Eh
                xor     eax, 0AA701061h
                mov     dword ptr [esp+58h+var_34], ebx
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_34+4], edi
                or      ecx, eax
                mov     edi, [esp+58h+var_48]
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_48]
                mov     [ebx+4], edx
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_2C]
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                and     dword ptr [ecx+eax*8-174h], 0
                mov     [ecx+eax*8-178h], esi
                xor     ecx, ecx
                mov     eax, [esp+58h+var_28]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-5Ah]
                add     edx, dword ptr [esp+58h+var_24]
                adc     ecx, dword ptr [esp+58h+var_24+4]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-4F8h], edx
                mov     edx, edi
                mov     edi, dword ptr [esp+58h+var_34+4]
                mov     [edx+eax*8-4F4h], ecx
                mov     eax, ebx
                mov     ecx, [esp+58h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0EFh
                shr     ebx, 18h
                xor     ebx, 0FEh
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [edx+eax*8+4], ecx
                mov     eax, dword ptr [esp+58h+var_34]
                mov     [edx+ebx*8], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                mov     [edx+ebx*8+4], edi
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     [ecx+edx-0C4h], eax
                mov     eax, [esp+4Ch+var_10]
                mov     [ecx+edx-0C0h], eax
                xor     eax, eax
                mov     ecx, [esp+4Ch+var_8]
                mov     edx, [esp+4Ch+var_C]
                xor     ecx, 0C7169FBAh
                add     edx, 0B023EFA6h
                or      eax, ecx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___77       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___5_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                xor     ebx, eax
                mov     [ebp+var_4], ecx
                lea     ecx, [eax-74E5F0ACh]
                mov     eax, ebx
                shr     eax, 8
                push    esi
                push    edi
                movzx   edi, al
                xor     esi, esi
                mov     eax, ebx
                sub     edi, 0A2h
                shr     eax, 10h
                sub     al, 1Bh
                movzx   eax, al
                cdq
                sub     edi, eax
                movzx   eax, bl
                push    offset dword_40C250
                sbb     esi, edx
                mov     edx, [ebp+var_4]
                add     edi, [eax+edx+54h]
                adc     esi, [eax+edx+58h]
                mov     edx, [ebp+arg_4]
                sub     edx, [ebp+arg_0]
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, ebx
                add     edx, 0C106F3Dh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                mov     [eax+1B8h], edi
                mov     [eax+1BCh], esi
                mov     eax, [ebp+arg_4]
                add     eax, 0A8DE56DAh
                add     eax, ecx
                add     ecx, 0F23425F2h
                xor     eax, ebx
                pop     edi
                pop     esi
                xor     eax, 0DF18E07h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___5_stk    endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___40_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                and     [ebp+var_14], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                add     ebx, 8558317Eh
                add     ebx, esi
                mov     [ebp+var_4], edx
                xor     esi, [ebp+arg_4]
                movzx   eax, bl
                xor     eax, 14h
                mov     [ebp+var_10], ebx
                push    edi
                push    offset dword_40C6C0
                mov     [ebp+var_C], esi
                mov     ecx, [eax+edx]
                mov     edi, [eax+edx+4]
                lea     edx, [esi+43E198C8h]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                xor     ecx, ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, [ebp+arg_4]
                xor     ebx, ecx
                mov     [ebp+var_14], ecx
                xor     ebx, esi
                xor     ebx, 904CE458h
                mov     eax, ebx
                xor     bl, 55h
                shr     eax, 8
                sub     al, 7Dh ; '}'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_4]
                sub     eax, [ebp+arg_0]
                xor     eax, [ebp+var_C]
                xor     eax, [ebp+var_10]
                mov     [ecx+1BCh], edx
                add     eax, 2B93942Ch
                mov     ecx, [ebp+var_14]
                xor     edx, edx
                pop     edi
                add     ecx, 0D249B670h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___40_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f37 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, esi
                and     [esp+28h+var_C], 0
                mov     eax, edi
                shr     eax, 4
                shl     edx, 4
                add     edx, eax
                mov     [esp+28h+var_4], ebx
                movzx   eax, dl
                mov     ecx, edx
                xor     eax, 36h
                shr     ecx, 10h
                mov     eax, [eax+ebx]
                mov     ecx, [eax+ecx-0EFAh]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+ebx+6Dh]
                mov     ebx, ecx
                sub     ebx, eax
                cmp     eax, ecx
                mov     [esp+28h+var_10], ebx
                mov     ebx, esi
                setnbe  [esp+28h+var_19]
                sub     ebx, [ebp+arg_0]
                xor     ebx, edx
                sub     edi, esi
                mov     [esp+28h+var_18], ebx
                xor     edi, 0F295A708h
                mov     ebx, [ebp+arg_0]
                xor     ebx, esi
                mov     esi, ebx
                xor     esi, edi
                xor     esi, edx
                xor     ebx, esi
                mov     [esp+28h+var_14], esi
                mov     esi, [esp+28h+var_18]
                xor     ebx, esi
                mov     [esp+28h+var_18], ebx
                cmp     eax, ecx
                jbe     short loc_48889F
                xor     edx, edx
                lea     eax, [esi-5BC9C17Bh]
                xor     edi, 0FA216BCh
                or      edx, eax
                jmp     short loc_4888BF
; ---------------------------------------------------------------------------

loc_48889F:                             ; CODE XREF: VBNCB_unnamed_80001f37+8B¡üj
                mov     edx, [ebp+arg_0]
                mov     eax, [esp+28h+var_14]
                add     edx, 4190218Ch
                xor     edx, esi
                add     eax, 0D6AE4A5h
                xor     edx, edi
                xor     edi, edi
                sub     edx, 6E7BE9C3h
                or      edi, eax

loc_4888BF:                             ; CODE XREF: VBNCB_unnamed_80001f37+9D¡üj
                mov     eax, [esp+28h+var_18]
                mov     esi, [esp+28h+var_4]
                cmp     [esp+28h+var_10], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-5F0h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                xor     ecx, 7Dh
                mov     [esi+ecx*8], al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f37 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___122      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shl     eax, 4
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                add     ecx, eax
                mov     [esp+4Ch+var_44], esi
                lea     eax, [edx+8C24C0Ah]
                mov     [esp+4Ch+var_38], ecx
                mov     [esp+4Ch+var_3C], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3
                push    edi
                push    offset dword_40C398
                mov     ebx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+54h+var_34+4], eax
                lea     eax, [edx+8C24C0Ah]
                movzx   eax, al
                xor     eax, 2Ah
                mov     dword ptr [esp+54h+var_34], ebx
                mov     ebx, [esi+eax*8]
                mov     eax, ecx
                shr     eax, 18h
                mov     edi, [esi+eax*8-600h]
                movzx   eax, cl
                xor     eax, 0Ch
                mov     esi, [esi+eax*8]
                mov     [esp+54h+var_24], esi
                mov     esi, [esp+54h+var_44]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_20], eax
                lea     eax, [edx+8C24C0Ah]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B0h
                mov     esi, [eax+esi]
                mov     [esp+54h+var_14], esi
                mov     esi, [esp+54h+var_44]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_10], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [esi+eax*8-670h]
                mov     eax, [esi+eax*8-66Ch]
                lea     esi, [edx-5D11F4B8h]
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     ecx, [ebp+arg_4]
                mov     dword ptr [esp+54h+var_2C+4], eax
                mov     eax, edx
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                xor     ecx, [esp+54h+var_38]
                mov     [esp+54h+var_40], ecx
                lea     ecx, [edx+8C24C0Ah]
                xor     esi, ecx
                mov     ecx, [esp+54h+var_44]
                xor     esi, [esp+54h+var_38]
                lea     edx, [esi-6DEA8865h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     eax, [esp+50h+var_3C]
                shr     eax, 10h
                add     eax, edi
                lea     edx, [ecx-21435BFAh]
                xor     edx, [esp+50h+var_40]
                lea     edi, [ecx+8C24C0Ah]
                xor     edx, edi
                mov     edi, ecx
                sub     edi, [ebp+arg_4]
                mov     eax, [ebx+eax*4-5898h]
                xor     edi, esi
                mov     [esp+50h+var_18], eax
                mov     [esp+50h+var_C], edx
                xor     edi, [esp+50h+var_40]
                add     ecx, 0DDF76A39h
                xor     ecx, edx
                xor     edi, 0D3E72734h
                xor     ecx, esi
                mov     [esp+50h+var_8], edi
                mov     ebx, ecx
                mov     [esp+50h+var_1C], ecx
                xor     ebx, edi
                mov     eax, edi
                xor     ebx, [esp+50h+var_3C]
                xor     eax, edx
                mov     edx, [esp+50h+var_38]
                xor     esi, esi
                xor     eax, edx
                xor     ebx, edx
                xor     eax, 0D171F08Dh
                movzx   edi, bl
                mov     [esp+50h+var_38], eax
                sub     edi, 0E8h
                mov     eax, ebx
                shr     eax, 8
                xor     al, 97h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_34]
                lea     edx, [ecx+223C0F45h]
                adc     esi, dword ptr [esp+50h+var_34+4]
                xor     eax, 1030C5F9h
                xor     ecx, ecx
                mov     dword ptr [esp+50h+var_34+4], esi
                or      ecx, eax
                mov     esi, [esp+50h+var_44]
                mov     al, byte ptr [esp+50h+var_40]
                mov     [edi], ecx
                xor     al, 0AEh
                mov     [edi+4], edx
                mov     ecx, ebx
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+50h+var_2C]
                adc     edx, dword ptr [esp+50h+var_2C+4]
                shr     ecx, 10h
                movzx   ecx, cl
                shr     ebx, 18h
                xor     ebx, 27h
                mov     [esi+ecx*8-1E8h], eax
                mov     eax, esi
                mov     [eax+ecx*8-1E4h], edx
                mov     ecx, esi
                mov     eax, [esp+50h+var_24]
                mov     edx, [esp+50h+var_18]
                mov     [ecx+ebx*8], eax
                mov     eax, [esp+50h+var_20]
                mov     [ecx+ebx*8+4], eax
                mov     ebx, esi
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_1C]
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_3C]
                mov     esi, dword ptr [esp+50h+var_34+4]
                movzx   eax, cl
                mov     [ebx+eax*8-1E8h], edi
                mov     [ebx+eax*8-1E4h], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                and     dword ptr [ebx+eax*8-6Ch], 0
                mov     [ebx+eax*8-70h], edx
                mov     edx, [esp+50h+var_C]
                movzx   eax, cl
                mov     ecx, [esp+50h+var_14]
                xor     eax, 39h
                xor     edx, 8CA40885h
                mov     [eax+ebx], ecx
                mov     ecx, [esp+50h+var_10]
                mov     [eax+ebx+4], ecx
                mov     ecx, [esp+50h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 1F53511Bh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___122      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___109_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                and     [ebp+var_10], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                movzx   eax, bl
                add     esi, 66650FBDh
                xor     eax, 72h
                mov     [ebp+var_4], edx
                push    edi
                push    offset dword_40C720
                mov     [ebp+var_C], ebx
                mov     ecx, [eax+edx]
                mov     edi, [eax+edx+4]
                lea     edx, [esi-5F3F84B8h]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+var_4]
                call    VBN_TransformContext
                mov     eax, ebx
                xor     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                xor     ebx, eax
                mov     [ebp+var_10], eax
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 66h
                shr     eax, 8
                xor     al, 77h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                mov     ebx, [ebp+arg_4]
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_0]
                sub     ebx, eax
                add     eax, 66650FBDh
                mov     [ecx+1BCh], edx
                mov     ecx, [ebp+var_10]
                xor     eax, ebx
                xor     eax, [ebp+var_C]
                xor     edx, edx
                pop     edi
                xor     ecx, 0B42F128Bh
                sub     eax, 46B8A70Dh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___109_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___194      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                add     edx, 0C60DA084h
                push    edi
                mov     edi, ecx
                mov     [esp+48h+var_34], edx
                mov     [esp+48h+var_38], edi
                lea     ebx, [esi+1F47FCAEh]
                mov     eax, ebx
                mov     [esp+48h+var_24], ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 97h
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+48h+var_10], eax
                movzx   eax, dl
                xor     eax, 7Fh
                mov     [esp+48h+var_14], ecx
                shl     eax, 5
                mov     eax, [eax+ecx]
                mov     [esp+48h+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 99h
                xor     al, 1Eh
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+48h+var_8], eax
                adc     edx, [edi+ecx*8+4]
                movzx   ecx, bl
                mov     [esp+48h+var_4], edx
                mov     eax, [edi+ecx*8-680h]
                mov     [esp+48h+var_1C], eax
                mov     eax, [edi+ecx*8-67Ch]
                mov     [esp+48h+var_18], eax
                mov     eax, esi
                sub     eax, [ebp+arg_0]
                mov     ecx, eax
                xor     eax, [esp+48h+var_34]
                xor     eax, ebx
                xor     ecx, ebx
                mov     [esp+48h+var_28], eax
                mov     ebx, esi
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+48h+var_2C], ecx
                xor     ebx, ecx
                lea     ecx, [esi+1F47FCAEh]
                xor     ebx, [esp+48h+var_34]
                shr     ecx, 18h
                mov     eax, ebx
                shr     eax, 8
                xor     ecx, 0EBh
                xor     al, 32h
                movzx   eax, al
                cdq
                mov     edi, [ecx+edi]
                sub     edi, eax
                mov     eax, [esp+48h+var_38]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                sub     eax, 52h ; 'R'
                add     edi, eax
                adc     ecx, 0
                mov     [esp+48h+var_20], ecx
                mov     ecx, [ebp+arg_0]
                sub     ecx, esi
                mov     esi, ecx
                xor     esi, [esp+48h+var_28]
                xor     esi, [esp+48h+var_2C]
                xor     esi, 948BA79Fh
                xor     ecx, ebx
                mov     eax, esi
                xor     ecx, [esp+48h+var_28]
                xor     eax, ebx
                mov     ebx, [esp+48h+var_24]
                xor     ecx, 4DDE11F7h
                xor     eax, ebx
                mov     [esp+48h+var_30], ecx
                mov     ecx, [esp+48h+var_38]
                xor     eax, 0D4F7354Bh
                push    offset dword_40BAFC
                mov     [esp+4Ch+var_24], eax
                lea     edx, [eax+493F2657h]
                call    VBN_TransformContext
                mov     eax, [esp+48h+var_30]
                xor     ecx, ecx
                add     eax, 0F529457Dh
                mov     edx, esi
                or      ecx, eax
                xor     edx, 6EE86656h
                mov     [edi], ecx
                mov     ecx, [esp+48h+var_30]
                xor     ecx, esi
                mov     [edi+4], edx
                xor     ecx, [esp+48h+var_34]
                mov     edx, [esp+48h+var_20]
                xor     ecx, ebx
                mov     ebx, [esp+48h+var_38]
                movzx   eax, cl
                mov     [ebx+eax*8+0E4h], edx
                mov     [ebx+eax*8+0E0h], edi
                mov     eax, ecx
                mov     edx, [esp+48h+var_1C]
                shr     eax, 8
                movzx   eax, al
                pop     edi
                pop     esi
                mov     [ebx+eax*8-538h], edx
                mov     edx, [esp+40h+var_18]
                mov     [ebx+eax*8-534h], edx
                mov     eax, ecx
                mov     edx, [esp+40h+var_14]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B6h
                shr     ecx, 18h
                mov     [eax+ebx], edx
                mov     edx, [esp+40h+var_10]
                mov     [eax+ebx+4], edx
                and     dword ptr [ebx+ecx*8-484h], 0
                mov     eax, [esp+40h+var_C]
                mov     edx, [esp+40h+var_2C]
                mov     [ebx+ecx*8-488h], eax
                mov     eax, [esp+40h+var_34]
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 461356CDh
                xor     ecx, eax
                mov     eax, [esp+40h+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+40h+var_24]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+40h+var_8]
                xor     ecx, 8Eh
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+40h+var_4]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+40h+var_28]
                add     ecx, 88274930h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___194      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___34_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                push    offset dword_40BF60
                mov     [ebp+var_8], esi
                lea     eax, [ecx-54BB8FF8h]
                sub     ecx, [ebp+arg_4]
                mov     [ebp+var_4], eax
                xor     ecx, 3E51F175h
                movzx   eax, al
                xor     eax, 0F5h
                mov     [ebp+var_C], ecx
                lea     edx, [ecx+0D40320Dh]
                mov     ecx, esi
                mov     ebx, [eax+esi]
                mov     edi, [eax+esi+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 0E6h
                shr     eax, 10h
                xor     al, 42h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                pop     edi
                lea     edx, [eax+4066467h]
                add     edx, ecx
                lea     esi, [eax-54BB8FF8h]
                add     ecx, 8F3E2229h
                xor     edx, esi
                xor     ecx, [ebp+var_C]
                xor     eax, eax
                xor     ecx, esi
                xor     edx, 29E8D15Dh
                xor     ecx, 0D2DA14B9h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___34_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___125_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                push    offset dword_40C030
                mov     [ebp+var_8], esi
                lea     eax, [edi-6BAB2C4h]
                movzx   eax, al
                xor     eax, 9Dh
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                lea     eax, [edx+3C9B5E4Ch]
                mov     edx, eax
                mov     [ebp+var_4], ecx
                xor     edx, 7EB47117h
                mov     [ebp+var_C], eax
                mov     ecx, esi
                call    VBN_TransformContext
                lea     ecx, [edi-6BAB2C4h]
                mov     eax, ecx
                shr     ecx, 10h
                shr     eax, 8
                xor     cl, 0A1h
                xor     al, 0ECh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+arg_0]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     edi, edx
                add     esi, [ebp+var_4]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     ebx, [ebp+arg_4]
                xor     edx, edx
                sub     ebx, ecx
                mov     [eax+1BCh], edi
                xor     ebx, [ebp+var_C]
                lea     eax, [ecx-6BAB2C4h]
                xor     ebx, eax
                add     ecx, 68D3F1A8h
                xor     ecx, eax
                pop     edi
                add     ecx, 46D63D02h
                pop     esi
                lea     eax, [ebx+38A20C50h]
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___125_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___157_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, ecx
                lea     eax, [edx-61CA7989h]
                add     eax, ebx
                mov     [ebp+var_4], esi
                lea     ecx, [edx-3D2FD156h]
                add     ecx, ebx
                xor     eax, ecx
                mov     [ebp+var_8], eax
                mov     eax, edx
                shr     eax, 4
                push    edi
                mov     edi, edx
                xor     edi, ebx
                shl     ebx, 4
                add     ebx, eax
                xor     ebx, edi
                xor     ebx, ecx
                movzx   ecx, cl
                xor     ecx, 2Dh
                mov     eax, ebx
                shr     eax, 8
                xor     al, 3Ch
                movzx   eax, al
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C460
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 86h
                movzx   eax, bl
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     edx, [ebp+arg_0]
                add     edx, 6A64A38Ah
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [eax+1BCh], ecx
                sub     edx, 46DAE7FCh
                mov     ecx, eax
                call    VBN_TransformContext
                lea     edx, [edi-26E1785Dh]
                xor     eax, eax
                pop     edi
                lea     ecx, [esi-57CFF14Fh]
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___157_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___102_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, ecx
                and     [ebp+var_10], 0
                mov     ecx, [ebp+arg_4]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     [ebp+var_4], esi
                movzx   eax, cl
                push    edi
                push    offset dword_40A410
                mov     ebx, [eax+esi+60h]
                mov     edi, [eax+esi+64h]
                mov     esi, edx
                xor     esi, [ebp+arg_4]
                mov     [ebp+var_C], ebx
                xor     esi, ecx
                mov     ebx, edx
                mov     [ebp+var_10], esi
                sub     ebx, [ebp+arg_4]
                add     edx, 65907182h
                mov     eax, ebx
                xor     eax, 240B06ADh
                xor     edx, eax
                mov     [ebp+var_8], eax
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, 228C45EBh
                call    VBN_TransformContext
                xor     ebx, esi
                xor     ebx, [ebp+var_8]
                xor     ebx, 0B2F4D62Bh
                mov     eax, ebx
                xor     bl, 8Ah
                shr     eax, 8
                xor     eax, 66A5h
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_10]
                mov     edx, [ebp+var_8]
                xor     ecx, 72A088BDh
                pop     edi
                pop     esi
                xor     edx, 50DE510Dh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___102_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___22       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     eax, [ebp+arg_4]
                mov     [esp+44h+var_44], ecx
                mov     ecx, eax
                push    ebx
                mov     ebx, eax
                push    esi
                xor     esi, esi
                shl     ebx, 4
                xor     esi, eax
                push    edi
                mov     edi, [ebp+arg_0]
                xor     ecx, edi
                mov     [esp+50h+var_40], ecx
                mov     eax, edi
                shr     eax, 4
                add     ebx, eax
                movzx   edx, cl
                mov     eax, ebx
                mov     [esp+50h+var_38], ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+50h+var_44]
                mov     eax, [eax+edx*8-570h]
                mov     edx, ebx
                mov     ebx, [esp+50h+var_44]
                shr     edx, 10h
                sub     edx, 4CBh
                mov     eax, [eax+ecx-0ADh]
                xor     ecx, ecx
                mov     [esp+50h+var_30], eax
                mov     eax, [esp+50h+var_40]
                shr     eax, 8
                movzx   eax, al
                add     edx, [eax+ebx-46h]
                mov     [esp+50h+var_24], edx
                mov     edx, ebx
                adc     ecx, [eax+edx-42h]
                xor     esi, 0
                mov     edx, [esp+50h+var_40]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 94h
                mov     [esp+50h+var_20], ecx
                mov     ecx, ebx
                mov     ecx, [ecx+eax*8]
                mov     [esp+50h+var_1C], ecx
                mov     ecx, ebx
                mov     ebx, [esp+50h+var_38]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+50h+var_18], eax
                mov     eax, [esp+50h+var_44]
                movzx   ecx, bl
                mov     [esp+50h+var_10], ecx
                mov     eax, [eax+ecx*8-508h]
                mov     [esp+50h+var_2C], eax
                mov     eax, [esp+50h+var_44]
                mov     eax, [eax+ecx*8-504h]
                mov     ecx, edx
                mov     [esp+50h+var_28], eax
                mov     eax, [ebp+arg_4]
                xor     esi, eax
                xor     ecx, eax
                mov     [esp+50h+var_4], esi
                mov     esi, eax
                xor     ecx, edi
                sub     esi, edi
                shr     eax, 4
                shl     edi, 4
                xor     esi, ecx
                add     eax, edi
                mov     [esp+50h+var_14], ecx
                xor     eax, edx
                xor     esi, ebx
                xor     eax, ecx
                mov     [esp+50h+var_3C], eax
                mov     eax, ecx
                xor     eax, esi
                movzx   ebx, al
                mov     [esp+50h+var_34], eax
                mov     [esp+50h+var_C], ebx
                mov     edi, [esp+50h+var_44]
                mov     ecx, edx
                shr     eax, 8
                shr     ecx, 18h
                add     al, 65h ; 'e'
                movzx   eax, al
                cdq
                push    offset dword_40BECC
                mov     edi, [ecx+edi-2Ah]
                sub     edi, eax
                mov     eax, [esp+54h+var_44]
                mov     ecx, [ecx+eax-26h]
                lea     eax, [ebx-0DAh]
                mov     ebx, [esp+54h+var_3C]
                sbb     ecx, edx
                add     edi, eax
                adc     ecx, 0
                xor     ebx, esi
                xor     ebx, [esp+54h+var_40]
                mov     [esp+54h+var_8], ecx
                mov     edx, ebx
                mov     ecx, [esp+54h+var_44]
                xor     edx, 561D9231h
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_3C]
                lea     edx, [esi-1DF96187h]
                mov     esi, [esp+50h+var_44]
                xor     eax, 868F3FA4h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_40]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_30]
                movzx   eax, cl
                xor     eax, 0DDh
                mov     [esi+eax*8], edx
                mov     edx, esi
                and     dword ptr [edx+eax*8+4], 0
                mov     eax, ecx
                mov     edx, [esp+50h+var_2C]
                shr     eax, 8
                not     al
                movzx   eax, al
                mov     [eax+esi], edx
                mov     edx, [esp+50h+var_28]
                mov     [eax+esi+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_24]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0F7h
                mov     [esi+eax*8-360h], edx
                mov     edx, [esp+50h+var_20]
                mov     [esi+eax*8-35Ch], edx
                mov     edx, esi
                mov     eax, [esp+50h+var_1C]
                mov     [edx+ecx*8], eax
                mov     eax, [esp+50h+var_18]
                mov     [edx+ecx*8+4], eax
                mov     edx, [esp+50h+var_14]
                movzx   eax, dl
                xor     edx, 0F4E90D6Fh
                movzx   ecx, bl
                mov     ebx, esi
                mov     esi, [esp+50h+var_40]
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, 47h
                xor     ecx, [esp+50h+var_10]
                xor     esi, 0A0C0D4E2h
                xor     ecx, [esp+50h+var_C]
                mov     [ebx+ecx*8-1E4h], eax
                xor     eax, eax
                mov     [ebx+ecx*8-1E8h], edi
                or      eax, esi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___22       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___106      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 54h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+5Ch+var_4], 0
                lea     ebx, [eax-150D659Ah]
                mov     [esp+5Ch+var_4C], esi
                lea     edx, [eax+41246B2Ch]
                push    edi
                mov     edi, [ebp+arg_4]
                add     ebx, edi
                mov     eax, ebx
                mov     [esp+60h+var_50], edx
                shr     eax, 8
                movzx   eax, al
                push    4
                mov     [esp+64h+var_44], ebx
                mov     ecx, [eax+esi+12h]
                mov     eax, [eax+esi+16h]
                mov     dword ptr [esp+64h+var_38+4], eax
                movzx   eax, dl
                xor     eax, 25h
                mov     dword ptr [esp+64h+var_38], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+64h+var_20], eax
                movzx   eax, bl
                mov     [esp+64h+var_10], eax
                xor     eax, 75h
                mov     [esp+64h+var_24], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+64h+var_18], eax
                mov     eax, edx
                shr     eax, 8
                mov     edx, ebx
                movzx   eax, al
                xor     eax, 85h
                shr     edx, 18h
                mov     [esp+64h+var_1C], ecx
                sub     edx, 59h ; 'Y'
                xor     ecx, ecx
                add     edx, [eax+esi]
                mov     [esp+64h+var_2C], edx
                adc     ecx, [eax+esi+4]
                mov     eax, ebx
                mov     edx, [esp+64h+var_50]
                mov     ebx, [esp+64h+var_4C]
                shr     edx, 18h
                mov     [esp+64h+var_28], ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esi+edx*8-218h]
                add     eax, 0FFFFFF18h
                add     eax, ecx
                pop     ecx
                mul     ecx
                mov     ecx, [esp+60h+var_50]
                mov     edx, edi
                sub     edx, [ebp+arg_0]
                mov     esi, eax
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 88h
                mov     [esp+60h+var_48], edx
                push    offset dword_40BE00
                add     esi, [ecx+ebx]
                mov     ebx, edx
                xor     ebx, [esp+64h+var_50]
                mov     ecx, [esp+64h+var_4C]
                mov     [esp+64h+var_14], ebx
                lea     edx, [ebx+4F5CB885h]
                call    VBN_TransformContext
                mov     eax, [esi]
                lea     edx, [edi+33E5165Eh]
                mov     [esp+60h+var_C], eax
                mov     eax, [esp+60h+var_48]
                xor     eax, [esp+60h+var_44]
                xor     eax, [esp+60h+var_50]
                xor     edx, ebx
                mov     [esp+60h+var_48], eax
                xor     edx, [esp+60h+var_44]
                mov     ecx, [ebp+arg_0]
                add     ecx, 0BFC8F5E8h
                mov     [esp+60h+var_8], edx
                add     ecx, edi
                xor     ecx, eax
                xor     ecx, ebx
                mov     ebx, [ebp+arg_0]
                xor     ebx, edx
                mov     [esp+60h+var_30], ecx
                xor     ebx, eax
                mov     eax, ecx
                xor     eax, edx
                xor     ebx, edi
                xor     eax, [esp+60h+var_50]
                mov     [esp+60h+var_40], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 82h
                sub     eax, 2A5Ch
                mov     [esp+60h+var_3C], ebx
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+60h+var_40]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+60h+var_38]
                mov     edi, [esp+60h+var_3C]
                adc     edx, dword ptr [esp+60h+var_38+4]
                xor     ecx, ecx
                xor     eax, 8871BEA3h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi+72B119CFh]
                mov     ecx, edi
                mov     [ebx+4], esi
                xor     ecx, [esp+60h+var_30]
                xor     ecx, [esp+60h+var_44]
                xor     ecx, [esp+60h+var_50]
                mov     edi, [esp+60h+var_4C]
                mov     esi, [esp+60h+var_2C]
                movzx   eax, cl
                xor     eax, 30h
                mov     [edi+eax*8], esi
                mov     esi, [esp+60h+var_28]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+60h+var_24]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2Dh
                mov     [edi+eax*8], esi
                mov     esi, [esp+60h+var_20]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [edi+eax*8-368h], ebx
                mov     [edi+eax*8-364h], edx
                mov     eax, [esp+60h+var_1C]
                mov     [ecx+edi-43h], eax
                mov     eax, [esp+60h+var_18]
                mov     [ecx+edi-3Fh], eax
                mov     eax, [esp+60h+var_40]
                movzx   ecx, al
                mov     eax, [esp+60h+var_14]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+60h+var_C]
                xor     ecx, 13h
                xor     ecx, [esp+60h+var_10]
                mov     [edi+ecx*8], eax
                and     dword ptr [edi+ecx*8+4], 0
                xor     eax, eax
                mov     ecx, [esp+60h+var_8]
                mov     edx, [esp+60h+var_48]
                xor     ecx, 453D7157h
                pop     edi
                pop     esi
                add     edx, 4B7C698Ch
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___106      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___134      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                lea     ebx, [edx+1DDACEDh]
                add     ebx, esi
                push    edi
                mov     edi, ecx
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+38h+var_2C], edi
                push    offset dword_40A9B0
                mov     ecx, [eax+edi+96h]
                mov     eax, [eax+edi+9Ah]
                mov     dword ptr [esp+3Ch+var_20+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+3Ch+var_20], ecx
                mov     ecx, ebx
                shr     ecx, 18h
                mov     eax, [eax+edi-1Eh]
                mov     eax, [eax+ecx-96h]
                movzx   ecx, bl
                mov     [esp+3Ch+var_10], eax
                mov     [esp+3Ch+var_8], ecx
                mov     eax, [ecx+edi-0A0h]
                mov     [esp+3Ch+var_18], eax
                mov     eax, [ecx+edi-9Ch]
                mov     edi, esi
                mov     ecx, [esp+3Ch+var_2C]
                mov     [esp+3Ch+var_14], eax
                mov     eax, edx
                shl     eax, 4
                shr     edi, 4
                add     edi, eax
                mov     edx, edi
                mov     [esp+3Ch+var_24], edi
                xor     edx, 0D6B7A086h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                lea     ecx, [edx-51B4469Bh]
                sub     edx, esi
                add     ecx, esi
                mov     eax, edx
                xor     eax, edi
                xor     ecx, ebx
                xor     eax, ebx
                mov     [esp+38h+var_C], ecx
                xor     eax, 0FA526430h
                mov     ebx, edi
                xor     edx, eax
                mov     [esp+38h+var_4], eax
                xor     ebx, ecx
                xor     edx, ecx
                xor     ebx, eax
                xor     edx, 29AF687Fh
                mov     eax, ebx
                mov     [esp+38h+var_28], edx
                shr     eax, 8
                xor     esi, esi
                xor     al, 82h
                movzx   edi, bl
                movzx   eax, al
                sub     edi, 41h ; 'A'
                cdq
                sub     edi, eax
                mov     eax, [esp+38h+var_28]
                sbb     esi, edx
                add     edi, dword ptr [esp+38h+var_20]
                lea     edx, [ecx-0F158D73h]
                adc     esi, dword ptr [esp+38h+var_20+4]
                add     eax, 4E5BBD93h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, ebx
                shr     eax, 10h
                mov     [edi], ecx
                mov     [edi+4], edx
                movzx   eax, al
                mov     edx, [esp+38h+var_2C]
                mov     ecx, [esp+38h+var_18]
                shr     ebx, 18h
                mov     [eax+edx-5Fh], ecx
                mov     ecx, [esp+38h+var_14]
                mov     [eax+edx-5Bh], ecx
                and     dword ptr [ebx+edx+0A1h], 0
                mov     eax, [esp+38h+var_10]
                mov     [ebx+edx+9Dh], eax
                mov     edx, [esp+38h+var_C]
                mov     eax, [esp+38h+var_28]
                movzx   eax, al
                movzx   ecx, dl
                xor     edx, 0DB35D176h
                xor     ecx, eax
                mov     eax, [esp+38h+var_2C]
                xor     ecx, 0D5h
                xor     ecx, [esp+38h+var_8]
                mov     [eax+ecx*8], edi
                mov     [eax+ecx*8+4], esi
                xor     eax, eax
                mov     ecx, [esp+38h+var_4]
                pop     edi
                add     ecx, 5ED8C8E2h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___134      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___145_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_8], edx
                mov     eax, edx
                shr     eax, 10h
                xor     al, 58h
                push    edi
                mov     edi, ecx
                movzx   eax, al
                movzx   ecx, dl
                cdq
                mov     [ebp+var_4], edi
                push    offset sub_40A9D0
                mov     esi, [ecx+edi-4Bh]
                mov     edi, [ecx+edi-47h]
                sub     esi, eax
                mov     eax, [ebp+var_8]
                mov     ecx, [ebp+var_4]
                sbb     edi, edx
                shr     eax, 8
                xor     al, 6Ah
                movzx   eax, al
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                xor     edx, 13D835FAh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx-39861A24h]
                xor     edx, edx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                mov     eax, [ebp+arg_0]
                sub     eax, [ebp+arg_4]
                xor     eax, [ebp+var_8]
                pop     edi
                pop     esi
                xor     eax, 6C77DCAEh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___145_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___94_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                push    offset dword_40C5F0
                mov     [ebp+var_C], esi
                lea     eax, [edi+16676D7Bh]
                add     eax, [ebp+arg_4]
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     ecx, [eax+esi+51h]
                mov     ebx, [eax+esi+55h]
                mov     eax, edi
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_10], ecx
                lea     edx, [ecx-0A3DF191h]
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0DAh
                shr     ecx, 10h
                movzx   eax, al
                xor     cl, 79h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+arg_0]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     eax, ecx
                xor     ecx, [ebp+var_4]
                xor     eax, [ebp+var_10]
                xor     ecx, 70D6F5F6h
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                add     eax, 34FC0B2Fh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___94_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___144_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                and     [ebp+var_14], 0
                mov     ebx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                push    offset dword_40C9B0
                lea     eax, [esi-74992EADh]
                mov     [ebp+var_10], ebx
                add     eax, edi
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 0D4h
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [ebp+var_8], ecx
                mov     ecx, edi
                mov     [ebp+var_C], eax
                mov     eax, esi
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     edx, ecx
                mov     [ebp+var_14], ecx
                xor     edx, 66A275F4h
                mov     ecx, ebx
                call    VBN_TransformContext
                mov     ebx, edi
                mov     eax, esi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 3Dh
                sub     al, 3
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                mov     esi, [ebp+arg_0]
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     edi, [ebp+arg_4]
                adc     edx, [ebp+var_C]
                mov     [ecx+1B8h], eax
                lea     eax, [esi+52371FE3h]
                add     eax, edi
                mov     [ecx+1BCh], edx
                xor     edi, esi
                xor     eax, ebx
                xor     edi, [ebp+var_14]
                xor     edx, edx
                xor     edi, [ebp+var_4]
                xor     eax, [ebp+var_14]
                xor     edi, 1EF0059Bh
                sub     eax, 3DB99448h
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___144_stk  endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___44_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                add     eax, 0D62E90DCh
                mov     [ebp+var_4], eax
                add     esi, 8A77BCB8h
                movzx   eax, al
                mov     edx, esi
                push    edi
                push    offset dword_40C1F0
                xor     edx, 648EF87Fh
                mov     [ebp+var_8], ecx
                mov     ebx, [eax+ecx-48h]
                mov     edi, [eax+ecx-44h]
                mov     [ebp+var_C], esi
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                xor     eax, ecx
                sub     ecx, [ebp+arg_4]
                xor     ecx, eax
                mov     [ebp+var_10], eax
                xor     ecx, esi
                xor     ecx, 948F60B7h
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                add     al, 43h ; 'C'
                sub     esi, 0BAh
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                mov     ebx, [ebp+arg_4]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_10]
                shr     eax, 4
                xor     ecx, 0E942956Dh
                shl     ebx, 4
                add     eax, ebx
                xor     eax, [ebp+var_C]
                xor     eax, [ebp+var_4]
                pop     edi
                pop     esi
                sub     eax, 0ECC9023h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___44_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___19       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                sub     ebx, [ebp+arg_0]
                mov     [esp+50h+var_44], esi
                push    offset dword_40C0AC
                lea     edx, [edi-3B218023h]
                mov     [esp+54h+var_1C], ebx
                mov     eax, edx
                mov     [esp+54h+var_18], edx
                shr     eax, 18h
                xor     eax, 0BBh
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 5Ah
                mov     dword ptr [esp+54h+var_34], ecx
                movzx   ecx, al
                mov     eax, [esi+edx*8]
                mov     eax, [eax+ecx-45h]
                mov     [esp+54h+var_20], eax
                lea     eax, [edi-3B218023h]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     ecx, 2Dh
                movzx   edx, al
                xor     eax, eax
                sub     edx, 7Ah ; 'z'
                add     edx, [esi+ecx*8]
                mov     dword ptr [esp+54h+var_14], edx
                lea     edx, [edi-3B218023h]
                adc     eax, [esi+ecx*8+4]
                mov     dword ptr [esp+54h+var_14+4], eax
                movzx   eax, bl
                mov     ecx, [eax+esi-19h]
                mov     eax, [eax+esi-15h]
                mov     [esp+54h+var_24], eax
                movzx   eax, dl
                xor     eax, 74h
                mov     [esp+54h+var_28], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     esi, [ebp+arg_0]
                add     esi, 8EAC1B7Dh
                mov     [esp+54h+var_C], ecx
                mov     ecx, [esp+54h+var_44]
                xor     esi, edx
                mov     [esp+54h+var_8], eax
                lea     edx, [esi+2640FFF3h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                lea     eax, [edi-3B218023h]
                sub     ecx, edi
                mov     edx, ecx
                xor     ecx, esi
                xor     ecx, ebx
                xor     edx, ebx
                xor     edx, eax
                xor     ecx, 9D654088h
                mov     [esp+50h+var_38], ecx
                xor     edx, 77E42120h
                mov     eax, ebx
                mov     [esp+50h+var_4], edx
                xor     eax, edx
                lea     ecx, [edi-5D9DED81h]
                xor     ecx, [esp+50h+var_38]
                xor     eax, esi
                xor     ecx, edx
                mov     [esp+50h+var_40], eax
                mov     [esp+50h+var_3C], ecx
                mov     ecx, eax
                xor     ecx, [esp+50h+var_38]
                lea     eax, [edi-3B218023h]
                xor     ecx, eax
                xor     ecx, 53BE962Ah
                mov     eax, ecx
                mov     [esp+50h+var_2C], ecx
                shr     eax, 8
                xor     cl, 2Bh
                sub     al, 76h ; 'v'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+50h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+50h+var_40]
                sbb     edx, edi
                add     ebx, dword ptr [esp+50h+var_34]
                mov     edi, [esp+50h+var_44]
                adc     edx, dword ptr [esp+50h+var_34+4]
                xor     ecx, ecx
                xor     eax, 2EDF3DD4h
                add     esi, 4E53ACF7h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     eax, ecx
                mov     [ebx+4], esi
                mov     esi, [esp+50h+var_28]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 74h
                mov     [edi+eax*8-660h], esi
                mov     esi, [esp+50h+var_24]
                mov     [edi+eax*8-65Ch], esi
                mov     esi, edi
                mov     eax, [esp+50h+var_20]
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_1C]
                xor     ecx, [esp+50h+var_18]
                mov     esi, dword ptr [esp+50h+var_14]
                movzx   eax, cl
                mov     [edi+eax*8-578h], esi
                mov     esi, dword ptr [esp+50h+var_14+4]
                mov     [edi+eax*8-574h], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [edi+eax*8-504h], edx
                mov     edx, [esp+50h+var_4]
                mov     [edi+eax*8-508h], ebx
                add     edx, 0F4CD5EADh
                movzx   eax, cl
                mov     ecx, [esp+50h+var_C]
                xor     eax, 3Eh
                mov     [eax+edi], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [eax+edi+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_38]
                pop     edi
                xor     ecx, 0ADE7677Fh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___19       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___120_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                and     [ebp+var_14], 0
                mov     edx, ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                add     ebx, 812BFDBBh
                add     ebx, esi
                mov     [ebp+var_4], edx
                sub     esi, [ebp+arg_0]
                movzx   eax, bl
                push    edi
                push    offset dword_40C270
                mov     [ebp+var_10], ebx
                mov     ecx, [eax+edx-49h]
                mov     edi, [eax+edx-45h]
                mov     edx, esi
                mov     [ebp+var_8], ecx
                xor     edx, 0F9A67812h
                mov     ecx, [ebp+var_4]
                mov     [ebp+var_C], esi
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                mov     ecx, [ebp+arg_4]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                xor     ecx, ebx
                lea     ebx, [edx+374415EBh]
                xor     ebx, ecx
                mov     [ebp+var_14], ecx
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 66h
                shr     eax, 8
                add     eax, 4F6Ch
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_8]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                xor     eax, [ebp+var_C]
                xor     eax, [ebp+var_10]
                mov     [ecx+1BCh], edx
                add     eax, 6E69AA2Ah
                mov     ecx, [ebp+var_14]
                xor     edx, edx
                pop     edi
                xor     ecx, 18FE164Fh
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___120_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___116      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                shl     edx, 4
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shr     eax, 4
                add     edx, eax
                mov     [esp+54h+var_48], esi
                mov     eax, ebx
                mov     [esp+54h+var_38], edx
                sub     eax, ecx
                mov     [esp+54h+var_4C], eax
                lea     eax, [ecx+108F7FE7h]
                add     eax, ebx
                xor     eax, edx
                mov     [esp+54h+var_44], eax
                mov     eax, edx
                shr     eax, 18h
                push    edi
                push    offset dword_40BF10
                mov     edi, [eax+esi-9Bh]
                mov     eax, [esp+5Ch+var_4C]
                movzx   eax, al
                mov     ecx, [eax+esi+6Ch]
                mov     eax, [eax+esi+70h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, [eax+esi+35h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 92h
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8-308h]
                mov     [esp+5Ch+var_1C], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8-304h]
                mov     [esp+5Ch+var_18], eax
                movzx   eax, dl
                mov     edx, [esp+5Ch+var_44]
                mov     ecx, [eax+ecx-8Bh]
                mov     dword ptr [esp+5Ch+var_24], ecx
                lea     edx, [edx-571AE4FDh]
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx-87h]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_38]
                mov     ecx, edx
                mov     eax, [esp+58h+var_4C]
                xor     ecx, eax
                shr     eax, 10h
                xor     ecx, edx
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_40], ecx
                mov     eax, [edi+eax*4-68h]
                mov     [esp+58h+var_28], eax
                mov     eax, [ebp+arg_0]
                mov     esi, eax
                sub     esi, ebx
                xor     esi, [esp+58h+var_44]
                xor     esi, [esp+58h+var_4C]
                xor     esi, 35993566h
                lea     ebx, [eax-66BB1EE2h]
                mov     [esp+58h+var_C], esi
                xor     ebx, ecx
                xor     ebx, [esp+58h+var_44]
                mov     ecx, edx
                xor     ecx, esi
                mov     [esp+58h+var_8], ebx
                xor     ecx, [esp+58h+var_40]
                mov     eax, ebx
                xor     eax, esi
                mov     [esp+58h+var_2C], ecx
                xor     eax, edx
                xor     eax, 0AFA17AAh
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                xor     eax, ebx
                xor     eax, [esp+58h+var_4C]
                xor     eax, edx
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 49h
                add     al, 11h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [esp+58h+var_3C]
                sub     ebx, esi
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     dword ptr [esp+58h+var_34], ebx
                adc     eax, dword ptr [esp+58h+var_34+4]
                lea     esi, [edx+354CA35Dh]
                mov     dword ptr [esp+58h+var_34+4], eax
                xor     ecx, ecx
                mov     eax, [esp+58h+var_38]
                xor     edi, edi
                add     eax, 9D0D4D0Ah
                or      esi, edi
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [ebx+4], esi
                mov     ebx, edx
                xor     ebx, [esp+58h+var_2C]
                xor     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_4C]
                mov     esi, [esp+58h+var_48]
                movzx   eax, bl
                xor     eax, 1Dh
                mov     [esi+eax*8], ecx
                mov     ecx, ebx
                mov     [esi+eax*8+4], edi
                mov     al, byte ptr [esp+58h+var_40]
                xor     al, 4
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_24]
                adc     edx, dword ptr [esp+58h+var_24+4]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esi+ecx*8-418h], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 44h
                mov     [esi+ecx*8-414h], edx
                mov     ecx, [esp+58h+var_1C]
                shr     ebx, 18h
                xor     ebx, 0BDh
                mov     [eax+esi], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [eax+esi+4], ecx
                mov     eax, [esp+58h+var_14]
                mov     [esi+ebx*8], eax
                mov     eax, [esp+58h+var_10]
                mov     [esi+ebx*8+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_C]
                movzx   eax, al
                add     edx, 53A746D1h
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, dword ptr [esp+58h+var_34]
                xor     ecx, 51h
                mov     [esi+ecx*8], eax
                mov     eax, dword ptr [esp+58h+var_34+4]
                mov     [esi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                xor     ecx, 0C7CF9998h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___116      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___104_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     eax, edi
                mov     [ebp+var_C], esi
                sub     eax, [ebp+arg_0]
                mov     [ebp+var_4], eax
                movzx   eax, al
                lea     edx, [edi-4D1559A7h]
                push    offset dword_40AA10
                xor     edx, 36D68B2Dh
                mov     ecx, [eax+esi+5Ah]
                mov     ebx, [eax+esi+5Eh]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     ecx, edi
                shl     ecx, 4
                shr     eax, 4
                add     ecx, eax
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                mov     [ebp+var_10], ecx
                shr     eax, 8
                xor     cl, 16h
                add     al, 3Ah ; ':'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                xor     eax, eax
                mov     ebx, [ebp+arg_0]
                mov     [ecx+1BCh], edx
                add     ebx, 6D743CE6h
                mov     ecx, [ebp+arg_4]
                pop     edi
                lea     esi, [ecx-4D1559A7h]
                lea     edx, [ecx-7E90878h]
                add     ecx, ebx
                xor     ecx, [ebp+var_10]
                xor     edx, esi
                xor     edx, [ebp+var_4]
                xor     ecx, esi
                sub     ecx, 410270FCh
                add     edx, 56F18F83h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___104_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___56_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                sub     eax, edx
                and     [ebp+var_10], 0
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], eax
                mov     ecx, eax
                mov     [ebp+var_8], edi
                xor     ecx, 0F361A87Ch
                movzx   eax, cl
                push    offset dword_40BCC0
                mov     ebx, [eax+edi-0Bh]
                mov     edi, [eax+edi-7]
                mov     eax, edx
                mov     [ebp+var_C], ebx
                xor     eax, esi
                mov     ebx, [ebp+var_4]
                xor     ebx, ecx
                mov     [ebp+var_10], eax
                xor     ebx, 6E674ED3h
                mov     [ebp+var_4], ebx
                lea     ebx, [esi-648E9B34h]
                add     esi, 7A207C7Eh
                xor     ebx, eax
                add     edx, esi
                xor     ebx, ecx
                xor     edx, [ebp+var_4]
                mov     ecx, [ebp+var_8]
                xor     edx, eax
                xor     edx, 0DDFC4929h
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                sub     eax, 735Ch
                sub     esi, 2Bh ; '+'
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, [ebp+var_C]
                mov     edx, [ebp+var_10]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, 9A166888h
                mov     ecx, [ebp+var_4]
                xor     eax, eax
                pop     edi
                xor     ecx, 3DC430F5h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___56_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001ec8 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = qword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 34h
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                xor     edx, ebx
                mov     [esp+38h+var_28], ecx
                mov     eax, ebx
                mov     ecx, [ebp+arg_4]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                and     [esp+38h+var_4], 0
                mov     eax, edx
                mov     [esp+38h+var_2C], edx
                shr     eax, 8
                xor     al, 68h
                mov     [esp+38h+var_24], ecx
                movzx   eax, al
                cdq
                push    esi
                mov     dword ptr [esp+3Ch+var_C], eax
                mov     esi, ebx
                sub     esi, [ebp+arg_4]
                lea     eax, [ecx-3F50E50Fh]
                push    edi
                mov     [esp+40h+var_20], ecx
                mov     edi, esi
                mov     ecx, [esp+40h+var_2C]
                xor     edi, ecx
                mov     [esp+40h+var_10], eax
                xor     edi, 6BC1DBB5h
                mov     eax, edi
                mov     dword ptr [esp+40h+var_C+4], edx
                xor     eax, 3B18A81Ch
                mov     [esp+40h+var_30], esi
                mov     [esp+40h+var_14], eax
                mov     edx, edi
                mov     eax, ecx
                xor     edx, 37DC6E36h
                xor     eax, 0E92A3F67h
                mov     [esp+40h+var_18], eax
                movzx   eax, cl
                mov     ecx, [esp+40h+var_28]
                push    offset dword_40ADC0
                mov     esi, [eax+ecx-30h]
                call    VBN_TransformContext
                mov     eax, [esp+40h+var_2C]
                lea     edx, [ebx+674739A3h]
                mov     ecx, [esp+40h+var_30]
                xor     edx, edi
                xor     ecx, eax
                xor     edx, eax
                xor     ecx, edi
                mov     [esp+40h+var_30], edx
                xor     ecx, 845576B9h
                mov     ebx, ecx
                xor     ebx, edi
                xor     ebx, eax
                xor     ebx, 0DC9196D4h
                mov     eax, ebx
                mov     [esp+40h+var_1C], ebx
                mov     ebx, [esp+40h+var_24]
                xor     eax, edx
                xor     eax, edi
                xor     ebx, eax
                test    esi, esi
                jz      short loc_48A286
                mov     eax, [esp+40h+var_30]
                xor     ecx, 5AABCDBDh
                xor     edx, edx
                xor     eax, 0FFE941F8h
                or      edx, eax
                mov     esi, ecx
                jmp     short loc_48A2A3
; ---------------------------------------------------------------------------

loc_48A286:                             ; CODE XREF: VBNCB_unnamed_80001ec8+DD¡üj
                mov     eax, [esp+40h+var_1C]
                xor     edx, ecx
                xor     edx, [esp+40h+var_20]
                xor     esi, esi
                xor     edx, [esp+40h+var_2C]
                add     eax, 0E00361BDh
                xor     edx, 7B8E700Fh
                or      esi, eax

loc_48A2A3:                             ; CODE XREF: VBNCB_unnamed_80001ec8+F4¡üj
                mov     edi, [esp+40h+var_28]
                mov     ecx, [esp+40h+var_18]
                movzx   eax, bl
                and     dword ptr [eax+edi+22h], 0
                mov     [eax+edi+1Eh], ecx
                mov     eax, ebx
                mov     ecx, [esp+40h+var_14]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [eax+edi+71h], 0
                mov     [eax+edi+6Dh], ecx
                mov     eax, ebx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+40h+var_10]
                shr     ebx, 18h
                and     dword ptr [edi+ecx*8-2Ch], 0
                xor     ebx, 2Eh
                mov     [edi+ecx*8-30h], eax
                mov     eax, dword ptr [esp+40h+var_C]
                mov     [ebx+edi], eax
                mov     eax, dword ptr [esp+40h+var_C+4]
                mov     [ebx+edi+4], eax
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001ec8 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___138_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shr     eax, 4
                push    esi
                mov     [ebp+var_4], ecx
                mov     esi, edx
                shl     esi, 4
                lea     ecx, [ebx+6AD6DCEBh]
                add     esi, eax
                add     ecx, edx
                mov     eax, ebx
                mov     [ebp+var_8], esi
                sub     ebx, edx
                shl     eax, 4
                push    edi
                xor     ebx, esi
                mov     edi, edx
                mov     esi, [ebp+var_4]
                xor     ebx, ecx
                shr     edi, 4
                xor     ebx, 8D44C2D2h
                add     edi, eax
                mov     eax, ebx
                shr     eax, 8
                xor     edi, ecx
                sub     al, 3Bh ; ';'
                movzx   ecx, cl
                movzx   eax, al
                cdq
                push    offset dword_40C830
                mov     esi, [ecx+esi-13h]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax-0Fh]
                sbb     ecx, edx
                movzx   eax, bl
                sub     eax, 30h ; '0'
                mov     edx, edi
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                xor     edx, 95AA2092h
                mov     [eax+1BCh], ecx
                mov     ecx, eax
                mov     [eax+1B8h], esi
                call    VBN_TransformContext
                mov     edx, [ebp+var_8]
                lea     ecx, [edi-26D5A06Dh]
                pop     edi
                xor     eax, eax
                add     edx, 4900E23Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___138_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___14_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     edx, ecx
                push    edi
                mov     [ebp+var_4], edx
                push    offset loc_40C0C0
                lea     ebx, [esi-1E249D22h]
                movzx   eax, bl
                mov     [ebp+var_14], ebx
                mov     ecx, [eax+edx+0A0h]
                mov     edi, [eax+edx+0A4h]
                mov     eax, esi
                sub     eax, [ebp+arg_4]
                xor     eax, 4B5E7C62h
                mov     [ebp+var_C], ecx
                mov     ecx, [ebp+var_4]
                mov     [ebp+var_8], eax
                lea     edx, [eax+2912E9DAh]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     eax, [ecx-3A0A5BBFh]
                sub     ecx, esi
                xor     eax, ebx
                mov     [ebp+var_10], ecx
                mov     [ebp+var_18], eax
                mov     ebx, ecx
                xor     ebx, eax
                xor     ebx, [ebp+var_8]
                mov     eax, ebx
                xor     bl, 0B9h
                shr     eax, 8
                sub     eax, 3B02h
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+var_10]
                xor     eax, [ebp+var_8]
                xor     eax, [ebp+var_14]
                mov     [ecx+1BCh], edx
                sub     eax, 144589C5h
                mov     ecx, [ebp+var_18]
                xor     edx, edx
                pop     edi
                xor     ecx, 0EF1752D2h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                Retn 8
loc_40C0C0:                             ; DATA XREF: vBng___14_stk+13¡ýo
                push    ds
                xchg    eax, ebx
                Retf
                
vBng___14_stk EndP

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002023 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                sub     ebx, esi
                mov     [esp+24h+var_14], esi
                push    edi
                mov     edi, ecx
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, 0D8h
                mov     [esp+28h+var_C], edi
                mov     eax, [eax+edi-35h]
                mov     edi, edx
                xor     edi, esi
                mov     [esp+28h+var_10], edi
                mov     ecx, [ecx+eax]
                xor     eax, eax
                xor     eax, edx
                mov     [esp+28h+var_4], eax
                mov     eax, edi
                xor     eax, 2A84B712h
                mov     edi, ecx
                cmp     eax, ecx
                setnbe  [esp+28h+var_15]
                sub     [esp+28h+var_14], edx
                mov     edx, [esp+28h+var_10]
                sub     edi, eax
                xor     [esp+28h+var_14], edx
                xor     edx, esi
                xor     [esp+28h+var_14], ebx
                xor     [esp+28h+var_14], 488E49F3h
                mov     [esp+28h+var_8], edi
                lea     edi, [esi-447ABEC3h]
                mov     esi, edx
                xor     edi, ebx
                xor     esi, [ebp+arg_4]
                mov     edx, ebx
                xor     esi, edi
                xor     edx, esi
                mov     [esp+28h+var_10], esi
                mov     esi, [esp+28h+var_14]
                xor     edx, esi
                mov     [esp+28h+var_14], edx
                cmp     eax, ecx
                jbe     short loc_48A531
                xor     edx, edx
                lea     eax, [esi+6F85F30Fh]
                xor     edi, 0EBD619B5h
                or      edx, eax
                jmp     short loc_48A54E
; ---------------------------------------------------------------------------

loc_48A531:                             ; CODE XREF: VBNCB_unnamed_80002023+9D¡üj
                mov     eax, [esp+28h+var_10]
                xor     ebx, esi
                xor     ebx, edi
                add     eax, 88D7C4h
                sub     ebx, 32DD84B3h
                xor     edi, edi
                mov     [esp+28h+var_10], ebx
                or      edi, eax
                mov     edx, ebx

loc_48A54E:                             ; CODE XREF: VBNCB_unnamed_80002023+AF¡üj
                mov     eax, [esp+28h+var_14]
                mov     esi, [esp+28h+var_C]
                mov     bl, [esp+28h+var_15]
                movzx   ecx, al
                xor     ecx, 0C5h
                cmp     [esp+28h+var_8], 0
                mov     [esi+ecx*8], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                xor     ecx, 2Bh
                mov     edx, edi
                pop     edi
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002023 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000207a proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_21          = byte ptr -21h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                and     [esp+30h+var_4], 0
                mov     [esp+30h+var_C], ebx
                mov     [esp+30h+var_1C], esi
                lea     eax, [edi-275E9C2Bh]
                movzx   edx, al
                shr     eax, 8
                xor     edx, 44h
                movzx   ecx, al
                mov     eax, [edx+ebx]
                lea     edx, [edi-670DB3E9h]
                add     edx, esi
                mov     ebx, [eax+ecx+49h]
                mov     eax, edi
                mov     ecx, [ebp+arg_0]
                sub     eax, esi
                mov     [esp+30h+var_20], eax
                mov     esi, eax
                lea     eax, [edi-275E9C2Bh]
                xor     edi, edi
                xor     esi, eax
                xor     esi, 0B466F676h
                lea     eax, [esi-1E01BD2Ah]
                or      edi, eax
                mov     eax, ebx
                sub     eax, edi
                cmp     edi, ebx
                mov     [esp+30h+var_10], eax
                mov     eax, [esp+30h+var_1C]
                setnbe  [esp+30h+var_21]
                xor     [esp+30h+var_1C], ecx
                sub     eax, ecx
                xor     [esp+30h+var_20], esi
                xor     [esp+30h+var_20], edx
                mov     [esp+30h+var_14], eax
                xor     eax, edx
                mov     edx, [esp+30h+var_20]
                mov     [esp+30h+var_18], eax
                xor     edx, 12B6F833h
                lea     eax, [ecx-275E9C2Bh]
                mov     [esp+30h+var_20], edx
                xor     [esp+30h+var_18], eax
                mov     ecx, [esp+30h+var_1C]
                xor     ecx, [esp+30h+var_18]
                xor     ecx, esi
                mov     [esp+30h+var_1C], ecx
                xor     ecx, edx
                xor     ecx, eax
                xor     ecx, 9165504h
                mov     [esp+30h+var_8], ecx
                cmp     edi, ebx
                jbe     short loc_48A675
                mov     eax, [esp+30h+var_20]
                xor     edx, edx
                mov     esi, [esp+30h+var_18]
                add     eax, 5CF15CAAh
                add     esi, 0A28FB67h
                or      edx, eax
                jmp     short loc_48A694
; ---------------------------------------------------------------------------

loc_48A675:                             ; CODE XREF: VBNCB_unnamed_8000207a+CA¡üj
                mov     edx, [esp+30h+var_14]
                xor     esi, esi
                xor     edx, [esp+30h+var_20]
                xor     edx, [esp+30h+var_18]
                mov     eax, [esp+30h+var_1C]
                xor     edx, 0AB50DD4Ch
                add     eax, 3E240C36h
                or      esi, eax

loc_48A694:                             ; CODE XREF: VBNCB_unnamed_8000207a+E3¡üj
                mov     edi, [esp+30h+var_C]
                cmp     [esp+30h+var_10], 0
                mov     eax, [esp+30h+var_8]
                movzx   ecx, cl
                setz    bl
                shr     eax, 8
                mov     [edi+ecx*8-180h], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_21]
                xor     ecx, 0F0h
                mov     [edi+ecx*8], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000207a endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng__          proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = qword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                sub     eax, edx
                mov     [esp+2Ch+var_20], ecx
                xor     eax, 0BBE5B30Bh
                add     edx, 0A416ABF7h
                mov     [esp+2Ch+var_24], eax
                movzx   eax, al
                push    ebx
                push    esi
                push    edi
                mov     ebx, [ecx+eax*8-5D0h]
                mov     eax, [esp+38h+var_24]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 18h
                mov     [esp+38h+var_10], ebx
                mov     ebx, ecx
                mov     [esp+38h+var_28], edx
                movzx   edx, dl
                xor     edx, 0AFh
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [esp+38h+var_14], eax
                mov     eax, [esp+38h+var_24]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 66h
                mov     [esp+38h+var_1C], ecx
                mov     esi, [eax+ebx]
                mov     edi, [eax+ebx+4]
                mov     eax, [esp+38h+var_24]
                shr     eax, 18h
                xor     eax, 0D3h
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     dword ptr [esp+38h+var_C+4], eax
                mov     eax, [esp+38h+var_28]
                shr     eax, 8
                mov     dword ptr [esp+38h+var_C], ecx
                movzx   ecx, al
                mov     eax, [ebx+edx*8]
                xor     ecx, 9Bh
                mov     ebx, [esp+38h+var_1C]
                mov     [ecx+ebx], eax
                mov     eax, [esp+38h+var_20]
                mov     eax, [eax+edx*8+4]
                mov     edx, ebx
                mov     [ecx+edx+4], eax
                mov     ecx, [esp+38h+var_28]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                sub     ecx, 55h ; 'U'
                mov     [eax+edx-8Bh], esi
                mov     [eax+edx-87h], edi
                xor     eax, eax
                inc     eax
                xor     edx, edx
                call    __allshl
                mov     ecx, [esp+38h+var_1C]
                xor     esi, esi
                mov     ebx, [esp+38h+var_10]
                mov     [eax+ecx], ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 0A14D4F1Ch
                xor     ebx, [esp+38h+var_24]
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 7Ch ; '|'
                xor     al, 82h
                mov     [esp+38h+var_1C], ebx
                movzx   eax, al
                cdq
                sub     edi, eax
                sbb     esi, edx
                add     edi, ecx
                adc     esi, [esp+38h+var_14]
                and     dword ptr [edi], 0
                and     dword ptr [edi+4], 0
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 93h
                mov     ecx, [esp+38h+var_1C]
                movzx   eax, al
                cdq
                mov     ebx, eax
                shr     ecx, 18h
                add     cl, 35h ; '5'
                mov     [esp+38h+var_18], edx
                movzx   eax, cl
                cdq
                sub     ebx, eax
                mov     ecx, [ebp+arg_0]
                mov     eax, [esp+38h+var_18]
                sbb     eax, edx
                add     ebx, edi
                mov     [esp+38h+var_10], ebx
                adc     eax, esi
                add     ecx, 7263571Fh
                xor     ecx, [esp+38h+var_28]
                xor     ecx, [esp+38h+var_24]
                mov     [esp+38h+var_18], eax
                mov     eax, dword ptr [esp+38h+var_C]
                mov     [ebx], eax
                mov     eax, dword ptr [esp+38h+var_C+4]
                mov     [ebx+4], eax
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0E9h
                mov     [esp+38h+var_14], ecx
                movzx   eax, al
                xor     cl, 0FBh
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [esp+38h+var_14]
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                sbb     eax, edi
                add     ebx, [esp+38h+var_10]
                adc     eax, [esp+38h+var_18]
                mov     dword ptr [esp+38h+var_C+4], eax
                mov     eax, ecx
                and     dword ptr [ebx], 0
                and     dword ptr [ebx+4], 0
                shr     eax, 18h
                add     al, 50h ; 'P'
                shr     ecx, 10h
                movzx   eax, al
                xor     cl, 11h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                sbb     ecx, edi
                add     eax, ebx
                mov     ebx, [ebp+arg_4]
                adc     ecx, dword ptr [esp+38h+var_C+4]
                mov     dword ptr [esp+38h+var_C], eax
                and     dword ptr [eax], 0
                and     dword ptr [eax+4], 0
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     dword ptr [esp+38h+var_C+4], ecx
                xor     ebx, [esp+38h+var_1C]
                xor     ebx, [esp+38h+var_28]
                mov     eax, ebx
                shr     eax, 8
                sub     al, 12h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     cl, bl
                xor     cl, 7Fh
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                mov     esi, [ebp+arg_4]
                sbb     ecx, edi
                add     eax, dword ptr [esp+38h+var_C]
                push    offset dword_40C9E0
                adc     ecx, dword ptr [esp+3Ch+var_C+4]
                add     esi, 37E619FEh
                xor     esi, [esp+3Ch+var_14]
                xor     esi, [esp+3Ch+var_1C]
                and     dword ptr [eax], 0
                and     dword ptr [eax+4], 0
                mov     [esp+3Ch+var_10], ecx
                mov     ecx, [esp+3Ch+var_20]
                lea     edx, [esi-18C6700Ah]
                mov     [esp+3Ch+var_18], eax
                mov     dword ptr [esp+3Ch+var_C+4], esi
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                xor     esi, ebx
                sub     ecx, [ebp+arg_0]
                xor     esi, [esp+38h+var_24]
                xor     ecx, ebx
                xor     ecx, [esp+38h+var_14]
                xor     esi, 0F3CC80A8h
                mov     edx, [esp+38h+var_20]
                mov     ebx, esi
                xor     ebx, ecx
                mov     [esp+38h+var_14], ecx
                xor     ebx, [esp+38h+var_1C]
                xor     ebx, [esp+38h+var_28]
                mov     ecx, [esp+38h+var_18]
                movzx   eax, bl
                xor     eax, 7Dh
                mov     dword ptr [esp+38h+var_C], esi
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+38h+var_10]
                mov     [edx+eax*8+4], ecx
                mov     ecx, [esp+38h+var_14]
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 95h
                add     al, 69h ; 'i'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [esp+38h+var_18]
                pop     edi
                adc     edx, [esp+34h+var_10]
                shr     ebx, 8
                movzx   ecx, bl
                mov     ebx, [esp+34h+var_20]
                pop     esi
                mov     [ebx+ecx*8-1E8h], eax
                mov     eax, [esp+30h+var_14]
                xor     eax, dword ptr [esp+30h+var_C+4]
                xor     eax, [esp+30h+var_28]
                xor     eax, [esp+30h+var_24]
                mov     [ebx+ecx*8-1E4h], edx
                xor     eax, 0E563DC6Ah
                mov     ecx, dword ptr [esp+30h+var_C]
                xor     edx, edx
                add     ecx, 1D99A845h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng__          endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___84_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, eax
                push    esi
                push    edi
                mov     edi, ecx
                mov     ecx, [ebp+arg_4]
                sub     ebx, ecx
                mov     [ebp+var_4], edi
                add     ecx, 28F3C5ADh
                xor     ebx, 0D9EA623h
                add     eax, ecx
                movzx   ecx, bl
                mov     [ebp+var_8], eax
                xor     ecx, 9Ah
                mov     eax, ebx
                shr     eax, 10h
                add     al, 10h
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     ecx, [ebp+var_4]
                mov     eax, ebx
                sbb     edi, edx
                shr     eax, 8
                xor     al, 3Bh
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [ebp+arg_0]
                push    offset dword_40C1B0
                adc     edi, edx
                mov     edx, [ebp+arg_4]
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                sub     edx, 13A10B33h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     ecx, [ebp+arg_4]
                sub     ecx, [ebp+arg_0]
                xor     ecx, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                mov     eax, [ebp+var_8]
                pop     edi
                xor     eax, 0B1C1B410h
                pop     esi
                or      edx, eax
                lea     eax, [ecx+2F1FE257h]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___84_stk   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002382 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                and     [esp+2Ch+var_C], 0
                push    edi
                mov     edi, [ebp+arg_4]
                sub     eax, edi
                mov     ebx, eax
                mov     [esp+30h+var_14], eax
                xor     ebx, 0BBDDDDC0h
                mov     [esp+30h+var_4], ecx
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                xor     edx, 57h
                movzx   ecx, al
                mov     eax, [esp+30h+var_4]
                mov     eax, [edx+eax]
                mov     edx, edi
                sub     edx, esi
                mov     ecx, [eax+ecx+46h]
                lea     eax, [edx-6753C01Fh]
                mov     [esp+30h+var_18], ecx
                sub     [esp+30h+var_18], eax
                cmp     eax, ecx
                setnbe  [esp+30h+var_1D]
                xor     edi, esi
                mov     [esp+30h+var_1C], edi
                xor     edi, ebx
                xor     [esp+30h+var_1C], edx
                xor     [esp+30h+var_1C], ebx
                mov     ebx, [ebp+arg_4]
                shl     ebx, 4
                shr     esi, 4
                add     ebx, esi
                mov     esi, [esp+30h+var_1C]
                xor     ebx, edi
                xor     ebx, edx
                mov     [esp+30h+var_10], ebx
                mov     ebx, [esp+30h+var_14]
                xor     ebx, [esp+30h+var_10]
                xor     ebx, esi
                xor     ebx, 2AF5E45h
                mov     [esp+30h+var_14], ebx
                cmp     eax, ecx
                jbe     short loc_48AB40
                xor     edx, edx
                xor     esi, 0AF4C2228h
                xor     edi, 0F82969B2h
                or      edx, esi
                jmp     short loc_48AB57
; ---------------------------------------------------------------------------

loc_48AB40:                             ; CODE XREF: VBNCB_unnamed_80002382+9C¡üj
                mov     eax, [esp+30h+var_10]
                xor     edx, esi
                xor     edx, edi
                add     eax, 23FA00FEh
                xor     edi, edi
                xor     edx, 7FF53623h
                or      edi, eax

loc_48AB57:                             ; CODE XREF: VBNCB_unnamed_80002382+AE¡üj
                cmp     [esp+30h+var_18], 0
                mov     eax, [esp+30h+var_14]
                mov     esi, [esp+30h+var_4]
                setz    bl
                movzx   ecx, al
                xor     ecx, 31h
                shr     eax, 8
                mov     [esi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                xor     ecx, 56h
                mov     [esi+ecx*8], al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002382 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___78       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                lea     edx, [ebx+79A9C679h]
                mov     [esp+50h+var_44], esi
                mov     [esp+50h+var_18], edx
                push    offset dword_40C7EC
                lea     eax, [edi-35912391h]
                add     eax, ebx
                mov     [esp+54h+var_3C], eax
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0D0h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+54h+var_30+4], eax
                lea     eax, [edi-35912391h]
                add     eax, ebx
                mov     dword ptr [esp+54h+var_30], ecx
                movzx   eax, al
                mov     ecx, [eax+esi-97h]
                mov     eax, [eax+esi-93h]
                mov     [esp+54h+var_20], eax
                lea     eax, [edi-35912391h]
                add     eax, ebx
                mov     [esp+54h+var_24], ecx
                shr     eax, 18h
                xor     eax, 2Ah
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_10], eax
                movzx   eax, dl
                xor     eax, 9Ah
                mov     [esp+54h+var_14], ecx
                shr     edx, 18h
                xor     ecx, ecx
                add     edx, 14h
                add     edx, [eax+esi]
                mov     [esp+54h+var_C], edx
                lea     edx, [ebx+79A9C679h]
                adc     ecx, [eax+esi+4]
                lea     eax, [edi-35912391h]
                add     eax, ebx
                mov     [esp+54h+var_8], ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 10h
                xor     ecx, 61h
                movzx   eax, al
                mov     ecx, [ecx+esi]
                add     ecx, eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F2h
                mov     eax, [esi+eax*8]
                lea     esi, [edi+739E6036h]
                add     esi, ebx
                mov     eax, [eax+ecx*4-0BCh]
                mov     ecx, [esp+54h+var_44]
                mov     [esp+54h+var_1C], eax
                lea     eax, [edi-35912391h]
                add     eax, ebx
                xor     esi, eax
                mov     edx, esi
                xor     edx, 0F28C885Ah
                call    VBN_TransformContext
                lea     ecx, [edi+64AE177Dh]
                mov     edx, ebx
                add     ecx, ebx
                lea     eax, [ebx+79A9C679h]
                xor     ecx, eax
                lea     eax, [edi-35912391h]
                add     eax, ebx
                xor     ecx, eax
                shr     edx, 4
                mov     [esp+50h+var_38], ecx
                mov     eax, edi
                shl     eax, 4
                add     edx, eax
                lea     eax, [ebx+79A9C679h]
                xor     edx, esi
                xor     edx, eax
                mov     eax, ebx
                sub     eax, edi
                mov     [esp+50h+var_4], edx
                xor     eax, ecx
                lea     ecx, [ebx+0DE41A04h]
                xor     eax, esi
                xor     ecx, edx
                xor     ecx, [esp+50h+var_38]
                mov     ebx, eax
                mov     [esp+50h+var_28], eax
                xor     ebx, edx
                xor     ebx, [esp+50h+var_3C]
                xor     ebx, 0AD647193h
                mov     [esp+50h+var_40], ecx
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 1Bh
                inc     al
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+50h+var_34], eax
                mov     eax, edx
                mov     edx, [esp+50h+var_34]
                sub     edx, esi
                mov     esi, [esp+50h+var_28]
                sbb     eax, edi
                add     edx, dword ptr [esp+50h+var_30]
                adc     eax, dword ptr [esp+50h+var_30+4]
                xor     ecx, ecx
                mov     dword ptr [esp+50h+var_30+4], eax
                xor     esi, 0FEF40963h
                mov     eax, [esp+50h+var_40]
                xor     eax, 9C088C55h
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [edx+4], esi
                mov     esi, [esp+50h+var_44]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                mov     [esi+eax*8+88h], ecx
                mov     ecx, [esp+50h+var_20]
                mov     [esi+eax*8+8Ch], ecx
                and     dword ptr [esi+ebx*8-5F4h], 0
                mov     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_28]
                xor     ecx, [esp+50h+var_18]
                xor     ecx, [esp+50h+var_3C]
                mov     eax, [esp+50h+var_1C]
                mov     [esi+ebx*8-5F8h], eax
                mov     ebx, [esp+50h+var_44]
                mov     esi, [esp+50h+var_14]
                movzx   eax, cl
                xor     eax, 0C7h
                mov     [eax+ebx], esi
                mov     esi, [esp+50h+var_10]
                mov     [eax+ebx+4], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 81h
                shr     ecx, 10h
                mov     [ebx+eax*8], esi
                mov     esi, [esp+50h+var_8]
                mov     [ebx+eax*8+4], esi
                movzx   eax, cl
                mov     [ebx+eax*8], edx
                mov     ecx, dword ptr [esp+50h+var_30+4]
                mov     edx, [esp+50h+var_38]
                mov     [ebx+eax*8+4], ecx
                add     edx, 4939E68Fh
                mov     ecx, [esp+50h+var_4]
                xor     eax, eax
                pop     edi
                add     ecx, 0B23A199Ah
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___78       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___201      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 34h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                mov     ebx, edx
                and     [esp+40h+var_4], 0
                sub     ebx, edi
                mov     [esp+40h+var_34], esi
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                push    offset dword_40C0E0
                mov     ecx, [eax+esi+58h]
                mov     eax, [eax+esi+5Ch]
                mov     dword ptr [esp+44h+var_28+4], eax
                movzx   eax, bl
                mov     [esp+44h+var_18], eax
                xor     eax, 10h
                mov     dword ptr [esp+44h+var_28], ecx
                mov     ecx, ebx
                shr     ecx, 18h
                mov     eax, [eax+esi]
                mov     eax, [eax+ecx-4Fh]
                mov     [esp+44h+var_1C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [esi+eax*8-338h]
                mov     eax, [esi+eax*8-334h]
                lea     esi, [edx+34DB2BC2h]
                mov     [esp+44h+var_14], ecx
                lea     edx, [esi+10A5FC39h]
                mov     ecx, [esp+44h+var_34]
                mov     [esp+44h+var_10], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     eax, edi
                shl     eax, 4
                mov     ecx, ebx
                shr     edx, 4
                xor     ecx, ebx
                add     edx, eax
                mov     [esp+40h+var_C], ecx
                xor     edx, esi
                mov     eax, edi
                sub     eax, [ebp+arg_4]
                xor     edx, ebx
                xor     eax, edx
                mov     [esp+40h+var_8], edx
                xor     eax, ecx
                xor     ebx, ecx
                mov     ecx, [ebp+arg_4]
                xor     ebx, esi
                xor     eax, 7E5F859Eh
                mov     [esp+40h+var_30], ebx
                xor     ecx, edi
                mov     [esp+40h+var_2C], eax
                xor     ecx, ebx
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+40h+var_20], ecx
                shr     eax, 8
                xor     cl, 30h
                xor     al, 0D9h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+40h+var_2C]
                sub     ebx, esi
                mov     esi, [esp+40h+var_30]
                sbb     edx, edi
                add     ebx, dword ptr [esp+40h+var_28]
                adc     edx, dword ptr [esp+40h+var_28+4]
                add     esi, 94D4C399h
                xor     ecx, ecx
                mov     edi, [esp+40h+var_34]
                add     eax, 49BF58F6h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+40h+var_1C]
                mov     [ebx+4], esi
                mov     esi, [esp+40h+var_20]
                mov     eax, esi
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0A3h
                shr     esi, 18h
                and     dword ptr [eax+edi+4], 0
                mov     [eax+edi], ecx
                mov     eax, [esp+40h+var_30]
                movzx   ecx, al
                mov     eax, [esp+40h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                mov     [edi+esi*8-414h], edx
                mov     eax, [esp+40h+var_14]
                xor     ecx, 1Fh
                xor     ecx, [esp+40h+var_18]
                mov     edx, [esp+40h+var_C]
                mov     [edi+esi*8-418h], ebx
                add     edx, 8EA7DCEEh
                mov     [ecx+edi-79h], eax
                mov     eax, [esp+40h+var_10]
                mov     [ecx+edi-75h], eax
                xor     eax, eax
                mov     ecx, [esp+40h+var_8]
                pop     edi
                xor     ecx, 0A4EC7105h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___201      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___204      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     edx, 4
                add     edx, eax
                push    ebx
                movzx   eax, dl
                mov     [esp+28h+var_C], eax
                xor     eax, 57h
                push    esi
                push    edi
                mov     edi, ecx
                mov     [esp+30h+var_20], edx
                mov     [esp+30h+var_18], edi
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+30h+var_4], eax
                mov     eax, edx
                shr     eax, 8
                mov     [esp+30h+var_8], ecx
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 10h
                xor     al, 0E8h
                movzx   eax, al
                cdq
                mov     ebx, eax
                mov     eax, edx
                add     ebx, [ecx+edi-22h]
                adc     eax, [ecx+edi-1Eh]
                mov     ecx, [ebp+arg_0]
                sub     ecx, [ebp+arg_4]
                mov     [esp+30h+var_1C], eax
                xor     ecx, 0C83A87E9h
                mov     eax, [ebx]
                mov     dword ptr [esp+30h+var_14], eax
                mov     eax, [ebx+4]
                mov     dword ptr [esp+30h+var_14+4], eax
                mov     eax, [esp+30h+var_20]
                shr     eax, 18h
                xor     al, 19h
                mov     [esp+30h+var_24], ecx
                movzx   eax, al
                cdq
                mov     esi, eax
                movzx   ecx, cl
                sub     ecx, 0BEh
                mov     edi, edx
                add     esi, ecx
                adc     edi, 0
                add     esi, ebx
                adc     edi, [esp+30h+var_1C]
                xor     edx, edx
                mov     eax, [esi]
                mov     ebx, [esi+4]
                mov     [esp+30h+var_1C], eax
                mov     eax, [esp+30h+var_24]
                shr     eax, 8
                movzx   ecx, al
                xor     eax, eax
                xor     ecx, 0CBh
                inc     eax
                call    __allshl
                add     eax, esi
                mov     esi, [esp+30h+var_24]
                mov     ecx, esi
                adc     edx, edi
                mov     edi, [esp+30h+var_18]
                shr     ecx, 10h
                movzx   ecx, cl
                shr     esi, 18h
                xor     esi, 64h
                mov     [edi+ecx*8+0B8h], eax
                mov     eax, dword ptr [esp+30h+var_14]
                mov     [edi+ecx*8+0BCh], edx
                mov     [esi+edi], eax
                mov     eax, dword ptr [esp+30h+var_14+4]
                mov     [esi+edi+4], eax
                mov     eax, [ebp+arg_0]
                add     al, 6Dh ; 'm'
                movzx   ecx, al
                mov     eax, [esp+30h+var_8]
                xor     ecx, 0Fh
                xor     ecx, [esp+30h+var_C]
                mov     edx, ebx
                mov     [ecx+edi], eax
                mov     eax, [esp+30h+var_4]
                mov     [ecx+edi+4], eax
                mov     eax, [esp+30h+var_1C]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___204      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___185      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, ecx
                and     [esp+4Ch+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ecx, edi
                xor     ecx, ebx
                mov     [esp+58h+var_40], edx
                movzx   eax, cl
                mov     [esp+58h+var_44], ecx
                push    offset dword_40A758
                mov     esi, [edx+eax*8+168h]
                mov     eax, [edx+eax*8+16Ch]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 76h
                mov     [esp+5Ch+var_2C], esi
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                lea     edx, [edi-65F0795Dh]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                add     edx, ebx
                movzx   eax, dl
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     [esp+5Ch+var_24], edx
                mov     eax, [esi+eax*4+4]
                mov     esi, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 61h
                xor     al, 96h
                movzx   eax, al
                cdq
                add     eax, [ecx+esi]
                mov     [esp+5Ch+var_14], eax
                adc     edx, [ecx+esi+4]
                mov     ecx, [esp+5Ch+var_44]
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esp+5Ch+var_10], edx
                mov     eax, [ecx+esi+1]
                mov     dword ptr [esp+5Ch+var_1C], eax
                mov     eax, [ecx+esi+5]
                mov     ecx, ebx
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, edi
                shr     ecx, 4
                shl     eax, 4
                add     eax, ecx
                mov     ecx, [esp+5Ch+var_40]
                mov     esi, eax
                mov     [esp+5Ch+var_48], eax
                xor     esi, [esp+5Ch+var_44]
                mov     edx, esi
                xor     edx, 172B5717h
                call    VBN_TransformContext
                lea     edx, [ebx-10E8E18Dh]
                lea     eax, [edi-65F0795Dh]
                xor     edx, esi
                add     eax, ebx
                lea     ecx, [edi+3E92D7CDh]
                xor     ecx, eax
                xor     edx, eax
                xor     ecx, [esp+58h+var_44]
                lea     eax, [ebx-3152DC21h]
                mov     ebx, [esp+58h+var_48]
                xor     eax, ecx
                xor     eax, esi
                mov     [esp+58h+var_C], ecx
                xor     ebx, edx
                mov     [esp+58h+var_8], edx
                xor     ebx, ecx
                mov     [esp+58h+var_34], eax
                mov     [esp+58h+var_48], ebx
                mov     ecx, eax
                xor     ecx, edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, 61955392h
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     cl, 44h
                xor     eax, 93B2h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_48]
                sub     ebx, esi
                mov     esi, [esp+58h+var_34]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_3C]
                pop     edi
                adc     edx, dword ptr [esp+54h+var_3C+4]
                xor     eax, 0BE908C61h
                xor     ecx, ecx
                xor     esi, 0AFC2410Dh
                or      ecx, eax
                mov     eax, [esp+54h+var_30]
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_2C]
                shr     eax, 18h
                mov     [ebx+4], esi
                xor     eax, 14h
                mov     esi, [esp+54h+var_40]
                mov     [eax+esi], ecx
                mov     ecx, [esp+54h+var_28]
                mov     [eax+esi+4], ecx
                mov     ecx, [esp+54h+var_48]
                xor     ecx, [esp+54h+var_34]
                xor     ecx, [esp+54h+var_24]
                xor     ecx, [esp+54h+var_44]
                movzx   eax, cl
                mov     [esp+54h+var_48], ecx
                mov     [esi+eax*8-59Ch], edx
                mov     edx, [esp+54h+var_20]
                mov     [esi+eax*8-5A0h], ebx
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [esi+eax*8-1C4h], 0
                mov     [esi+eax*8-1C8h], edx
                mov     eax, ecx
                mov     ecx, dword ptr [esp+54h+var_1C]
                mov     edx, [esp+54h+var_C]
                shr     eax, 10h
                xor     edx, 5856700h
                movzx   eax, al
                mov     [esi+eax*8-638h], ecx
                mov     ecx, dword ptr [esp+54h+var_1C+4]
                mov     [esi+eax*8-634h], ecx
                mov     eax, [esp+54h+var_48]
                mov     ecx, [esp+54h+var_14]
                shr     eax, 18h
                xor     eax, 50h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [esi+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 72F9AD67h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___185      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___159_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                mov     [ebp+var_C], ecx
                lea     eax, [esi-3BFB456Dh]
                shr     esi, 4
                add     eax, ebx
                shl     ebx, 4
                add     ebx, esi
                mov     [ebp+var_4], eax
                xor     ebx, edx
                movzx   eax, dl
                mov     [ebp+var_8], ebx
                xor     edx, [ebp+var_8]
                xor     edx, [ebp+var_4]
                mov     ebx, [eax+ecx-41h]
                sub     edx, 69235CEAh
                push    edi
                mov     edi, [eax+ecx-3Dh]
                push    offset dword_40A4E0
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                sub     al, 20h ; ' '
                movzx   esi, cl
                movzx   eax, al
                xor     ecx, ecx
                cdq
                sub     esi, 3
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                mov     edx, [ebp+var_8]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                xor     edx, 0D4CC5C86h
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_4]
                pop     edi
                xor     ecx, 398849C1h
                or      eax, edx
                pop     esi
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___159_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___200_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, ebx
                sub     eax, esi
                mov     [ebp+var_4], edx
                mov     [ebp+var_C], eax
                movzx   eax, al
                xor     eax, 95h
                push    edi
                push    offset dword_40C840
                mov     ecx, [eax+edx]
                mov     edi, [eax+edx+4]
                lea     eax, [esi+718C1D93h]
                mov     [ebp+var_10], ecx
                lea     edx, [eax+538C6541h]
                mov     ecx, [ebp+var_4]
                mov     [ebp+var_8], eax
                call    VBN_TransformContext
                mov     eax, esi
                shr     esi, 4
                sub     eax, ebx
                shl     ebx, 4
                xor     eax, [ebp+var_C]
                add     ebx, esi
                xor     eax, 0F0AA1C8Fh
                xor     ebx, eax
                mov     [ebp+var_14], eax
                xor     ebx, [ebp+var_8]
                mov     eax, ebx
                xor     bl, 0D1h
                shr     eax, 8
                xor     al, 21h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_10]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     eax, [ebp+arg_4]
                add     eax, 0DF2BB410h
                mov     [ecx+1BCh], edx
                xor     eax, [ebp+var_8]
                xor     edx, edx
                xor     eax, [ebp+var_C]
                mov     ecx, [ebp+var_14]
                sub     eax, 15A17449h
                pop     edi
                add     ecx, 0C18C9447h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___200_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; _DWORD vBng_1_stk(_stk *__hidden thiss)
vBng_1_stk      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
thiss           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     eax, [ebp+thiss]
                push    ebx
                and     [ebp+var_14], 0
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                shl     eax, 4
                mov     edx, edi
                shr     edx, 4
                add     eax, edx
                mov     [ebp+var_C], esi
                mov     [ebp+var_4], eax
                movzx   eax, al
                xor     eax, 39h
                push    offset dword_40BE0C
                mov     ecx, [esi+eax*8]
                mov     ebx, [esi+eax*8+4]
                mov     eax, edi
                sub     eax, [ebp+thiss]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                mov     [ebp+var_10], eax
                lea     edx, [eax+1998B773h]
                call    VBN_TransformContext
                lea     ecx, [edi+7A758866h]
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                mov     [ebp+var_14], ecx
                shr     eax, 8
                xor     cl, 0FCh
                xor     al, 3Ch
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_C]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+arg_4]
                xor     ebx, [ebp+thiss]
                xor     eax, eax
                xor     ebx, [ebp+var_10]
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+var_4]
                xor     ebx, edx
                xor     edx, [ebp+var_14]
                xor     edx, [ebp+var_10]
                xor     edx, 17BC1408h
                pop     edi
                or      eax, edx
                lea     edx, [ebx-1EAB1D9Ch]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1_stk      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___196_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                shl     eax, 4
                mov     esi, ebx
                push    edi
                mov     edi, ecx
                shl     esi, 4
                mov     ecx, ebx
                mov     [ebp+var_4], edi
                sub     ebx, edx
                shr     ecx, 4
                add     ecx, eax
                mov     eax, edx
                shr     eax, 4
                add     esi, eax
                mov     eax, ebx
                xor     eax, ecx
                mov     [ebp+var_8], esi
                mov     [ebp+var_C], eax
                xor     ebx, esi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0B0h
                mov     esi, [ecx+edi+9Ch]
                mov     edi, [ecx+edi+0A0h]
                mov     ecx, [ebp+var_4]
                movzx   eax, al
                cdq
                sub     esi, eax
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sbb     edi, edx
                sub     eax, 8Ch
                mov     edx, [ebp+arg_0]
                add     esi, eax
                push    offset dword_40BE50
                adc     edi, 0
                add     edx, 10227797h
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                xor     edx, 33C649ADh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ebx, 97F89C01h
                mov     edx, [ebp+var_8]
                xor     edx, 8C8445C2h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___196_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___42       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                mov     [esp+50h+var_44], esi
                push    offset dword_40C0F0
                lea     edx, [edi-579C3AACh]
                mov     eax, edx
                mov     [esp+54h+var_1C], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Eh
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+54h+var_10], eax
                lea     eax, [ebx+28ABDC67h]
                mov     [esp+54h+var_20], eax
                movzx   eax, al
                xor     eax, 0DFh
                mov     [esp+54h+var_14], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                lea     esi, [ebx+28ABDC67h]
                mov     dword ptr [esp+54h+var_34+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, esi
                shr     eax, 8
                mov     dword ptr [esp+54h+var_34], ecx
                movzx   ecx, al
                mov     eax, [esp+54h+var_44]
                mov     eax, [eax+edx*8-360h]
                lea     edx, [edi-579C3AACh]
                mov     eax, [eax+ecx-46h]
                mov     [esp+54h+var_18], eax
                mov     eax, esi
                mov     esi, [esp+54h+var_44]
                shr     eax, 10h
                movzx   ecx, dl
                xor     al, 6Ch
                xor     ecx, 9Fh
                movzx   eax, al
                cdq
                add     eax, [ecx+esi]
                mov     [esp+54h+var_C], eax
                adc     edx, [ecx+esi+4]
                mov     [esp+54h+var_8], edx
                lea     edx, [edi-579C3AACh]
                mov     ecx, edx
                shr     ecx, 18h
                xor     ecx, 0BFh
                mov     eax, [ecx+esi]
                mov     [esp+54h+var_28], eax
                mov     eax, [ecx+esi+4]
                lea     esi, [edi+0C057CEh]
                mov     ecx, [esp+54h+var_44]
                add     esi, ebx
                xor     esi, edx
                mov     [esp+54h+var_24], eax
                mov     edx, esi
                xor     edx, 0A0AB3017h
                call    VBN_TransformContext
                lea     eax, [ebx+28ABDC67h]
                lea     ecx, [ebx-1E152BB9h]
                xor     ecx, eax
                lea     edx, [edi-579C3AACh]
                xor     ecx, edx
                lea     edx, [edi+5CC40DC0h]
                xor     edx, esi
                mov     [esp+50h+var_38], ecx
                xor     edx, eax
                lea     eax, [edi+2D42841h]
                xor     eax, ecx
                mov     [esp+50h+var_4], edx
                xor     eax, esi
                lea     ecx, [ebx-7D5771FFh]
                mov     [esp+50h+var_40], eax
                xor     ecx, edx
                xor     ecx, [esp+50h+var_38]
                mov     [esp+50h+var_3C], ecx
                mov     ecx, eax
                xor     ecx, edx
                lea     eax, [edi-579C3AACh]
                xor     ecx, eax
                xor     ecx, 92EDE4E6h
                mov     eax, ecx
                mov     [esp+50h+var_2C], ecx
                shr     eax, 8
                xor     cl, 0B8h
                xor     al, 0D4h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+50h+var_3C]
                sub     ebx, esi
                mov     esi, [esp+50h+var_40]
                sbb     edx, edi
                add     ebx, dword ptr [esp+50h+var_34]
                mov     edi, [esp+50h+var_44]
                adc     edx, dword ptr [esp+50h+var_34+4]
                add     eax, 4C82D8B9h
                xor     ecx, ecx
                add     esi, 994EBD93h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+50h+var_2C]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [ebx+4], esi
                mov     esi, [esp+50h+var_28]
                shr     ecx, 18h
                mov     [edi+eax*8-368h], esi
                mov     esi, [esp+50h+var_24]
                mov     [edi+eax*8-364h], esi
                mov     eax, edi
                pop     edi
                pop     esi
                mov     [eax+ecx*8-0C8h], ebx
                mov     ebx, eax
                mov     [ebx+ecx*8-0C4h], edx
                mov     ecx, [esp+48h+var_3C]
                xor     ecx, [esp+48h+var_40]
                xor     ecx, [esp+48h+var_20]
                xor     ecx, [esp+48h+var_1C]
                mov     edx, [esp+48h+var_18]
                movzx   eax, cl
                xor     eax, 0FAh
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_14]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 78h
                shr     ecx, 10h
                mov     [eax+ebx], edx
                mov     edx, [esp+48h+var_10]
                mov     [eax+ebx+4], edx
                mov     edx, [esp+48h+var_38]
                movzx   eax, cl
                add     edx, 0AE1DEE88h
                mov     ecx, [esp+48h+var_C]
                xor     eax, 98h
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+48h+var_8]
                mov     [ebx+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_4]
                add     ecx, 0AF50BD28h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___42       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002213 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 4E73999Eh
                mov     [esp+20h+var_C], ecx
                push    esi
                movzx   esi, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                xor     edx, 35h
                mov     eax, [esi+ecx-47h]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, [eax+edx]
                mov     eax, [ebp+arg_0]
                mov     ecx, eax
                sub     ecx, [ebp+arg_4]
                xor     ecx, 0A206E2D1h
                mov     [esp+28h+var_18], esi
                mov     edx, ecx
                xor     edx, 897A482Dh
                cmp     edx, esi
                setnbe  [esp+28h+var_19]
                shr     eax, 4
                shl     edi, 4
                sub     esi, edx
                add     edi, eax
                mov     [esp+28h+var_10], esi
                mov     eax, [ebp+arg_0]
                xor     edi, ebx
                add     eax, 0CB2A6C97h
                xor     eax, ecx
                xor     eax, ebx
                mov     ebx, [ebp+arg_0]
                lea     esi, [ebx-4E600910h]
                xor     esi, edi
                xor     esi, ecx
                lea     ecx, [ebx+6DF33CDDh]
                xor     ecx, esi
                xor     ecx, eax
                mov     [esp+28h+var_8], ecx
                cmp     edx, [esp+28h+var_18]
                jbe     short loc_48B8D2
                xor     edx, edx
                add     eax, 2CFB469Bh
                xor     edi, 0AFBE64ADh
                or      edx, eax
                jmp     short loc_48B8F2
; ---------------------------------------------------------------------------

loc_48B8D2:                             ; CODE XREF: VBNCB_unnamed_80002213+8F¡üj
                mov     edx, [ebp+arg_4]
                add     edx, 0BB861738h
                add     edx, ebx
                xor     edx, eax
                mov     eax, esi
                xor     edx, edi
                add     eax, 0F2F5B499h
                xor     edi, edi
                xor     edx, 3585BD8Eh
                or      edi, eax

loc_48B8F2:                             ; CODE XREF: VBNCB_unnamed_80002213+A0¡üj
                mov     esi, [esp+28h+var_C]
                cmp     [esp+28h+var_10], 0
                mov     eax, [esp+28h+var_8]
                movzx   ecx, cl
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-588h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                xor     ecx, 1Ch
                mov     [esi+ecx*8], al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002213 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___5        proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                add     edi, ebx
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_48], esi
                push    offset dword_40C280
                lea     eax, [edi+0D25DAC9h]
                mov     [esp+5Ch+var_20], eax
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [esi+eax*8-540h]
                mov     eax, [esi+eax*8-53Ch]
                mov     dword ptr [esp+5Ch+var_38+4], eax
                lea     eax, [edi-4F9C36ABh]
                movzx   edx, al
                mov     [esp+5Ch+var_24], eax
                xor     edx, 0A1h
                shr     eax, 8
                mov     dword ptr [esp+5Ch+var_38], ecx
                movzx   ecx, al
                mov     eax, [edx+esi]
                xor     ecx, 76h
                mov     eax, [eax+ecx]
                lea     ecx, [edi+0D25DAC9h]
                mov     [esp+5Ch+var_28], eax
                lea     eax, [edi-4F9C36ABh]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                shr     ecx, 18h
                add     edx, 43h ; 'C'
                add     edx, [esi+ecx*8-5F0h]
                mov     dword ptr [esp+5Ch+var_1C], edx
                lea     edx, [edi+0D25DAC9h]
                adc     eax, [esi+ecx*8-5ECh]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                movzx   eax, dl
                mov     ecx, [eax+esi-0CDh]
                mov     eax, [eax+esi-0C9h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0BFh
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                lea     esi, [edi-11BBCAB5h]
                xor     esi, edx
                mov     [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_2C], eax
                lea     edx, [esi+7CE21181h]
                call    VBN_TransformContext
                mov     edx, ebx
                lea     eax, [edi-4F9C36ABh]
                xor     edx, [ebp+arg_4]
                lea     ecx, [edi+0D25DAC9h]
                xor     edx, eax
                xor     edx, ecx
                lea     ecx, [ebx-2C583CE6h]
                xor     ecx, esi
                mov     [esp+58h+var_C], edx
                xor     ecx, eax
                mov     eax, [ebp+arg_4]
                sub     eax, ebx
                mov     [esp+58h+var_8], ecx
                xor     eax, edx
                xor     eax, esi
                mov     [esp+58h+var_44], eax
                lea     eax, [edi-37DD13ADh]
                mov     ebx, [esp+58h+var_44]
                xor     eax, ecx
                xor     eax, edx
                xor     ebx, ecx
                mov     [esp+58h+var_40], eax
                lea     eax, [edi+0D25DAC9h]
                xor     ebx, eax
                xor     ebx, 0F55C7F31h
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 4Ch
                xor     al, 8Eh
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     [esp+58h+var_3C], eax
                mov     eax, edx
                mov     edx, [esp+58h+var_3C]
                sub     edx, esi
                mov     esi, [esp+58h+var_44]
                sbb     eax, edi
                add     edx, dword ptr [esp+58h+var_38]
                pop     edi
                adc     eax, dword ptr [esp+54h+var_38+4]
                xor     ecx, ecx
                mov     dword ptr [esp+54h+var_38+4], eax
                xor     esi, 61A4B084h
                mov     eax, [esp+54h+var_40]
                xor     eax, 0C7B62C82h
                or      ecx, eax
                mov     eax, ebx
                mov     [edx], ecx
                mov     ecx, [esp+54h+var_30]
                mov     [edx+4], esi
                mov     esi, [esp+54h+var_48]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0BCh
                shr     ebx, 18h
                mov     [eax+esi], ecx
                mov     ecx, [esp+54h+var_2C]
                mov     [eax+esi+4], ecx
                and     dword ptr [esi+ebx*8-11Ch], 0
                mov     ecx, [esp+54h+var_40]
                xor     ecx, [esp+54h+var_44]
                xor     ecx, [esp+54h+var_24]
                xor     ecx, [esp+54h+var_20]
                mov     eax, [esp+54h+var_28]
                mov     [esi+ebx*8-120h], eax
                mov     ebx, [esp+54h+var_48]
                mov     esi, dword ptr [esp+54h+var_1C]
                movzx   eax, cl
                mov     [ebx+eax*8-180h], esi
                mov     esi, dword ptr [esp+54h+var_1C+4]
                mov     [ebx+eax*8-17Ch], esi
                mov     eax, ecx
                mov     esi, [esp+54h+var_14]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [ebx+eax*8-390h], esi
                mov     esi, [esp+54h+var_10]
                mov     [ebx+eax*8-38Ch], esi
                movzx   eax, cl
                mov     ecx, dword ptr [esp+54h+var_38+4]
                pop     esi
                mov     [ebx+eax*8-334h], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [ebx+eax*8-338h], edx
                add     ecx, 576E9384h
                mov     edx, [esp+50h+var_C]
                xor     eax, eax
                xor     edx, 847BB0B9h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___5        endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___24_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, ecx
                shr     eax, 4
                mov     ecx, edx
                mov     [ebp+var_4], esi
                shl     ecx, 4
                add     ecx, eax
                movzx   eax, cl
                xor     eax, 14h
                mov     [ebp+var_8], ecx
                push    edi
                push    offset dword_40C6F0
                mov     ecx, [eax+esi]
                mov     edi, [eax+esi+4]
                lea     esi, [edx-6AD4EB6Ah]
                mov     [ebp+var_C], ecx
                mov     edx, esi
                mov     ecx, [ebp+var_4]
                xor     edx, 94BF6C09h
                call    VBN_TransformContext
                mov     eax, [ebp+var_8]
                xor     eax, [ebp+arg_4]
                xor     eax, ebx
                add     ebx, 6B8839AEh
                xor     ebx, eax
                mov     [ebp+var_10], eax
                xor     ebx, esi
                mov     eax, ebx
                xor     bl, 74h
                shr     eax, 8
                add     al, 4
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+arg_4]
                pop     edi
                pop     esi
                pop     ebx
                lea     ecx, [edx-6AD4EB6Ah]
                lea     eax, [edx+4C750A8Dh]
                xor     edx, edx
                xor     eax, ecx
                mov     ecx, [ebp+var_10]
                xor     eax, [ebp+var_8]
                xor     ecx, 60E70382h
                xor     eax, 49D80F6Bh
                or      edx, ecx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___24_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800021cf proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shl     eax, 4
                shr     edx, 4
                lea     ebx, [esi+3EBC8B77h]
                add     ebx, edi
                mov     [esp+28h+var_10], ecx
                add     eax, edx
                lea     edx, [esi-2E34D33Eh]
                xor     ebx, eax
                mov     [esp+28h+var_14], eax
                mov     [esp+28h+var_18], ebx
                add     edx, edi
                movzx   ecx, bl
                mov     ebx, [esp+28h+var_10]
                movzx   eax, al
                mov     eax, [eax+ebx-24h]
                mov     ecx, [eax+ecx-90h]
                mov     eax, edx
                xor     eax, 0A843FE18h
                mov     ebx, ecx
                cmp     eax, ecx
                setnbe  [esp+28h+var_19]
                sub     ebx, eax
                mov     [esp+28h+var_8], ebx
                mov     ebx, esi
                sub     ebx, edi
                add     esi, 0E99FD91Ch
                xor     ebx, edx
                add     edi, 203901B6h
                xor     ebx, [esp+28h+var_14]
                xor     ebx, 5CB056FDh
                mov     [esp+28h+var_C], ebx
                mov     ebx, [esp+28h+var_18]
                xor     esi, ebx
                xor     esi, edx
                mov     edx, [esp+28h+var_14]
                mov     [esp+28h+var_18], esi
                mov     esi, [esp+28h+var_C]
                xor     edi, esi
                xor     edi, ebx
                mov     ebx, edi
                xor     ebx, [esp+28h+var_18]
                xor     ebx, edx
                xor     ebx, 3F5375F9h
                mov     [esp+28h+var_C], ebx
                cmp     eax, ecx
                jbe     short loc_48BD2C
                mov     eax, [esp+28h+var_18]
                xor     edx, edx
                add     eax, 1A35CF97h
                xor     esi, 0A0F03F09h
                or      edx, eax
                jmp     short loc_48BD42
; ---------------------------------------------------------------------------

loc_48BD2C:                             ; CODE XREF: VBNCB_unnamed_800021cf+B5¡üj
                xor     edx, [esp+28h+var_18]
                xor     edi, 7CA3229Bh
                xor     edx, esi
                xor     esi, esi
                sub     edx, 7408ACFAh
                or      esi, edi

loc_48BD42:                             ; CODE XREF: VBNCB_unnamed_800021cf+CA¡üj
                mov     eax, [esp+28h+var_C]
                mov     edi, [esp+28h+var_10]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [edi+ecx*8-640h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                mov     [edi+ecx*8-3B0h], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021cf endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800021f4 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                mov     [ebp+var_10], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                shr     edx, 4
                mov     ecx, edi
                add     eax, edx
                xor     ecx, esi
                mov     ebx, edi
                shr     esi, 4
                shl     ebx, 4
                lea     edx, [edi-69AA17DEh]
                mov     edi, [ebp+var_10]
                xor     edx, ecx
                xor     edx, eax
                mov     [ebp+var_4], eax
                add     ebx, esi
                mov     [ebp+var_8], ecx
                mov     esi, [ebp+var_8]
                xor     ebx, eax
                xor     eax, ebx
                xor     ecx, ecx
                xor     eax, esi
                add     edx, 13BDD247h
                xor     eax, 50147DB0h
                or      ecx, eax
                mov     eax, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2Dh
                cmp     byte ptr [edi+eax*8], 0
                jnz     short loc_48BE0F
                mov     eax, [ebp+var_4]
                movzx   eax, al
                cmp     byte ptr [edi+eax*8-2C8h], 0
                jnz     short loc_48BE0F
                xor     ecx, ecx
                lea     edx, [esi+777289ABh]
                xor     ebx, 46D63D2Ch
                or      ecx, ebx

loc_48BE0F:                             ; CODE XREF: VBNCB_unnamed_800021f4+6D¡üj
                                        ; VBNCB_unnamed_800021f4+7D¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021f4 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___176      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     edx, [eax+2BEA4798h]
                mov     esi, ecx
                mov     [esp+58h+var_28], edx
                mov     [esp+58h+var_44], esi
                push    offset dword_40AA50
                lea     ebx, [edi+44DA55A8h]
                add     ebx, eax
                mov     eax, ebx
                mov     [esp+5Ch+var_48], ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+esi-36h]
                mov     eax, [eax+esi-32h]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esi+eax*8-0B8h]
                mov     eax, [esi+eax*8-0B4h]
                mov     [esp+5Ch+var_4], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_C], eax
                mov     [esp+5Ch+var_8], ecx
                mov     eax, [ecx+eax*4-1ACh]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 7Eh
                movzx   ebx, ax
                xor     eax, eax
                sub     ebx, 0B92Ch
                add     ebx, [ecx+esi]
                mov     [esp+5Ch+var_18], ebx
                adc     eax, [ecx+esi+4]
                mov     ebx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_14], eax
                movzx   eax, bl
                mov     ecx, [eax+esi-0Ah]
                mov     eax, [eax+esi-6]
                lea     esi, [edi-119D778Ah]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [ebp+arg_4]
                mov     ebx, eax
                sub     ebx, edi
                mov     [esp+5Ch+var_20], ecx
                xor     ebx, [esp+5Ch+var_48]
                add     eax, 0D65B1D9Fh
                mov     ecx, [esp+5Ch+var_44]
                add     eax, edi
                xor     esi, ebx
                mov     [esp+5Ch+var_10], ebx
                xor     esi, edx
                xor     eax, edx
                xor     eax, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_38], eax
                lea     edx, [esi+15547B0Fh]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     ecx, [edi-2C5FD7FDh]
                add     ecx, edx
                shr     edi, 4
                xor     ecx, [esp+58h+var_38]
                shl     edx, 4
                xor     ecx, ebx
                add     edx, edi
                mov     [esp+58h+var_2C], ecx
                xor     edx, esi
                mov     eax, ecx
                xor     edx, [esp+58h+var_38]
                xor     eax, esi
                xor     eax, [esp+58h+var_48]
                mov     [esp+58h+var_3C], edx
                mov     [esp+58h+var_40], eax
                mov     eax, ecx
                xor     cl, 0D0h
                shr     eax, 8
                add     al, 6
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_44]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     eax, 0DC8B6150h
                xor     ecx, ecx
                xor     esi, 39F2B18h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_48]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_24]
                movzx   eax, cl
                and     dword ptr [edi+eax*8+9Ch], 0
                mov     [edi+eax*8+98h], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8+168h], esi
                mov     esi, [esp+58h+var_1C]
                mov     [edi+eax*8+16Ch], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [edi+eax*8-52Ch], edx
                mov     edx, [esp+58h+var_10]
                mov     [edi+eax*8-530h], ebx
                mov     eax, [esp+58h+var_18]
                mov     [edi+ecx*8+8], eax
                mov     eax, [esp+58h+var_14]
                mov     [edi+ecx*8+0Ch], eax
                mov     eax, [esp+58h+var_40]
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 10845E4Fh
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_8]
                xor     ecx, 0E2h
                xor     ecx, [esp+58h+var_C]
                mov     [ecx+edi], eax
                mov     eax, [esp+58h+var_4]
                mov     [ecx+edi+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_38]
                pop     edi
                xor     ecx, 0BB4F86FBh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___176      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___60       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_0]
                sub     edx, edi
                mov     eax, edx
                mov     [esp+58h+var_48], edx
                shr     eax, 10h
                xor     ebx, edi
                movzx   eax, al
                mov     [esp+58h+var_44], esi
                push    offset dword_40BC08
                mov     [esp+5Ch+var_24], ebx
                mov     ecx, [esi+eax*8+50h]
                mov     eax, [esi+eax*8+54h]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                mov     dword ptr [esp+5Ch+var_3C], ecx
                movzx   ecx, al
                mov     eax, [esi+edx*8-5C0h]
                mov     eax, [eax+ecx+81h]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 68h
                shr     ecx, 18h
                movzx   eax, al
                xor     ecx, 0F3h
                cdq
                add     eax, [ecx+esi]
                mov     [esp+5Ch+var_2C], eax
                adc     edx, [ecx+esi+4]
                movzx   ecx, bl
                mov     [esp+5Ch+var_28], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [ecx+esi+72h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, [ecx+esi+76h]
                mov     [esp+5Ch+var_14], eax
                movzx   eax, dl
                xor     eax, 21h
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     esi, ebx
                xor     esi, edx
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_1C], eax
                lea     edx, [esi-2C1C0B15h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, edi
                mov     edx, [esp+58h+var_48]
                shl     eax, 4
                xor     edx, esi
                shr     ecx, 4
                xor     edx, ebx
                add     ecx, eax
                mov     [esp+58h+var_8], edx
                xor     ecx, ebx
                lea     eax, [edi+28944406h]
                xor     ecx, [esp+58h+var_48]
                mov     ebx, [ebp+arg_4]
                add     eax, ebx
                xor     eax, ecx
                shl     ebx, 4
                shr     edi, 4
                xor     eax, esi
                add     ebx, edi
                mov     [esp+58h+var_C], ecx
                mov     [esp+58h+var_34], eax
                xor     ebx, edx
                xor     ebx, ecx
                mov     ecx, eax
                xor     ecx, edx
                mov     [esp+58h+var_40], ebx
                xor     ecx, [esp+58h+var_48]
                xor     ecx, 88276B38h
                mov     eax, ecx
                mov     [esp+58h+var_30], ecx
                shr     eax, 8
                xor     cl, 23h
                xor     al, 1Ch
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_40]
                sub     ebx, esi
                mov     esi, [esp+58h+var_34]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_3C]
                pop     edi
                adc     edx, dword ptr [esp+54h+var_3C+4]
                add     eax, 44B8ABB9h
                xor     ecx, ecx
                xor     esi, 26803272h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_30]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                mov     esi, [esp+54h+var_44]
                movzx   eax, al
                xor     eax, 29h
                shr     ecx, 18h
                mov     [esi+eax*8+4], edx
                mov     edx, [esp+54h+var_40]
                xor     edx, [esp+54h+var_34]
                xor     edx, [esp+54h+var_24]
                xor     edx, [esp+54h+var_48]
                mov     [esi+eax*8], ebx
                mov     eax, [esp+54h+var_2C]
                mov     [esi+ecx*8-548h], eax
                mov     eax, [esp+54h+var_28]
                mov     [esi+ecx*8-544h], eax
                mov     ecx, [esp+54h+var_20]
                movzx   eax, dl
                mov     [eax+esi-0C4h], ecx
                mov     ecx, [esp+54h+var_1C]
                mov     [eax+esi-0C0h], ecx
                mov     eax, edx
                mov     ecx, [esp+54h+var_18]
                shr     eax, 8
                movzx   eax, al
                shr     edx, 10h
                mov     [esi+eax*8-2E0h], ecx
                mov     ecx, [esp+54h+var_14]
                mov     [esi+eax*8-2DCh], ecx
                mov     ecx, [esp+54h+var_10]
                movzx   eax, dl
                mov     edx, [esp+54h+var_C]
                xor     edx, 0F483C90Ch
                and     dword ptr [esi+eax*8-4FCh], 0
                mov     [esi+eax*8-500h], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 2A762A06h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___60       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___92       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                push    edi
                lea     ecx, [eax+ebx]
                mov     [esp+58h+var_48], esi
                sub     eax, ebx
                mov     [esp+58h+var_40], ecx
                mov     [esp+58h+var_4C], eax
                lea     edx, [ecx-15486F59h]
                movzx   eax, dl
                xor     eax, 25h
                mov     [esp+58h+var_38], edx
                push    offset dword_40C170
                mov     edi, [eax+esi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0AAh
                mov     esi, [eax+esi]
                mov     [esp+5Ch+var_20], esi
                mov     esi, [esp+5Ch+var_48]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 17h
                mov     edx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                lea     eax, [ecx-15486F59h]
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_34], edx
                mov     edx, [eax+esi+1Dh]
                mov     eax, [eax+esi+21h]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_18], edx
                mov     edx, [eax+esi-88h]
                mov     eax, [eax+esi-84h]
                mov     [esp+5Ch+var_24], eax
                mov     eax, [esp+5Ch+var_4C]
                movzx   eax, al
                mov     [esp+5Ch+var_28], edx
                mov     esi, [esi+eax*8-3C0h]
                lea     eax, [ecx+7C405DC1h]
                xor     eax, [esp+5Ch+var_38]
                mov     ecx, [esp+5Ch+var_48]
                mov     edx, eax
                xor     edx, 0EFD4EFE9h
                mov     [esp+5Ch+var_3C], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_40]
                lea     eax, [ecx+7FCADF0Ah]
                xor     eax, [esp+58h+var_4C]
                lea     edx, [ecx-15486F59h]
                xor     eax, edx
                mov     [esp+58h+var_38], eax
                movzx   eax, ax
                add     eax, esi
                lea     esi, [ebx-462E9F62h]
                xor     esi, [esp+58h+var_3C]
                lea     ebx, [ecx+6E03D84Ch]
                xor     esi, [esp+58h+var_4C]
                xor     ebx, [esp+58h+var_38]
                mov     eax, [edi+eax*4-24BD0h]
                xor     ebx, [esp+58h+var_3C]
                mov     [esp+58h+var_10], eax
                mov     ecx, ebx
                mov     eax, [esp+58h+var_4C]
                xor     eax, esi
                mov     [esp+58h+var_C], esi
                xor     eax, [esp+58h+var_38]
                xor     ecx, esi
                mov     [esp+58h+var_8], ebx
                mov     [esp+58h+var_40], eax
                xor     ecx, edx
                xor     ecx, 0A2D140Eh
                mov     [esp+58h+var_44], ecx
                mov     ecx, eax
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_4C]
                xor     ecx, edx
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 91h
                xor     al, 0C9h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_44]
                sub     ebx, esi
                mov     esi, [esp+58h+var_40]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_48]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     eax, 7E66D2FEh
                xor     ecx, ecx
                add     esi, 3148D849h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_2C]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_28]
                shr     ecx, 18h
                mov     [eax+edi-1Ah], esi
                mov     esi, [esp+58h+var_24]
                mov     [eax+edi-16h], esi
                mov     esi, edi
                mov     eax, [esp+58h+var_20]
                pop     edi
                mov     [esi+ecx*8-670h], eax
                mov     eax, [esp+54h+var_1C]
                mov     [esi+ecx*8-66Ch], eax
                xor     ecx, ecx
                mov     eax, [esp+54h+var_44]
                xor     eax, [esp+54h+var_40]
                xor     eax, [esp+54h+var_3C]
                xor     eax, [esp+54h+var_4C]
                mov     [esp+54h+var_44], eax
                movzx   eax, al
                mov     [esi+eax*8-224h], edx
                mov     [esi+eax*8-228h], ebx
                mov     eax, [esp+54h+var_38]
                mov     ebx, [esp+54h+var_44]
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 5Eh ; '^'
                add     edx, dword ptr [esp+54h+var_18]
                adc     ecx, dword ptr [esp+54h+var_18+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 79h
                shr     ebx, 10h
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+54h+var_10]
                mov     [esi+eax*8], edx
                mov     edx, [esp+54h+var_C]
                movzx   eax, bl
                add     edx, 0E6EAB26Bh
                xor     eax, 48h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 2A24FEA7h
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___92       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800022d5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                and     [esp+20h+var_4], 0
                shr     eax, 4
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                shl     edx, 4
                mov     ebx, esi
                xor     ebx, [ebp+arg_0]
                add     eax, edx
                xor     ebx, eax
                mov     [esp+24h+var_14], eax
                push    edi
                mov     edi, ecx
                movzx   eax, al
                xor     eax, 94h
                movzx   ecx, bl
                xor     ecx, 31h
                mov     [esp+28h+var_C], edi
                lea     edx, [esi+4E8A1BDFh]
                mov     eax, [eax+edi]
                mov     ecx, [eax+ecx]
                mov     eax, edx
                xor     eax, 0EEDF222Eh
                mov     edi, ecx
                sub     edi, eax
                cmp     eax, ecx
                mov     [esp+28h+var_8], edi
                mov     edi, esi
                setnbe  [esp+28h+var_15]
                sub     edi, [ebp+arg_0]
                xor     edi, edx
                xor     edi, [esp+28h+var_14]
                mov     [esp+28h+var_10], edi
                lea     edi, [esi-1D1EE574h]
                xor     edi, ebx
                xor     edi, edx
                lea     edx, [esi+12736570h]
                mov     esi, [esp+28h+var_10]
                xor     edx, esi
                xor     edx, ebx
                mov     ebx, edx
                mov     [esp+28h+var_10], edx
                mov     edx, [esp+28h+var_14]
                xor     ebx, edi
                xor     ebx, edx
                xor     ebx, 6DB46F38h
                mov     [esp+28h+var_14], ebx
                cmp     eax, ecx
                jbe     short loc_48C589
                xor     edx, edx
                xor     edi, 0D5F53449h
                add     esi, 0E21652EFh
                or      edx, edi
                jmp     short loc_48C5A0
; ---------------------------------------------------------------------------

loc_48C589:                             ; CODE XREF: VBNCB_unnamed_800022d5+A5¡üj
                mov     eax, [esp+28h+var_10]
                xor     edx, edi
                xor     edx, esi
                add     eax, 84FE799Bh
                xor     esi, esi
                xor     edx, 0F776E265h
                or      esi, eax

loc_48C5A0:                             ; CODE XREF: VBNCB_unnamed_800022d5+B7¡üj
                mov     edi, [esp+28h+var_C]
                mov     al, [esp+28h+var_15]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, bl
                setz    bl
                mov     [edi+ecx*8-380h], al
                mov     eax, [esp+28h+var_14]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                xor     ecx, 0A1h
                mov     edx, esi
                mov     [edi+ecx*8], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022d5 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000106b proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_7C          = dword ptr -7Ch
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_68          = dword ptr -68h
var_64          = dword ptr -64h
var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = dword ptr -58h
var_50          = dword ptr -50h
var_48          = dword ptr -48h
var_40          = dword ptr -40h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 7Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, ecx
                shr     edx, 4
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                shl     eax, 4
                lea     ebx, [esi-1FB49FA4h]
                add     edx, eax
                mov     [esp+88h+var_60], edi
                xor     ebx, edx
                mov     [esp+88h+var_74], edx
                lea     eax, [ecx-7169A13Eh]
                and     [esp+88h+var_4], 0
                mov     [esp+88h+var_78], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+88h+var_40], ebx
                mov     edi, [eax+edi-0BAh]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+88h+var_7C], edi
                mov     edi, [esp+88h+var_60]
                mov     edi, [edi+eax*8-680h]
                mov     [esp+88h+var_24], edi
                mov     edi, [esp+88h+var_60]
                mov     eax, [edi+eax*8-67Ch]
                mov     [esp+88h+var_8], eax
                mov     eax, edx
                shr     eax, 18h
                mov     edx, [eax+edi+4Ch]
                lea     eax, [esi-46CF1677h]
                xor     eax, [esp+88h+var_78]
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_48], eax
                mov     eax, [esp+88h+var_78]
                movzx   eax, al
                mov     [esp+88h+var_68], edx
                mov     ecx, [edi+eax*8-340h]
                mov     eax, [esp+88h+var_74]
                movzx   eax, al
                xor     eax, 0A5h
                mov     [esp+88h+var_34], ecx
                mov     ecx, edx
                mov     eax, [edi+eax*8]
                mov     edi, [esp+88h+var_7C]
                mov     [esp+88h+var_64], eax
                mov     eax, esi
                sub     eax, [ebp+arg_0]
                xor     eax, ebx
                xor     ebx, ebx
                xor     eax, [esp+88h+var_78]
                mov     [esp+88h+var_50], eax
                mov     eax, [esp+88h+var_78]
                shr     eax, 8
                movzx   eax, al
                push    ebx
                push    [esp+8Ch+var_64]
                mov     edi, [eax+edi-1Ch]
                mov     eax, [esp+90h+var_40]
                xor     eax, 65FE7B7h
                push    ebx
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, [esp+88h+var_48]
                add     edi, eax
                mov     eax, [ebp+arg_0]
                adc     ebx, edx
                mov     edx, [esp+88h+var_7C]
                xor     eax, esi
                xor     eax, ecx
                xor     eax, [esp+88h+var_40]
                mov     [esp+88h+var_30], eax
                movzx   eax, cl
                xor     eax, 63h
                mov     esi, [eax+edx]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                push    0
                push    [esp+8Ch+var_64]
                mov     [eax+edx-10h], edi
                mov     eax, ecx
                mov     ecx, [esp+90h+var_68]
                shr     eax, 10h
                movzx   eax, al
                push    0
                push    dword ptr [eax+ecx+15h]
                call    __allmul
                mov     ecx, [esp+88h+var_48]
                mov     edi, eax
                mov     eax, edx
                add     edi, ebx
                mov     edx, [ebp+arg_0]
                adc     eax, 0
                add     edi, esi
                mov     esi, [esp+88h+var_7C]
                adc     eax, 0
                shr     ecx, 18h
                sub     edx, [ebp+arg_4]
                mov     [esp+88h+var_20], eax
                push    0
                mov     ebx, [ecx+esi-42h]
                mov     ecx, [esp+8Ch+var_50]
                xor     edx, ecx
                push    [esp+8Ch+var_64]
                xor     edx, [esp+90h+var_48]
                movzx   eax, cl
                xor     edx, 0C4415C1Fh
                xor     eax, 33h
                mov     [esp+90h+var_5C], edx
                push    0
                mov     [eax+esi], edi
                mov     eax, ecx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2Ch
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_50]
                mov     ecx, edx
                adc     eax, 0
                add     esi, ebx
                mov     ebx, [esp+88h+var_30]
                adc     eax, 0
                shr     ecx, 10h
                mov     [esp+88h+var_20], eax
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [eax+ecx-0Ah]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 78h
                push    0
                mov     [eax+ecx], esi
                mov     eax, ebx
                mov     ecx, [esp+94h+var_68]
                xor     eax, edx
                xor     eax, [esp+94h+var_74]
                xor     eax, 0A04F0713h
                mov     [esp+94h+var_70], eax
                movzx   eax, bl
                xor     eax, 0EFh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, [esp+88h+var_20]
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                mov     [esp+88h+var_20], eax
                mov     ecx, ebx
                shr     ecx, 8
                movzx   eax, cx
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [eax+ecx-81FBh]
                mov     eax, ebx
                shr     eax, 18h
                push    0
                mov     [eax+ecx+8Bh], esi
                mov     ecx, [esp+94h+var_5C]
                mov     eax, ecx
                xor     eax, ebx
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-48h]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_5C]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx+30h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx-9], esi
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                push    dword ptr [eax+ecx+76h]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, ebx
                mov     ebx, [esp+88h+var_70]
                mov     ecx, ebx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                xor     ecx, [esp+8Ch+var_5C]
                xor     ecx, [esp+8Ch+var_40]
                xor     [esp+8Ch+var_78], ecx
                mov     ecx, [esp+8Ch+var_7C]
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_20], eax
                movzx   eax, bx
                push    0
                mov     edi, [eax+ecx-0D58h]
                mov     eax, ebx
                xor     ebx, [esp+94h+var_48]
                xor     ebx, [esp+94h+var_40]
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx+1], esi
                mov     eax, [esp+94h+var_74]
                xor     ebx, eax
                mov     ecx, [esp+94h+var_68]
                movzx   eax, ax
                mov     [esp+94h+var_40], ebx
                push    dword ptr [eax+ecx-0D0BDh]
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                add     ecx, [esp+88h+var_20]
                adc     eax, 0
                add     ecx, edi
                mov     edx, [esp+88h+var_50]
                adc     eax, 0
                mov     esi, [esp+88h+var_7C]
                mov     [esp+88h+var_20], eax
                mov     eax, edx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_78]
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_50], eax
                mov     eax, [esp+88h+var_78]
                xor     eax, 7C86655Eh
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [eax+esi]
                mov     eax, [esp+90h+var_30]
                xor     eax, edx
                xor     eax, ebx
                xor     eax, [esp+90h+var_78]
                mov     [esp+90h+var_58], eax
                movzx   eax, bl
                xor     eax, 0C9h
                push    0
                mov     [eax+esi], ecx
                mov     eax, ebx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0CCh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_40]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+8Ch+var_7C]
                push    [esp+8Ch+var_64]
                push    0
                mov     edi, [eax+ecx+0B5h]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0A7h
                mov     [eax+ecx], esi
                mov     ecx, [esp+94h+var_5C]
                xor     ecx, [esp+94h+var_30]
                mov     eax, [esp+94h+var_50]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, al
                mov     [esp+94h+var_48], ecx
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx+51h]
                call    __allmul
                mov     ecx, [esp+88h+var_50]
                mov     esi, eax
                add     esi, ebx
                mov     eax, edx
                adc     eax, 0
                add     esi, edi
                mov     edi, [esp+88h+var_7C]
                adc     eax, 0
                shr     ecx, 8
                mov     [esp+88h+var_30], eax
                movzx   eax, cx
                mov     ecx, [esp+88h+var_58]
                xor     eax, 0AF5Ch
                mov     ebx, [eax+edi]
                mov     eax, [esp+88h+var_70]
                xor     eax, [esp+88h+var_5C]
                xor     eax, ecx
                xor     eax, [esp+88h+var_50]
                mov     [esp+88h+var_20], eax
                movzx   eax, cx
                xor     eax, 462Fh
                mov     [eax+edi], esi
                mov     eax, ecx
                mov     ecx, [esp+88h+var_68]
                shr     eax, 10h
                push    0
                push    [esp+8Ch+var_64]
                movzx   eax, al
                xor     eax, 81h
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     edi, edx
                add     ecx, [esp+88h+var_30]
                mov     edx, [esp+88h+var_7C]
                mov     eax, [esp+88h+var_58]
                adc     edi, 0
                add     ecx, ebx
                push    0
                mov     esi, [edx]
                adc     edi, 0
                push    [esp+8Ch+var_64]
                shr     eax, 18h
                push    0
                mov     [eax+edx-52h], ecx
                mov     eax, [esp+94h+var_68]
                push    dword ptr [eax]
                call    __allmul
                mov     ecx, [esp+88h+var_48]
                add     eax, edi
                mov     ebx, edx
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     eax, esi
                adc     ebx, 0
                xor     edi, edi
                mov     [edx], eax
                mov     eax, [esp+88h+var_70]
                xor     eax, ecx
                xor     eax, [esp+88h+var_58]
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_70], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                push    edi
                push    [esp+8Ch+var_64]
                mov     esi, [eax+edx+91h]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_68]
                push    edi
                push    dword ptr [eax+ecx+6Fh]
                call    __allmul
                mov     ecx, [esp+88h+var_7C]
                add     esi, eax
                push    0
                adc     edi, edx
                mov     edx, [esp+8Ch+var_48]
                add     esi, ebx
                mov     eax, edx
                mov     ebx, [esp+8Ch+var_78]
                adc     edi, 0
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 17h
                mov     [esp+8Ch+var_30], edi
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 2Ch
                mov     [eax+ecx], esi
                mov     eax, [esp+8Ch+var_20]
                xor     eax, edx
                mov     edx, [esp+8Ch+var_70]
                xor     eax, ebx
                xor     [esp+8Ch+var_74], eax
                mov     eax, edx
                xor     eax, [esp+8Ch+var_20]
                xor     eax, [esp+8Ch+var_40]
                xor     ebx, eax
                mov     [esp+8Ch+var_78], ebx
                mov     ebx, [esp+8Ch+var_64]
                mov     eax, [esp+8Ch+var_68]
                push    ebx
                push    0
                push    dword ptr [eax+edx-55AD9D6Fh]
                call    __allmul
                mov     ecx, eax
                mov     esi, [esp+88h+var_7C]
                add     ecx, [esp+88h+var_30]
                mov     eax, edx
                mov     edx, [esp+88h+var_74]
                adc     eax, 0
                add     ecx, edi
                push    0
                adc     eax, 0
                mov     [esp+8Ch+var_30], eax
                mov     eax, [esp+8Ch+var_70]
                xor     eax, [esp+8Ch+var_50]
                xor     eax, [esp+8Ch+var_40]
                xor     eax, edx
                mov     [esp+8Ch+var_5C], eax
                movzx   eax, dl
                push    ebx
                push    0
                mov     edi, [eax+esi+1Eh]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 63h
                mov     [eax+esi], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 79h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, [esp+88h+var_74]
                mov     esi, eax
                add     esi, [esp+88h+var_30]
                mov     ebx, edx
                mov     eax, [esp+88h+var_7C]
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, edi
                push    0
                adc     ebx, 0
                shr     ecx, 18h
                push    [esp+8Ch+var_64]
                push    0
                mov     edi, [ecx+eax+0B9h]
                mov     eax, [esp+94h+var_58]
                xor     eax, [esp+94h+var_50]
                mov     ecx, [esp+94h+var_78]
                xor     eax, ecx
                xor     eax, [esp+94h+var_74]
                mov     [esp+94h+var_30], eax
                movzx   eax, cl
                xor     eax, 0D0h
                mov     [eax+edx], esi
                mov     eax, ecx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 8
                movzx   eax, al
                push    dword ptr [eax+ecx+0ADh]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_78]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                shr     ecx, 10h
                mov     [esp+88h+var_40], eax
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                xor     eax, 0A0h
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 67h
                push    0
                push    [esp+8Ch+var_64]
                mov     [eax+ecx], esi
                mov     ecx, [esp+90h+var_48]
                xor     ecx, [esp+90h+var_58]
                mov     eax, [esp+90h+var_5C]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, al
                mov     [esp+90h+var_50], ecx
                mov     ecx, [esp+90h+var_68]
                push    0
                push    dword ptr [eax+ecx-1Fh]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_40]
                mov     edx, [esp+88h+var_5C]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+8Ch+var_7C]
                xor     eax, 0A9h
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0D0h
                mov     [eax+ecx], esi
                mov     eax, edx
                mov     ecx, [esp+8Ch+var_68]
                mov     esi, [esp+8Ch+var_64]
                shr     eax, 18h
                push    esi
                push    0
                push    dword ptr [eax+ecx-91h]
                call    __allmul
                mov     ecx, eax
                mov     esi, [esp+88h+var_7C]
                add     ecx, ebx
                mov     eax, edx
                mov     ebx, [esp+88h+var_30]
                adc     eax, 0
                add     ecx, edi
                mov     edi, [esp+88h+var_7C]
                adc     eax, 0
                mov     [esp+88h+var_58], eax
                mov     eax, [esp+88h+var_20]
                xor     eax, [esp+88h+var_48]
                xor     eax, ebx
                xor     eax, [esp+88h+var_5C]
                mov     [esp+88h+var_40], eax
                movzx   eax, bx
                push    0
                mov     edi, [eax+edi-0D65Ah]
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+esi-0Bh], ecx
                mov     eax, [esp+8Ch+var_70]
                xor     eax, [esp+8Ch+var_20]
                mov     ecx, [esp+8Ch+var_50]
                xor     eax, ecx
                mov     esi, [esp+8Ch+var_64]
                xor     eax, ebx
                mov     [esp+8Ch+var_48], eax
                movzx   eax, cx
                mov     ecx, [esp+8Ch+var_68]
                xor     eax, 0BFD1h
                push    esi
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_58]
                mov     edx, [esp+88h+var_50]
                adc     ebx, 0
                add     esi, edi
                mov     ecx, edx
                push    0
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+8Ch+var_7C]
                xor     eax, 16h
                push    [esp+8Ch+var_64]
                push    0
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 30h
                mov     [eax+ecx], esi
                mov     ecx, [esp+94h+var_70]
                mov     eax, [esp+94h+var_40]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, ax
                xor     ecx, [esp+94h+var_74]
                mov     [esp+94h+var_70], ecx
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-242Ch]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_40]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                shr     ecx, 10h
                mov     [esp+8Ch+var_20], eax
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                xor     eax, 78h
                push    0
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx+5Eh], esi
                mov     ecx, [esp+94h+var_48]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                xor     eax, 50h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_48]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx-0B3h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx+4], esi
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                push    dword ptr [eax+ecx+2]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_70]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                xor     ecx, [esp+8Ch+var_48]
                xor     ecx, [esp+8Ch+var_5C]
                xor     [esp+8Ch+var_78], ecx
                mov     ecx, [esp+8Ch+var_7C]
                mov     [esp+8Ch+var_20], eax
                push    [esp+8Ch+var_64]
                movzx   eax, dl
                xor     eax, 0E4h
                push    0
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 92h
                mov     [eax+ecx], esi
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0CAh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     eax, [esp+88h+var_70]
                mov     ecx, eax
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                shr     ecx, 18h
                xor     eax, [esp+90h+var_30]
                xor     ecx, 0B0h
                xor     eax, [esp+90h+var_5C]
                push    0
                mov     edi, [ecx+edx]
                mov     ecx, [esp+94h+var_74]
                xor     eax, ecx
                mov     [esp+94h+var_58], eax
                movzx   eax, cl
                xor     eax, 4Eh
                mov     [eax+edx], esi
                mov     eax, ecx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 8
                movzx   eax, al
                push    dword ptr [eax+ecx+79h]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_74]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                shr     ecx, 10h
                mov     [esp+88h+var_20], eax
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                mov     edi, [eax+ecx-25h]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx+18h], esi
                mov     eax, [esp+88h+var_50]
                xor     eax, [esp+88h+var_30]
                mov     ecx, [esp+88h+var_78]
                xor     eax, ecx
                xor     eax, edx
                push    0
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_30], eax
                movzx   eax, cl
                mov     ecx, [esp+90h+var_68]
                push    0
                push    dword ptr [eax+ecx-0B7h]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_78]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx-17h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0EEh
                mov     [eax+ecx], esi
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                push    dword ptr [eax+ecx+94h]
                call    __allmul
                mov     ecx, eax
                mov     esi, [esp+88h+var_7C]
                add     ecx, ebx
                mov     eax, edx
                mov     edx, [esp+88h+var_58]
                adc     eax, 0
                mov     ebx, [esp+88h+var_30]
                add     ecx, edi
                push    0
                adc     eax, 0
                mov     [esp+8Ch+var_20], eax
                mov     eax, [esp+8Ch+var_40]
                xor     eax, [esp+8Ch+var_50]
                xor     eax, edx
                xor     eax, [esp+8Ch+var_78]
                mov     [esp+8Ch+var_50], eax
                movzx   eax, dx
                push    [esp+8Ch+var_64]
                push    0
                mov     edi, [eax+esi-0C613h]
                mov     esi, [esp+94h+var_48]
                mov     eax, esi
                xor     eax, [esp+94h+var_40]
                xor     eax, ebx
                xor     eax, edx
                mov     edx, [esp+94h+var_7C]
                mov     [esp+94h+var_48], eax
                mov     eax, ebx
                xor     eax, 0DA9685D6h
                mov     [eax+edx], ecx
                mov     eax, [esp+94h+var_70]
                mov     ecx, [esp+94h+var_68]
                xor     eax, esi
                xor     eax, [esp+94h+var_50]
                xor     eax, ebx
                mov     ebx, [esp+94h+var_50]
                mov     [esp+94h+var_5C], eax
                movzx   eax, bl
                push    dword ptr [eax+ecx+4Fh]
                call    __allmul
                mov     esi, eax
                mov     ecx, ebx
                add     esi, [esp+88h+var_20]
                mov     eax, edx
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                mov     [esp+88h+var_20], eax
                shr     ecx, 8
                movzx   eax, cx
                mov     ecx, [esp+88h+var_7C]
                xor     eax, 42Ah
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [eax+ecx]
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 2Dh
                push    0
                mov     [eax+ecx], esi
                mov     ecx, [esp+94h+var_70]
                mov     eax, [esp+94h+var_48]
                xor     ecx, eax
                xor     ecx, ebx
                movzx   eax, al
                xor     ecx, [esp+94h+var_74]
                xor     eax, 9
                mov     [esp+94h+var_70], ecx
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_48]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx-4]
                mov     eax, edx
                shr     eax, 10h
                mov     [eax+ecx-890Ah], esi
                mov     ecx, [esp+94h+var_5C]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                movzx   eax, cx
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-25FBh]
                call    __allmul
                mov     ecx, [esp+88h+var_5C]
                mov     esi, eax
                add     esi, ebx
                mov     eax, edx
                mov     ebx, [esp+88h+var_7C]
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                shr     ecx, 10h
                mov     [esp+8Ch+var_20], eax
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_70]
                push    0
                mov     edi, [eax+ebx-18h]
                mov     eax, ecx
                xor     eax, [esp+94h+var_5C]
                xor     eax, [esp+94h+var_58]
                xor     [esp+94h+var_78], eax
                movzx   eax, cx
                xor     eax, 97EEh
                mov     [eax+ebx], esi
                mov     eax, ecx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0C5h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                add     esi, [esp+88h+var_20]
                mov     ebx, edx
                mov     eax, [esp+88h+var_70]
                mov     ecx, eax
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, edi
                adc     ebx, 0
                xor     eax, [esp+88h+var_30]
                xor     eax, [esp+88h+var_58]
                shr     ecx, 18h
                mov     edi, [ecx+edx+28h]
                xor     edx, edx
                mov     ecx, [esp+88h+var_74]
                xor     eax, ecx
                mov     [esp+88h+var_40], eax
                xor     eax, eax
                movzx   ecx, cl
                inc     eax
                sub     ecx, 47h ; 'G'
                call    __allshl
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_64]
                mov     [eax+ecx], esi
                mov     eax, [esp+90h+var_74]
                mov     ecx, [esp+90h+var_68]
                shr     eax, 8
                movzx   eax, al
                push    0
                push    dword ptr [eax+ecx-1Eh]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_74]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                shr     ecx, 10h
                mov     [esp+8Ch+var_20], eax
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                xor     eax, 75h
                push    0
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 8Ch
                mov     [eax+ecx], esi
                mov     eax, [esp+94h+var_50]
                xor     eax, [esp+94h+var_30]
                mov     ecx, [esp+94h+var_78]
                xor     eax, ecx
                xor     eax, edx
                mov     [esp+94h+var_30], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                xor     eax, 81h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_78]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                mov     edi, [eax+ecx-70h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 3
                mov     [eax+ecx], esi
                mov     ecx, [esp+88h+var_68]
                mov     eax, edx
                push    0
                push    [esp+8Ch+var_64]
                shr     eax, 18h
                xor     eax, 0F6h
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                add     ecx, ebx
                mov     ebx, [esp+88h+var_40]
                adc     eax, 0
                add     ecx, edi
                push    0
                adc     eax, 0
                mov     [esp+8Ch+var_20], eax
                mov     eax, [esp+8Ch+var_48]
                xor     eax, [esp+8Ch+var_50]
                xor     eax, ebx
                xor     eax, [esp+8Ch+var_78]
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_58], eax
                movzx   eax, bl
                push    0
                mov     esi, [eax+edx-38h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EEh
                mov     [eax+edx], ecx
                mov     eax, ebx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                push    dword ptr [eax+ecx+0C2h]
                call    __allmul
                mov     edi, eax
                mov     ecx, ebx
                add     edi, [esp+88h+var_20]
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                adc     eax, 0
                add     edi, esi
                push    0
                adc     eax, 0
                shr     ecx, 18h
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_20], eax
                xor     ecx, 5Dh
                mov     eax, [esp+90h+var_5C]
                xor     eax, [esp+90h+var_48]
                push    0
                mov     ebx, [ecx+edx]
                mov     ecx, [esp+94h+var_30]
                xor     eax, ecx
                xor     eax, [esp+94h+var_40]
                mov     [esp+94h+var_50], eax
                movzx   eax, cl
                mov     [eax+edx+2Bh], edi
                mov     eax, ecx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 8
                movzx   eax, al
                push    dword ptr [eax+ecx-0B9h]
                call    __allmul
                mov     esi, eax
                mov     edi, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_30]
                mov     ecx, edx
                adc     edi, 0
                add     esi, ebx
                adc     edi, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                mov     [eax+ecx-0D0h], esi
                mov     eax, [esp+88h+var_70]
                xor     eax, [esp+88h+var_5C]
                xor     eax, [esp+88h+var_58]
                mov     ecx, [esp+88h+var_68]
                xor     eax, edx
                mov     [esp+88h+var_48], eax
                mov     eax, edx
                push    0
                push    [esp+8Ch+var_64]
                shr     eax, 18h
                push    0
                push    dword ptr [eax+ecx-0DDh]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_58]
                mov     eax, [esp+88h+var_7C]
                movzx   ecx, dl
                push    0
                add     esi, [ecx+eax-8Dh]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+8Ch+var_7C]
                mov     edi, [eax+ecx+6Ch]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx-0D7h], esi
                mov     eax, edx
                mov     ecx, [esp+8Ch+var_68]
                mov     esi, [esp+8Ch+var_64]
                shr     eax, 18h
                push    esi
                push    0
                push    dword ptr [eax+ecx+6Dh]
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                add     ecx, ebx
                mov     ebx, [esp+88h+var_50]
                adc     eax, 0
                add     ecx, edi
                push    0
                adc     eax, 0
                mov     [esp+8Ch+var_20], eax
                mov     eax, [esp+8Ch+var_70]
                xor     eax, ebx
                xor     eax, [esp+8Ch+var_58]
                xor     eax, [esp+8Ch+var_74]
                mov     [esp+8Ch+var_70], eax
                movzx   eax, bl
                xor     eax, 73h
                push    esi
                push    0
                mov     edi, [eax+edx]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 55h
                mov     [eax+edx], ecx
                mov     eax, ebx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 54h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ecx, ebx
                add     esi, [esp+88h+var_20]
                mov     eax, edx
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                shr     ecx, 18h
                mov     [esp+88h+var_20], eax
                xor     ecx, 0F8h
                mov     edx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [ecx+edx]
                mov     ecx, [esp+90h+var_48]
                mov     eax, ecx
                xor     eax, ebx
                xor     eax, [esp+90h+var_78]
                xor     [esp+90h+var_74], eax
                movzx   eax, cx
                xor     eax, 4895h
                push    0
                mov     [eax+edx], esi
                mov     eax, ecx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                xor     eax, 2FFAh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_20]
                mov     edx, [esp+88h+var_70]
                mov     ecx, edx
                adc     ebx, 0
                movzx   eax, dl
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                xor     ecx, [esp+90h+var_48]
                xor     ecx, [esp+90h+var_40]
                xor     [esp+90h+var_78], ecx
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx+39h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ecx+4], esi
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                push    dword ptr [eax+ecx+79h]
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_74]
                add     ecx, ebx
                push    0
                adc     eax, 0
                add     ecx, edi
                mov     edi, [esp+8Ch+var_7C]
                adc     eax, 0
                mov     [esp+8Ch+var_20], eax
                mov     eax, [esp+8Ch+var_70]
                xor     eax, [esp+8Ch+var_30]
                xor     eax, [esp+8Ch+var_40]
                xor     eax, edx
                mov     [esp+8Ch+var_40], eax
                push    [esp+8Ch+var_64]
                movzx   eax, dx
                xor     eax, 17CCh
                push    0
                mov     esi, [eax+edi]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 4Ch
                mov     [eax+edi], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                xor     eax, 65h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     edi, edx
                add     ecx, [esp+88h+var_20]
                adc     edi, 0
                mov     edx, [esp+88h+var_78]
                add     ecx, esi
                mov     eax, [esp+88h+var_58]
                mov     ebx, [esp+88h+var_7C]
                adc     edi, 0
                xor     eax, [esp+88h+var_30]
                xor     eax, edx
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_30], eax
                movzx   eax, dx
                xor     eax, 2B7h
                push    0
                push    [esp+8Ch+var_64]
                mov     esi, [eax+ebx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                push    0
                mov     [eax+ebx+48h], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                xor     eax, 5Fh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_40]
                add     ecx, edi
                mov     eax, [esp+88h+var_50]
                mov     edi, [esp+88h+var_7C]
                adc     ebx, 0
                add     ecx, esi
                push    0
                adc     ebx, 0
                xor     eax, [esp+8Ch+var_58]
                xor     eax, edx
                xor     eax, [esp+8Ch+var_78]
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_20], eax
                movzx   eax, dl
                push    0
                mov     esi, [eax+edi-9Eh]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi+58h], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 75h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, [esp+88h+var_40]
                mov     edi, eax
                add     edi, ebx
                mov     eax, edx
                mov     ebx, [esp+88h+var_48]
                adc     eax, 0
                mov     edx, [esp+88h+var_7C]
                add     edi, esi
                adc     eax, 0
                shr     ecx, 18h
                mov     [esp+88h+var_58], eax
                xor     ecx, 0BAh
                mov     eax, [esp+88h+var_7C]
                mov     esi, [ecx+eax]
                mov     eax, ebx
                xor     eax, [esp+88h+var_50]
                mov     ecx, [esp+88h+var_30]
                xor     eax, ecx
                xor     eax, [esp+88h+var_40]
                mov     [esp+88h+var_48], eax
                movzx   eax, cx
                xor     eax, 0EC7Fh
                mov     [eax+edx], edi
                mov     eax, [esp+88h+var_70]
                mov     edi, [esp+88h+var_20]
                xor     eax, ebx
                xor     eax, edi
                xor     eax, ecx
                mov     ecx, [esp+88h+var_68]
                mov     [esp+88h+var_5C], eax
                mov     eax, edi
                push    0
                push    [esp+8Ch+var_64]
                xor     eax, 1A469BFFh
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                add     ecx, [esp+88h+var_58]
                mov     edx, [esp+88h+var_48]
                mov     eax, [esp+88h+var_70]
                adc     ebx, 0
                add     ecx, esi
                push    0
                adc     ebx, 0
                xor     eax, edx
                xor     eax, edi
                mov     edi, [esp+8Ch+var_7C]
                xor     eax, [esp+8Ch+var_74]
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_70], eax
                movzx   eax, dl
                push    0
                mov     esi, [eax+edi+2Dh]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, ax
                xor     eax, 0C8B5h
                mov     [eax+edi], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                push    dword ptr [eax+ecx-9]
                call    __allmul
                mov     edi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_5C]
                add     edi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     edi, esi
                push    0
                adc     eax, 0
                xor     ecx, [esp+8Ch+var_48]
                xor     ecx, [esp+8Ch+var_78]
                xor     [esp+8Ch+var_74], ecx
                mov     ecx, [esp+8Ch+var_7C]
                mov     [esp+8Ch+var_50], eax
                push    [esp+8Ch+var_64]
                movzx   eax, dx
                xor     eax, 0B46h
                push    0
                mov     ebx, [eax+ecx]
                mov     eax, edx
                shr     eax, 10h
                xor     eax, 0A688h
                mov     [eax+ecx], edi
                mov     ecx, [esp+94h+var_70]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+94h+var_40]
                xor     [esp+94h+var_78], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-93h]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, [esp+88h+var_50]
                mov     edx, [esp+88h+var_70]
                mov     ecx, edx
                adc     eax, 0
                add     esi, ebx
                adc     eax, 0
                shr     ecx, 8
                mov     [esp+88h+var_50], eax
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                xor     eax, 0B9h
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 11h
                push    0
                mov     [eax+ecx], esi
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                xor     eax, 0E1h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, [esp+88h+var_74]
                mov     esi, eax
                add     esi, [esp+88h+var_50]
                mov     ebx, edx
                mov     eax, [esp+88h+var_70]
                adc     ebx, 0
                add     esi, edi
                adc     ebx, 0
                xor     eax, [esp+88h+var_30]
                xor     eax, [esp+88h+var_40]
                xor     edx, edx
                xor     eax, ecx
                movzx   ecx, cl
                mov     [esp+88h+var_40], eax
                xor     ecx, 19h
                xor     eax, eax
                inc     eax
                call    __allshl
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_64]
                mov     [eax+ecx], esi
                mov     eax, [esp+90h+var_74]
                mov     ecx, [esp+90h+var_68]
                shr     eax, 8
                movzx   eax, al
                push    0
                push    dword ptr [eax+ecx+79h]
                call    __allmul
                mov     ecx, [esp+88h+var_74]
                mov     esi, eax
                mov     edi, [esp+88h+var_7C]
                mov     eax, edx
                shr     ecx, 10h
                mov     edx, edi
                movzx   ecx, cl
                push    0
                push    [esp+8Ch+var_64]
                add     esi, [ecx+edi+78h]
                mov     ecx, [esp+90h+var_40]
                adc     eax, 0
                add     esi, ebx
                mov     ebx, [esp+90h+var_78]
                adc     eax, 0
                mov     [esp+90h+var_18], eax
                mov     eax, [esp+90h+var_20]
                xor     eax, [esp+90h+var_30]
                xor     eax, ebx
                xor     eax, [esp+90h+var_74]
                mov     [esp+90h+var_50], eax
                mov     eax, ebx
                xor     eax, 0A610E0E4h
                mov     edi, [eax+edx]
                mov     eax, [esp+90h+var_48]
                xor     eax, [esp+90h+var_20]
                xor     eax, ecx
                xor     eax, ebx
                mov     [esp+90h+var_58], eax
                movzx   eax, cl
                mov     [eax+edx+5Ch], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EAh
                mov     ecx, [esp+90h+var_68]
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                mov     edx, [esp+88h+var_40]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                adc     ebx, 0
                shr     ecx, 10h
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                xor     eax, 77h
                push    0
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx+32h], esi
                mov     ecx, [esp+94h+var_5C]
                xor     ecx, [esp+94h+var_48]
                mov     eax, [esp+94h+var_50]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, al
                mov     [esp+94h+var_48], ecx
                xor     eax, 5Eh
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_50]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                shr     ecx, 8
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_18], eax
                movzx   eax, cx
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx-7CB0h]
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 0A1h
                mov     [eax+ecx], esi
                mov     ecx, [esp+94h+var_70]
                xor     ecx, [esp+94h+var_5C]
                mov     eax, [esp+94h+var_58]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, ax
                mov     [esp+94h+var_5C], ecx
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-5F7Ch]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                mov     edx, [esp+88h+var_58]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                mov     edi, [eax+ecx+13h]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx+0A9h], esi
                mov     eax, [esp+88h+var_48]
                mov     ecx, [esp+88h+var_70]
                xor     ecx, eax
                movzx   eax, al
                xor     ecx, edx
                xor     ecx, [esp+88h+var_74]
                push    0
                push    [esp+8Ch+var_64]
                mov     [esp+90h+var_70], ecx
                mov     ecx, [esp+90h+var_68]
                push    0
                push    dword ptr [eax+ecx+8Dh]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_48]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                shr     ecx, 8
                mov     [esp+8Ch+var_18], eax
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx-64h]
                mov     eax, edx
                shr     eax, 10h
                xor     eax, 0A8DAh
                mov     [eax+ecx], esi
                mov     ecx, [esp+94h+var_5C]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-0A7h]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                mov     edx, [esp+88h+var_5C]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                push    [esp+8Ch+var_64]
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cx
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx-310Eh]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx-0D1h], esi
                mov     ecx, [esp+94h+var_70]
                mov     eax, ecx
                xor     eax, edx
                xor     eax, [esp+94h+var_40]
                xor     [esp+94h+var_78], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                push    dword ptr [eax+ecx-8Eh]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_70]
                add     esi, ebx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                shr     ecx, 8
                mov     [esp+88h+var_18], eax
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                mov     edi, [eax+ecx-36h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx-56h], esi
                mov     ecx, edx
                shr     ecx, 18h
                xor     eax, eax
                sub     ecx, 0F6h
                inc     eax
                xor     edx, edx
                call    __allshl
                mov     ecx, [esp+88h+var_68]
                push    0
                push    [esp+8Ch+var_64]
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                add     ecx, [esp+88h+var_18]
                mov     eax, [esp+88h+var_70]
                mov     edx, [esp+88h+var_74]
                adc     ebx, 0
                add     ecx, edi
                mov     edi, [esp+88h+var_7C]
                push    0
                adc     ebx, 0
                xor     eax, [esp+8Ch+var_50]
                xor     eax, [esp+8Ch+var_40]
                xor     eax, edx
                mov     [esp+8Ch+var_30], eax
                push    [esp+8Ch+var_64]
                movzx   eax, dl
                xor     eax, 0F6h
                push    0
                mov     esi, [eax+edi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-1Dh], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 53h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_78]
                add     ecx, ebx
                mov     eax, [esp+88h+var_58]
                mov     ebx, [esp+88h+var_7C]
                adc     edi, 0
                add     ecx, esi
                push    0
                adc     edi, 0
                xor     eax, [esp+8Ch+var_50]
                push    [esp+8Ch+var_64]
                xor     eax, edx
                xor     eax, [esp+90h+var_74]
                mov     [esp+90h+var_40], eax
                movzx   eax, dx
                xor     eax, 0FE5Dh
                push    0
                mov     esi, [eax+ebx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ebx-80h], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 18h
                push    dword ptr [eax+ecx+16h]
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                mov     eax, [esp+88h+var_48]
                add     ecx, edi
                adc     ebx, 0
                add     ecx, esi
                adc     ebx, 0
                xor     eax, [esp+88h+var_58]
                mov     edx, [esp+88h+var_30]
                xor     eax, edx
                xor     eax, [esp+88h+var_78]
                mov     edi, [esp+88h+var_7C]
                mov     [esp+88h+var_58], eax
                movzx   eax, dl
                xor     eax, 86h
                push    0
                push    [esp+8Ch+var_64]
                mov     esi, [eax+edi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 85h
                push    0
                mov     [eax+edi], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                push    dword ptr [eax+ecx+25h]
                call    __allmul
                mov     ecx, [esp+88h+var_30]
                add     eax, ebx
                mov     ebx, [esp+88h+var_7C]
                mov     edi, edx
                adc     edi, 0
                add     eax, esi
                adc     edi, 0
                shr     ecx, 18h
                xor     ecx, 72h
                mov     [ecx+ebx], eax
                mov     eax, [esp+88h+var_5C]
                xor     eax, [esp+88h+var_48]
                mov     ecx, [esp+88h+var_40]
                xor     eax, ecx
                xor     eax, [esp+88h+var_30]
                mov     [esp+88h+var_48], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 43h
                mov     esi, [eax+ebx]
                xor     ebx, ebx
                push    ebx
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_68]
                push    ebx
                push    dword ptr [eax+ecx-51h]
                call    __allmul
                mov     ecx, [esp+88h+var_40]
                add     esi, eax
                mov     eax, ecx
                adc     ebx, edx
                add     esi, edi
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E7h
                mov     [esp+88h+var_18], ebx
                push    0
                push    [esp+8Ch+var_64]
                mov     edi, [eax+edx]
                mov     eax, ecx
                shr     eax, 18h
                xor     eax, 0DAh
                push    0
                mov     [eax+edx], esi
                mov     eax, [esp+94h+var_70]
                xor     eax, [esp+94h+var_5C]
                mov     edx, [esp+94h+var_58]
                xor     eax, edx
                xor     eax, ecx
                mov     ecx, [esp+94h+var_68]
                mov     [esp+94h+var_50], eax
                movzx   eax, dl
                xor     eax, 0A8h
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                mov     edx, [esp+88h+var_58]
                mov     ecx, edx
                adc     ebx, 0
                add     esi, edi
                push    0
                adc     ebx, 0
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+8Ch+var_7C]
                xor     eax, 37h
                mov     edi, [eax+ecx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [eax+ecx-24h], esi
                mov     eax, edx
                mov     ecx, [esp+8Ch+var_68]
                mov     esi, [esp+8Ch+var_64]
                shr     eax, 18h
                push    esi
                push    0
                push    dword ptr [eax+ecx+91h]
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_48]
                add     ecx, ebx
                mov     ebx, [esp+88h+var_7C]
                adc     eax, 0
                add     ecx, edi
                push    0
                adc     eax, 0
                mov     [esp+8Ch+var_18], eax
                mov     eax, [esp+8Ch+var_70]
                xor     eax, edx
                xor     eax, [esp+8Ch+var_58]
                xor     eax, [esp+8Ch+var_74]
                mov     [esp+8Ch+var_70], eax
                movzx   eax, dl
                xor     eax, 1Bh
                push    esi
                push    0
                mov     edi, [eax+ebx]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx+0B0h], ecx
                mov     eax, edx
                mov     ecx, [esp+94h+var_68]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0CFh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     ecx, [esp+88h+var_48]
                mov     esi, eax
                add     esi, [esp+88h+var_18]
                mov     ebx, edx
                mov     eax, [esp+88h+var_7C]
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, edi
                adc     ebx, 0
                shr     ecx, 18h
                mov     edi, [ecx+eax-11h]
                mov     ecx, [esp+88h+var_50]
                mov     eax, ecx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_78]
                xor     [esp+88h+var_74], eax
                movzx   eax, cl
                xor     eax, 0ACh
                mov     [eax+edx], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, ax
                xor     eax, 58C0h
                mov     ecx, [esp+88h+var_68]
                push    0
                push    [esp+8Ch+var_64]
                push    0
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, ebx
                mov     edx, [esp+88h+var_7C]
                mov     ebx, [esp+88h+var_70]
                mov     ecx, ebx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                xor     ecx, [esp+8Ch+var_50]
                xor     ecx, [esp+8Ch+var_30]
                xor     [esp+8Ch+var_78], ecx
                mov     ecx, [esp+8Ch+var_7C]
                mov     [esp+8Ch+var_18], eax
                movzx   eax, bx
                xor     eax, 8CFFh
                push    [esp+8Ch+var_64]
                push    0
                mov     edi, [eax+ecx]
                mov     eax, ebx
                shr     eax, 10h
                mov     [eax+ecx-93D6h], esi
                mov     eax, ebx
                xor     eax, [esp+94h+var_40]
                xor     eax, [esp+94h+var_30]
                mov     ecx, [esp+94h+var_74]
                xor     eax, ecx
                mov     [esp+94h+var_20], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B3h
                mov     eax, [eax+edx]
                mov     [esp+94h+var_30], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                xor     eax, 0BCh
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_74]
                add     esi, edi
                mov     ecx, edx
                adc     ebx, 0
                add     esi, [esp+88h+var_18]
                push    0
                adc     ebx, 0
                shr     ecx, 10h
                push    [esp+8Ch+var_64]
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx+6Ch]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx-16h], esi
                mov     eax, [esp+94h+var_58]
                xor     eax, [esp+94h+var_40]
                mov     ecx, [esp+94h+var_78]
                xor     eax, ecx
                xor     eax, edx
                mov     [esp+94h+var_40], eax
                movzx   eax, cl
                mov     ecx, [esp+94h+var_68]
                xor     eax, 2Ch
                push    dword ptr [eax+ecx]
                call    __allmul
                mov     esi, eax
                mov     eax, [esp+88h+var_34]
                add     esi, ebx
                adc     edx, 0
                add     esi, edi
                adc     edx, 0
                mov     ecx, [eax]
                mov     eax, [esp+88h+var_78]
                mov     edi, [esp+88h+var_7C]
                shr     eax, 8
                mov     ebx, [esp+88h+var_30]
                movzx   eax, al
                xor     eax, 8Bh
                push    offset dword_40AAE8
                mov     [eax+edi], esi
                xor     eax, eax
                mov     edi, [esp+8Ch+var_48]
                add     edx, ecx
                mov     ecx, [esp+8Ch+var_60]
                adc     eax, eax
                xor     edi, [esp+8Ch+var_58]
                mov     [esp+8Ch+var_10], eax
                mov     eax, [esp+8Ch+var_20]
                mov     esi, eax
                xor     esi, 0D18907CFh
                xor     edi, eax
                xor     edi, [esp+8Ch+var_78]
                imul    esi, ebx
                mov     [esp+8Ch+var_18], edi
                mov     [esp+8Ch+var_68], esi
                mov     esi, [esp+8Ch+var_34]
                mov     [esi], edx
                mov     esi, [esp+8Ch+var_50]
                xor     esi, [esp+8Ch+var_48]
                xor     esi, [esp+8Ch+var_40]
                xor     esi, eax
                mov     eax, [esp+8Ch+var_70]
                xor     eax, [esp+8Ch+var_50]
                xor     eax, edi
                mov     [esp+8Ch+var_58], esi
                xor     eax, [esp+8Ch+var_40]
                mov     [esp+8Ch+var_30], eax
                lea     edx, [esi+5B8DF5D4h]
                mov     eax, [esp+8Ch+var_70]
                xor     eax, esi
                xor     eax, edi
                xor     eax, [esp+8Ch+var_74]
                mov     [esp+8Ch+var_70], eax
                call    VBN_TransformContext
                mov     eax, [esp+88h+var_30]
                xor     eax, esi
                xor     eax, [esp+88h+var_78]
                xor     [esp+88h+var_74], eax
                mov     eax, [esp+88h+var_40]
                push    0
                push    [esp+8Ch+var_68]
                add     eax, 0EE871EB8h
                push    0
                push    eax
                call    __allmul
                add     eax, ebx
                mov     esi, edx
                mov     eax, edi
                mov     edi, [esp+88h+var_68]
                adc     esi, 0
                xor     ebx, ebx
                push    ebx
                push    edi
                xor     eax, 4745A6EDh
                push    ebx
                push    eax
                call    __allmul
                mov     ecx, [esp+88h+var_30]
                add     esi, eax
                movzx   eax, cl
                adc     ebx, edx
                mov     edx, [esp+88h+var_7C]
                add     esi, [eax+edx+4Fh]
                mov     edx, [esp+88h+var_70]
                mov     eax, edx
                adc     ebx, 0
                xor     eax, ecx
                xor     eax, [esp+88h+var_20]
                xor     [esp+88h+var_78], eax
                mov     eax, edx
                xor     eax, [esp+88h+var_40]
                xor     eax, [esp+88h+var_20]
                mov     ecx, [esp+88h+var_74]
                xor     eax, ecx
                mov     [esp+88h+var_48], eax
                mov     edi, [esp+88h+var_7C]
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                xor     eax, 7
                mov     ecx, [eax+ecx]
                mov     eax, [esp+88h+var_74]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi+48h], esi
                mov     eax, edx
                xor     eax, 0FAD7525h
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_48]
                add     esi, ebx
                mov     ebx, [esp+88h+var_78]
                adc     edi, 0
                movzx   eax, dl
                add     esi, ecx
                mov     ecx, [esp+88h+var_18]
                adc     edi, 0
                xor     ecx, [esp+88h+var_40]
                xor     ecx, ebx
                xor     eax, 1Ch
                xor     ecx, [esp+88h+var_74]
                mov     [esp+88h+var_20], ecx
                mov     ecx, [esp+88h+var_58]
                xor     ecx, [esp+88h+var_18]
                xor     ecx, edx
                xor     ecx, ebx
                mov     [esp+88h+var_50], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     ecx, [eax+ecx]
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edx-2], esi
                lea     eax, [ebx+6031C0AEh]
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                mov     eax, [esp+88h+var_30]
                add     esi, edi
                mov     edi, [esp+88h+var_70]
                mov     edx, eax
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_20]
                adc     ebx, 0
                xor     edx, [esp+88h+var_58]
                xor     edi, eax
                xor     edx, ecx
                xor     edx, [esp+88h+var_48]
                mov     [esp+88h+var_30], edx
                mov     edx, [esp+88h+var_50]
                xor     edi, edx
                xor     edi, ecx
                movzx   eax, dl
                mov     [esp+88h+var_58], edi
                xor     ecx, 70AB5E83h
                mov     edi, [esp+88h+var_7C]
                mov     [eax+edi+36h], esi
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     esi, [eax+edi+1Eh]
                xor     edi, edi
                push    edi
                push    [esp+8Ch+var_68]
                push    edi
                push    ecx
                call    __allmul
                add     esi, eax
                adc     edi, edx
                add     esi, ebx
                adc     edi, 0
                mov     edx, [esp+88h+var_50]
                mov     eax, edx
                mov     ecx, [esp+88h+var_7C]
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+88h+var_18], edi
                push    0
                push    [esp+8Ch+var_68]
                mov     edi, [eax+ecx-62h]
                mov     eax, edx
                shr     eax, 18h
                push    0
                mov     [eax+ecx-22h], esi
                mov     ecx, [esp+94h+var_30]
                mov     eax, [esp+94h+var_70]
                xor     eax, ecx
                xor     eax, edx
                mov     edx, [esp+94h+var_74]
                xor     eax, edx
                mov     [esp+94h+var_70], eax
                mov     eax, [esp+94h+var_58]
                xor     eax, ecx
                xor     ecx, 72903034h
                xor     eax, [esp+94h+var_78]
                xor     edx, eax
                push    ecx
                mov     [esp+98h+var_74], edx
                call    __allmul
                mov     ecx, [esp+88h+var_70]
                mov     esi, eax
                add     esi, [esp+88h+var_18]
                mov     ebx, edx
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, edi
                mov     edi, [esp+88h+var_7C]
                adc     ebx, 0
                xor     ecx, [esp+88h+var_58]
                xor     ecx, [esp+88h+var_48]
                xor     [esp+88h+var_78], ecx
                mov     ecx, [esp+88h+var_70]
                movzx   eax, cl
                xor     eax, 56h
                push    0
                push    [esp+8Ch+var_68]
                mov     edi, [eax+edi]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                push    0
                mov     [eax+edx-3Eh], esi
                mov     eax, ecx
                xor     eax, [esp+94h+var_20]
                xor     eax, [esp+94h+var_48]
                mov     ecx, [esp+94h+var_74]
                xor     eax, ecx
                mov     [esp+94h+var_40], eax
                lea     eax, [ecx-3101BEDh]
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                add     ecx, ebx
                mov     ebx, [esp+88h+var_78]
                adc     eax, 0
                add     ecx, edi
                mov     edi, [esp+88h+var_7C]
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_50]
                xor     eax, [esp+88h+var_20]
                xor     eax, ebx
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_20], eax
                movzx   eax, bl
                mov     esi, [eax+edi-7Ah]
                mov     eax, ebx
                mov     ebx, [esp+88h+var_30]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi+67h], ecx
                xor     ebx, [esp+88h+var_50]
                mov     eax, [esp+88h+var_40]
                xor     ebx, eax
                xor     ebx, [esp+88h+var_78]
                xor     eax, 4BEA3A55h
                push    0
                push    [esp+8Ch+var_68]
                mov     [esp+90h+var_50], ebx
                push    0
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     ebx, [esp+88h+var_7C]
                add     ecx, [esp+88h+var_18]
                mov     edi, edx
                mov     edx, [esp+88h+var_20]
                mov     eax, [esp+88h+var_58]
                adc     edi, 0
                add     ecx, esi
                mov     esi, [esp+88h+var_7C]
                push    0
                adc     edi, 0
                xor     eax, [esp+8Ch+var_30]
                xor     eax, edx
                xor     eax, [esp+8Ch+var_40]
                mov     [esp+8Ch+var_30], eax
                push    [esp+8Ch+var_68]
                movzx   eax, dl
                push    0
                mov     esi, [eax+esi+0E0h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 20h
                mov     [eax+ebx], ecx
                mov     eax, [esp+94h+var_70]
                xor     eax, [esp+94h+var_58]
                mov     ebx, [esp+94h+var_50]
                xor     eax, ebx
                xor     eax, edx
                mov     [esp+94h+var_48], eax
                lea     eax, [ebx-6A446FB5h]
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_30]
                add     ecx, edi
                mov     eax, [esp+88h+var_70]
                mov     edi, [esp+88h+var_7C]
                adc     ebx, 0
                add     ecx, esi
                push    0
                push    [esp+8Ch+var_68]
                adc     ebx, 0
                xor     eax, edx
                xor     eax, [esp+90h+var_50]
                xor     eax, [esp+90h+var_74]
                mov     [esp+90h+var_70], eax
                movzx   eax, dl
                push    0
                mov     esi, [eax+edi+30h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-49h], ecx
                mov     ecx, [esp+94h+var_48]
                mov     eax, ecx
                xor     eax, edx
                xor     ecx, 6A27D01Bh
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                push    ecx
                call    __allmul
                mov     ecx, eax
                mov     edi, edx
                add     ecx, ebx
                mov     ebx, [esp+88h+var_7C]
                adc     edi, 0
                add     ecx, esi
                adc     edi, 0
                mov     edx, [esp+88h+var_70]
                mov     eax, edx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_40]
                xor     [esp+88h+var_78], eax
                mov     esi, [ebx]
                movzx   eax, dl
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ebx+0E1h], ecx
                mov     eax, [esp+90h+var_58]
                xor     eax, 3C3B3B85h
                push    0
                push    eax
                call    __allmul
                mov     ebx, eax
                mov     ecx, [esp+88h+var_48]
                mov     eax, edx
                add     ebx, edi
                mov     edx, [esp+88h+var_70]
                adc     eax, 0
                add     ebx, esi
                mov     esi, [esp+88h+var_50]
                adc     eax, 0
                xor     ecx, [esp+88h+var_30]
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_20]
                xor     edx, eax
                xor     edx, [esp+88h+var_40]
                xor     esi, eax
                xor     edx, [esp+88h+var_74]
                mov     eax, esi
                xor     eax, [esp+88h+var_78]
                xor     eax, [esp+88h+var_74]
                xor     ecx, eax
                mov     [esp+88h+var_64], esi
                mov     esi, [esp+88h+var_30]
                xor     ecx, edx
                xor     esi, [esp+88h+var_50]
                mov     [esp+88h+var_64], eax
                xor     esi, edx
                movzx   eax, al
                xor     eax, 0DCh
                xor     esi, [esp+88h+var_78]
                mov     [esp+88h+var_20], edx
                mov     edx, [esp+88h+var_7C]
                mov     [esp+88h+var_40], ecx
                mov     [esp+88h+var_50], esi
                push    0
                mov     ecx, [eax+edx]
                mov     eax, [esp+8Ch+var_64]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EDh
                push    [esp+8Ch+var_68]
                mov     [eax+edx], ebx
                mov     eax, [esp+90h+var_74]
                xor     eax, 4E445044h
                mul     [esp+90h+var_68]
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+90h+var_18]
                mov     edx, [esp+90h+var_78]
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, [esp+90h+var_64]
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                add     edx, 0DEB193BBh
                mov     ecx, [esp+90h+var_7C]
                push    edx
                mov     edi, [eax+ecx+6]
                mov     eax, [esp+94h+var_20]
                mov     [ecx], esi
                xor     eax, 535C4921h
                xor     ecx, ecx
                or      ecx, eax
                push    ecx
                call    __allmul
                mov     esi, eax
                mov     ecx, [esp+88h+var_70]
                add     esi, ebx
                mov     ebx, [esp+88h+var_40]
                mov     eax, edx
                adc     eax, 0
                mov     edx, [esp+88h+var_50]
                add     esi, edi
                mov     edi, [esp+88h+var_7C]
                push    0
                adc     eax, 0
                mov     [esp+8Ch+var_18], eax
                mov     eax, ecx
                xor     eax, [esp+8Ch+var_48]
                xor     ecx, ebx
                xor     eax, edx
                xor     ecx, edx
                xor     eax, [esp+8Ch+var_64]
                xor     ecx, [esp+8Ch+var_74]
                mov     [esp+8Ch+var_30], eax
                movzx   eax, bl
                xor     eax, 5Dh
                mov     [esp+8Ch+var_70], ecx
                push    [esp+8Ch+var_68]
                push    0
                mov     ecx, [eax+edi]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Fh
                mov     [eax+edi], esi
                lea     eax, [edx+6C3916F7h]
                mul     [esp+94h+var_68]
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+94h+var_18]
                mov     edx, [esp+94h+var_40]
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, edx
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+94h+var_7C]
                mov     edi, [eax+edi-0Fh]
                mov     eax, edx
                shr     eax, 18h
                mov     [eax+ecx+0D6h], esi
                mov     ecx, [esp+94h+var_30]
                mov     eax, ecx
                xor     eax, edx
                xor     ecx, 0CD994898h
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                push    ecx
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_70]
                add     esi, ebx
                mov     ebx, edx
                mov     ecx, edx
                adc     eax, 0
                add     esi, edi
                mov     edi, [esp+88h+var_7C]
                adc     eax, 0
                xor     ebx, [esp+88h+var_64]
                xor     ebx, [esp+88h+var_20]
                xor     ecx, [esp+88h+var_30]
                xor     ecx, [esp+88h+var_20]
                xor     [esp+88h+var_78], ecx
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_74]
                xor     ebx, eax
                movzx   eax, al
                mov     [esp+88h+var_48], ebx
                mov     ecx, [eax+edi+7Eh]
                mov     eax, [esp+88h+var_74]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-83h], esi
                lea     eax, [edx+3A4EBB0Eh]
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                add     esi, [esp+88h+var_18]
                mov     eax, [esp+88h+var_50]
                adc     edi, 0
                mov     edx, [esp+88h+var_78]
                add     esi, ecx
                mov     ecx, [esp+88h+var_7C]
                adc     edi, 0
                xor     eax, [esp+88h+var_64]
                xor     eax, edx
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_20], eax
                mov     eax, [esp+88h+var_40]
                xor     eax, [esp+88h+var_50]
                xor     eax, ebx
                xor     eax, edx
                mov     [esp+88h+var_50], eax
                movzx   eax, bl
                mov     ecx, [eax+ecx-0Ch]
                mov     eax, ebx
                mov     ebx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx+49h], esi
                lea     eax, [edx+598DC93Dh]
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_20]
                add     esi, edi
                mov     edi, [esp+88h+var_30]
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_48]
                adc     ebx, 0
                xor     edi, [esp+88h+var_40]
                shr     ecx, 10h
                xor     edi, edx
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                xor     edi, [esp+88h+var_48]
                mov     [esp+88h+var_58], edi
                mov     [eax+ecx+1Fh], esi
                mov     ecx, [esp+88h+var_70]
                xor     ecx, [esp+88h+var_30]
                mov     eax, [esp+88h+var_50]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, al
                xor     eax, 67h
                mov     [esp+88h+var_40], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     esi, [eax+ecx]
                mov     eax, edx
                xor     eax, 4A46B829h
                xor     ecx, ecx
                mul     [esp+88h+var_68]
                add     esi, eax
                mov     eax, [esp+88h+var_40]
                adc     ecx, edx
                mov     edx, [esp+88h+var_70]
                add     esi, ebx
                mov     ebx, [esp+88h+var_74]
                adc     ecx, 0
                xor     eax, edi
                xor     eax, [esp+88h+var_78]
                xor     edx, edi
                xor     edx, [esp+88h+var_50]
                xor     edx, ebx
                mov     [esp+88h+var_18], ecx
                xor     ebx, eax
                mov     [esp+88h+var_70], edx
                mov     eax, edx
                mov     [esp+88h+var_74], ebx
                xor     eax, [esp+88h+var_40]
                xor     eax, [esp+88h+var_48]
                xor     [esp+88h+var_78], eax
                mov     ebx, [esp+88h+var_7C]
                movzx   eax, dl
                mov     ecx, [eax+ebx-69h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0C9h
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ebx], esi
                mov     eax, edi
                xor     eax, 0C886F19Bh
                mul     [esp+90h+var_68]
                push    0
                mov     edi, eax
                mov     ebx, edx
                add     edi, [esp+94h+var_18]
                adc     ebx, 0
                add     edi, ecx
                mov     ecx, [esp+94h+var_70]
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+94h+var_7C]
                xor     eax, 0CDh
                mov     esi, [eax+ecx]
                mov     eax, [esp+94h+var_70]
                shr     eax, 18h
                mov     [eax+ecx-96h], edi
                mov     eax, [esp+94h+var_40]
                add     eax, 774FC457h
                push    eax
                call    __allmul
                mov     ecx, [esp+88h+var_70]
                mov     edi, eax
                add     edi, ebx
                mov     eax, edx
                mov     edx, [esp+88h+var_74]
                adc     eax, 0
                mov     ebx, [esp+88h+var_78]
                add     edi, esi
                mov     esi, [esp+88h+var_7C]
                adc     eax, 0
                xor     ecx, [esp+88h+var_20]
                xor     ecx, [esp+88h+var_48]
                xor     ecx, edx
                mov     [esp+88h+var_18], eax
                mov     [esp+88h+var_30], ecx
                mov     ecx, [esp+88h+var_50]
                xor     ecx, [esp+88h+var_20]
                xor     ecx, ebx
                movzx   eax, bl
                xor     ecx, edx
                mov     [esp+88h+var_48], ecx
                mov     ecx, [eax+esi-0CCh]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0C3h
                mov     ebx, [esp+88h+var_58]
                mov     [eax+esi], edi
                mov     eax, edx
                xor     eax, 2A1737B0h
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                add     esi, [esp+88h+var_18]
                mov     edx, [esp+88h+var_30]
                mov     eax, [esp+88h+var_48]
                adc     edi, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_40]
                adc     edi, 0
                xor     ebx, [esp+88h+var_50]
                xor     ecx, [esp+88h+var_58]
                xor     ebx, edx
                xor     ebx, [esp+88h+var_78]
                xor     ecx, eax
                xor     ecx, edx
                mov     [esp+88h+var_20], ebx
                mov     [esp+88h+var_50], ecx
                mov     ecx, [esp+88h+var_7C]
                movzx   eax, al
                mov     ecx, [eax+ecx+63h]
                mov     eax, [esp+88h+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     ebx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ebx+0EBh], esi
                mov     eax, [esp+90h+var_78]
                shr     eax, 10h
                movzx   eax, al
                sub     eax, edx
                mov     ebx, [esp+90h+var_20]
                add     eax, 69DAD0FEh
                mul     [esp+90h+var_68]
                push    0
                mov     esi, eax
                mov     eax, edx
                add     esi, edi
                mov     edi, [esp+94h+var_7C]
                adc     eax, 0
                add     esi, ecx
                adc     eax, 0
                mov     [esp+94h+var_18], eax
                mov     eax, [esp+94h+var_70]
                mov     edx, eax
                xor     eax, [esp+94h+var_50]
                xor     edx, [esp+94h+var_40]
                xor     eax, ebx
                xor     eax, [esp+94h+var_74]
                xor     edx, ebx
                xor     edx, [esp+94h+var_48]
                mov     [esp+94h+var_70], eax
                mov     eax, edx
                xor     eax, [esp+94h+var_50]
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                movzx   eax, dl
                xor     eax, 93h
                mov     [esp+94h+var_40], edx
                mov     ecx, [eax+edi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, ax
                xor     eax, 5667h
                mov     [eax+edi], esi
                lea     eax, [ebx-12666972h]
                mul     [esp+94h+var_68]
                mov     edi, eax
                mov     ebx, edx
                add     edi, [esp+94h+var_18]
                mov     edx, [esp+94h+var_70]
                adc     ebx, 0
                movzx   eax, dx
                add     edi, ecx
                mov     ecx, edx
                adc     ebx, 0
                xor     ecx, [esp+94h+var_40]
                xor     ecx, [esp+94h+var_30]
                xor     eax, 1B37h
                xor     [esp+94h+var_78], ecx
                mov     ecx, [esp+94h+var_7C]
                mov     esi, [eax+ecx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0Bh
                mov     [eax+ecx], edi
                mov     eax, [esp+94h+var_50]
                xor     eax, 7EA4EE1h
                push    eax
                call    __allmul
                mov     ecx, [esp+88h+var_70]
                mov     edi, eax
                add     edi, ebx
                mov     eax, edx
                adc     eax, 0
                add     edi, esi
                adc     eax, 0
                shr     ecx, 18h
                mov     [esp+88h+var_18], eax
                mov     ebx, [esp+88h+var_7C]
                mov     eax, [esp+88h+var_74]
                mov     edx, [esp+88h+var_50]
                push    0
                mov     esi, [ecx+ebx+0Dh]
                mov     ecx, [esp+8Ch+var_70]
                xor     ecx, [esp+8Ch+var_48]
                xor     ecx, [esp+8Ch+var_30]
                push    [esp+8Ch+var_68]
                xor     ecx, eax
                movzx   eax, al
                xor     eax, 0BCh
                mov     [esp+90h+var_30], ecx
                push    0
                mov     [eax+ebx], edi
                mov     eax, [esp+94h+var_20]
                xor     edx, eax
                mov     ebx, eax
                xor     edx, ecx
                xor     ebx, [esp+94h+var_48]
                mov     eax, [esp+94h+var_78]
                xor     edx, eax
                xor     ebx, [esp+94h+var_78]
                add     eax, 532B19E0h
                xor     ebx, [esp+94h+var_74]
                push    eax
                mov     [esp+98h+var_20], ebx
                mov     [esp+98h+var_58], edx
                call    __allmul
                mov     ecx, eax
                mov     edi, edx
                add     ecx, [esp+88h+var_18]
                mov     eax, [esp+88h+var_40]
                mov     edx, [esp+88h+var_30]
                adc     edi, 0
                add     ecx, esi
                mov     esi, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_68]
                adc     edi, 0
                xor     eax, [esp+90h+var_50]
                xor     eax, ebx
                xor     eax, edx
                mov     [esp+90h+var_48], eax
                movzx   eax, bl
                push    0
                mov     esi, [eax+esi-5Fh]
                mov     eax, ebx
                mov     ebx, [esp+94h+var_7C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx-96h], ecx
                lea     eax, [edx+9BED28Bh]
                push    eax
                call    __allmul
                mov     ebx, eax
                mov     ecx, [esp+88h+var_7C]
                mov     eax, edx
                add     ebx, edi
                adc     eax, 0
                add     ebx, esi
                mov     esi, [esp+88h+var_58]
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_70]
                mov     edx, eax
                xor     eax, [esp+88h+var_48]
                xor     edx, [esp+88h+var_40]
                xor     eax, esi
                xor     eax, [esp+88h+var_74]
                xor     edx, esi
                xor     edx, [esp+88h+var_20]
                mov     [esp+88h+var_70], eax
                mov     eax, edx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_78]
                xor     [esp+88h+var_74], eax
                mov     eax, edx
                xor     eax, 411D9EA5h
                mov     [esp+88h+var_50], edx
                mov     ecx, [eax+ecx]
                mov     edi, [esp+88h+var_70]
                mov     eax, edi
                xor     eax, edx
                mov     edx, [esp+88h+var_7C]
                xor     eax, [esp+88h+var_30]
                xor     [esp+88h+var_78], eax
                movzx   eax, di
                xor     eax, 69F9h
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+edx], ebx
                mov     eax, esi
                xor     eax, 0F2DEC0BDh
                mul     [esp+90h+var_68]
                push    0
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+94h+var_18]
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, edi
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+94h+var_7C]
                mov     edi, [eax+ecx-1]
                mov     eax, [esp+94h+var_70]
                shr     eax, 18h
                xor     eax, 1Eh
                mov     [eax+ecx], esi
                mov     eax, [esp+94h+var_48]
                xor     eax, 9B872855h
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     esi, edx
                mov     edx, [esp+88h+var_58]
                add     ecx, ebx
                mov     eax, [esp+88h+var_78]
                adc     esi, 0
                add     ecx, edi
                mov     edi, [esp+88h+var_70]
                adc     esi, 0
                xor     edx, [esp+88h+var_20]
                xor     edx, eax
                xor     edi, [esp+88h+var_20]
                xor     edx, [esp+88h+var_74]
                xor     ebx, ebx
                movzx   eax, al
                xor     eax, 2Eh
                xor     edi, [esp+88h+var_30]
                xor     edi, [esp+88h+var_74]
                mov     [esp+88h+var_40], edx
                mov     edx, [esp+88h+var_7C]
                mov     [esp+88h+var_30], edi
                mov     [eax+edx], ecx
                mov     eax, [esp+88h+var_78]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B1h
                mov     ecx, [eax+edx]
                mov     eax, [esp+88h+var_74]
                xor     eax, 0DCF3C85Dh
                mul     [esp+88h+var_68]
                add     ecx, eax
                mov     eax, [esp+88h+var_48]
                adc     ebx, edx
                mov     edx, [esp+88h+var_40]
                add     ecx, esi
                mov     esi, [esp+88h+var_7C]
                adc     ebx, 0
                xor     eax, [esp+88h+var_58]
                xor     eax, edi
                xor     eax, [esp+88h+var_78]
                mov     [esp+88h+var_20], eax
                mov     eax, [esp+88h+var_50]
                xor     eax, [esp+88h+var_48]
                xor     eax, edx
                xor     eax, edi
                mov     [esp+88h+var_48], eax
                movzx   eax, dl
                mov     esi, [eax+esi-61h]
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, ax
                mov     [eax+edx-9782h], ecx
                mov     ecx, edi
                mov     eax, [esp+88h+var_78]
                xor     ecx, 0BA8887Ch
                shr     eax, 10h
                movzx   eax, al
                sub     eax, ecx
                sub     eax, 1Ah
                mul     [esp+88h+var_68]
                mov     edi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                add     edi, ebx
                mov     ebx, [esp+88h+var_20]
                adc     eax, 0
                add     edi, esi
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_70]
                mov     ecx, eax
                xor     eax, [esp+88h+var_48]
                xor     ecx, [esp+88h+var_50]
                xor     eax, ebx
                xor     eax, [esp+88h+var_74]
                xor     ecx, ebx
                xor     ecx, [esp+88h+var_40]
                mov     [esp+88h+var_70], eax
                mov     eax, ecx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_78]
                xor     [esp+88h+var_74], eax
                movzx   eax, cx
                xor     eax, 0A4C4h
                mov     [esp+88h+var_58], ecx
                mov     esi, [eax+edx]
                mov     eax, ecx
                shr     eax, 10h
                xor     edx, edx
                movzx   ecx, al
                xor     eax, eax
                xor     ecx, 45h
                inc     eax
                call    __allshl
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ecx], edi
                lea     eax, [ebx-7BAB950Ch]
                mul     [esp+90h+var_68]
                push    0
                mov     edi, eax
                mov     ebx, edx
                add     edi, [esp+94h+var_18]
                mov     eax, [esp+94h+var_70]
                mov     ecx, eax
                adc     ebx, 0
                movzx   eax, ax
                add     edi, esi
                adc     ebx, 0
                xor     ecx, [esp+94h+var_58]
                xor     ecx, [esp+94h+var_30]
                xor     eax, 4DABh
                xor     [esp+94h+var_78], ecx
                mov     ecx, [esp+94h+var_7C]
                mov     esi, [eax+ecx]
                mov     eax, [esp+94h+var_70]
                xor     eax, [esp+94h+var_40]
                xor     eax, [esp+94h+var_30]
                xor     eax, [esp+94h+var_74]
                mov     [esp+94h+var_50], eax
                mov     eax, [esp+94h+var_74]
                xor     eax, 14065499h
                mov     [eax+ecx], edi
                mov     eax, [esp+94h+var_48]
                add     eax, 647EBA4Eh
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     edi, [esp+88h+var_7C]
                add     ecx, ebx
                mov     eax, edx
                mov     ebx, [esp+88h+var_78]
                adc     eax, 0
                add     ecx, esi
                mov     esi, [esp+88h+var_7C]
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_20]
                xor     eax, [esp+88h+var_40]
                xor     eax, ebx
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_30], eax
                movzx   eax, bl
                push    0
                push    [esp+8Ch+var_68]
                mov     esi, [eax+esi+6Ch]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 69h
                push    0
                mov     [eax+edi], ecx
                mov     eax, [esp+94h+var_48]
                xor     eax, [esp+94h+var_20]
                mov     ecx, [esp+94h+var_50]
                xor     eax, ecx
                xor     eax, ebx
                mov     [esp+94h+var_5C], eax
                lea     eax, [ecx+6703ED91h]
                push    eax
                call    __allmul
                mov     edi, eax
                mov     ebx, edx
                add     edi, [esp+88h+var_18]
                mov     eax, [esp+88h+var_58]
                adc     ebx, 0
                mov     edx, [esp+88h+var_7C]
                add     edi, esi
                mov     esi, [esp+88h+var_70]
                adc     ebx, 0
                xor     eax, [esp+88h+var_48]
                xor     [esp+88h+var_58], esi
                xor     eax, [esp+88h+var_30]
                xor     eax, [esp+88h+var_50]
                mov     esi, [esp+88h+var_5C]
                mov     ecx, [esp+88h+var_58]
                xor     ecx, esi
                mov     [esp+88h+var_40], eax
                xor     ecx, [esp+88h+var_30]
                mov     [esp+88h+var_58], ecx
                mov     ecx, [esp+88h+var_70]
                xor     ecx, eax
                movzx   eax, al
                xor     ecx, esi
                xor     ecx, [esp+88h+var_74]
                mov     [esp+88h+var_70], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     ecx, [eax+ecx-12h]
                mov     eax, [esp+88h+var_40]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0A4h
                mov     [eax+edx], edi
                mov     edx, [esp+88h+var_30]
                movzx   eax, dl
                sub     eax, esi
                add     eax, 6883614Bh
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_58]
                add     esi, ebx
                adc     edi, 0
                add     esi, ecx
                mov     ecx, edx
                adc     edi, 0
                xor     ecx, [esp+88h+var_40]
                xor     ecx, [esp+88h+var_78]
                xor     [esp+88h+var_74], ecx
                mov     ebx, [esp+88h+var_70]
                mov     eax, ebx
                xor     eax, edx
                mov     ecx, [esp+88h+var_7C]
                xor     eax, [esp+88h+var_50]
                xor     [esp+88h+var_78], eax
                movzx   eax, bl
                xor     eax, 9Ah
                mov     ecx, [eax+ecx]
                mov     eax, ebx
                mov     ebx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, ax
                mov     [eax+ebx-400Bh], esi
                mov     eax, edx
                xor     eax, 19A75CE4h
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                mov     eax, [esp+88h+var_78]
                add     esi, edi
                mov     edi, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_70]
                adc     ebx, 0
                xor     ecx, [esp+88h+var_30]
                xor     ecx, [esp+88h+var_50]
                xor     ecx, [esp+88h+var_74]
                mov     [esp+88h+var_50], ecx
                mov     ecx, [esp+88h+var_5C]
                xor     ecx, [esp+88h+var_30]
                xor     ecx, eax
                movzx   eax, al
                xor     ecx, [esp+88h+var_74]
                mov     [esp+88h+var_48], ecx
                mov     ecx, [eax+edi+8Ch]
                mov     eax, [esp+88h+var_78]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Dh
                mov     [eax+edi], esi
                mov     eax, [esp+88h+var_70]
                shr     eax, 18h
                sub     eax, [esp+88h+var_74]
                add     eax, 2DD242EDh
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_48]
                add     esi, ebx
                mov     ebx, [esp+88h+var_50]
                adc     edi, 0
                movzx   eax, dl
                add     esi, ecx
                mov     ecx, [esp+88h+var_40]
                adc     edi, 0
                xor     ecx, [esp+88h+var_5C]
                xor     ecx, ebx
                xor     eax, 0C4h
                xor     ecx, [esp+88h+var_78]
                mov     [esp+88h+var_20], ecx
                mov     ecx, [esp+88h+var_58]
                xor     ecx, [esp+88h+var_40]
                xor     ecx, edx
                xor     ecx, ebx
                mov     [esp+88h+var_30], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     ecx, [eax+ecx]
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edx-39h], esi
                lea     eax, [ebx-3FB12C95h]
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                add     esi, edi
                adc     ebx, 0
                mov     edx, [esp+88h+var_20]
                add     esi, ecx
                mov     edi, [esp+88h+var_7C]
                mov     ecx, [esp+88h+var_70]
                mov     eax, ecx
                adc     ebx, 0
                xor     eax, [esp+88h+var_58]
                xor     eax, edx
                xor     eax, [esp+88h+var_48]
                mov     [esp+88h+var_5C], eax
                mov     eax, [esp+88h+var_30]
                xor     ecx, eax
                xor     ecx, edx
                movzx   eax, al
                xor     ecx, [esp+88h+var_74]
                mov     [esp+88h+var_70], ecx
                mov     ecx, [eax+edi-0B0h]
                mov     eax, [esp+88h+var_30]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-13h], esi
                lea     eax, [edx-422F738Fh]
                mul     [esp+88h+var_68]
                mov     esi, [esp+88h+var_7C]
                mov     edi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_5C]
                add     edi, ebx
                mov     ebx, [esp+88h+var_30]
                adc     eax, 0
                add     edi, ecx
                mov     ecx, edx
                adc     eax, 0
                xor     ecx, ebx
                xor     ecx, [esp+88h+var_78]
                xor     [esp+88h+var_74], ecx
                mov     ecx, [esp+88h+var_70]
                mov     [esp+88h+var_18], eax
                mov     eax, ecx
                xor     eax, edx
                xor     edx, 99B11AEDh
                xor     eax, [esp+88h+var_50]
                xor     [esp+88h+var_78], eax
                movzx   eax, cl
                xor     eax, 0D7h
                mov     esi, [eax+esi]
                mov     eax, ecx
                mov     ecx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, ax
                xor     eax, 2344h
                mov     [eax+ecx], edi
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                sub     eax, edx
                sub     eax, 0E9h
                mul     [esp+88h+var_68]
                add     eax, [esp+88h+var_18]
                mov     ecx, edx
                mov     edx, [esp+88h+var_70]
                adc     ecx, 0
                add     eax, esi
                mov     esi, [esp+88h+var_7C]
                adc     ecx, 0
                mov     [esp+88h+var_18], ecx
                mov     ecx, edx
                shr     ecx, 18h
                mov     [ecx+esi+26h], eax
                mov     ecx, [esp+88h+var_48]
                xor     edx, ecx
                mov     esi, [esp+88h+var_20]
                xor     edx, [esp+88h+var_50]
                xor     esi, ecx
                xor     edx, [esp+88h+var_74]
                mov     ecx, esi
                xor     ecx, [esp+88h+var_78]
                xor     ecx, [esp+88h+var_74]
                mov     [esp+88h+var_48], edx
                mov     [esp+88h+var_58], esi
                mov     eax, [esp+88h+var_5C]
                mov     esi, ebx
                xor     esi, [esp+88h+var_20]
                xor     eax, ebx
                xor     eax, ecx
                mov     [esp+88h+var_58], ecx
                mov     ecx, [esp+88h+var_78]
                xor     eax, edx
                mov     [esp+88h+var_40], eax
                xor     ecx, 0FB36E97Dh
                mov     eax, [esp+88h+var_74]
                xor     esi, edx
                movzx   eax, al
                xor     esi, [esp+88h+var_78]
                xor     eax, 77h
                sub     eax, ecx
                mov     [esp+88h+var_20], esi
                mul     [esp+88h+var_68]
                push    0
                mov     edi, eax
                mov     ebx, edx
                mov     edx, [esp+8Ch+var_58]
                mov     eax, [esp+8Ch+var_7C]
                movzx   ecx, dl
                xor     ecx, 60h
                push    [esp+8Ch+var_68]
                push    0
                add     edi, [ecx+eax]
                mov     eax, edx
                mov     ecx, [esp+94h+var_7C]
                adc     ebx, 0
                add     edi, [esp+94h+var_18]
                adc     ebx, 0
                shr     eax, 8
                movzx   eax, al
                xor     eax, 91h
                mov     esi, [eax+ecx]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 83h
                mov     [eax+ecx], edi
                mov     eax, [esp+94h+var_48]
                xor     eax, 8EB421F9h
                push    eax
                call    __allmul
                mov     edi, eax
                mov     eax, edx
                add     edi, ebx
                mov     ebx, [esp+88h+var_20]
                adc     eax, 0
                add     edi, esi
                mov     esi, [esp+88h+var_7C]
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_70]
                mov     edx, eax
                xor     eax, [esp+88h+var_40]
                xor     edx, [esp+88h+var_5C]
                xor     eax, ebx
                xor     eax, [esp+88h+var_74]
                xor     edx, ebx
                xor     edx, [esp+88h+var_58]
                mov     [esp+88h+var_70], eax
                mov     eax, edx
                xor     eax, [esp+88h+var_40]
                xor     eax, [esp+88h+var_78]
                xor     [esp+88h+var_74], eax
                movzx   eax, dl
                xor     eax, 0D2h
                mov     [esp+88h+var_30], edx
                mov     ecx, [eax+esi]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+esi+0BDh], edi
                mov     eax, ebx
                xor     eax, 0B39BA2D7h
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                push    0
                push    [esp+8Ch+var_68]
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, [esp+90h+var_30]
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+90h+var_7C]
                push    0
                mov     edi, [eax+ecx+6Ch]
                mov     eax, [esp+94h+var_30]
                shr     eax, 18h
                mov     [eax+ecx+8], esi
                mov     eax, [esp+94h+var_40]
                xor     eax, 283744BBh
                push    eax
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, ebx
                mov     ebx, [esp+88h+var_70]
                mov     ecx, ebx
                adc     eax, 0
                add     esi, edi
                push    0
                adc     eax, 0
                xor     ecx, [esp+8Ch+var_30]
                xor     ecx, [esp+8Ch+var_48]
                xor     [esp+8Ch+var_78], ecx
                mov     ecx, [esp+8Ch+var_7C]
                push    [esp+8Ch+var_68]
                mov     [esp+90h+var_18], eax
                movzx   eax, bl
                push    0
                mov     edi, [eax+ecx+9]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ecx-2Eh], esi
                mov     esi, [esp+94h+var_58]
                xor     ebx, esi
                xor     ebx, [esp+94h+var_48]
                mov     eax, [esp+94h+var_74]
                xor     ebx, eax
                add     eax, 2A057A70h
                mov     [esp+94h+var_58], ebx
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                add     ecx, [esp+88h+var_18]
                push    0
                adc     eax, 0
                add     ecx, edi
                mov     edi, [esp+8Ch+var_7C]
                adc     eax, 0
                mov     [esp+8Ch+var_18], eax
                mov     eax, [esp+8Ch+var_20]
                xor     eax, esi
                xor     eax, [esp+8Ch+var_78]
                xor     eax, [esp+8Ch+var_74]
                mov     [esp+8Ch+var_50], eax
                mov     eax, [esp+8Ch+var_78]
                movzx   eax, al
                xor     eax, 8Eh
                push    [esp+8Ch+var_68]
                push    0
                mov     esi, [eax+edi]
                mov     eax, [esp+94h+var_78]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Fh
                mov     [eax+edi], ecx
                mov     eax, [esp+94h+var_40]
                xor     eax, [esp+94h+var_20]
                xor     eax, ebx
                xor     eax, [esp+94h+var_78]
                mov     [esp+94h+var_48], eax
                lea     eax, [ebx+49B1F81Ch]
                push    eax
                call    __allmul
                mov     edi, eax
                mov     ecx, [esp+88h+var_30]
                add     edi, [esp+88h+var_18]
                mov     ebx, edx
                mov     edx, [esp+88h+var_48]
                adc     ebx, 0
                movzx   eax, dl
                add     edi, esi
                mov     esi, [esp+88h+var_50]
                adc     ebx, 0
                xor     ecx, [esp+88h+var_40]
                xor     ecx, esi
                xor     eax, 3Ah
                xor     ecx, [esp+88h+var_58]
                mov     [esp+88h+var_40], ecx
                mov     ecx, [esp+88h+var_70]
                xor     ecx, [esp+88h+var_30]
                xor     ecx, edx
                xor     ecx, esi
                mov     [esp+88h+var_30], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     ecx, [eax+ecx]
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, ax
                mov     [eax+edx-4B91h], edi
                mov     eax, esi
                xor     eax, 2CF490BBh
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_40]
                add     esi, ebx
                mov     ebx, [esp+88h+var_70]
                mov     eax, [esp+88h+var_30]
                adc     edi, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_7C]
                adc     edi, 0
                xor     eax, edx
                xor     eax, [esp+88h+var_78]
                xor     ebx, edx
                xor     ebx, [esp+88h+var_48]
                xor     ebx, [esp+88h+var_74]
                xor     [esp+88h+var_74], eax
                mov     eax, ebx
                xor     eax, [esp+88h+var_30]
                xor     eax, [esp+88h+var_58]
                xor     [esp+88h+var_78], eax
                mov     eax, ebx
                xor     eax, [esp+88h+var_50]
                xor     eax, [esp+88h+var_58]
                mov     [esp+88h+var_70], ebx
                mov     ebx, [esp+88h+var_74]
                xor     eax, ebx
                mov     [esp+88h+var_58], eax
                movzx   eax, bl
                xor     eax, 6Ch
                mov     ecx, [eax+ecx]
                mov     eax, ebx
                mov     ebx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F6h
                mov     [eax+ebx], esi
                mov     eax, edx
                xor     eax, 52F40C9Ch
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                add     esi, edi
                adc     ebx, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_74]
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                mov     edi, [eax+ecx+32h]
                mov     eax, [esp+88h+var_74]
                mov     edx, [esp+88h+var_30]
                shr     eax, 18h
                xor     edx, 74E3F212h
                xor     eax, 7Ah
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ecx], esi
                xor     ecx, ecx
                mov     eax, [esp+90h+var_70]
                xor     eax, 3DCF3A27h
                or      ecx, eax
                push    edx
                push    ecx
                call    __allmul
                mov     ecx, eax
                mov     eax, edx
                add     ecx, ebx
                mov     ebx, [esp+88h+var_78]
                push    0
                adc     eax, 0
                add     ecx, edi
                mov     edi, [esp+8Ch+var_7C]
                adc     eax, 0
                mov     [esp+8Ch+var_18], eax
                mov     eax, [esp+8Ch+var_48]
                xor     eax, [esp+8Ch+var_50]
                xor     eax, ebx
                xor     eax, [esp+8Ch+var_74]
                mov     [esp+8Ch+var_50], eax
                push    [esp+8Ch+var_68]
                movzx   eax, bl
                xor     eax, 5Eh
                push    0
                mov     esi, [eax+edi]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+edi-0Ch], ecx
                mov     eax, [esp+94h+var_40]
                xor     eax, [esp+94h+var_48]
                mov     ecx, [esp+94h+var_58]
                xor     eax, ecx
                xor     eax, ebx
                mov     [esp+94h+var_48], eax
                lea     eax, [ecx+74271E6h]
                push    eax
                call    __allmul
                mov     edi, eax
                mov     ecx, [esp+88h+var_7C]
                add     edi, [esp+88h+var_18]
                mov     ebx, edx
                mov     eax, [esp+88h+var_30]
                mov     edx, [esp+88h+var_48]
                adc     ebx, 0
                add     edi, esi
                mov     esi, [esp+88h+var_50]
                adc     ebx, 0
                xor     eax, [esp+88h+var_40]
                xor     eax, esi
                xor     eax, [esp+88h+var_58]
                mov     [esp+88h+var_40], eax
                mov     eax, [esp+88h+var_70]
                xor     eax, [esp+88h+var_30]
                xor     eax, edx
                xor     eax, esi
                mov     [esp+88h+var_30], eax
                movzx   eax, dl
                xor     eax, 75h
                mov     ecx, [eax+ecx]
                mov     eax, edx
                mov     edx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, ax
                xor     eax, 5CC2h
                mov     [eax+edx], edi
                mov     eax, esi
                xor     eax, 7E09F8C6h
                mul     [esp+88h+var_68]
                mov     esi, eax
                add     esi, ebx
                mov     eax, edx
                mov     edx, [esp+88h+var_40]
                adc     eax, 0
                mov     ebx, [esp+88h+var_30]
                add     esi, ecx
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_70]
                xor     eax, edx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_70], eax
                mov     eax, ebx
                xor     eax, edx
                xor     edx, 0DEC1ACCh
                xor     eax, [esp+88h+var_78]
                xor     [esp+88h+var_74], eax
                movzx   eax, bl
                xor     eax, 8Bh
                mov     ebx, [esp+88h+var_7C]
                mov     [eax+ebx], esi
                mov     eax, [esp+88h+var_48]
                shr     eax, 18h
                xor     eax, 0CEh
                mov     esi, [esp+88h+var_70]
                sub     eax, edx
                mul     [esp+88h+var_68]
                mov     edi, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_30]
                mov     ecx, edx
                mov     eax, [esp+88h+var_7C]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0DDh
                add     edi, [ecx+eax]
                mov     eax, esi
                mov     ecx, [esp+88h+var_74]
                adc     ebx, 0
                add     edi, [esp+88h+var_18]
                adc     ebx, 0
                xor     esi, [esp+88h+var_50]
                xor     esi, [esp+88h+var_58]
                xor     eax, edx
                xor     eax, [esp+88h+var_58]
                xor     esi, ecx
                xor     [esp+88h+var_78], eax
                movzx   eax, cl
                xor     eax, 0A7h
                mov     [esp+88h+var_5C], esi
                mov     esi, [esp+88h+var_7C]
                mov     esi, [eax+esi]
                mov     eax, ecx
                mov     ecx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ecx+91h], edi
                mov     eax, edx
                mov     ecx, [esp+88h+var_70]
                shr     eax, 10h
                xor     ecx, 0C5558E0Ch
                movzx   eax, al
                xor     eax, 44h
                sub     eax, ecx
                mul     [esp+88h+var_68]
                mov     edi, eax
                mov     eax, edx
                add     edi, ebx
                adc     eax, 0
                add     edi, esi
                mov     esi, [esp+88h+var_78]
                adc     eax, 0
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_50]
                xor     eax, esi
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_20], eax
                mov     eax, [esp+88h+var_40]
                xor     eax, [esp+88h+var_48]
                mov     edx, [esp+88h+var_5C]
                xor     eax, edx
                xor     eax, esi
                mov     ecx, [esp+88h+var_7C]
                mov     [esp+88h+var_58], eax
                movzx   eax, dl
                mov     ecx, [eax+ecx-7Bh]
                mov     eax, edx
                shr     eax, 8
                mov     edx, [esp+88h+var_7C]
                movzx   eax, al
                mov     [eax+edx+91h], edi
                mov     eax, [esp+88h+var_74]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 7
                mov     edi, [esp+88h+var_7C]
                sub     eax, esi
                sub     eax, 0A739F85h
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                mov     edx, [esp+88h+var_20]
                adc     ebx, 0
                mov     eax, [esp+88h+var_58]
                add     esi, ecx
                mov     ecx, [esp+88h+var_30]
                adc     ebx, 0
                xor     ecx, [esp+88h+var_40]
                xor     ecx, edx
                xor     ecx, [esp+88h+var_5C]
                mov     [esp+88h+var_48], ecx
                mov     ecx, [esp+88h+var_70]
                xor     ecx, [esp+88h+var_30]
                xor     ecx, eax
                movzx   eax, al
                xor     ecx, edx
                mov     [esp+88h+var_30], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     ecx, [eax+ecx+0Ch]
                mov     eax, [esp+88h+var_58]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 29h
                mov     [eax+edi], esi
                mov     eax, edx
                xor     eax, 7BDA2335h
                mul     [esp+88h+var_68]
                mov     esi, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_48]
                add     esi, ebx
                mov     eax, [esp+88h+var_70]
                mov     ebx, [esp+88h+var_30]
                adc     edi, 0
                add     esi, ecx
                mov     ecx, [esp+88h+var_74]
                adc     edi, 0
                xor     eax, edx
                xor     eax, [esp+88h+var_58]
                xor     eax, ecx
                mov     [esp+88h+var_70], eax
                mov     eax, ebx
                xor     eax, edx
                xor     eax, [esp+88h+var_78]
                xor     ecx, eax
                movzx   eax, bl
                xor     eax, 0E2h
                mov     [esp+88h+var_74], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     ecx, [eax+ecx]
                mov     eax, ebx
                mov     ebx, [esp+88h+var_7C]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx+14h], esi
                mov     eax, edx
                xor     eax, 0C355EB05h
                mul     [esp+88h+var_68]
                mov     ebx, eax
                add     ebx, edi
                mov     eax, edx
                mov     edi, [esp+88h+var_7C]
                adc     eax, 0
                add     ebx, ecx
                adc     eax, 0
                xor     edx, edx
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_70]
                mov     ecx, eax
                xor     eax, [esp+88h+var_20]
                xor     ecx, [esp+88h+var_30]
                xor     ecx, [esp+88h+var_5C]
                xor     [esp+88h+var_78], ecx
                xor     eax, [esp+88h+var_5C]
                xor     eax, [esp+88h+var_74]
                mov     ecx, [esp+88h+var_58]
                xor     ecx, [esp+88h+var_20]
                mov     [esp+88h+var_40], eax
                mov     eax, [esp+88h+var_78]
                xor     ecx, eax
                xor     ecx, [esp+88h+var_74]
                movzx   eax, al
                mov     [esp+88h+var_20], ecx
                mov     esi, [eax+edi-81h]
                mov     eax, [esp+88h+var_78]
                shr     eax, 8
                movzx   ecx, al
                xor     eax, eax
                sub     ecx, 5Ah ; 'Z'
                inc     eax
                call    __allshl
                mov     ecx, [esp+88h+var_78]
                mov     [eax+edi], ebx
                mov     eax, [esp+88h+var_70]
                add     eax, 0E0433E37h
                mul     [esp+88h+var_68]
                mov     edi, eax
                mov     ebx, edx
                add     edi, [esp+88h+var_18]
                adc     ebx, 0
                add     edi, esi
                adc     ebx, 0
                shr     ecx, 10h
                movzx   eax, cl
                xor     edx, edx
                mov     ecx, [esp+88h+var_7C]
                mov     esi, [eax+ecx+4Ah]
                xor     eax, eax
                mov     ecx, [esp+88h+var_78]
                inc     eax
                shr     ecx, 18h
                xor     ecx, 0A0h
                call    __allshl
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ecx], edi
                mov     eax, [esp+90h+var_74]
                add     eax, 4047D1A6h
                push    0
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     edi, edx
                mov     edx, [esp+88h+var_48]
                add     ecx, ebx
                mov     eax, [esp+88h+var_40]
                mov     ebx, edx
                adc     edi, 0
                add     ecx, esi
                mov     esi, [esp+88h+var_7C]
                adc     edi, 0
                xor     ebx, [esp+88h+var_58]
                xor     ebx, eax
                movzx   eax, al
                xor     ebx, [esp+88h+var_78]
                mov     [esp+88h+var_48], ebx
                mov     esi, [eax+esi-4Ch]
                mov     eax, [esp+88h+var_40]
                shr     eax, 8
                mov     ebx, [esp+88h+var_7C]
                movzx   eax, al
                xor     eax, 4Ah
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ebx], ecx
                xor     ecx, ecx
                mov     eax, [esp+90h+var_30]
                mov     ebx, [esp+90h+var_48]
                xor     eax, edx
                mov     edx, [esp+90h+var_20]
                xor     eax, edx
                xor     eax, [esp+90h+var_40]
                mov     [esp+90h+var_50], eax
                mov     eax, [esp+90h+var_70]
                xor     eax, [esp+90h+var_30]
                xor     eax, ebx
                xor     ebx, 628DC8C1h
                xor     eax, edx
                or      ecx, ebx
                add     edx, 7072B032h
                mov     [esp+90h+var_30], eax
                push    edx
                push    ecx
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                mov     edx, [esp+88h+var_50]
                add     ecx, edi
                mov     eax, [esp+88h+var_70]
                adc     ebx, 0
                add     ecx, esi
                mov     esi, [esp+88h+var_7C]
                adc     ebx, 0
                xor     eax, edx
                xor     eax, [esp+88h+var_48]
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_70], eax
                movzx   eax, dl
                push    0
                push    [esp+8Ch+var_68]
                mov     edi, [eax+esi-19h]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, ax
                push    0
                mov     [eax+esi-630Fh], ecx
                mov     ecx, [esp+94h+var_30]
                mov     eax, ecx
                xor     eax, edx
                xor     ecx, 0C2D89BE3h
                xor     eax, [esp+94h+var_78]
                xor     [esp+94h+var_74], eax
                push    ecx
                call    __allmul
                mov     esi, eax
                mov     eax, edx
                add     esi, ebx
                mov     ebx, [esp+88h+var_70]
                mov     ecx, ebx
                adc     eax, 0
                add     esi, edi
                adc     eax, 0
                xor     ecx, [esp+88h+var_30]
                xor     ecx, [esp+88h+var_40]
                xor     [esp+88h+var_78], ecx
                mov     ecx, [esp+88h+var_7C]
                mov     [esp+88h+var_18], eax
                movzx   eax, bl
                xor     eax, 99h
                mov     edi, [eax+ecx]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ecx-30h], esi
                mov     eax, ebx
                xor     eax, [esp+88h+var_20]
                xor     eax, [esp+88h+var_40]
                mov     ecx, [esp+88h+var_74]
                xor     eax, ecx
                mov     [esp+88h+var_58], eax
                push    0
                push    [esp+8Ch+var_68]
                lea     eax, [ecx-61316111h]
                push    0
                push    eax
                call    __allmul
                mov     ecx, eax
                mov     ebx, edx
                add     ecx, [esp+88h+var_18]
                mov     edx, [esp+88h+var_48]
                mov     eax, edx
                adc     ebx, 0
                add     ecx, edi
                mov     edi, [esp+88h+var_7C]
                adc     ebx, 0
                xor     eax, [esp+88h+var_20]
                xor     eax, [esp+88h+var_78]
                xor     eax, [esp+88h+var_74]
                mov     [esp+88h+var_48], eax
                mov     eax, [esp+88h+var_78]
                movzx   eax, al
                push    0
                push    [esp+8Ch+var_68]
                mov     esi, [eax+edi+28h]
                mov     eax, [esp+90h+var_78]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 88h
                push    0
                mov     [eax+edi], ecx
                mov     ecx, [esp+94h+var_50]
                mov     eax, [esp+94h+var_58]
                xor     ecx, edx
                xor     ecx, eax
                xor     eax, 3CB9DDAh
                xor     ecx, [esp+94h+var_78]
                push    eax
                mov     [esp+98h+var_40], ecx
                call    __allmul
                mov     edi, eax
                mov     eax, edx
                mov     edx, [esp+88h+var_48]
                add     edi, ebx
                movzx   ecx, dl
                adc     eax, 0
                add     edi, esi
                mov     esi, [esp+88h+var_30]
                adc     eax, 0
                xor     ecx, 36h
                xor     esi, [esp+88h+var_50]
                mov     [esp+88h+var_18], eax
                xor     esi, edx
                mov     eax, [esp+88h+var_7C]
                xor     esi, [esp+88h+var_58]
                push    0
                push    [esp+8Ch+var_68]
                mov     ebx, [ecx+eax]
                mov     eax, [esp+90h+var_70]
                xor     eax, [esp+90h+var_30]
                mov     ecx, [esp+90h+var_40]
                xor     eax, ecx
                xor     eax, edx
                mov     [esp+90h+var_50], esi
                mov     edx, [esp+90h+var_7C]
                xor     esi, 0F6AAAEE7h
                mov     [esp+90h+var_20], eax
                movzx   eax, al
                xor     eax, 0C9h
                mov     [eax+edx], edi
                lea     edx, [ecx-336D6076h]
                xor     ecx, ecx
                or      ecx, esi
                push    edx
                push    ecx
                call    __allmul
                mov     esi, eax
                mov     edi, edx
                add     esi, [esp+88h+var_18]
                adc     edi, 0
                add     esi, ebx
                adc     edi, 0
                mov     edx, [esp+88h+var_20]
                mov     ecx, edx
                mov     ebx, [esp+88h+var_24]
                shr     ecx, 8
                movzx   eax, cl
                mov     ecx, [esp+88h+var_7C]
                push    0
                push    [esp+8Ch+var_68]
                mov     [eax+ecx+18h], esi
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                push    0
                mov     ecx, [eax+ebx-4Fh]
                mov     eax, [eax+ebx-4Bh]
                xor     ebx, ebx
                mov     [esp+94h+var_64], eax
                mov     eax, edx
                xor     eax, [esp+94h+var_50]
                xor     eax, [esp+94h+var_78]
                xor     eax, [esp+94h+var_74]
                mov     edx, [esp+94h+var_7C]
                mov     [esp+94h+var_30], eax
                movzx   eax, al
                xor     eax, 25h
                mov     [esp+94h+var_5C], ecx
                mov     ecx, [esp+94h+var_50]
                xor     ecx, [esp+94h+var_70]
                xor     ecx, [esp+94h+var_40]
                mov     esi, [eax+edx]
                xor     ecx, [esp+94h+var_74]
                mov     eax, ecx
                xor     eax, 717ED162h
                mul     [esp+94h+var_68]
                add     esi, eax
                adc     ebx, edx
                add     esi, edi
                mov     edx, ecx
                adc     ebx, 0
                xor     edx, [esp+94h+var_20]
                xor     edx, [esp+94h+var_58]
                xor     edx, [esp+94h+var_78]
                mov     [esp+94h+var_18], ebx
                mov     ebx, [esp+94h+var_30]
                xor     ebx, ecx
                mov     [esp+94h+var_20], edx
                xor     ebx, [esp+94h+var_48]
                xor     edx, 352BB7C1h
                xor     ebx, [esp+94h+var_58]
                mov     ecx, [esp+94h+var_7C]
                movzx   eax, bl
                push    edx
                mov     [esp+98h+var_58], ebx
                mov     edi, [eax+ecx-23h]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B0h
                mov     [eax+ecx], esi
                call    __allmul
                mov     esi, eax
                mov     ebx, edx
                add     esi, [esp+88h+var_18]
                mov     eax, [esp+88h+var_34]
                mov     edx, [esp+88h+var_7C]
                adc     ebx, 0
                add     esi, edi
                mov     ecx, [eax]
                adc     ebx, 0
                mov     eax, [esp+88h+var_58]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0FEh
                mov     [eax+edx], esi
                xor     edx, edx
                mov     eax, [esp+88h+var_58]
                add     ebx, ecx
                mov     ecx, [esp+88h+var_7C]
                adc     edx, edx
                shr     eax, 18h
                xor     eax, 45h
                mov     [eax+ecx], ebx
                mov     ebx, [esp+88h+var_20]
                xor     ebx, [esp+88h+var_30]
                xor     ebx, [esp+88h+var_40]
                xor     ebx, [esp+88h+var_48]
                mov     edi, [esp+88h+var_24]
                movzx   eax, bl
                mov     [esp+88h+var_30], ebx
                mov     ecx, [eax+edi-6Ch]
                mov     esi, [eax+edi-68h]
                mov     eax, [esp+88h+var_10]
                add     eax, edx
                mov     edx, [esp+88h+var_34]
                mov     [edx], eax
                mov     eax, ebx
                mov     ebx, [edi]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D4h
                mov     [esp+88h+var_34], ebx
                mov     ebx, [esp+88h+var_60]
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, [edi+4]
                mov     [esp+88h+var_18], eax
                mov     eax, [esp+88h+var_30]
                shr     eax, 18h
                xor     eax, 78h
                mov     [esp+88h+var_10], edx
                mov     edx, [esp+88h+var_5C]
                mov     [eax+ebx], edx
                mov     edx, [esp+88h+var_64]
                mov     [eax+ebx+4], edx
                mov     edx, ebx
                mov     eax, [esp+88h+var_58]
                xor     eax, [esp+88h+var_20]
                xor     eax, [esp+88h+var_50]
                xor     eax, [esp+88h+var_40]
                mov     [esp+88h+var_58], eax
                movzx   eax, al
                mov     [eax+edx+24h], esi
                mov     [eax+edx+20h], ecx
                mov     edx, [esp+88h+var_30]
                mov     eax, [esp+88h+var_58]
                shr     edx, 10h
                movzx   esi, dl
                xor     edx, edx
                sub     esi, 94h
                add     esi, [esp+88h+var_24]
                adc     edx, [esp+88h+var_8]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                mov     [ecx+eax-35h], esi
                mov     esi, eax
                mov     eax, [esp+88h+var_58]
                shr     eax, 10h
                mov     [ecx+esi-31h], edx
                mov     edx, edi
                movzx   ecx, al
                mov     eax, [esp+88h+var_10]
                pop     edi
                mov     [ecx+esi+0Dh], eax
                mov     eax, [esp+84h+var_18]
                mov     [ecx+esi+11h], eax
                mov     eax, [esp+84h+var_34]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000106b endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002047 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                shl     edx, 4
                add     eax, edx
                mov     [ebp+var_8], ecx
                mov     edx, edi
                mov     [ebp+var_4], eax
                sub     edx, esi
                lea     ebx, [edi-0AFE38F8h]
                add     ebx, esi
                add     edi, 9B5D969Eh
                xor     ebx, eax
                add     esi, edi
                mov     edi, [ebp+var_8]
                xor     edx, 1A28D705h
                xor     esi, edx
                xor     ecx, ecx
                xor     esi, eax
                xor     eax, ebx
                xor     eax, edx
                xor     eax, 0E6DC4382h
                or      ecx, eax
                mov     eax, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [edi+eax*8-448h], 0
                jnz     short loc_48FA17
                mov     eax, [ebp+var_4]
                movzx   eax, al
                cmp     byte ptr [edi+eax*8-588h], 0
                jnz     short loc_48FA17
                xor     ecx, ecx
                xor     ebx, 58E574C2h
                xor     edx, 21E0CC97h
                or      ecx, ebx
                jmp     short loc_48FA1D
; ---------------------------------------------------------------------------

loc_48FA17:                             ; CODE XREF: VBNCB_unnamed_80002047+63¡üj
                                        ; VBNCB_unnamed_80002047+73¡üj
                lea     edx, [esi-15137302h]

loc_48FA1D:                             ; CODE XREF: VBNCB_unnamed_80002047+85¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002047 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___50_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                mov     ebx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ecx, esi
                push    edi
                mov     edi, [ebp+arg_4]
                sub     ecx, edi
                mov     edx, ecx
                mov     [ebp+var_4], ecx
                xor     edx, 174C4262h
                mov     [ebp+var_8], ebx
                movzx   eax, dl
                shl     edi, 4
                push    offset dword_40A510
                mov     ecx, [eax+ebx+16h]
                mov     ebx, [eax+ebx+1Ah]
                mov     eax, esi
                shr     eax, 4
                add     edi, eax
                mov     [ebp+var_10], ecx
                mov     eax, [ebp+var_4]
                mov     ecx, [ebp+var_8]
                mov     [ebp+var_C], edi
                mov     edi, eax
                xor     eax, [ebp+var_C]
                xor     edi, edx
                xor     eax, edx
                xor     edi, 516C94C3h
                lea     edx, [esi+605AD00Dh]
                xor     eax, 3A611444h
                xor     edx, edi
                mov     [ebp+var_4], eax
                xor     edx, [ebp+var_C]
                sub     edx, 12EBED66h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0C7h
                movzx   esi, cl
                movzx   eax, al
                xor     ecx, ecx
                cdq
                sub     esi, 4Fh ; 'O'
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_C]
                adc     ecx, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                add     edx, 28E0383Ch
                lea     ecx, [edi-19FA977Ch]
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___50_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___199      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, ecx
                mov     ecx, edx
                shr     ecx, 4
                add     ecx, eax
                shl     edx, 4
                mov     eax, ecx
                mov     [esp+48h+var_3C], ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 92h
                mov     [esp+48h+var_30], edi
                push    offset dword_40C07C
                mov     esi, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+4Ch+var_C], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F4h
                mov     [esp+4Ch+var_10], esi
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+4Ch+var_2C+4], eax
                mov     eax, [esp+4Ch+var_3C]
                shr     eax, 18h
                mov     dword ptr [esp+4Ch+var_2C], ecx
                mov     ecx, ebx
                shr     ecx, 4
                add     ecx, edx
                mov     esi, [eax+edi-5]
                mov     eax, [eax+edi-1]
                mov     [esp+4Ch+var_14], eax
                movzx   eax, cl
                xor     eax, 0D4h
                mov     [esp+4Ch+var_34], ecx
                mov     [esp+4Ch+var_18], esi
                mov     eax, [esi+eax*4]
                lea     esi, [ebx-5202FC56h]
                mov     [esp+4Ch+var_24], eax
                mov     eax, ecx
                shr     eax, 8
                xor     ecx, ecx
                movzx   edx, al
                mov     eax, [esp+4Ch+var_3C]
                sub     edx, 71h ; 'q'
                movzx   eax, al
                add     edx, [edi+eax*8]
                mov     [esp+4Ch+var_20], edx
                adc     ecx, [edi+eax*8+4]
                xor     esi, [esp+4Ch+var_3C]
                mov     [esp+4Ch+var_1C], ecx
                mov     edx, esi
                xor     edx, 0A49C08FFh
                mov     ecx, edi
                call    VBN_TransformContext
                mov     eax, [esp+48h+var_34]
                lea     edx, [ebx-675E0409h]
                xor     edx, eax
                mov     ecx, eax
                xor     edx, [esp+48h+var_3C]
                mov     edi, eax
                xor     ecx, esi
                mov     [esp+48h+var_8], edx
                xor     ecx, eax
                xor     edi, edx
                lea     eax, [ebx-3C935B17h]
                mov     [esp+48h+var_4], ecx
                xor     edi, esi
                xor     eax, ecx
                mov     ebx, edi
                xor     eax, edx
                xor     ebx, ecx
                mov     [esp+48h+var_38], eax
                xor     ebx, [esp+48h+var_3C]
                xor     ebx, 0FDD0A8ACh
                xor     esi, esi
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 8
                sub     ecx, 86h
                add     eax, 71D9h
                movzx   eax, ax
                cdq
                sub     ecx, eax
                mov     eax, [esp+48h+var_38]
                sbb     esi, edx
                add     dword ptr [esp+48h+var_2C], ecx
                mov     edx, edi
                adc     esi, dword ptr [esp+48h+var_2C+4]
                add     eax, 0B511D8D8h
                xor     ecx, ecx
                shr     ebx, 18h
                or      ecx, eax
                xor     edx, 0A447B49Ah
                mov     eax, dword ptr [esp+48h+var_2C]
                mov     [eax], ecx
                mov     ecx, [esp+48h+var_30]
                mov     [eax+4], edx
                mov     edx, [esp+48h+var_38]
                mov     eax, [esp+48h+var_24]
                xor     edx, edi
                and     dword ptr [ecx+ebx*8-3D4h], 0
                xor     edx, [esp+48h+var_34]
                xor     edx, [esp+48h+var_3C]
                mov     [ecx+ebx*8-3D8h], eax
                mov     ebx, [esp+48h+var_30]
                mov     ecx, [esp+48h+var_20]
                movzx   eax, dl
                xor     eax, 18h
                pop     edi
                mov     [ebx+eax*8], ecx
                mov     ecx, [esp+44h+var_1C]
                mov     [ebx+eax*8+4], ecx
                mov     eax, edx
                mov     ecx, [esp+44h+var_18]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx-0CAh], ecx
                mov     ecx, [esp+44h+var_14]
                mov     [eax+ebx-0C6h], ecx
                mov     eax, edx
                mov     ecx, dword ptr [esp+44h+var_2C]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                xor     edx, 0A0h
                mov     [ebx+eax*8-2C8h], ecx
                mov     ecx, [esp+44h+var_4]
                mov     [ebx+eax*8-2C4h], esi
                add     ecx, 0AF60D50Ah
                mov     eax, [esp+44h+var_10]
                mov     [ebx+edx*8], eax
                mov     eax, [esp+44h+var_C]
                mov     [ebx+edx*8+4], eax
                xor     eax, eax
                mov     edx, [esp+44h+var_8]
                pop     esi
                xor     edx, 4829E9D7h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___199      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800021fa proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, edi
                sub     esi, [ebp+arg_0]
                mov     [esp+28h+var_14], ecx
                lea     ebx, [edi-6711EC8Dh]
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                xor     edx, 9
                movzx   ecx, ax
                mov     eax, [esp+28h+var_14]
                mov     eax, [edx+eax]
                mov     edx, [eax+ecx-5FC6h]
                mov     eax, esi
                xor     eax, 5B3F4158h
                mov     [esp+28h+var_10], edx
                mov     ecx, ebx
                shr     ecx, 18h
                sub     ecx, eax
                mov     eax, edx
                sub     ecx, 0D0h
                sub     eax, ecx
                cmp     ecx, edx
                mov     edx, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                mov     [esp+28h+var_8], eax
                mov     [esp+28h+var_18], edx
                sub     [esp+28h+var_18], edi
                xor     [esp+28h+var_18], esi
                lea     eax, [edx+3DE7B269h]
                xor     [esp+28h+var_18], ebx
                add     eax, edi
                xor     eax, ebx
                add     edx, 628887C6h
                mov     ebx, [esp+28h+var_18]
                xor     edx, eax
                xor     edx, esi
                xor     ebx, 0F5890399h
                lea     esi, [edi+3E43E088h]
                mov     [esp+28h+var_18], edx
                xor     esi, edx
                xor     esi, ebx
                mov     [esp+28h+var_C], esi
                cmp     ecx, [esp+28h+var_10]
                jbe     short loc_48FDCF
                xor     eax, 2058A903h
                xor     edi, edi
                xor     ebx, 0BBABE7FFh
                mov     edx, eax
                or      edi, ebx
                jmp     short loc_48FDF1
; ---------------------------------------------------------------------------

loc_48FDCF:                             ; CODE XREF: VBNCB_unnamed_800021fa+AA¡üj
                mov     ecx, [ebp+arg_0]
                xor     edx, edx
                shl     edi, 4
                shr     ecx, 4
                add     edi, ecx
                xor     edi, ebx
                xor     edi, eax
                mov     eax, [esp+28h+var_18]
                xor     eax, 0B7EE1AE2h
                xor     edi, 2F3020DEh
                or      edx, eax

loc_48FDF1:                             ; CODE XREF: VBNCB_unnamed_800021fa+BD¡üj
                mov     eax, [esp+28h+var_C]
                mov     esi, [esp+28h+var_14]
                mov     bl, [esp+28h+var_19]
                movzx   ecx, al
                xor     ecx, 4Eh
                cmp     [esp+28h+var_8], 0
                mov     [esi+ecx*8], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                xor     ecx, 1
                pop     edi
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800021fa endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___127_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, ecx
                mov     ecx, [ebp+arg_4]
                sub     ebx, ecx
                mov     [ebp+var_4], edi
                sub     ecx, [ebp+arg_0]
                xor     ebx, 7F8C19C1h
                mov     [ebp+var_8], ecx
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 0B1h
                movzx   ecx, bl
                xor     ecx, 45h
                movzx   eax, al
                cdq
                push    offset dword_40C360
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                sub     esi, eax
                mov     ecx, [ebp+var_4]
                mov     eax, ebx
                sbb     edi, edx
                mov     edx, [ebp+arg_0]
                shr     eax, 8
                movzx   eax, al
                sub     eax, 6Bh ; 'k'
                add     esi, eax
                adc     edi, 0
                add     edx, 9A452CFh
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                add     edx, 403A0980h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     ecx, [ebp+var_8]
                xor     ecx, 21F4267Bh
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                mov     eax, [ebp+arg_0]
                add     eax, 0DC636266h
                xor     eax, ebx
                pop     edi
                pop     esi
                add     eax, 4C64D0B8h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___127_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002357 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                mov     [ebp+var_8], ecx
                mov     ebx, edx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                lea     esi, [edx-39DF775Eh]
                shl     eax, 4
                mov     ecx, edi
                sub     ebx, edi
                shr     ecx, 4
                add     ecx, eax
                xor     ebx, 0C03BE76Ch
                xor     ecx, ebx
                lea     eax, [edx-67211F99h]
                add     esi, edi
                mov     [ebp+var_4], ecx
                xor     eax, [ebp+var_4]
                xor     ecx, ecx
                xor     eax, esi
                sub     edi, edx
                mov     edx, [ebp+var_8]
                add     eax, 27AA4A9h
                or      ecx, eax
                xor     edi, esi
                mov     eax, ebx
                xor     edi, ebx
                shr     eax, 8
                xor     edi, 0F13262CCh
                movzx   eax, al
                cmp     byte ptr [edx+eax*8-3B8h], 0
                mov     edx, [ebp+var_4]
                jnz     short loc_48FF70
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                cmp     byte ptr [ebx+eax*8-150h], 0
                jnz     short loc_48FF70
                xor     ecx, ecx
                lea     eax, [edx-59B38966h]
                xor     esi, 0B66F0B5Fh
                or      ecx, eax
                jmp     short loc_48FF72
; ---------------------------------------------------------------------------

loc_48FF70:                             ; CODE XREF: VBNCB_unnamed_80002357+6C¡üj
                                        ; VBNCB_unnamed_80002357+7C¡üj
                mov     esi, edi

loc_48FF72:                             ; CODE XREF: VBNCB_unnamed_80002357+8E¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002357 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__17      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     edx, 4
                add     edx, eax
                and     [esp+0Ch+var_4], 0
                push    ebx
                movzx   eax, dl
                mov     ebx, ecx
                xor     eax, 0C8h
                mov     [esp+10h+var_C], edx
                push    esi
                push    edi
                push    offset dword_40BE9C
                mov     ecx, [eax+ebx]
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0C9h
                mov     edi, [ebx+eax*8]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     esi, [eax+ecx-0A4h]
                mov     ecx, ebx
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                mov     edx, eax
                mov     [esp+1Ch+var_8], eax
                xor     edx, 1C445823h
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                sub     edi, esi
                mov     edx, [esp+18h+var_C]
                mov     ebx, [esp+18h+var_8]
                xor     ebx, ebx
                lea     eax, [ecx-3E6708BCh]
                xor     ebx, edx
                xor     eax, edx
                mov     [esp+18h+var_C], eax
                mov     eax, edx
                shr     eax, 18h
                xor     eax, 81h
                cmp     edi, eax
                jz      short loc_490030
                mov     esi, [esp+18h+var_C]
                xor     ecx, ecx
                xor     ebx, 92941EEBh
                add     esi, 95516578h
                or      ecx, ebx
                jmp     short loc_490051
; ---------------------------------------------------------------------------

loc_490030:                             ; CODE XREF: vBng_h__17+98¡üj
                sub     ecx, [ebp+arg_4]
                xor     esi, esi
                xor     edx, [esp+18h+var_C]
                xor     ecx, ebx
                xor     edx, [esp+18h+var_8]
                xor     ecx, [esp+18h+var_C]
                add     edx, 753AE33Dh
                xor     ecx, 0C273B696h
                or      esi, edx

loc_490051:                             ; CODE XREF: vBng_h__17+AE¡üj
                pop     edi
                mov     edx, esi
                mov     eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__17      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001efe proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 0BE7835D9h
                and     [esp+20h+var_4], 0
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                add     ebx, edi
                mov     eax, ebx
                movzx   edx, bl
                shr     eax, 8
                xor     edx, 9Eh
                mov     [esp+28h+var_14], ecx
                movzx   ecx, al
                lea     esi, [edi+7CFC2FBFh]
                mov     eax, [esp+28h+var_14]
                mov     eax, [edx+eax]
                mov     ecx, [eax+ecx+89h]
                mov     edx, ecx
                mov     eax, esi
                mov     [esp+28h+var_C], ecx
                xor     eax, 72BFA007h
                sub     edx, eax
                cmp     eax, ecx
                mov     ecx, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                mov     [esp+28h+var_8], edx
                lea     edx, [ecx-2212466Ah]
                add     ecx, 19A784ECh
                xor     edx, ebx
                xor     ecx, esi
                xor     ecx, ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 0ED69DCB2h
                add     ebx, edi
                xor     ebx, edx
                xor     ebx, esi
                mov     [esp+28h+var_10], ebx
                lea     ebx, [edi-29F2BBD6h]
                mov     esi, [esp+28h+var_10]
                xor     ebx, esi
                xor     ebx, ecx
                mov     [esp+28h+var_10], ebx
                cmp     eax, [esp+28h+var_C]
                jbe     short loc_490117
                mov     eax, ecx
                xor     edi, edi
                add     eax, 899A7727h
                xor     edx, 75B122ECh
                or      edi, eax
                jmp     short loc_49012E
; ---------------------------------------------------------------------------

loc_490117:                             ; CODE XREF: VBNCB_unnamed_80001efe+A2¡üj
                xor     edi, [ebp+arg_0]
                xor     esi, 0CAC3A60Ch
                xor     edi, ecx
                xor     edi, edx
                xor     edx, edx
                sub     edi, 4C10078h
                or      edx, esi

loc_49012E:                             ; CODE XREF: VBNCB_unnamed_80001efe+B5¡üj
                mov     esi, [esp+28h+var_14]
                mov     al, [esp+28h+var_19]
                movzx   ecx, bl
                xor     ecx, 9
                cmp     [esp+28h+var_8], 0
                setz    bl
                mov     [esi+ecx*8], al
                mov     eax, [esp+28h+var_10]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                pop     edi
                mov     [esi+ecx*8-588h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001efe endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___25_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_4], ecx
                movzx   eax, bl
                lea     edx, [edi-1E3B1D68h]
                push    offset dword_40AC80
                mov     ecx, [eax+ecx+67h]
                mov     [ebp+var_C], ecx
                mov     ecx, [ebp+var_4]
                mov     eax, [eax+ecx+6Bh]
                mov     [ebp+var_10], eax
                mov     eax, esi
                sub     eax, edi
                add     esi, 0C09BA753h
                xor     eax, 6D16B78Bh
                xor     esi, ebx
                xor     edx, eax
                mov     [ebp+var_8], eax
                xor     edx, ebx
                mov     [ebp+var_14], esi
                sub     edx, 185AE683h
                call    VBN_TransformContext
                mov     edi, [ebp+var_8]
                xor     ebx, esi
                xor     ebx, edi
                xor     ecx, ecx
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 56h ; 'V'
                sub     al, 29h ; ')'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_C]
                lea     edx, [edi+356D9E0Bh]
                adc     ecx, [ebp+var_10]
                mov     [eax+1BCh], ecx
                mov     ecx, [ebp+var_14]
                mov     [eax+1B8h], esi
                add     ecx, 154E2DC9h
                pop     edi
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___25_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___125      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                lea     edx, [ebx-3E017043h]
                mov     [esp+58h+var_48], esi
                lea     eax, [ebx+26AE9D87h]
                mov     [esp+58h+var_38], eax
                movzx   eax, dl
                xor     eax, 0DEh
                push    offset dword_40BE3C
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_18+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_18], ecx
                mov     edi, [eax+esi+3Ah]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 12h
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, [eax+esi-2Dh]
                mov     eax, [eax+esi-29h]
                mov     [esp+5Ch+var_C], eax
                lea     eax, [ebx+26AE9D87h]
                movzx   eax, al
                mov     [esp+5Ch+var_10], ecx
                mov     ecx, [eax+esi-4Fh]
                mov     eax, [eax+esi-4Bh]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                lea     eax, [ebx+26AE9D87h]
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     esi, [eax+esi+3Ch]
                mov     eax, ebx
                sub     eax, [ebp+arg_4]
                mov     [esp+5Ch+var_44], eax
                xor     eax, edx
                xor     eax, 0B652CF33h
                mov     [esp+5Ch+var_3C], eax
                lea     edx, [eax-4ABD6361h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     eax, [ebx+26AE9D87h]
                sub     ecx, ebx
                mov     edx, ecx
                xor     edx, eax
                lea     eax, [ebx-3E017043h]
                xor     edx, eax
                lea     eax, [ebx+26AE9D87h]
                shr     eax, 10h
                movzx   eax, al
                add     eax, esi
                mov     [esp+58h+var_1C], edx
                mov     esi, [esp+58h+var_44]
                xor     esi, [esp+58h+var_3C]
                mov     eax, [edi+eax*4-36Ch]
                lea     edi, [ebx+26AE9D87h]
                xor     esi, edi
                mov     [esp+58h+var_2C], eax
                mov     edi, [ebp+arg_4]
                xor     esi, 2749472Fh
                xor     edi, ebx
                mov     [esp+58h+var_44], esi
                xor     edi, edx
                xor     ecx, esi
                xor     edi, [esp+58h+var_3C]
                xor     ecx, edx
                mov     [esp+58h+var_8], edi
                lea     edx, [ebx-3E017043h]
                mov     [esp+58h+var_28], ecx
                mov     ebx, ecx
                mov     eax, edi
                xor     eax, esi
                xor     ebx, edi
                xor     ebx, [esp+58h+var_38]
                xor     eax, edx
                xor     eax, 0FFA22196h
                xor     ebx, edx
                mov     [esp+58h+var_40], eax
                xor     esi, esi
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 88h
                sub     al, 68h ; 'h'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_40]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_34+4]
                xor     eax, 0CB3BBB78h
                xor     ecx, ecx
                xor     edx, 0AAAE5A4Bh
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_48]
                shr     eax, 10h
                movzx   eax, al
                mov     [edi+4], edx
                shr     ebx, 18h
                mov     [ecx+eax*8-520h], edi
                mov     edi, ecx
                mov     ecx, [esp+58h+var_24]
                mov     [edi+eax*8-51Ch], esi
                and     dword ptr [edi+ebx*8-5FCh], 0
                mov     eax, [esp+58h+var_2C]
                mov     [edi+ebx*8-600h], eax
                mov     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_28]
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_38]
                movzx   eax, bl
                xor     eax, 0Ch
                mov     [eax+edi], ecx
                mov     ecx, [esp+58h+var_20]
                mov     [eax+edi+4], ecx
                mov     ecx, ebx
                mov     eax, [esp+58h+var_1C]
                xor     al, 5Ch
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_18]
                adc     edx, dword ptr [esp+58h+var_18+4]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0EAh
                shr     ebx, 10h
                mov     [edi+ecx*8], eax
                mov     [edi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_10]
                mov     edx, [esp+58h+var_44]
                movzx   eax, bl
                xor     edx, 99429739h
                mov     [edi+eax*8+60h], ecx
                mov     ecx, [esp+58h+var_C]
                mov     [edi+eax*8+64h], ecx
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                add     ecx, 0A5FA3F28h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___125      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__3       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     ebx, [ebp+arg_0]
                and     [esp+48h+var_4], 0
                mov     [esp+48h+var_3C], esi
                lea     edx, [edi-7A06F4FBh]
                mov     eax, edx
                mov     [esp+48h+var_10], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2
                push    offset dword_40BD30
                mov     ecx, [eax+esi]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+4Ch+var_C], ecx
                mov     ecx, [esi+eax*8-320h]
                mov     eax, [esi+eax*8-31Ch]
                mov     dword ptr [esp+4Ch+var_28+4], eax
                mov     eax, ebx
                mov     dword ptr [esp+4Ch+var_28], ecx
                sub     eax, edi
                xor     eax, 0BFE8D240h
                mov     ecx, edx
                shr     ecx, 18h
                mov     [esp+4Ch+var_2C], eax
                movzx   eax, al
                mov     ecx, [ecx+esi-7Dh]
                sub     ecx, [esi+eax*8+0A8h]
                movzx   eax, dl
                xor     eax, 0Ah
                mov     [esp+4Ch+var_14], ecx
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                lea     esi, [edi-658DC743h]
                xor     esi, edx
                mov     [esp+4Ch+var_1C], ecx
                mov     ecx, [esp+4Ch+var_3C]
                mov     [esp+4Ch+var_18], eax
                lea     edx, [esi-1B9A53C5h]
                call    VBN_TransformContext
                mov     ecx, edi
                lea     edx, [edi-7A06F4FBh]
                xor     ecx, ebx
                mov     eax, ebx
                xor     ecx, [esp+48h+var_2C]
                xor     ecx, edx
                shr     eax, 4
                mov     [esp+48h+var_38], ecx
                lea     edx, [edi-6A8D9871h]
                mov     ecx, edi
                xor     edx, esi
                xor     edx, [esp+48h+var_2C]
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+48h+var_8], edx
                xor     ecx, [esp+48h+var_38]
                lea     eax, [ebx+26B7CCD5h]
                add     eax, edi
                xor     ecx, esi
                xor     eax, edx
                mov     [esp+48h+var_34], ecx
                xor     eax, [esp+48h+var_38]
                xor     ecx, edx
                mov     [esp+48h+var_30], eax
                lea     eax, [edi-7A06F4FBh]
                xor     ecx, eax
                xor     ecx, 423EC50Ah
                mov     eax, ecx
                mov     [esp+48h+var_20], ecx
                shr     eax, 8
                add     al, 7Eh ; '~'
                xor     cl, 5
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+48h+var_30]
                sub     ebx, esi
                mov     esi, [esp+48h+var_34]
                sbb     edx, edi
                add     ebx, dword ptr [esp+48h+var_28]
                mov     edi, [esp+48h+var_3C]
                adc     edx, dword ptr [esp+48h+var_28+4]
                add     eax, 0AECB8EA4h
                xor     ecx, ecx
                add     esi, 46E51975h
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+48h+var_20]
                mov     eax, ecx
                shr     eax, 10h
                mov     [ebx+4], esi
                mov     esi, [esp+48h+var_1C]
                movzx   eax, al
                xor     eax, 0BFh
                shr     ecx, 18h
                xor     ecx, 0A7h
                mov     [edi+eax*8], esi
                mov     esi, [esp+48h+var_18]
                mov     [edi+eax*8+4], esi
                mov     eax, edi
                mov     esi, [esp+48h+var_14]
                and     dword ptr [eax+ecx*8+4], 0
                mov     [eax+ecx*8], esi
                mov     ecx, [esp+48h+var_30]
                xor     ecx, [esp+48h+var_34]
                xor     ecx, [esp+48h+var_2C]
                xor     ecx, [esp+48h+var_10]
                movzx   eax, cl
                mov     [edi+eax*8+114h], edx
                mov     edx, [esp+48h+var_C]
                mov     [edi+eax*8+110h], ebx
                mov     eax, ecx
                shr     eax, 8
                xor     ebx, ebx
                movzx   eax, al
                shr     ecx, 10h
                mov     [eax+edi-16h], edx
                mov     edx, [esp+48h+var_38]
                mov     [eax+edi-12h], ebx
                xor     edx, 0B93AA896h
                movzx   eax, cl
                mov     ecx, [esp+48h+var_8]
                xor     eax, 0F0h
                add     ecx, 81051AA1h
                mov     [eax+edi], esi
                mov     [eax+edi+4], ebx
                xor     eax, eax
                pop     edi
                or      eax, ecx
                or      edx, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__3       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___45_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                lea     ebx, [edx-7D7D7EEDh]
                mov     [ebp+var_8], ecx
                add     edx, 46654F50h
                xor     esi, esi
                add     eax, edx
                mov     [ebp+var_4], eax
                mov     eax, ebx
                shr     eax, 8
                push    edi
                movzx   edi, al
                mov     eax, ebx
                shr     eax, 10h
                sub     edi, 40h ; '@'
                sub     al, 8
                movzx   eax, al
                cdq
                sub     edi, eax
                movzx   eax, bl
                push    offset dword_40BC40
                sbb     esi, edx
                mov     edx, [ebp+arg_0]
                add     edi, [eax+ecx+89h]
                adc     esi, [eax+ecx+8Dh]
                add     edx, 0C6100B72h
                xor     edx, [ebp+var_4]
                xor     edx, ebx
                xor     edx, 2F0E3705h
                call    VBN_TransformContext
                mov     eax, [ebp+var_8]
                xor     edx, edx
                mov     ecx, [ebp+var_4]
                add     ecx, 5540EE04h
                mov     [eax+1B8h], edi
                mov     [eax+1BCh], esi
                mov     eax, [ebp+arg_4]
                sub     eax, [ebp+arg_0]
                xor     eax, ebx
                pop     edi
                pop     esi
                xor     eax, 23411664h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___45_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002399 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     [esp+28h+var_C], edx
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, ax
                xor     ecx, 0A9C8h
                movzx   eax, bl
                mov     eax, [eax+edx+9]
                xor     edx, edx
                mov     esi, [ecx+eax]
                lea     eax, [edi-664A4551h]
                mov     ecx, [ebp+arg_4]
                xor     eax, ebx
                mov     [esp+28h+var_18], eax
                sub     ecx, edi
                xor     eax, 0F8AE0E63h
                mov     [esp+28h+var_14], ecx
                or      edx, eax
                mov     eax, esi
                sub     eax, edx
                cmp     edx, esi
                mov     [esp+28h+var_10], eax
                mov     eax, [ebp+arg_4]
                setnbe  [esp+28h+var_19]
                add     eax, 5CCF18F1h
                xor     eax, ecx
                xor     eax, ebx
                xor     ecx, eax
                xor     ecx, [esp+28h+var_18]
                mov     [esp+28h+var_14], ecx
                xor     ecx, [esp+28h+var_18]
                xor     ecx, ebx
                xor     ecx, 1D18F854h
                mov     [esp+28h+var_8], ecx
                cmp     edx, esi
                jbe     short loc_4907D8
                lea     edx, [eax+42D32408h]
                xor     edi, edi
                mov     eax, [esp+28h+var_18]
                add     eax, 0C6E3F9E5h
                or      edi, eax
                jmp     short loc_4907F4
; ---------------------------------------------------------------------------

loc_4907D8:                             ; CODE XREF: VBNCB_unnamed_80002399+91¡üj
                sub     edi, [ebp+arg_4]
                xor     edx, edx
                xor     edi, [esp+28h+var_18]
                xor     edi, eax
                mov     eax, [esp+28h+var_14]
                add     eax, 7A5CC8A6h
                xor     edi, 6CBB0738h
                or      edx, eax

loc_4907F4:                             ; CODE XREF: VBNCB_unnamed_80002399+A6¡üj
                mov     esi, [esp+28h+var_C]
                cmp     [esp+28h+var_10], 0
                mov     eax, [esp+28h+var_8]
                movzx   ecx, cl
                setz    bl
                shr     eax, 8
                mov     [esi+ecx*8-4F8h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                xor     ecx, 20h
                mov     [esi+ecx*8], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002399 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002036 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_21          = byte ptr -21h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                mov     ebx, [ebp+arg_4]
                sub     ebx, [ebp+arg_0]
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                push    esi
                mov     esi, ecx
                movzx   ecx, al
                xor     ecx, 82h
                mov     [esp+2Ch+var_4], esi
                push    edi
                mov     eax, [edx+esi-70h]
                mov     edi, [eax+ecx]
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     eax, edi
                lea     esi, [edx-2712F945h]
                cmp     esi, edi
                setnbe  [esp+30h+var_21]
                sub     eax, esi
                mov     [esp+30h+var_10], eax
                mov     eax, [ebp+arg_0]
                sub     eax, ecx
                shl     ecx, 4
                xor     eax, ebx
                xor     eax, 0A80F65E5h
                mov     [esp+30h+var_1C], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+30h+var_1C]
                mov     [esp+30h+var_20], eax
                xor     eax, edx
                xor     eax, ebx
                mov     ebx, [ebp+arg_0]
                mov     [esp+30h+var_18], eax
                mov     eax, [ebp+arg_4]
                add     eax, 5662E5Ch
                add     ebx, eax
                mov     eax, [esp+30h+var_20]
                xor     ebx, ecx
                xor     ebx, edx
                xor     eax, ebx
                mov     [esp+30h+var_14], ebx
                mov     ebx, [esp+30h+var_18]
                xor     eax, ebx
                mov     [esp+30h+var_20], eax
                cmp     esi, edi
                jbe     short loc_4908EF
                mov     edx, ecx
                xor     eax, eax
                xor     ebx, 0AEE124DDh
                xor     edx, 0E705D077h
                or      eax, ebx
                jmp     short loc_49090E
; ---------------------------------------------------------------------------

loc_4908EF:                             ; CODE XREF: VBNCB_unnamed_80002036+A9¡üj
                mov     eax, [ebp+arg_0]
                xor     edx, edx
                add     eax, 571AC7FBh
                xor     eax, ebx
                xor     eax, ecx
                mov     ecx, [esp+30h+var_14]
                xor     ecx, 778F0569h
                sub     eax, 10726134h
                or      edx, ecx

loc_49090E:                             ; CODE XREF: VBNCB_unnamed_80002036+BD¡üj
                cmp     [esp+30h+var_10], 0
                mov     ecx, [esp+30h+var_20]
                mov     esi, [esp+30h+var_4]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 67h
                pop     edi
                mov     [esi+ecx*8], bl
                mov     ecx, [esp+2Ch+var_20]
                mov     bl, [esp+2Ch+var_21]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 5
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002036 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002060 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_C], 0
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [ebp+var_8], ecx
                mov     ecx, edx
                sub     ecx, esi
                push    edi
                lea     ebx, [esi+6A4C5672h]
                mov     eax, ecx
                add     ebx, edx
                lea     edi, [esi-0B658330h]
                xor     eax, ebx
                xor     edi, eax
                mov     [ebp+var_C], eax
                xor     eax, edx
                xor     edi, ecx
                mov     edx, [ebp+var_4]
                xor     eax, esi
                mov     esi, [ebp+var_8]
                sub     eax, 100AE2D3h
                or      edx, eax
                add     edi, 58A6089Fh
                movzx   eax, bl
                xor     eax, 59h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4909D1
                shr     ebx, 8
                movzx   eax, bl
                xor     eax, 94h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4909D1
                mov     eax, [ebp+var_C]
                xor     edi, edi
                add     eax, 4A191476h
                xor     ecx, 734A4E4Bh
                or      edi, eax
                jmp     short loc_4909D3
; ---------------------------------------------------------------------------

loc_4909D1:                             ; CODE XREF: VBNCB_unnamed_80002060+5A¡üj
                                        ; VBNCB_unnamed_80002060+6B¡üj
                mov     ecx, edx

loc_4909D3:                             ; CODE XREF: VBNCB_unnamed_80002060+7F¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002060 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___95_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     edi, edx
                mov     [ebp+var_C], esi
                sub     edi, ecx
                lea     eax, [ecx-29A40AEEh]
                mov     [ebp+var_10], edi
                add     eax, edx
                add     edx, 0BAF37653h
                mov     [ebp+var_4], eax
                xor     edx, edi
                xor     edx, [ebp+var_4]
                movzx   eax, al
                xor     edx, 81031C90h
                push    offset dword_40A7D0
                mov     ecx, [eax+esi-2Fh]
                mov     ebx, [eax+esi-2Bh]
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 7Eh
                shr     ecx, 10h
                movzx   eax, al
                sub     cl, 5Eh ; '^'
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+arg_0]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                shr     eax, 4
                shl     ecx, 4
                add     eax, ecx
                mov     ecx, [ebp+var_10]
                xor     eax, [ebp+var_4]
                xor     ecx, 0A2E63AAAh
                pop     edi
                pop     esi
                xor     eax, 3CB4FCBh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___95_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002169 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                sub     eax, edi
                mov     [esp+30h+var_18], eax
                mov     ebx, eax
                mov     eax, [ebp+arg_0]
                mov     esi, edi
                and     [esp+30h+var_4], 0
                mov     edx, edi
                shr     eax, 4
                xor     ebx, 1B914E20h
                mov     [esp+30h+var_14], ecx
                mov     edi, [esp+30h+var_14]
                shl     esi, 4
                add     esi, eax
                shr     edx, 4
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     edx, eax
                movzx   eax, bl
                xor     edx, ebx
                movzx   ecx, dl
                mov     eax, [eax+edi-91h]
                mov     ecx, [eax+ecx-0A4h]
                mov     edi, ecx
                mov     [esp+30h+var_C], ecx
                mov     eax, esi
                xor     eax, 7D730698h
                sub     edi, eax
                cmp     eax, ecx
                mov     ecx, [ebp+arg_0]
                setnbe  [esp+30h+var_1D]
                mov     [esp+30h+var_8], edi
                mov     edi, [ebp+arg_4]
                xor     ecx, edi
                xor     ecx, esi
                xor     ecx, ebx
                mov     [esp+30h+var_1C], ecx
                lea     ecx, [edi+3F9A819Bh]
                xor     ecx, edx
                xor     ecx, esi
                mov     [esp+30h+var_10], ecx
                mov     ecx, [esp+30h+var_18]
                xor     ecx, [esp+30h+var_1C]
                mov     esi, [esp+30h+var_10]
                xor     ecx, edx
                xor     ecx, 0DB7918EEh
                mov     edx, ecx
                xor     edx, esi
                xor     edx, ebx
                xor     edx, 0B896098Bh
                mov     [esp+30h+var_10], edx
                cmp     eax, [esp+30h+var_C]
                jbe     short loc_490B77
                mov     edx, [esp+30h+var_1C]
                xor     edi, edi
                xor     esi, 2EF19F78h
                add     edx, 0D72ACAB4h
                or      edi, esi
                jmp     short loc_490B91
; ---------------------------------------------------------------------------

loc_490B77:                             ; CODE XREF: VBNCB_unnamed_80002169+BF¡üj
                sub     edi, [ebp+arg_0]
                mov     eax, ecx
                xor     edi, esi
                xor     edx, edx
                xor     edi, [esp+30h+var_1C]
                xor     eax, 0E0133F6Fh
                xor     edi, 43FA6FE9h
                or      edx, eax

loc_490B91:                             ; CODE XREF: VBNCB_unnamed_80002169+D5¡üj
                cmp     [esp+30h+var_8], 0
                mov     eax, [esp+30h+var_10]
                mov     esi, [esp+30h+var_14]
                setz    bl
                movzx   ecx, al
                xor     ecx, 0D4h
                shr     eax, 8
                mov     [esi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                xor     ecx, 65h
                mov     [esi+ecx*8], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002169 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000208d proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     [esp+28h+var_4], ecx
                lea     ebx, [edi+53D056D7h]
                movzx   esi, bl
                mov     eax, ebx
                shr     eax, 8
                movzx   edx, al
                mov     eax, [esi+ecx-83h]
                mov     ecx, edi
                mov     esi, [eax+edx-13h]
                mov     eax, [ebp+arg_0]
                sub     ecx, eax
                mov     edx, ecx
                mov     [esp+28h+var_14], esi
                xor     edx, 0C837347Dh
                cmp     edx, esi
                setnbe  [esp+28h+var_19]
                add     eax, 0DDC385DBh
                xor     eax, ebx
                sub     [esp+28h+var_14], edx
                mov     [esp+28h+var_10], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     edi, 4
                add     edi, eax
                mov     eax, [ebp+arg_0]
                xor     edi, ecx
                xor     edi, ebx
                lea     ebx, [eax-1BE4A61Ah]
                mov     [esp+28h+var_18], ebx
                mov     ebx, [esp+28h+var_10]
                xor     [esp+28h+var_18], ebx
                xor     [esp+28h+var_18], ecx
                mov     ecx, [ebp+arg_4]
                add     ecx, 0CA8BA33Ah
                add     eax, ecx
                mov     ecx, [esp+28h+var_18]
                xor     eax, ecx
                xor     eax, edi
                mov     [esp+28h+var_10], eax
                cmp     edx, esi
                jbe     short loc_490C7F
                xor     edx, edx
                lea     esi, [ebx-1A8EBE35h]
                xor     edi, 0EA77B56h
                or      edx, edi
                jmp     short loc_490CA4
; ---------------------------------------------------------------------------

loc_490C7F:                             ; CODE XREF: VBNCB_unnamed_8000208d+9B¡üj
                mov     eax, [ebp+arg_0]
                xor     esi, esi
                mov     edx, [ebp+arg_4]
                add     eax, 0AD860088h
                add     edx, eax
                lea     eax, [ecx+1C9435BBh]
                xor     edx, edi
                xor     edx, ebx
                xor     edx, 1605664Dh
                or      esi, eax
                mov     eax, [esp+28h+var_10]

loc_490CA4:                             ; CODE XREF: VBNCB_unnamed_8000208d+AD¡üj
                mov     edi, [esp+28h+var_4]
                mov     bl, [esp+28h+var_19]
                movzx   ecx, al
                xor     ecx, 46h
                cmp     [esp+28h+var_14], 0
                mov     [edi+ecx*8], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                xor     ecx, 29h
                mov     edx, esi
                mov     [edi+ecx*8], bl
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000208d endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___168      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                add     eax, 0DC3472A3h
                and     [esp+4Ch+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                add     eax, esi
                mov     [esp+54h+var_44], eax
                push    edi
                mov     edi, ecx
                lea     ebx, [esi+30D51653h]
                mov     [esp+58h+var_48], edi
                movzx   eax, bl
                mov     [esp+58h+var_2C], ebx
                push    offset dword_40C2A0
                mov     edx, [edi+eax*8-0B8h]
                mov     eax, [edi+eax*8-0B4h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 50h
                mov     [esp+5Ch+var_24], edx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, [esp+5Ch+var_44]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                movzx   eax, di
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     eax, [eax+edx-0D26Eh]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, edi
                mov     edi, [esp+5Ch+var_48]
                shr     eax, 10h
                xor     al, 3Ch
                movzx   eax, al
                cdq
                add     eax, [ecx+edi-0D2h]
                mov     [esp+5Ch+var_14], eax
                adc     edx, [ecx+edi-0CEh]
                mov     ecx, ebx
                shr     ecx, 8
                movzx   ecx, cl
                mov     [esp+5Ch+var_10], edx
                mov     eax, [ecx+edi+14h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [ecx+edi+18h]
                lea     edi, [esi+30D51653h]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_18], eax
                mov     eax, [ebp+arg_0]
                xor     eax, esi
                mov     ebx, eax
                mov     [esp+5Ch+var_40], eax
                xor     ebx, edi
                mov     [esp+5Ch+var_3C], ebx
                lea     edx, [ebx-61EF75E0h]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_0]
                lea     eax, [esi+0B3DFD93h]
                xor     eax, [esp+58h+var_44]
                sub     edx, esi
                mov     ecx, [esp+58h+var_40]
                xor     edx, ebx
                xor     edx, [esp+58h+var_44]
                xor     eax, edi
                xor     edx, 47F426E0h
                mov     [esp+58h+var_C], eax
                mov     ebx, ecx
                mov     [esp+58h+var_8], edx
                xor     ebx, eax
                xor     ecx, edx
                xor     ebx, [esp+58h+var_3C]
                xor     ecx, eax
                mov     eax, ebx
                mov     [esp+58h+var_40], ecx
                xor     eax, edx
                xor     eax, edi
                xor     eax, 0B59B7073h
                mov     [esp+58h+var_38], eax
                xor     esi, esi
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0BEh
                sub     al, 20h ; ' '
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                lea     edx, [ecx+39D34EE1h]
                adc     esi, dword ptr [esp+58h+var_34+4]
                add     eax, 0FE84D9D8h
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_40]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_2C]
                mov     ebx, [esp+58h+var_48]
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                mov     [ebx+eax*8-2C0h], edx
                mov     edx, ebx
                mov     ebx, [esp+58h+var_44]
                and     dword ptr [edx+eax*8-2BCh], 0
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 7Bh
                mov     [edx+eax*8], edi
                mov     edi, edx
                mov     edx, [esp+58h+var_24]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 40h
                shr     ecx, 18h
                mov     [eax+edi], edx
                mov     edx, [esp+58h+var_20]
                mov     [eax+edi+4], edx
                mov     eax, [esp+58h+var_1C]
                mov     [edi+ecx*8-348h], eax
                mov     eax, [esp+58h+var_18]
                mov     [edi+ecx*8-344h], eax
                mov     eax, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_C]
                movzx   eax, al
                xor     edx, 0E7531E9h
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_40]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                mov     [edi+ecx*8-340h], eax
                mov     eax, [esp+58h+var_10]
                mov     [edi+ecx*8-33Ch], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                xor     ecx, 8BDD309Ah
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___168      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___129      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = qword ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                mov     [esp+54h+var_4C], edx
                lea     eax, [edx-56BCD661h]
                and     [esp+54h+var_4], 0
                mov     [esp+54h+var_48], eax
                mov     ecx, ebx
                xor     ecx, edx
                mov     [esp+54h+var_40], esi
                lea     eax, [edx+3604DAD0h]
                mov     [esp+54h+var_34], ecx
                add     eax, ebx
                xor     eax, ecx
                mov     [esp+54h+var_44], eax
                movzx   eax, cl
                push    edi
                push    offset dword_40C380
                mov     edx, [eax+esi+4]
                mov     eax, [eax+esi+8]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_30], edx
                mov     edx, [esi+eax*8-3A0h]
                mov     eax, [esi+eax*8-39Ch]
                mov     dword ptr [esp+5Ch+var_1C+4], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_1C], edx
                mov     edx, [eax+esi-66h]
                mov     eax, [eax+esi-62h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ecx
                mov     ecx, [esp+5Ch+var_48]
                shr     eax, 18h
                mov     [esp+5Ch+var_14], edx
                mov     edx, [esp+5Ch+var_40]
                mov     edi, [eax+esi-7Ah]
                movzx   eax, cl
                mov     esi, [esi+eax*8-28h]
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F6h
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     edx, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_24], ecx
                xor     edx, 19F3C73Fh
                mov     ecx, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_20], eax
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_4C]
                mov     edx, [esp+58h+var_34]
                sub     ecx, ebx
                xor     ecx, [esp+58h+var_48]
                xor     ecx, edx
                shr     ebx, 4
                movzx   eax, cx
                xor     eax, 0D2C5h
                mov     [esp+58h+var_3C], ecx
                add     eax, edi
                mov     eax, [esi+eax*4]
                mov     esi, [esp+58h+var_4C]
                shl     [esp+58h+var_4C], 4
                add     esi, 0FE23A70Fh
                add     [esp+58h+var_4C], ebx
                mov     ebx, [esp+58h+var_4C]
                xor     esi, [esp+58h+var_44]
                xor     ebx, ecx
                xor     esi, [esp+58h+var_48]
                mov     ecx, edx
                xor     ebx, [esp+58h+var_44]
                mov     [esp+58h+var_C], eax
                mov     [esp+58h+var_8], esi
                mov     [esp+58h+var_4C], ebx
                xor     ecx, esi
                mov     eax, ebx
                xor     ecx, [esp+58h+var_3C]
                xor     eax, esi
                xor     eax, edx
                mov     [esp+58h+var_28], ecx
                xor     eax, 17E62C5Dh
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                xor     eax, ebx
                xor     eax, [esp+58h+var_48]
                xor     eax, edx
                mov     [esp+58h+var_34], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 6Dh
                xor     al, 0D4h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_34]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_38]
                adc     edx, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                add     eax, 0D24832DEh
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi+62426718h]
                mov     ecx, edi
                mov     [ebx+4], esi
                xor     ecx, [esp+58h+var_28]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                mov     edi, [esp+58h+var_40]
                mov     esi, [esp+58h+var_24]
                movzx   eax, cl
                mov     [esp+58h+var_28], ecx
                mov     [edi+eax*8-288h], esi
                mov     esi, [esp+58h+var_20]
                mov     [edi+eax*8-284h], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 4Ah
                mov     [edi+eax*8], ebx
                mov     ebx, [esp+58h+var_3C]
                mov     [edi+eax*8+4], edx
                mov     eax, ebx
                shr     eax, 10h
                xor     eax, 2641h
                movzx   eax, ax
                cdq
                add     eax, dword ptr [esp+58h+var_1C]
                adc     edx, dword ptr [esp+58h+var_1C+4]
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 65h
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_28]
                shr     eax, 18h
                mov     [edi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_14]
                mov     [eax+edi-97h], ecx
                mov     ecx, [esp+58h+var_10]
                mov     [eax+edi-93h], ecx
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                mov     edx, [esp+58h+var_8]
                xor     ecx, eax
                mov     eax, [esp+58h+var_C]
                xor     ecx, 49h
                add     edx, 863A5DC3h
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_4C]
                pop     edi
                xor     ecx, 0CD7D4D25h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___129      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___37_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                mov     [ebp+var_4], ecx
                mov     ecx, ebx
                shr     ecx, 4
                push    edi
                mov     edi, [ebp+arg_0]
                xor     edx, edi
                sub     ebx, edi
                mov     eax, edi
                shl     eax, 4
                add     ecx, eax
                xor     ecx, edx
                lea     esi, [edi+7A493C34h]
                xor     ebx, esi
                mov     [ebp+var_8], ecx
                xor     ebx, edx
                movzx   ecx, dl
                xor     ecx, 0E8h
                mov     [ebp+var_C], esi
                mov     esi, [ebp+var_4]
                mov     eax, ebx
                shr     eax, 8
                xor     al, 0ECh
                movzx   eax, al
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40AC60
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                mov     edx, [ebp+arg_4]
                sub     eax, 6Dh ; 'm'
                mov     ebx, [ebp+var_C]
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                shl     edx, 4
                shr     edi, 4
                add     edx, edi
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, ebx
                mov     [eax+1BCh], ecx
                sub     edx, 524D4135h
                mov     ecx, eax
                call    VBN_TransformContext
                xor     ebx, 4AEC7C6Dh
                xor     esi, 0E828ABACh
                xor     eax, eax
                mov     edx, ebx
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___37_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___50       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ebx, [ebp+arg_4]
                push    edi
                mov     edi, [ebp+arg_0]
                mov     [esp+50h+var_3C], esi
                push    offset dword_40A7E0
                lea     edx, [edi+17B1D06Eh]
                movzx   eax, dl
                xor     eax, 0EBh
                mov     [esp+54h+var_20], edx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0E8h
                mov     dword ptr [esp+54h+var_30], ecx
                shr     edx, 18h
                xor     edx, 4Bh
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_10], eax
                mov     eax, edi
                shl     eax, 4
                mov     [esp+54h+var_14], ecx
                mov     ecx, ebx
                shr     ecx, 4
                add     ecx, eax
                mov     eax, ecx
                mov     [esp+54h+var_38], ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+esi]
                mov     eax, [eax+ecx+81h]
                mov     [esp+54h+var_28], eax
                mov     eax, [esp+54h+var_38]
                movzx   ecx, al
                shr     eax, 10h
                xor     ecx, 47h
                xor     al, 48h
                movzx   eax, al
                cdq
                add     eax, [esi+ecx*8]
                mov     [esp+54h+var_1C], eax
                adc     edx, [esi+ecx*8+4]
                mov     [esp+54h+var_18], edx
                lea     edx, [edi+17B1D06Eh]
                mov     ecx, edx
                shr     ecx, 8
                movzx   ecx, cl
                mov     eax, [esi+ecx*8+0E8h]
                mov     [esp+54h+var_C], eax
                mov     eax, [esi+ecx*8+0ECh]
                mov     ecx, ebx
                mov     [esp+54h+var_8], eax
                mov     eax, edi
                shl     ecx, 4
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+54h+var_3C]
                mov     esi, eax
                mov     [esp+54h+var_40], eax
                xor     esi, edx
                lea     edx, [esi+7BE2F032h]
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_40]
                lea     edx, [edi+17B1D06Eh]
                xor     eax, [esp+50h+var_38]
                lea     ecx, [ebx-1480F44Eh]
                xor     eax, edx
                mov     [esp+50h+var_40], eax
                mov     eax, ebx
                sub     eax, edi
                mov     edx, eax
                xor     edx, esi
                xor     edx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_40]
                mov     [esp+50h+var_4], edx
                xor     eax, edx
                xor     ecx, esi
                xor     eax, [esp+50h+var_40]
                mov     ebx, ecx
                mov     [esp+50h+var_34], eax
                xor     ebx, edx
                lea     eax, [edi+17B1D06Eh]
                mov     [esp+50h+var_24], ecx
                xor     ebx, eax
                xor     esi, esi
                xor     ebx, 0E335498Bh
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 1Eh
                xor     al, 70h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_30+4]
                xor     ecx, ecx
                add     eax, 224D1F9h
                xor     edx, 6E320034h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 0B8h
                and     dword ptr [edx+eax*8-5ECh], 0
                mov     [edx+eax*8-5F0h], ecx
                mov     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_24]
                xor     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_20]
                mov     [edx+ebx*8], edi
                mov     edi, edx
                mov     edx, [esp+50h+var_1C]
                movzx   eax, cl
                mov     [edi+ebx*8+4], esi
                mov     [edi+eax*8-4F8h], edx
                mov     edx, [esp+50h+var_18]
                mov     [edi+eax*8-4F4h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_14]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [eax+edi-0B2h], edx
                mov     edx, [esp+50h+var_10]
                mov     [eax+edi-0AEh], edx
                mov     edx, [esp+50h+var_40]
                movzx   eax, cl
                add     edx, 0DB11BEB4h
                mov     ecx, [esp+50h+var_C]
                mov     [edi+eax*8-350h], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [edi+eax*8-34Ch], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                pop     edi
                add     ecx, 462C4DCBh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___50       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__25      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+20h+var_4], 0
                mov     ecx, [ebp+arg_4]
                sub     ecx, [ebp+arg_0]
                movzx   eax, cl
                xor     eax, 69h
                mov     [esp+20h+var_10], ecx
                push    offset dword_40BAE4
                mov     ebx, [edi+eax*8]
                mov     eax, ecx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ecx
                xor     edx, 0ACh
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [edi+edx*8]
                mov     esi, [eax+ecx-0AEh]
                mov     ecx, edi
                mov     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                mov     [esp+24h+var_C], eax
                lea     edx, [eax-404524D0h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                mov     edx, [esp+20h+var_10]
                mov     edi, edx
                lea     ecx, [eax-573DB9DBh]
                xor     ecx, edx
                mov     [esp+20h+var_8], ecx
                mov     ecx, [esp+20h+var_C]
                xor     edi, ecx
                xor     edi, edx
                mov     [esp+20h+var_C], edi
                lea     edi, [eax+61149706h]
                mov     eax, [esp+20h+var_8]
                xor     edi, eax
                movzx   eax, al
                xor     edi, ecx
                xor     eax, 0A2h
                sub     ebx, eax
                sub     ebx, esi
                jz      short loc_491537
                mov     edx, [esp+20h+var_C]
                xor     ecx, ecx
                xor     edi, 7B519E36h
                add     edx, 0DEEB490Dh
                or      ecx, edi
                jmp     short loc_49155A
; ---------------------------------------------------------------------------

loc_491537:                             ; CODE XREF: vBng_h__25+9F¡üj
                mov     eax, [esp+20h+var_10]
                xor     ecx, ecx
                mov     edx, eax
                xor     eax, edi
                xor     edx, [esp+20h+var_C]
                xor     eax, [esp+20h+var_C]
                xor     edx, [esp+20h+var_8]
                sub     eax, 7954A4B6h
                add     edx, 465B0676h
                or      ecx, eax

loc_49155A:                             ; CODE XREF: vBng_h__25+B5¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__25      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_1__7       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                shr     eax, 4
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                add     ecx, eax
                mov     [esp+14h+var_4], esi
                mov     eax, ecx
                mov     [esp+14h+var_8], ecx
                shr     eax, 8
                movzx   edx, al
                mov     eax, ecx
                shr     eax, 10h
                xor     edx, 8Fh
                movzx   ecx, al
                xor     ecx, 4Ch
                push    edi
                mov     eax, [edx+esi]
                mov     ebx, [ecx+eax]
                mov     edx, [ecx+eax+4]
                mov     eax, [esp+18h+var_8]
                movzx   edi, al
                mov     eax, [ebp+arg_0]
                xor     edi, 7Ah
                sub     al, 23h ; '#'
                add     al, byte ptr [ebp+arg_4]
                movzx   esi, al
                mov     eax, [esp+18h+var_4]
                mov     ecx, [eax+edi*8]
                mov     [eax+esi*8-1E8h], ecx
                mov     ecx, [eax+edi*8+4]
                pop     edi
                mov     [eax+esi*8-1E4h], ecx
                mov     eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__7       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__10      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                add     ecx, 0AA135FFCh
                add     ecx, [ebp+arg_0]
                movzx   eax, cl
                push    edi
                push    offset dword_40C710
                mov     ebx, [esi+eax*8-338h]
                mov     eax, ecx
                shr     eax, 8
                mov     ecx, esi
                movzx   eax, al
                mov     [esp+1Ch+var_C], ebx
                mov     edi, [eax+ebx-96h]
                mov     ebx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                lea     edx, [ebx-6CDE4CD9h]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                lea     eax, [edx-55ECA004h]
                add     eax, ecx
                lea     esi, [ecx+366C5438h]
                add     esi, edx
                add     ecx, 0E5C70B7h
                mov     edx, [esp+18h+var_C]
                xor     ecx, ebx
                xor     esi, eax
                xor     ecx, eax
                xor     edi, esi
                movzx   eax, cl
                xor     eax, 0Fh
                xor     edi, 160A6158h
                mov     [eax+edx], edi
                xor     eax, eax
                mov     edx, [ebp+arg_4]
                add     edx, 0B9E4DC50h
                xor     edx, esi
                xor     edx, ebx
                xor     ebx, ecx
                xor     ebx, esi
                sub     edx, 1DE0AA3Fh
                pop     edi
                sub     ebx, 1C6529BCh
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__10      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___60_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     ebx, edx
                mov     [ebp+var_4], ecx
                shl     ebx, 4
                lea     ecx, [edx-2C6E6D3Ch]
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                add     ebx, eax
                xor     ebx, ecx
                mov     [ebp+var_8], ebx
                lea     esi, [edi-523ADDF8h]
                mov     ebx, edi
                sub     ebx, edx
                xor     ebx, esi
                mov     esi, [ebp+var_4]
                xor     ebx, ecx
                movzx   ecx, cl
                xor     ebx, 6BF14A85h
                mov     eax, ebx
                shr     eax, 8
                mov     esi, [ecx+esi+61h]
                xor     al, 61h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40BD20
                mov     ecx, [ecx+eax+65h]
                sbb     ecx, edx
                xor     bl, 79h
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                lea     edx, [edi-0DA21935h]
                xor     edx, ebx
                mov     [eax+1B8h], esi
                lea     esi, [edi-523ADDF8h]
                xor     edx, esi
                mov     [eax+1BCh], ecx
                xor     edx, 33FF13C7h
                mov     ecx, eax
                call    VBN_TransformContext
                pop     edi
                xor     ebx, 0C16FFFA3h
                lea     edx, [esi+744E1714h]
                xor     eax, eax
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___60_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___181      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                lea     eax, [ebx+4FF0A55Fh]
                add     eax, esi
                mov     [esp+50h+var_3C], edi
                mov     [esp+50h+var_40], eax
                lea     ecx, [esi+126F18EBh]
                mov     eax, ecx
                mov     [esp+50h+var_34], ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0Eh
                movzx   ecx, cl
                mov     edx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+50h+var_10], eax
                mov     eax, [esp+50h+var_40]
                movzx   eax, al
                xor     eax, 21h
                mov     [esp+50h+var_14], edx
                mov     eax, [edx+eax*4]
                mov     [esp+50h+var_20], eax
                mov     eax, [esp+50h+var_40]
                shr     eax, 8
                xor     al, 8Dh
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-90h]
                mov     [esp+50h+var_1C], eax
                adc     edx, [edi+ecx*8-8Ch]
                mov     [esp+50h+var_18], edx
                mov     edx, [esp+50h+var_34]
                mov     ecx, edx
                shr     ecx, 18h
                xor     ecx, 8Ah
                shl     esi, 4
                mov     eax, [edi+ecx*8]
                mov     [esp+50h+var_28], eax
                mov     eax, [edi+ecx*8+4]
                lea     edi, [ebx+11968032h]
                mov     ecx, [ebp+arg_4]
                xor     edi, edx
                mov     [esp+50h+var_24], eax
                mov     eax, ebx
                shr     eax, 4
                add     esi, eax
                mov     [esp+50h+var_30], edi
                mov     eax, esi
                shl     ebx, 4
                xor     eax, [esp+50h+var_40]
                xor     esi, edi
                xor     esi, [esp+50h+var_40]
                lea     edi, [ecx+50F98634h]
                xor     eax, edx
                shr     ecx, 4
                add     ecx, ebx
                mov     [esp+50h+var_4], eax
                mov     ebx, [esp+50h+var_3C]
                xor     edi, eax
                xor     edi, [esp+50h+var_30]
                xor     ecx, esi
                xor     ecx, eax
                movzx   eax, cl
                mov     [esp+50h+var_2C], eax
                mov     eax, edx
                shr     eax, 8
                mov     [esp+50h+var_38], ecx
                movzx   ecx, al
                mov     eax, [esp+50h+var_38]
                shr     eax, 8
                xor     al, 0D8h
                mov     ebx, [ebx+ecx*8-3E0h]
                movzx   eax, al
                cdq
                sub     ebx, eax
                mov     eax, [esp+50h+var_3C]
                mov     ecx, [eax+ecx*8-3DCh]
                mov     eax, [esp+50h+var_2C]
                sbb     ecx, edx
                add     eax, 0FFFFFFCAh
                lea     edx, [esi-174604F2h]
                add     ebx, eax
                lea     eax, [edi-62113772h]
                mov     [esp+50h+var_C], ebx
                adc     ecx, 0
                mov     [esp+50h+var_8], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+50h+var_3C]
                mov     [ebx+4], edx
                mov     ebx, edi
                xor     ebx, esi
                xor     ebx, [esp+50h+var_34]
                xor     ebx, 80FFEC38h
                push    offset dword_40A390
                lea     edx, [ebx+32238851h]
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_38]
                mov     edx, [esp+50h+var_40]
                xor     eax, edi
                mov     edi, [esp+50h+var_3C]
                xor     eax, edx
                xor     eax, [esp+50h+var_34]
                mov     ecx, [esp+50h+var_28]
                mov     [esp+50h+var_38], eax
                mov     esi, [esp+50h+var_38]
                movzx   eax, al
                xor     eax, 93h
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [edi+eax*8+4], ecx
                mov     eax, esi
                mov     ecx, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                and     dword ptr [edi+eax*8-32Ch], 0
                mov     [edi+eax*8-330h], ecx
                mov     eax, esi
                mov     ecx, [esp+50h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     esi, 18h
                xor     esi, 0FCh
                mov     [edi+eax*8-5A0h], ecx
                mov     ecx, [esp+50h+var_18]
                mov     [edi+eax*8-59Ch], ecx
                mov     eax, [esp+50h+var_14]
                mov     [esi+edi], eax
                mov     eax, [esp+50h+var_10]
                mov     [esi+edi+4], eax
                movzx   ecx, dl
                mov     edx, [esp+50h+var_30]
                movzx   eax, dl
                xor     edx, 0FC34BDDDh
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                xor     ecx, [esp+50h+var_2C]
                mov     [edi+ecx*8-0A0h], eax
                mov     eax, [esp+50h+var_8]
                mov     [edi+ecx*8-9Ch], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                pop     edi
                xor     ecx, 76FCB59Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___181      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f70 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                xor     eax, eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                xor     eax, esi
                mov     [ebp+var_C], ecx
                mov     [ebp+var_4], eax
                mov     ecx, esi
                xor     ebx, edx
                sub     ecx, edx
                push    edi
                mov     edi, esi
                mov     [ebp+var_4], ecx
                shl     esi, 4
                mov     eax, edx
                shr     eax, 4
                xor     edi, ebx
                add     esi, eax
                xor     edi, edx
                lea     eax, [edx-62D69581h]
                xor     esi, edi
                xor     eax, [ebp+var_4]
                xor     esi, ecx
                mov     edx, [ebp+var_C]
                xor     eax, ebx
                add     eax, 41C48ACh
                xor     ecx, ecx
                or      ecx, eax
                xor     esi, 33381C2h
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0Fh
                cmp     byte ptr [edx+eax*8], 0
                mov     edx, [ebp+var_4]
                jnz     short loc_491A4A
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                xor     eax, 36h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_491A4A
                xor     esi, esi
                lea     ecx, [edx+69057AB1h]
                xor     edi, 0AE39A0FCh
                or      esi, edi

loc_491A4A:                             ; CODE XREF: VBNCB_unnamed_80001f70+69¡üj
                                        ; VBNCB_unnamed_80001f70+78¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f70 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001ee5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                shl     eax, 4
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, ecx
                shr     edx, 4
                lea     ecx, [ebx+3EB4CF09h]
                mov     [esp+28h+var_C], edi
                add     edx, eax
                mov     [esp+28h+var_14], ecx
                mov     eax, ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+28h+var_14]
                xor     ecx, 0BCh
                movzx   eax, al
                mov     eax, [eax+edi-2Ah]
                mov     ecx, [ecx+eax]
                mov     eax, edx
                xor     eax, 70131BBh
                mov     edi, ecx
                cmp     eax, ecx
                setnbe  [esp+28h+var_15]
                sub     edi, eax
                sub     ebx, esi
                mov     [esp+28h+var_8], edi
                lea     edi, [esi+7ADA6AC9h]
                xor     edi, [esp+28h+var_14]
                xor     ebx, edi
                xor     ebx, edx
                xor     ebx, 9A352D41h
                mov     [esp+28h+var_10], ebx
                lea     ebx, [esi-456BF7F4h]
                mov     esi, [esp+28h+var_10]
                xor     ebx, esi
                xor     ebx, [esp+28h+var_14]
                mov     [esp+28h+var_10], ebx
                cmp     eax, ecx
                jbe     short loc_491B09
                mov     eax, [esp+28h+var_14]
                xor     edx, edx
                add     eax, 0F9D73147h
                xor     edi, 8EC02D23h
                or      edx, eax
                jmp     short loc_491B1F
; ---------------------------------------------------------------------------

loc_491B09:                             ; CODE XREF: VBNCB_unnamed_80001ee5+92¡üj
                xor     edx, [esp+28h+var_14]
                lea     eax, [esi-21AAE290h]
                xor     edx, edi
                xor     edi, edi
                xor     edx, 0F213BC61h
                or      edi, eax

loc_491B1F:                             ; CODE XREF: VBNCB_unnamed_80001ee5+A7¡üj
                mov     esi, [esp+28h+var_C]
                mov     al, [esp+28h+var_15]
                movzx   ecx, bl
                xor     ecx, 0C1h
                cmp     [esp+28h+var_8], 0
                setz    bl
                mov     [esi+ecx*8], al
                mov     eax, [esp+28h+var_10]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                mov     [esi+ecx*8-2E0h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001ee5 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__26      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                push    offset dword_40A3F0
                lea     edx, [edi-3659EF90h]
                movzx   eax, dl
                mov     esi, [ecx+eax*8+70h]
                mov     eax, ebx
                sub     eax, edi
                mov     [esp+2Ch+var_14], esi
                mov     edi, eax
                mov     [esp+2Ch+var_10], eax
                mov     eax, edx
                xor     edi, 97C5C52Bh
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0D2h
                mov     [esp+2Ch+var_18], edi
                mov     esi, [eax+esi]
                mov     eax, ebx
                xor     esi, edi
                shl     eax, 4
                mov     edi, [ebp+arg_4]
                xor     esi, 0DDABBF0Fh
                shr     edi, 4
                add     edi, eax
                xor     edi, edx
                mov     edx, edi
                xor     edx, 37FC6334h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                lea     ecx, [ebx+3B6F616Fh]
                xor     ecx, [esp+28h+var_18]
                add     eax, 0C9A61070h
                mov     edx, [esp+28h+var_14]
                xor     ecx, eax
                movzx   eax, cl
                xor     eax, 2Eh
                mov     [eax+edx], esi
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                add     eax, 0C71B0DDBh
                xor     eax, ecx
                mov     ecx, [esp+28h+var_10]
                xor     ecx, edi
                xor     eax, edi
                xor     ecx, [esp+28h+var_18]
                xor     eax, 0B2888A58h
                pop     edi
                xor     ecx, 0F281337Ah
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__26      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__29      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                mov     ebx, ecx
                and     [esp+18h+var_4], 0
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                add     ecx, eax
                mov     eax, ecx
                movzx   edx, cl
                shr     eax, 8
                movzx   eax, al
                push    esi
                push    edi
                mov     [esp+20h+var_8], ecx
                mov     edi, [eax+ebx+65h]
                mov     eax, ecx
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [edx+ebx-83h]
                push    offset dword_40C010
                mov     esi, [eax+ecx-28h]
                mov     ecx, ebx
                mov     eax, [ebp+arg_4]
                sub     eax, [ebp+arg_0]
                mov     edx, eax
                mov     [esp+24h+var_10], eax
                xor     edx, 18F22A93h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ecx, edx
                mov     eax, [esp+20h+var_8]
                mov     ebx, eax
                xor     ecx, [ebp+arg_0]
                xor     ebx, eax
                xor     ecx, [esp+20h+var_10]
                xor     ecx, eax
                shr     eax, 18h
                xor     eax, 0D7h
                sub     edi, eax
                sub     edi, esi
                jz      short loc_491CCD
                xor     eax, eax
                xor     ecx, 5314C75Bh
                xor     ebx, 681B238Ah
                or      eax, ecx
                jmp     short loc_491CF3
; ---------------------------------------------------------------------------

loc_491CCD:                             ; CODE XREF: vBng_h__29+89¡üj
                mov     esi, [ebp+arg_0]
                lea     eax, [esi+432701BAh]
                add     eax, edx
                xor     edx, esi
                xor     eax, ecx
                xor     ecx, ecx
                xor     eax, ebx
                xor     ebx, edx
                xor     ebx, [esp+20h+var_10]
                add     eax, 230590E9h
                xor     ebx, 8EE5A2BAh
                or      ebx, ecx

loc_491CF3:                             ; CODE XREF: vBng_h__29+9B¡üj
                pop     edi
                pop     esi
                mov     edx, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__29      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800020fb proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                add     ebx, 728F8D35h
                movzx   edx, bl
                mov     eax, ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, ecx
                shr     eax, 8
                add     esi, 78B1912Ah
                movzx   ecx, al
                mov     [esp+28h+var_10], edi
                mov     eax, [edx+edi+23h]
                mov     ecx, [eax+ecx+0B0h]
                lea     eax, [esi+435B98DAh]
                cmp     eax, ecx
                mov     edx, ecx
                setnbe  [esp+28h+var_19]
                sub     edx, eax
                mov     [esp+28h+var_C], edx
                mov     edx, [ebp+arg_4]
                add     edx, 0FC2CEA8Bh
                xor     edx, ebx
                mov     [esp+28h+var_18], edx
                mov     edx, [ebp+arg_4]
                lea     edi, [edx+77933835h]
                xor     edi, esi
                xor     edi, ebx
                mov     ebx, [ebp+arg_0]
                sub     ebx, edx
                mov     edx, ebx
                xor     edx, [esp+28h+var_18]
                xor     edx, esi
                xor     edx, 78554C9Ah
                xor     ebx, edx
                mov     [esp+28h+var_14], edx
                xor     ebx, edi
                xor     ebx, 59F45891h
                mov     [esp+28h+var_8], ebx
                cmp     eax, ecx
                jbe     short loc_491DAC
                mov     edx, [esp+28h+var_18]
                xor     eax, eax
                xor     edi, 0D9B50AE9h
                add     edx, 297AEB07h
                or      eax, edi
                jmp     short loc_491DD3
; ---------------------------------------------------------------------------

loc_491DAC:                             ; CODE XREF: VBNCB_unnamed_800020fb+94¡üj
                mov     ecx, [ebp+arg_0]
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                add     ecx, 0A7C6B3E2h
                add     eax, ecx
                mov     ecx, [esp+28h+var_14]
                xor     eax, edi
                xor     ecx, 0B7745936h
                xor     eax, [esp+28h+var_18]
                xor     eax, 0FD4A8ABBh
                or      edx, ecx

loc_491DD3:                             ; CODE XREF: VBNCB_unnamed_800020fb+AA¡üj
                mov     esi, [esp+28h+var_10]
                cmp     [esp+28h+var_C], 0
                movzx   ecx, bl
                mov     bl, [esp+28h+var_19]
                pop     edi
                mov     [esi+ecx*8-2C0h], bl
                setz    bl
                mov     ecx, [esp+24h+var_8]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 0F0h
                mov     [esi+ecx*8], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020fb endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800023d0 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                lea     eax, [edx-312D80FAh]
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                push    edi
                shr     ecx, 4
                lea     ebx, [esi-37982994h]
                add     ebx, edx
                lea     edi, [esi-4F9FA18Eh]
                xor     eax, ebx
                mov     [ebp+var_4], edi
                mov     [ebp+var_8], eax
                mov     eax, esi
                xor     esi, edx
                shl     eax, 4
                mov     edx, [ebp+var_8]
                add     ecx, eax
                xor     esi, edx
                movzx   eax, bl
                xor     esi, [ebp+var_4]
                xor     ecx, edi
                xor     esi, 0F5F24BE6h
                xor     edi, edi
                or      edi, esi
                xor     eax, 2Fh
                mov     esi, [ebp+var_10]
                xor     ecx, ebx
                xor     ecx, 0F80D936Ah
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_491EA0
                shr     ebx, 8
                movzx   eax, bl
                cmp     byte ptr [esi+eax*8-4D8h], 0
                jnz     short loc_491EA0
                mov     ecx, [ebp+var_4]
                xor     edi, edi
                xor     edx, 0A1575BFCh
                add     ecx, 0F3C5B2A5h
                or      edi, edx

loc_491EA0:                             ; CODE XREF: VBNCB_unnamed_800023d0+6B¡üj
                                        ; VBNCB_unnamed_800023d0+7B¡üj
                mov     eax, edi
                mov     edx, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023d0 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002087 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, edx
                sub     ebx, esi
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                lea     eax, [edx+4571C594h]
                add     eax, esi
                shr     ecx, 4
                mov     [ebp+var_4], eax
                sub     esi, edx
                push    edi
                mov     edi, ebx
                xor     ebx, eax
                xor     edi, 102B04A1h
                mov     eax, edx
                mov     edx, [ebp+var_4]
                xor     esi, edi
                shl     eax, 4
                xor     esi, edx
                add     ecx, eax
                xor     esi, 9E6AA56Dh
                xor     eax, eax
                xor     ebx, 6E2AC3E7h
                or      eax, esi
                xor     ecx, ebx
                mov     esi, [ebp+var_8]
                xor     ecx, edi
                mov     [ebp+var_4], eax
                xor     ecx, 0D5281AFAh
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                cmp     byte ptr [esi+eax*8-150h], 0
                jnz     short loc_491F3F
                movzx   eax, dl
                cmp     byte ptr [esi+eax*8+10h], 0
                jnz     short loc_491F3F
                xor     ecx, ecx
                xor     ebx, 0DF58305Dh
                xor     edi, 88C87862h
                or      ecx, ebx
                jmp     short loc_491F42
; ---------------------------------------------------------------------------

loc_491F3F:                             ; CODE XREF: VBNCB_unnamed_80002087+71¡üj
                                        ; VBNCB_unnamed_80002087+7B¡üj
                mov     edi, [ebp+var_4]

loc_491F42:                             ; CODE XREF: VBNCB_unnamed_80002087+8D¡üj
                mov     edx, edi
                mov     eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002087 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002122 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                and     [ebp+var_4], 0
                push    ebx
                mov     ebx, eax
                mov     [ebp+var_C], ecx
                sub     ebx, edx
                mov     ecx, eax
                xor     ebx, 0AC426724h
                xor     ecx, edx
                push    esi
                mov     [ebp+var_4], ebx
                xor     esi, esi
                push    edi
                lea     edi, [eax+7F7FD486h]
                xor     edi, ebx
                lea     ebx, [eax+7D3579C1h]
                lea     eax, [edx-29F8CA23h]
                add     ebx, edx
                mov     edx, [ebp+var_C]
                xor     eax, edi
                xor     eax, ecx
                xor     ebx, ecx
                xor     ebx, [ebp+var_4]
                xor     eax, 88E3FE2Ah
                or      esi, eax
                xor     ebx, 99C9DEA8h
                mov     eax, [ebp+var_4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 38h
                cmp     byte ptr [edx+eax*8], 0
                mov     edx, [ebp+var_4]
                jnz     short loc_491FE1
                movzx   eax, dl
                mov     edx, [ebp+var_C]
                cmp     byte ptr [edx+eax*8+128h], 0
                jnz     short loc_491FE1
                xor     esi, esi
                xor     edi, 4F58FE9Ch
                xor     ecx, 1978FAECh
                or      esi, edi
                jmp     short loc_491FE3
; ---------------------------------------------------------------------------

loc_491FE1:                             ; CODE XREF: VBNCB_unnamed_80002122+6D¡üj
                                        ; VBNCB_unnamed_80002122+7D¡üj
                mov     ecx, ebx

loc_491FE3:                             ; CODE XREF: VBNCB_unnamed_80002122+8F¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002122 endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80001f21 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                and     [ebp+var_4], 0
                push    ebx
                mov     [ebp+var_C], ecx
                mov     ebx, eax
                sub     ebx, edx
                lea     ecx, [eax+2182B1EEh]
                add     ecx, edx
                xor     ebx, 3C04EE1h
                xor     edx, eax
                push    esi
                mov     esi, edx
                xor     esi, ebx
                mov     [ebp+var_4], esi
                xor     esi, esi
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                push    edi
                lea     edi, [eax+6350F524h]
                xor     edx, 0FA6B0EFBh
                or      esi, edx
                movzx   eax, bl
                mov     edx, [ebp+var_C]
                xor     eax, 79h
                xor     edi, ecx
                xor     edi, ebx
                cmp     byte ptr [edx+eax*8], 0
                jnz     short loc_49206E
                shr     ebx, 8
                movzx   eax, bl
                xor     eax, 0Bh
                cmp     byte ptr [edx+eax*8], 0
                jnz     short loc_49206E
                mov     eax, [ebp+var_4]
                xor     esi, esi
                add     eax, 0EA82205Dh
                xor     ecx, 1D2B94B8h
                or      esi, eax
                jmp     short loc_492074
; ---------------------------------------------------------------------------

loc_49206E:                             ; CODE XREF: VBNCB_unnamed_80001f21+59¡üj
                                        ; VBNCB_unnamed_80001f21+68¡üj
                lea     ecx, [edi-57CCCE2Eh]

loc_492074:                             ; CODE XREF: VBNCB_unnamed_80001f21+7C¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f21 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___110      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     ebx, edi
                mov     [esp+58h+var_4C], ecx
                mov     edx, edi
                shl     ebx, 4
                add     ebx, eax
                xor     edx, [ebp+arg_0]
                movzx   eax, bl
                xor     eax, 0D7h
                mov     esi, [esp+58h+var_4C]
                and     [esp+58h+var_4], 0
                mov     [esp+58h+var_48], edx
                shr     edx, 18h
                mov     ecx, [ecx+eax*8]
                sub     edx, 9Bh
                mov     [esp+58h+var_28], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     [esp+58h+var_40], ebx
                mov     eax, [ecx+eax*8+4]
                mov     [esp+58h+var_24], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8-520h]
                mov     [esp+58h+var_30], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     eax, [ecx+eax*8-51Ch]
                xor     ecx, ecx
                mov     [esp+58h+var_2C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                add     edx, [esi+eax*8-2B0h]
                mov     [esp+58h+var_20], edx
                mov     edx, esi
                adc     ecx, [edx+eax*8-2ACh]
                mov     eax, [esp+58h+var_48]
                mov     [esp+58h+var_1C], ecx
                mov     ecx, ebx
                shr     eax, 10h
                shr     ecx, 18h
                movzx   eax, al
                xor     eax, 0D8h
                mov     ecx, [ecx+esi+0CEh]
                mov     esi, [ebp+arg_0]
                add     ecx, eax
                mov     eax, [esp+58h+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     eax, [edx+eax*8-260h]
                mov     eax, [eax+ecx*4]
                mov     ecx, esi
                sub     ecx, edi
                mov     [esp+58h+var_8], eax
                mov     edx, ecx
                shr     edi, 4
                xor     edx, ebx
                mov     eax, esi
                mov     ebx, [esp+58h+var_48]
                xor     edx, 0A133A7C5h
                xor     ecx, edx
                shl     eax, 4
                xor     ecx, ebx
                mov     [esp+58h+var_18], edx
                add     edi, eax
                xor     ecx, 0D28C716Ah
                xor     edi, ebx
                mov     [esp+58h+var_38], ecx
                xor     edi, edx
                movzx   edx, bl
                mov     ebx, [esp+58h+var_4C]
                mov     [esp+58h+var_34], edi
                mov     [esp+58h+var_10], edx
                mov     eax, [ebx+edx*8+0C0h]
                mov     ebx, [ebx+edx*8+0C4h]
                mov     [esp+58h+var_3C], eax
                xor     edi, ecx
                lea     eax, [esi-1FC475DFh]
                xor     edi, [esp+58h+var_40]
                xor     eax, ecx
                xor     eax, [esp+58h+var_48]
                xor     edi, 54982E55h
                mov     ecx, [esp+58h+var_4C]
                push    offset dword_40C920
                mov     [esp+5Ch+var_44], eax
                lea     edx, [edi+7A306E13h]
                mov     [esp+5Ch+var_14], edi
                call    VBN_TransformContext
                mov     eax, [esp+58h+var_44]
                xor     edi, edi
                movzx   ecx, al
                shr     eax, 8
                add     al, 0Eh
                mov     [esp+58h+var_C], ecx
                movzx   eax, al
                cdq
                lea     esi, [ecx-39h]
                sub     esi, eax
                sbb     edi, edx
                add     esi, [esp+58h+var_3C]
                mov     edx, [esp+58h+var_38]
                adc     edi, ebx
                mov     ebx, [esp+58h+var_34]
                xor     ecx, ecx
                xor     edx, 0E765103h
                lea     eax, [ebx+0D44DE1h]
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+58h+var_44]
                mov     [esi+4], edx
                xor     ecx, ebx
                mov     ebx, [esp+58h+var_48]
                xor     ecx, ebx
                xor     ecx, [esp+58h+var_40]
                mov     edx, [esp+58h+var_4C]
                movzx   eax, cl
                mov     [edx+eax*8-4D8h], esi
                mov     esi, edx
                mov     edx, [esp+58h+var_30]
                mov     [esi+eax*8-4D4h], edi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 13h
                pop     edi
                mov     [eax+esi], edx
                mov     edx, [esp+54h+var_2C]
                mov     [eax+esi+4], edx
                mov     eax, ecx
                mov     edx, [esp+54h+var_28]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 69h
                mov     [esi+eax*8-0F8h], edx
                mov     edx, [esp+54h+var_24]
                mov     [esi+eax*8-0F4h], edx
                mov     eax, [esp+54h+var_20]
                mov     edx, [esp+54h+var_18]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+54h+var_1C]
                mov     [esi+ecx*8+4], eax
                mov     eax, [esp+54h+var_14]
                movzx   eax, al
                movzx   ecx, dl
                xor     edx, 7D921FB0h
                xor     ecx, eax
                mov     eax, [esp+54h+var_8]
                xor     ecx, [esp+54h+var_10]
                xor     ecx, [esp+54h+var_C]
                and     dword ptr [esi+ecx*8+12Ch], 0
                mov     [esi+ecx*8+128h], eax
                lea     ecx, [ebx+4681A9F4h]
                xor     eax, eax
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___110      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002369 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     edx, edx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, esi
                mov     [ebp+var_4], ecx
                mov     ecx, edi
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                lea     ebx, [edi+0E58F81Eh]
                lea     eax, [esi-49B1E284h]
                sub     edi, esi
                mov     esi, [ebp+var_4]
                or      edx, eax
                mov     eax, ecx
                xor     ebx, ecx
                shr     eax, 8
                xor     edi, ebx
                movzx   eax, al
                xor     edi, ecx
                xor     eax, 0D5h
                add     edi, 263F1034h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_492360
                movzx   eax, cl
                xor     eax, 0A4h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_492360
                xor     edi, edi
                lea     eax, [ebx+212FC02Ch]
                lea     edx, [ecx+72F1701Fh]
                or      edi, eax

loc_492360:                             ; CODE XREF: VBNCB_unnamed_80002369+50¡üj
                                        ; VBNCB_unnamed_80002369+5E¡üj
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002369 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800023bd proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                lea     esi, [eax-3B4034B0h]
                mov     [ebp+var_4], ecx
                push    edi
                lea     edi, [eax+4C3E5F2Fh]
                mov     ebx, edx
                sub     ebx, eax
                xor     edx, eax
                xor     edi, ebx
                mov     eax, ebx
                xor     eax, edi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                xor     eax, edx
                xor     eax, 89C30201h
                xor     ecx, ecx
                or      ecx, eax
                xor     esi, edx
                mov     eax, ebx
                xor     esi, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 33h
                cmp     byte ptr [edi+eax*8], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_4923EC
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                xor     eax, 0E2h
                cmp     byte ptr [ebx+eax*8], 0
                jnz     short loc_4923EC
                xor     ecx, ecx
                lea     eax, [edi+3E30D044h]
                xor     edx, 5A1C799Dh
                or      ecx, eax
                jmp     short loc_4923F2
; ---------------------------------------------------------------------------

loc_4923EC:                             ; CODE XREF: VBNCB_unnamed_800023bd+57¡üj
                                        ; VBNCB_unnamed_800023bd+68¡üj
                lea     edx, [esi+1AD008E4h]

loc_4923F2:                             ; CODE XREF: VBNCB_unnamed_800023bd+7A¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023bd endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002030 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                sub     edx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                and     [ebp+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                shr     eax, 4
                push    esi
                mov     esi, edx
                shl     ebx, 4
                add     ebx, eax
                xor     esi, 5453EE0Ch
                mov     eax, esi
                xor     edx, esi
                xor     eax, [ebp+arg_4]
                xor     edx, ebx
                xor     eax, [ebp+arg_0]
                xor     edx, 5701D9C1h
                xor     eax, 0EEE93A9Ch
                add     edx, 7FD4C1EDh
                push    edi
                mov     edi, ecx
                xor     ecx, ecx
                or      ecx, eax
                movzx   eax, bl
                xor     eax, 67h
                cmp     byte ptr [edi+eax*8], 0
                jnz     short loc_492477
                shr     ebx, 8
                movzx   eax, bl
                cmp     byte ptr [edi+eax*8-5E8h], 0
                jnz     short loc_492477
                xor     ecx, ecx
                lea     edx, [esi+622ADD13h]
                or      ecx, 0AE39A0FCh

loc_492477:                             ; CODE XREF: VBNCB_unnamed_80002030+57¡üj
                                        ; VBNCB_unnamed_80002030+67¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002030 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___198_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, ecx
                lea     eax, [edx-35080E6Eh]
                add     eax, [ebp+arg_4]
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    edi
                push    offset dword_40AA20
                mov     [ebp+var_C], esi
                mov     ecx, [eax+esi+64h]
                mov     ebx, [eax+esi+68h]
                mov     eax, edx
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_10], ecx
                lea     edx, [ecx-6540ED61h]
                mov     ecx, esi
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 6Ch
                shr     ecx, 10h
                movzx   eax, al
                add     cl, 36h ; '6'
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     edi, edx
                add     esi, [ebp+var_8]
                adc     edi, ebx
                mov     [eax+1B8h], esi
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                xor     ebx, [ebp+arg_0]
                xor     ebx, [ebp+var_10]
                xor     ebx, [ebp+var_4]
                mov     [eax+1BCh], edi
                sub     ebx, 2079E2ACh
                mov     eax, [ebp+arg_0]
                shl     edx, 4
                shr     eax, 4
                add     edx, eax
                xor     eax, eax
                xor     edx, [ebp+var_4]
                pop     edi
                add     edx, 787C19C2h
                or      eax, ebx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___198_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___39       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     [esp+50h+var_44], ebx
                and     [esp+50h+var_4], 0
                push    offset dword_40AA68
                lea     edx, [edi-681BB662h]
                mov     eax, edx
                mov     [esp+54h+var_40], edx
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                xor     edx, 8Ch
                mov     ecx, [eax+ebx+81h]
                mov     eax, [eax+ebx+85h]
                mov     ebx, esi
                mov     dword ptr [esp+54h+var_2C+4], eax
                mov     eax, edi
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     eax, ebx
                mov     [esp+54h+var_3C], ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+54h+var_44]
                xor     ecx, 0E5h
                mov     eax, [edx+eax]
                mov     eax, [eax+ecx]
                mov     [esp+54h+var_10], eax
                mov     eax, [esp+54h+var_40]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                mov     ebx, [esp+54h+var_44]
                xor     ecx, 18h
                shr     eax, 10h
                xor     al, 5Bh
                movzx   eax, al
                cdq
                add     eax, [ebx+ecx*8]
                mov     [esp+54h+var_24], eax
                mov     eax, ebx
                adc     edx, [eax+ecx*8+4]
                mov     [esp+54h+var_20], edx
                mov     edx, [esp+54h+var_40]
                movzx   ecx, dl
                xor     ecx, 2Dh
                mov     eax, [ecx+eax]
                mov     [esp+54h+var_1C], eax
                mov     eax, ebx
                mov     ebx, [esp+54h+var_3C]
                mov     eax, [ecx+eax+4]
                mov     [esp+54h+var_18], eax
                movzx   eax, bl
                mov     ebx, [esp+54h+var_44]
                mov     ecx, [eax+ebx-38h]
                mov     eax, [eax+ebx-34h]
                mov     ebx, esi
                mov     [esp+54h+var_C], ecx
                sub     ebx, edi
                xor     esi, edi
                mov     [esp+54h+var_8], eax
                mov     ecx, ebx
                mov     eax, esi
                xor     eax, [esp+54h+var_3C]
                xor     ecx, edx
                xor     esi, ecx
                mov     [esp+54h+var_34], ecx
                xor     esi, [esp+54h+var_3C]
                xor     eax, edx
                mov     ecx, [esp+54h+var_44]
                mov     edx, esi
                xor     edx, 0FC9625E8h
                mov     [esp+54h+var_30], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                shl     ecx, 4
                xor     ebx, esi
                xor     ebx, [esp+50h+var_30]
                shr     edi, 4
                add     ecx, edi
                mov     [esp+50h+var_38], ebx
                xor     ecx, [esp+50h+var_30]
                xor     ecx, [esp+50h+var_34]
                mov     ebx, ecx
                mov     [esp+50h+var_14], ecx
                xor     ebx, esi
                xor     esi, esi
                xor     ebx, [esp+50h+var_40]
                xor     ebx, 0BF91B463h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0BDh
                add     al, 26h ; '&'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_2C]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_2C+4]
                add     eax, 7C6C59A1h
                xor     ecx, ecx
                xor     edx, 8464FF25h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_44]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 4Dh
                shr     ebx, 18h
                xor     ebx, 0E3h
                mov     [edx+eax*8], ecx
                mov     ecx, [esp+50h+var_20]
                mov     [edx+eax*8+4], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_14]
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_40]
                mov     eax, [esp+50h+var_1C]
                mov     [edx+ebx*8], eax
                mov     eax, [esp+50h+var_18]
                mov     [edx+ebx*8+4], eax
                mov     ebx, [esp+50h+var_44]
                mov     edx, [esp+50h+var_10]
                movzx   eax, cl
                and     dword ptr [ebx+eax*8-41Ch], 0
                mov     [ebx+eax*8-420h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_34]
                shr     eax, 8
                xor     edx, 94E6679h
                movzx   eax, al
                shr     ecx, 10h
                mov     [ebx+eax*8-640h], edi
                mov     [ebx+eax*8-63Ch], esi
                movzx   eax, cl
                mov     ecx, [esp+50h+var_C]
                pop     edi
                pop     esi
                mov     [eax+ebx-47h], ecx
                mov     ecx, [esp+48h+var_8]
                mov     [eax+ebx-43h], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_30]
                xor     ecx, 2913BF76h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___39       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002282 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                and     [esp+1Ch+var_4], 0
                push    ebx
                push    esi
                mov     [esp+24h+var_10], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, edi
                shr     eax, 4
                shl     esi, 4
                lea     edx, [ecx-6FAB1EC3h]
                add     esi, eax
                lea     ebx, [edi-2C4388D5h]
                xor     edx, ebx
                movzx   eax, bl
                mov     [esp+28h+var_14], edx
                movzx   ecx, dl
                mov     edx, [esp+28h+var_10]
                mov     eax, [eax+edx-0Fh]
                mov     ecx, [eax+ecx-0AEh]
                mov     eax, esi
                xor     eax, 84F60565h
                mov     edx, ecx
                cmp     eax, ecx
                setnbe  [esp+28h+var_19]
                sub     edx, eax
                mov     [esp+28h+var_8], edx
                mov     edx, [ebp+arg_0]
                add     edx, 10EBEB8Dh
                add     edx, edi
                xor     edx, esi
                xor     edx, ebx
                mov     [esp+28h+var_C], edx
                mov     edx, [ebp+arg_0]
                add     edx, 2C6D5D6Bh
                mov     [esp+28h+var_18], edx
                mov     edx, [esp+28h+var_14]
                xor     [esp+28h+var_18], edx
                xor     [esp+28h+var_18], esi
                lea     esi, [edi+7A808E1Ch]
                mov     [esp+28h+var_14], esi
                mov     esi, [esp+28h+var_C]
                xor     [esp+28h+var_14], esi
                xor     [esp+28h+var_14], edx
                mov     edx, [esp+28h+var_14]
                xor     edx, [esp+28h+var_18]
                xor     edx, ebx
                xor     edx, 5857EAC3h
                cmp     eax, ecx
                jbe     short loc_492851
                mov     eax, [esp+28h+var_18]
                xor     edi, edi
                xor     eax, 0A6DCCAFFh
                xor     esi, 9407791Bh
                or      edi, eax
                jmp     short loc_49286D
; ---------------------------------------------------------------------------

loc_492851:                             ; CODE XREF: VBNCB_unnamed_80002282+BA¡üj
                xor     edi, [ebp+arg_0]
                xor     edi, [esp+28h+var_18]
                mov     eax, [esp+28h+var_14]
                xor     edi, esi
                xor     esi, esi
                xor     eax, 624A0FF9h
                add     edi, 4817A0D1h
                or      esi, eax

loc_49286D:                             ; CODE XREF: VBNCB_unnamed_80002282+CF¡üj
                mov     eax, [esp+28h+var_10]
                mov     bl, [esp+28h+var_19]
                cmp     [esp+28h+var_8], 0
                movzx   ecx, dl
                mov     [eax+ecx*8-2A0h], bl
                setz    bl
                shr     edx, 8
                movzx   ecx, dl
                mov     edx, esi
                mov     [eax+ecx*8-578h], bl
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002282 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___55       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, esi
                shr     ebx, 4
                mov     eax, edi
                shl     eax, 4
                sub     edx, edi
                add     ebx, eax
                mov     [esp+58h+var_48], ecx
                movzx   eax, bl
                xor     eax, 0CAh
                mov     [esp+58h+var_40], edx
                mov     [esp+58h+var_44], ebx
                push    offset dword_40C018
                mov     ecx, [ecx+eax*8]
                mov     [esp+5Ch+var_38], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-230h]
                mov     [esp+5Ch+var_8], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [ecx+eax*8-22Ch]
                mov     [esp+5Ch+var_4], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     ecx, [eax+ecx+47h]
                mov     [esp+5Ch+var_18], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     eax, [eax+ecx+4Bh]
                mov     [esp+5Ch+var_14], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_34], eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_34]
                mov     eax, [eax+edx+89h]
                mov     eax, [ecx+eax+0ACh]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 8
                lea     ebx, [esi+77A38886h]
                xor     ebx, [esp+5Ch+var_44]
                movzx   eax, al
                xor     eax, 88h
                mov     [esp+5Ch+var_3C], ebx
                mov     ecx, [eax+edx]
                mov     eax, [eax+edx+4]
                lea     edx, [ebx+574B8594h]
                mov     dword ptr [esp+5Ch+var_24], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     dword ptr [esp+5Ch+var_24+4], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_40]
                lea     eax, [edi+30C7C4B1h]
                add     eax, esi
                lea     ecx, [esi-4CD92743h]
                xor     eax, ebx
                xor     ecx, edx
                xor     ecx, [esp+58h+var_44]
                xor     eax, edx
                mov     ebx, edx
                mov     [esp+58h+var_2C], eax
                xor     ebx, ecx
                mov     [esp+58h+var_30], ecx
                xor     ebx, [esp+58h+var_3C]
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                xor     al, 78h
                movzx   eax, al
                cdq
                mov     ecx, [esp+58h+var_40]
                xor     esi, esi
                sub     edi, 49h ; 'I'
                sub     edi, eax
                mov     eax, ebx
                sbb     esi, edx
                add     edi, [esp+58h+var_38]
                adc     esi, [esp+58h+var_28]
                xor     eax, [esp+58h+var_2C]
                xor     eax, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_30]
                mov     [esp+58h+var_C], eax
                mov     edx, ecx
                xor     eax, 90E775Eh
                mov     [esp+58h+var_38], ecx
                xor     ecx, ecx
                mov     [esp+58h+var_1C], esi
                or      ecx, eax
                mov     esi, [esp+58h+var_48]
                mov     eax, [esp+58h+var_38]
                xor     edx, 306B97A6h
                xor     eax, ebx
                mov     [edi], ecx
                mov     ebx, eax
                mov     [esp+58h+var_28], eax
                mov     eax, [esp+58h+var_40]
                xor     ebx, eax
                xor     ebx, [esp+58h+var_44]
                shr     eax, 10h
                xor     al, 0F8h
                mov     [edi+4], edx
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_24]
                movzx   ecx, bl
                adc     edx, dword ptr [esp+58h+var_24+4]
                mov     [esi+ecx*8-178h], eax
                mov     eax, esi
                mov     [eax+ecx*8-174h], edx
                mov     edx, esi
                mov     esi, [esp+58h+var_1C]
                mov     eax, ebx
                mov     ecx, [esp+58h+var_18]
                shr     eax, 8
                movzx   eax, al
                mov     [edx+eax*8-1C0h], edi
                mov     [edx+eax*8-1BCh], esi
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 0A8h
                pop     edi
                mov     [eax+edx-76h], ecx
                mov     ecx, [esp+54h+var_14]
                mov     [eax+edx-72h], ecx
                mov     eax, [esp+54h+var_10]
                and     dword ptr [edx+ebx*8+4], 0
                mov     [edx+ebx*8], eax
                mov     eax, [esp+54h+var_3C]
                movzx   ecx, al
                mov     eax, [esp+54h+var_C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_8]
                xor     ecx, 0DEh
                xor     ecx, [esp+54h+var_34]
                pop     esi
                mov     [edx+ecx*8], eax
                mov     eax, [esp+50h+var_4]
                mov     [edx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_2C]
                mov     edx, [esp+50h+var_30]
                add     ecx, 793E5932h
                add     edx, 8AA7A946h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___55       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___107_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                sub     ecx, edx
                mov     [ebp+var_10], esi
                movzx   eax, cl
                push    edi
                push    offset dword_40A540
                mov     ebx, [eax+esi+53h]
                mov     edi, [eax+esi+57h]
                mov     eax, edx
                xor     edx, [ebp+arg_4]
                sub     eax, [ebp+arg_4]
                mov     [ebp+var_8], ebx
                xor     eax, 0CB59D225h
                mov     ebx, edx
                mov     [ebp+var_4], eax
                xor     ebx, ecx
                mov     ecx, esi
                xor     edx, ebx
                xor     edx, eax
                add     edx, 5C174429h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0Dh
                movzx   esi, cl
                movzx   eax, al
                sub     esi, 8Eh
                cdq
                xor     ecx, ecx
                sub     esi, eax
                mov     eax, [ebp+var_10]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                mov     edx, [ebp+var_4]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     ebx, 0A68DE00Ah
                pop     edi
                xor     eax, eax
                xor     edx, 78429171h
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___107_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___93_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, eax
                push    edi
                mov     edi, [ebp+arg_0]
                sub     ecx, edi
                mov     ebx, edi
                mov     [ebp+var_4], esi
                sub     ebx, eax
                push    offset dword_40A770
                lea     edx, [edi-6B7658B9h]
                add     edx, eax
                lea     eax, [edi-24EAFD44h]
                xor     ebx, eax
                xor     ecx, edx
                xor     ebx, edx
                mov     [ebp+var_8], ecx
                xor     ebx, 5B29A4EAh
                movzx   ecx, dl
                xor     ecx, 27h
                mov     eax, ebx
                shr     eax, 8
                xor     al, 94h
                movzx   eax, al
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 23h
                movzx   eax, bl
                lea     ebx, [edi-24EAFD44h]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                lea     edx, [edi-6485D0BAh]
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, ebx
                mov     [eax+1BCh], ecx
                add     edx, 242F0747h
                mov     ecx, eax
                call    VBN_TransformContext
                xor     ebx, 0F68A0779h
                xor     esi, 34F05C30h
                xor     eax, eax
                mov     edx, ebx
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___93_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__20      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                mov     edx, ecx
                and     [esp+14h+var_C], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_4]
                add     ebx, 27B60D27h
                sub     eax, esi
                mov     [esp+1Ch+var_4], edx
                sub     esi, [ebp+arg_0]
                mov     ecx, eax
                xor     ecx, 0F21E600h
                mov     [esp+1Ch+var_14], eax
                movzx   eax, cl
                xor     ebx, esi
                push    edi
                xor     ebx, ecx
                push    offset dword_40A5D0
                mov     edi, [edx+eax*8+148h]
                mov     eax, [esp+24h+var_14]
                xor     eax, ecx
                lea     edx, [ebx+579A4D1h]
                mov     ecx, [esp+24h+var_4]
                xor     eax, 0F9C92CCAh
                mov     [esp+24h+var_10], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                mov     eax, [esp+20h+var_10]
                xor     edx, eax
                movzx   eax, al
                xor     edx, esi
                mov     ecx, [eax+edi-92h]
                xor     ecx, esi
                movzx   eax, dl
                xor     ecx, 85563DFFh
                mov     [eax+edi+4], ecx
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     eax, [esp+20h+var_14]
                xor     eax, ebx
                xor     ecx, edx
                xor     eax, [esp+20h+var_10]
                xor     ecx, ebx
                xor     eax, 1D112AFAh
                xor     ecx, 0C45E00E6h
                pop     edi
                sub     eax, 421C75A9h
                xor     edx, edx
                pop     esi
                or      edx, eax
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__20      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___124_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                shr     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                shl     ebx, 4
                add     ebx, eax
                mov     [ebp+var_4], ecx
                mov     eax, ebx
                mov     ecx, ebx
                shr     eax, 8
                xor     al, 0D3h
                shr     ecx, 10h
                movzx   eax, al
                sub     cl, 3
                push    esi
                cdq
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                push    edi
                mov     edi, edx
                cdq
                sub     esi, eax
                movzx   eax, bl
                push    offset dword_40CA10
                sbb     edi, edx
                add     esi, [eax+ecx+23h]
                adc     edi, [eax+ecx+27h]
                mov     [ecx+1B8h], esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                xor     edx, [ebp+arg_0]
                xor     edx, 6DD7F16Fh
                mov     [ecx+1BCh], edi
                call    VBN_TransformContext
                sub     esi, [ebp+arg_0]
                xor     edx, edx
                xor     esi, ebx
                xor     ebx, 5D4EED9h
                pop     edi
                or      edx, ebx
                lea     eax, [esi-33F6C903h]
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___124_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___163      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ecx

loc_492DE1:                             ; DATA XREF: VBNCB_unnamed_80001f76+1E¡üo
                mov     ecx, [ebp+arg_4]
                push    esi
                shr     ecx, 4
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                add     ecx, eax
                shl     ebx, 4
                mov     eax, edi
                mov     [esp+58h+var_48], edx
                shr     eax, 4
                add     ebx, eax
                mov     esi, [esp+58h+var_48]
                movzx   eax, cl
                xor     eax, 26h
                mov     [esp+58h+var_44], ecx
                mov     [esp+58h+var_40], ebx
                push    offset dword_40C580
                mov     edx, [eax+edx]
                mov     [esp+5Ch+var_1C], edx
                mov     edx, [esp+5Ch+var_48]
                mov     eax, [eax+edx+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 29h
                mov     edx, [edx+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+5Ch+var_24], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     ecx, esi
                xor     eax, 91h
                mov     [esp+5Ch+var_28], edx
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, esi
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                movzx   eax, bl
                mov     [esp+5Ch+var_14], eax
                mov     eax, [edx+eax*8+120h]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 8
                mov     ebx, esi
                mov     esi, [ebp+arg_4]
                xor     al, 9Ah
                movzx   eax, al
                cdq
                add     eax, [ecx+ebx+1Ch]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                mov     ebx, esi
                adc     edx, [ecx+eax+20h]
                sub     ebx, edi
                xor     ebx, [esp+5Ch+var_44]
                mov     ecx, eax
                mov     [esp+5Ch+var_C], edx
                mov     [esp+5Ch+var_3C], ebx
                lea     edx, [ebx-8E0ED97h]
                call    VBN_TransformContext
                lea     edx, [esi-5F0CF59Eh]
                xor     edx, ebx
                lea     eax, [esi-68FAA6C2h]
                xor     eax, [esp+58h+var_40]
                lea     ebx, [edi+2757C86Bh]
                xor     eax, [esp+58h+var_44]
                add     ebx, esi
                xor     edx, [esp+58h+var_40]
                xor     ebx, eax
                mov     [esp+58h+var_8], eax
                mov     [esp+58h+var_4], edx
                xor     ebx, [esp+58h+var_3C]
                lea     ecx, [edi+79C79261h]
                add     ecx, esi
                movzx   edi, bl
                xor     ecx, edx
                xor     esi, esi
                xor     ecx, eax
                sub     edi, 0Fh
                mov     eax, ebx
                mov     [esp+58h+var_38], ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_44]
                xor     eax, 0F0B91C91h
                mov     [esp+58h+var_34], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 40h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_34]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+58h+var_30+4]
                add     eax, 8F600D20h
                xor     ecx, ecx
                xor     edx, 0D3F044h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_44]
                mov     edx, [esp+58h+var_48]
                mov     ebx, [esp+58h+var_28]
                movzx   eax, cl
                mov     [eax+edx-53h], ebx
                mov     ebx, [esp+58h+var_24]
                mov     [eax+edx-4Fh], ebx
                mov     eax, ecx
                shr     eax, 8
                mov     ebx, edx
                movzx   eax, al
                xor     eax, 1Ch
                mov     edx, [esp+58h+var_38]
                mov     [ebx+eax*8+4], esi
                mov     esi, [esp+58h+var_20]
                mov     [ebx+eax*8], edi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0CEh
                shr     ecx, 18h
                xor     ecx, 0AFh
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], esi
                mov     eax, [esp+58h+var_1C]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_18]
                mov     [ebx+ecx*8+4], eax
                mov     eax, [esp+58h+var_3C]
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+58h+var_8]
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                xor     edx, 0C7CC0653h
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 99h
                xor     ecx, [esp+58h+var_14]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_4]
                xor     ecx, 9A99A1C2h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___163      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_8000200a proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                and     [esp+1Ch+var_C], 0
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                sub     ecx, [ebp+arg_4]
                mov     ebx, ecx
                mov     [esp+24h+var_18], ecx
                xor     ebx, 0BDCA543Fh
                mov     [esp+24h+var_4], esi
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 0FCh
                movzx   ecx, ax
                xor     ecx, 0EB8Bh
                push    edi
                mov     eax, [edx+esi]
                mov     edi, [ebp+arg_0]
                xor     edi, [ebp+arg_4]
                mov     edx, edi
                mov     esi, [eax+ecx]
                xor     edx, 0B5195A24h
                mov     ecx, [ebp+arg_4]
                cmp     edx, esi
                mov     eax, esi
                setnbe  [esp+28h+var_19]
                sub     eax, edx
                mov     [esp+28h+var_10], eax
                mov     eax, [esp+28h+var_18]
                xor     eax, ebx
                shr     ecx, 4
                xor     eax, 0F346E613h
                mov     [esp+28h+var_18], eax
                mov     eax, [ebp+arg_0]
                add     eax, 2D1FAF86h
                xor     eax, edi
                xor     eax, ebx
                mov     [esp+28h+var_14], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     ecx, eax
                mov     eax, [esp+28h+var_18]
                mov     ebx, ecx
                xor     ebx, eax
                xor     ebx, edi
                mov     edi, [esp+28h+var_14]
                xor     ecx, ebx
                xor     ecx, edi
                mov     [esp+28h+var_14], ecx
                cmp     edx, esi
                jbe     short loc_4930C0
                mov     esi, eax
                xor     edx, edx
                lea     eax, [edi-35426967h]
                xor     esi, 0FE79F84Eh
                or      edx, eax
                jmp     short loc_4930DA
; ---------------------------------------------------------------------------

loc_4930C0:                             ; CODE XREF: VBNCB_unnamed_8000200a+AA¡üj
                mov     edx, [ebp+arg_4]
                xor     esi, esi
                sub     edx, [ebp+arg_0]
                xor     edx, edi
                xor     edx, eax
                lea     eax, [ebx-775B6660h]
                xor     edx, 9420DB1Dh
                or      esi, eax

loc_4930DA:                             ; CODE XREF: VBNCB_unnamed_8000200a+BE¡üj
                cmp     [esp+28h+var_10], 0
                mov     edi, [esp+28h+var_4]
                mov     eax, [esp+28h+var_14]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 85h
                shr     eax, 8
                mov     [edi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                xor     ecx, 5Fh
                mov     [edi+ecx*8], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_8000200a endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___86_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     esi, ecx
                push    offset dword_40BF50
                mov     [ebp+var_8], esi
                lea     eax, [edi+5957712Fh]
                add     eax, edx
                movzx   eax, al
                mov     ecx, [eax+esi+91h]
                mov     ebx, [eax+esi+95h]
                lea     eax, [edx-32E88F55h]
                mov     [ebp+var_4], ecx
                lea     edx, [eax+1E432E5Fh]
                mov     ecx, esi
                mov     [ebp+var_C], eax
                call    VBN_TransformContext
                lea     eax, [edi+5957712Fh]
                add     eax, [ebp+arg_4]
                lea     ecx, [edi-7B4104A7h]
                xor     ecx, eax
                mov     eax, ecx
                mov     [ebp+var_10], ecx
                shr     eax, 8
                xor     cl, 50h
                xor     al, 0C4h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_8]
                cdq
                sub     eax, esi
                mov     esi, [ebp+arg_4]
                sbb     edx, edi
                add     eax, [ebp+var_4]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                mov     ebx, [ebp+arg_0]
                mov     [ecx+1BCh], edx
                mov     edx, ebx
                sub     edx, esi
                xor     edx, [ebp+var_C]
                lea     eax, [ebx+5957712Fh]
                add     eax, esi
                xor     esi, ebx
                xor     esi, [ebp+var_10]
                xor     edx, eax
                xor     esi, [ebp+var_C]
                xor     eax, eax
                xor     esi, 0E335EE6Bh
                xor     edx, 2405998Ch
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___86_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___148_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                mov     ecx, [ebp+arg_0]
                mov     edx, ecx
                mov     [ebp+var_4], edi
                sub     edx, eax
                xor     edx, 62040424h
                lea     ebx, [ecx-648A5470h]
                mov     [ebp+var_8], ebx
                lea     esi, [ecx+2F2412BEh]
                add     esi, eax
                lea     ebx, [eax-3F587AC6h]
                add     ebx, ecx
                lea     eax, [ecx-648A5470h]
                xor     ebx, eax
                movzx   ecx, dl
                xor     ebx, edx
                xor     esi, edx
                xor     ecx, 85h
                mov     [ebp+var_C], esi
                mov     eax, ebx
                shr     eax, 8
                xor     al, 14h
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                mov     ecx, [ebp+var_4]
                movzx   eax, al
                cdq
                sub     esi, eax
                push    offset dword_40C3F0
                sbb     edi, edx
                xor     bl, 0A5h
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+arg_0]
                add     edx, 0E97C172Ch
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                xor     edx, 0BDDAAACEh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ebx, 80E74DEDh
                mov     edx, [ebp+var_8]
                xor     edx, 0E34C7934h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___148_stk  endp


vBng_h__32      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                sub     edx, edi
                movzx   eax, dl
                mov     ebx, edi
                push    offset dword_40C5D0
                mov     esi, [ecx+eax*8+0F0h]
                mov     eax, [ebp+arg_4]
                sub     ebx, eax
                add     eax, edi
                mov     [esp+2Ch+var_14], esi
                mov     [esp+2Ch+var_10], eax
                xor     ebx, 1CCB3F92h
                add     eax, 0FDB2EAB2h
                mov     [esp+2Ch+var_1C], ebx
                xor     eax, edx
                mov     edx, ebx
                mov     [esp+2Ch+var_18], eax
                xor     edx, 1489EE6Ah
                movzx   eax, al
                xor     eax, 10h
                mov     esi, [eax+esi]
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ebx, edx
                mov     eax, [esp+28h+var_1C]
                add     edx, 0C09B9216h
                xor     edx, [esp+28h+var_1C]
                xor     esi, eax
                xor     edx, [esp+28h+var_18]
                xor     esi, 3BED2C9Dh
                shl     ebx, 4
                add     edx, 52F724CAh
                shr     edi, 4
                add     ebx, edi
                movzx   eax, al
                xor     ebx, [esp+28h+var_18]
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+28h+var_14]
                pop     edi
                mov     [ecx+eax-0B2h], esi
                xor     eax, eax
                mov     ecx, [esp+24h+var_10]
                add     ecx, 14AF7AA8h
                xor     ecx, ebx
                xor     ecx, 2C78685Bh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__32      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___195_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                mov     edx, eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                sub     edx, esi
                push    edi
                mov     edi, ecx
                lea     ecx, [eax+63C29A46h]
                mov     [ebp+var_4], ecx
                mov     ecx, esi
                sub     ecx, eax
                mov     [ebp+var_8], edi
                xor     ecx, edx
                movzx   eax, dl
                xor     ecx, 0CC12C3C5h
                lea     edx, [esi-6DD42E53h]
                xor     edx, ecx
                mov     [ebp+var_C], ecx
                xor     edx, [ebp+var_4]
                mov     ebx, [eax+edi-29h]
                xor     edx, 385B84A1h
                mov     ecx, [ebp+var_8]
                mov     edi, [eax+edi-25h]
                push    offset dword_40C1C0
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0Ch
                movzx   esi, cl
                movzx   eax, al
                xor     ecx, ecx
                cdq
                sub     esi, 65h ; 'e'
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                mov     edx, [ebp+var_4]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                xor     edx, 3AAADF46h
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                pop     edi
                add     ecx, 0D158753Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___195_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__19      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                mov     eax, [ebp+arg_0]
                and     [esp+14h+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                xor     esi, [ebp+arg_0]
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                movzx   eax, dl
                push    edi
                mov     [esp+20h+var_C], edx
                push    offset dword_40C164
                mov     ebx, [ecx+eax*8+158h]
                mov     eax, edx
                shr     eax, 8
                lea     edx, [esi+79AC8C24h]
                movzx   eax, al
                xor     eax, 5Ah
                mov     edi, [ecx+eax*8]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     edx, [esp+20h+var_C]
                lea     ecx, [eax-0C6D0B75h]
                xor     ecx, edx
                mov     [esp+20h+var_10], ecx
                mov     ecx, [ebp+arg_0]
                add     ecx, 83093CCCh
                add     ecx, eax
                add     eax, 0CEE92574h
                xor     eax, [esp+20h+var_10]
                xor     ecx, esi
                xor     eax, esi
                xor     ecx, edx
                mov     [esp+20h+var_C], eax
                mov     eax, [esp+20h+var_10]
                movzx   eax, al
                xor     eax, 74h
                mov     [esp+20h+var_8], ecx
                sub     ebx, [eax+edi]
                mov     eax, [esp+20h+var_10]
                shr     eax, 8
                movzx   eax, al
                sub     ebx, eax
                add     ebx, 73h ; 's'
                jz      short loc_4934FB
                mov     esi, [esp+20h+var_C]
                xor     eax, eax
                xor     esi, 7BE0E9C3h
                xor     ecx, 0BB5650C4h
                or      eax, esi
                jmp     short loc_493525
; ---------------------------------------------------------------------------

loc_4934FB:                             ; CODE XREF: vBng_h__19+A3¡üj
                xor     edx, ecx
                xor     eax, eax
                mov     ecx, [ebp+arg_0]
                xor     edx, [esp+20h+var_10]
                add     ecx, 27D29D88h
                add     ecx, [ebp+arg_4]
                xor     ecx, [esp+20h+var_C]
                xor     ecx, [esp+20h+var_8]
                xor     ecx, 0B8E7D94h
                or      eax, ecx
                lea     ecx, [edx+4039832Eh]

loc_493525:                             ; CODE XREF: vBng_h__19+B9¡üj
                pop     edi
                pop     esi
                mov     edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__19      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80002155 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, esi
                xor     ebx, edi
                and     [esp+30h+var_4], 0
                mov     eax, edi
                shr     edx, 4
                shl     eax, 4
                add     eax, edx
                mov     [esp+30h+var_14], ecx
                xor     ebx, eax
                mov     [esp+30h+var_18], eax
                movzx   ecx, bl
                lea     edx, [edi-5AEC4FCBh]
                mov     [esp+30h+var_10], ebx
                xor     ecx, 4Dh
                mov     ebx, [esp+30h+var_14]
                movzx   eax, al
                xor     eax, 58h
                mov     eax, [eax+ebx]
                mov     ecx, [eax+ecx]
                mov     ebx, ecx
                mov     eax, [esp+30h+var_18]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0E0h
                sub     eax, edx
                add     eax, 7FEF06BAh
                cmp     eax, ecx
                setnbe  [esp+30h+var_1D]
                sub     ebx, eax
                mov     [esp+30h+var_8], ebx
                lea     ebx, [edi-0BBA1423h]
                add     ebx, esi
                add     esi, 0DDC987B0h
                xor     ebx, edx
                add     edi, esi
                xor     ebx, [esp+30h+var_18]
                mov     [esp+30h+var_C], ebx
                mov     ebx, [esp+30h+var_18]
                mov     esi, [esp+30h+var_C]
                xor     edi, esi
                mov     [esp+30h+var_1C], ebx
                mov     ebx, [esp+30h+var_10]
                xor     edi, ebx
                xor     [esp+30h+var_1C], ebx
                mov     ebx, edi
                xor     [esp+30h+var_1C], edx
                xor     ebx, [esp+30h+var_1C]
                mov     edx, [esp+30h+var_18]
                xor     ebx, edx
                xor     ebx, 364CD033h
                mov     [esp+30h+var_C], ebx
                cmp     eax, ecx
                jbe     short loc_49360D
                mov     eax, [esp+30h+var_1C]
                xor     edx, edx
                add     eax, 0F7A4B1FEh
                add     esi, 64E738B6h
                or      edx, eax
                jmp     short loc_493623
; ---------------------------------------------------------------------------

loc_49360D:                             ; CODE XREF: VBNCB_unnamed_80002155+C6¡üj
                xor     edx, [esp+30h+var_1C]
                xor     edi, 0D2F4EB4Eh
                xor     edx, esi
                xor     esi, esi
                sub     edx, 5B486FCAh
                or      esi, edi

loc_493623:                             ; CODE XREF: VBNCB_unnamed_80002155+DB¡üj
                mov     eax, [esp+30h+var_C]
                mov     edi, [esp+30h+var_14]
                cmp     [esp+30h+var_8], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [edi+ecx*8+0D0h], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_1D]
                mov     [edi+ecx*8-1B8h], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002155 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___30_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                shl     eax, 4
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                mov     ebx, edi
                mov     [ebp+var_4], esi
                shr     ebx, 4
                add     ebx, eax
                mov     eax, ebx
                movzx   ecx, bl
                shr     eax, 10h
                xor     ecx, 21h
                sub     al, 37h ; '7'
                movzx   eax, al
                cdq
                mov     esi, [ecx+esi]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40A9A0
                mov     ecx, [ecx+eax+4]
                mov     eax, ebx
                sbb     ecx, edx
                shr     eax, 8
                movzx   eax, al
                sub     eax, 17h
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, 0
                mov     [eax+1BCh], ecx
                mov     ecx, [ebp+arg_0]
                xor     edi, ecx
                mov     [eax+1B8h], esi
                lea     esi, [ecx+750C496h]
                mov     ecx, eax
                xor     edi, esi
                xor     edi, ebx
                xor     edi, 0E13C23BFh
                mov     edx, edi
                call    VBN_TransformContext
                mov     eax, [ebp+arg_0]
                xor     esi, 4A4DC17Dh
                add     eax, 5E8F10A0h
                xor     edx, edx
                xor     eax, ebx
                pop     edi
                sub     eax, 6E62BF83h
                or      edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___30_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___110_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     edx, [ebx-66F50851h]
                mov     [ebp+var_4], ecx
                xor     ecx, ecx
                push    offset dword_40C630
                lea     eax, [edi-2FBBBD1Eh]
                add     eax, ebx
                mov     [ebp+var_8], eax
                mov     eax, edx
                shr     eax, 8
                movzx   esi, al
                mov     eax, edx
                shr     eax, 10h
                sub     esi, 0E0h
                sub     al, 3Ah ; ':'
                movzx   eax, al
                cdq
                sub     esi, eax
                sbb     ecx, edx
                lea     edx, [ebx-66F50851h]
                movzx   eax, dl
                mov     edx, [ebp+var_4]
                add     esi, [eax+edx+56h]
                adc     ecx, [eax+edx+5Ah]
                mov     eax, edx
                sub     edi, ebx
                lea     edx, [ebx-66F50851h]
                mov     [eax+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edi, esi
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, 27A75E52h
                mov     ecx, eax
                add     edx, 4B3DE42Ch
                call    VBN_TransformContext
                lea     ecx, [ebx-66F50851h]
                xor     edx, edx
                lea     eax, [ebx+4323E1Eh]
                xor     eax, ecx
                lea     ecx, [esi-58B4FACFh]
                pop     edi
                pop     esi
                xor     eax, 86489AD2h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___110_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___58       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                xor     eax, [ebp+arg_0]
                mov     [esp+50h+var_44], eax
                shr     eax, 8
                push    esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                lea     ecx, [ebx-671944Dh]
                mov     [esp+58h+var_48], edi
                movzx   edx, cl
                lea     esi, [ebx-671944Dh]
                mov     [esp+58h+var_38], ecx
                xor     edx, 65h
                movzx   ecx, al
                xor     ecx, 4Ah
                mov     eax, [edi+edx*8]
                mov     eax, [eax+ecx]
                mov     [esp+58h+var_18], eax
                mov     eax, esi
                shr     eax, 10h
                movzx   ecx, al
                mov     eax, [esp+58h+var_44]
                xor     ecx, 2Dh
                shr     eax, 10h
                xor     al, 14h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+58h+var_30], eax
                adc     edx, [edi+ecx*8+4]
                mov     [esp+58h+var_2C], edx
                mov     edx, [esp+58h+var_44]
                movzx   ecx, dl
                mov     [esp+58h+var_14], ecx
                mov     eax, [ecx+edi-1Eh]
                mov     [esp+58h+var_28], eax
                mov     eax, [ecx+edi-1Ah]
                mov     [esp+58h+var_24], eax
                mov     eax, esi
                shr     eax, 8
                movzx   eax, al
                xor     eax, 51h
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+58h+var_20], ecx
                mov     [esp+58h+var_1C], eax
                mov     eax, [ebp+arg_0]
                mov     ecx, eax
                sub     ecx, ebx
                xor     ecx, esi
                xor     ecx, 0B6D66BCCh
                mov     [esp+58h+var_40], ecx
                lea     edi, [eax+168A5C34h]
                lea     ecx, [eax-6F0D3E9h]
                xor     ecx, edx
                xor     ecx, esi
                lea     esi, [eax+789185F9h]
                xor     esi, [esp+58h+var_40]
                add     eax, 0A3E2FA27h
                add     eax, ebx
                mov     [esp+58h+var_8], ecx
                xor     esi, edx
                xor     edi, ecx
                xor     edi, [esp+58h+var_40]
                xor     eax, esi
                xor     eax, ecx
                movzx   ecx, al
                mov     [esp+58h+var_3C], ecx
                lea     ecx, [ebx-671944Dh]
                mov     ebx, [esp+58h+var_48]
                mov     [esp+58h+var_34], eax
                shr     ecx, 18h
                shr     eax, 8
                xor     ecx, 37h
                add     al, 68h ; 'h'
                movzx   eax, al
                cdq
                mov     ebx, [ebx+ecx*8]
                sub     ebx, eax
                mov     eax, [esp+58h+var_48]
                push    offset dword_40A71C
                mov     ecx, [eax+ecx*8+4]
                mov     eax, [esp+5Ch+var_3C]
                sbb     ecx, edx
                add     eax, 0FFFFFFB5h
                mov     edx, esi
                add     ebx, eax
                lea     eax, [edi-5682ACDAh]
                mov     [esp+5Ch+var_10], ebx
                adc     ecx, 0
                xor     edx, 5334C1E9h
                mov     [esp+5Ch+var_C], ecx
                xor     ecx, ecx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+5Ch+var_48]
                mov     [ebx+4], edx
                mov     ebx, edi
                xor     ebx, esi
                xor     ebx, [esp+5Ch+var_38]
                mov     edx, ebx
                xor     edx, 0C437222Ah
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_34]
                mov     esi, [esp+58h+var_48]
                xor     ecx, edi
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_38]
                mov     edx, [esp+58h+var_30]
                movzx   eax, cl
                xor     eax, 31h
                pop     edi
                mov     [esi+eax*8], edx
                mov     edx, [esp+54h+var_2C]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+54h+var_28]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0CEh
                mov     [esi+eax*8], edx
                mov     edx, [esp+54h+var_24]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+54h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 0BCh
                mov     [eax+esi-0DAh], edx
                mov     edx, [esp+54h+var_1C]
                mov     [eax+esi-0D6h], edx
                and     dword ptr [esi+ecx*8+4], 0
                mov     eax, [esp+54h+var_18]
                mov     edx, [esp+54h+var_40]
                mov     [esi+ecx*8], eax
                movzx   eax, dl
                add     edx, 87E84CDh
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+54h+var_10]
                xor     ecx, 0AAh
                xor     ecx, [esp+54h+var_14]
                xor     ecx, [esp+54h+var_3C]
                mov     [esi+ecx*8], eax
                mov     eax, [esp+54h+var_C]
                mov     [esi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_8]
                add     ecx, 0ED152922h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___58       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800022e3 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                mov     ebx, [ebp+arg_4]
                shl     eax, 4
                sub     ebx, edx
                push    esi
                mov     esi, [ebp+arg_4]
                shr     esi, 4
                add     esi, eax
                mov     [ebp+var_4], ecx
                mov     eax, edx
                xor     ecx, ecx
                sub     eax, [ebp+arg_4]
                add     edx, 7B337FC2h
                push    edi
                mov     edi, eax
                xor     edx, esi
                xor     edi, ebx
                xor     edx, ebx
                xor     edi, 80C5195h
                xor     edx, 44FF080Bh
                xor     eax, edi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                xor     eax, esi
                xor     eax, 0DD049DA6h
                or      ecx, eax
                movzx   eax, bl
                cmp     byte ptr [edi+eax*8+18h], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_493A84
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8+88h], 0
                jnz     short loc_493A84
                xor     ecx, ecx
                lea     eax, [edi-49BA0D6Dh]
                lea     edx, [esi-77B8D956h]
                or      ecx, eax

loc_493A84:                             ; CODE XREF: VBNCB_unnamed_800022e3+5F¡üj
                                        ; VBNCB_unnamed_800022e3+72¡üj
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022e3 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___85_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                mov     ecx, [ebp+arg_4]
                mov     ebx, ecx
                mov     [ebp+var_4], edi
                sub     ebx, eax
                mov     edx, ecx
                shr     eax, 4
                shl     edx, 4
                add     edx, eax
                lea     eax, [ecx+4B42A829h]
                xor     eax, ebx
                movzx   ecx, bl
                mov     [ebp+var_C], eax
                xor     ecx, 86h
                mov     eax, ebx
                mov     [ebp+var_8], edx
                shr     eax, 8
                add     al, 57h ; 'W'
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                mov     ecx, [ebp+var_4]
                movzx   eax, al
                cdq
                sub     esi, eax
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sbb     edi, edx
                sub     eax, 2Eh ; '.'
                mov     edx, [ebp+arg_4]
                add     esi, eax
                push    offset dword_40BE80
                adc     edi, 0
                add     edx, 6459D525h
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                xor     edx, 2EF0053Ch
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     ecx, [ebx-62955DBh]
                mov     edx, [ebp+var_8]
                xor     edx, 5CFBDF6Fh
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___85_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___132_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                shr     eax, 4
                mov     esi, ecx
                push    edi
                mov     edi, ebx
                mov     [ebp+var_4], esi
                mov     ecx, edx
                shl     edi, 4
                sub     ecx, ebx
                shl     edx, 4
                add     edi, eax
                mov     [ebp+var_C], ecx
                xor     ecx, 0DA7E9A3Ah
                mov     [ebp+var_8], edi
                lea     edi, [ebx+590F54DFh]
                shr     ebx, 4
                add     ebx, edx
                xor     edi, ecx
                xor     ebx, [ebp+var_8]
                xor     ebx, ecx
                movzx   ecx, cl
                xor     ecx, 20h
                mov     eax, ebx
                shr     eax, 8
                sub     eax, 434Eh
                movzx   eax, ax
                mov     esi, [ecx+esi]
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C8B0
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 67h
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cdq
                add     esi, eax
                adc     ecx, edx
                mov     [ebx+1B8h], esi
                mov     edx, [ebp+var_C]
                mov     esi, [ebp+var_8]
                xor     edx, edi
                xor     edx, esi
                mov     [ebx+1BCh], ecx
                xor     edx, 14CD2232h
                mov     ecx, ebx
                call    VBN_TransformContext
                xor     esi, 912CFD4Eh
                xor     edi, 17D63451h
                xor     eax, eax
                mov     edx, esi
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___132_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_1__1       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                shl     ebx, 4
                mov     eax, esi
                shr     eax, 4
                add     ebx, eax
                and     [esp+44h+var_4], 0
                push    edi
                mov     edi, ecx
                mov     [esp+48h+var_34], ebx
                mov     eax, ebx
                mov     [esp+48h+var_30], edi
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [edi+eax*8-648h]
                mov     eax, [edi+eax*8-644h]
                mov     [esp+48h+var_24], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+48h+var_28], ecx
                mov     ecx, [eax+edi-0A4h]
                mov     eax, [eax+edi-0A0h]
                mov     [esp+48h+var_14], eax
                movzx   eax, bl
                mov     [esp+48h+var_C], eax
                xor     eax, 43h
                mov     [esp+48h+var_18], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, edx
                mov     [esp+48h+var_1C], eax
                mov     eax, esi
                shl     eax, 4
                shr     edi, 4
                add     edi, eax
                mov     [esp+48h+var_20], ecx
                lea     ecx, [esi+5734B20Ch]
                add     ecx, edx
                xor     edi, ecx
                mov     [esp+48h+var_10], ecx
                xor     edi, ebx
                lea     ebx, [edx-7D77A83Ah]
                mov     eax, edi
                mov     [esp+48h+var_8], edi
                xor     eax, edx
                xor     ebx, ecx
                mov     ecx, [esp+48h+var_34]
                xor     eax, esi
                mov     [esp+48h+var_38], eax
                lea     eax, [esi+0B3FAA68h]
                xor     eax, ebx
                shr     ecx, 18h
                xor     eax, edi
                mov     edi, [esp+48h+var_30]
                mov     [esp+48h+var_2C], eax
                mov     eax, ebx
                shr     eax, 8
                add     eax, 1B69h
                mov     esi, [edi+ecx*8-38h]
                mov     edi, [edi+ecx*8-34h]
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     al, bl
                sbb     edi, edx
                xor     al, 85h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, [esp+48h+var_2C]
                adc     edi, edx
                mov     edx, [esp+48h+var_38]
                xor     ecx, ecx
                xor     eax, 77D2A4F4h
                xor     edx, 0C5748758h
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+48h+var_38]
                mov     [esi+4], edx
                xor     ecx, ebx
                mov     ebx, [esp+48h+var_30]
                xor     ecx, [esp+48h+var_34]
                mov     edx, [esp+48h+var_28]
                xor     ecx, 0EAEBA3CBh
                movzx   eax, cl
                mov     [eax+ebx-79h], edx
                mov     edx, [esp+48h+var_24]
                mov     [eax+ebx-75h], edx
                mov     eax, ecx
                mov     edx, [esp+48h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0F1h
                mov     [eax+ebx], edx
                mov     edx, [esp+48h+var_1C]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Dh
                shr     ecx, 18h
                mov     [ebx+eax*8], esi
                mov     [ebx+eax*8+4], edi
                mov     eax, [esp+48h+var_18]
                mov     [ebx+ecx*8-68h], eax
                mov     eax, [esp+48h+var_14]
                mov     [ebx+ecx*8-64h], eax
                mov     eax, [esp+48h+var_10]
                movzx   ecx, al
                mov     eax, [esp+48h+var_38]
                movzx   edx, al
                mov     eax, [esp+48h+var_2C]
                movzx   eax, al
                lea     esi, [ecx-0B6h]
                xor     edx, eax
                shl     esi, 8
                xor     edx, [esp+48h+var_C]
                mov     eax, [esp+48h+var_8]
                xor     edx, ecx
                pop     edi
                add     eax, 0C311A19Ah
                and     dword ptr [edx+ebx+73h], 0
                mov     [edx+ebx+6Fh], esi
                xor     edx, edx
                pop     esi
                or      edx, 83CADAACh
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__1       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___46       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                lea     eax, [ebx+664921BDh]
                mov     [esp+58h+var_44], eax
                mov     edx, edi
                xor     edx, ebx
                mov     [esp+58h+var_4C], esi
                movzx   eax, dl
                xor     eax, 8Eh
                mov     [esp+58h+var_38], edx
                push    offset dword_40A370
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_20], ecx
                mov     ecx, [eax+esi+9]
                mov     eax, [eax+esi+0Dh]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 78h
                mov     [esp+5Ch+var_28], ecx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, edx
                shr     eax, 18h
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     esi, [eax+esi-6Bh]
                lea     eax, [ebx+664921BDh]
                movzx   eax, al
                xor     eax, 9Dh
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_10], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     ecx, edi
                mov     dword ptr [esp+5Ch+var_10+4], eax
                mov     eax, ebx
                shl     ecx, 4
                shr     eax, 4
                add     eax, ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     [esp+5Ch+var_48], eax
                xor     eax, edx
                mov     [esp+5Ch+var_3C], eax
                lea     edx, [eax+37E8FF25h]
                call    VBN_TransformContext
                lea     edx, [ebx+664921BDh]
                mov     ecx, edi
                mov     eax, edx
                sub     ecx, ebx
                shr     eax, 8
                xor     ecx, edx
                mov     edx, [esp+58h+var_38]
                xor     ecx, edx
                movzx   eax, al
                mov     [esp+58h+var_14], ecx
                mov     eax, [eax+esi+79h]
                mov     esi, [esp+58h+var_48]
                xor     esi, [esp+58h+var_3C]
                xor     esi, [esp+58h+var_44]
                mov     [esp+58h+var_48], esi
                lea     esi, [ebx+3220432Eh]
                add     esi, edi
                mov     [esp+58h+var_18], eax
                xor     esi, ecx
                lea     eax, [ebx+74CA112Dh]
                xor     esi, [esp+58h+var_3C]
                add     eax, edi
                mov     [esp+58h+var_8], esi
                xor     eax, [esp+58h+var_48]
                xor     eax, ecx
                mov     ecx, esi
                xor     ecx, [esp+58h+var_48]
                mov     ebx, eax
                mov     [esp+58h+var_2C], eax
                xor     ecx, edx
                xor     ebx, esi
                xor     ecx, 0AD9EF429h
                xor     ebx, [esp+58h+var_44]
                xor     ebx, edx
                mov     [esp+58h+var_40], ecx
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 0DFh
                xor     al, 0C3h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                sbb     ecx, edi
                add     eax, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_2C]
                adc     ecx, dword ptr [esp+58h+var_34+4]
                mov     [esp+58h+var_38], eax
                mov     eax, [esp+58h+var_40]
                add     eax, 0EB8488DAh
                mov     dword ptr [esp+58h+var_34+4], ecx
                xor     ecx, ecx
                lea     esi, [edi-28224F44h]
                or      ecx, eax
                mov     eax, [esp+58h+var_38]
                mov     [eax], ecx
                mov     [eax+4], esi
                mov     eax, ebx
                mov     esi, [esp+58h+var_4C]
                mov     ecx, [esp+58h+var_28]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 46h
                shr     ebx, 18h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [esi+eax*8+4], ecx
                mov     eax, [esp+58h+var_20]
                mov     [ebx+esi-0A3h], eax
                mov     eax, [esp+58h+var_1C]
                mov     [ebx+esi-9Fh], eax
                mov     ebx, [esp+58h+var_40]
                mov     ecx, [esp+58h+var_18]
                xor     ebx, edi
                xor     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                xor     eax, 10h
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_14]
                movzx   edx, al
                mov     eax, ebx
                sub     edx, 6
                add     edx, dword ptr [esp+58h+var_10]
                adc     ecx, dword ptr [esp+58h+var_10+4]
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 10h
                mov     [esi+eax*8-644h], ecx
                mov     ecx, [esp+58h+var_38]
                mov     [esi+eax*8-648h], edx
                mov     edx, [esp+58h+var_48]
                movzx   eax, bl
                xor     eax, 0EDh
                mov     [esi+eax*8], ecx
                mov     ecx, dword ptr [esp+58h+var_34+4]
                mov     [esi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                add     ecx, 3945E323h
                add     edx, 3F3C55Eh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___46       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_800020f5 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                and     [ebp+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, edx
                mov     eax, esi
                shr     ebx, 4
                shl     eax, 4
                add     ebx, eax
                mov     [ebp+var_C], ecx
                push    edi
                lea     edi, [esi-0E9B8E5Bh]
                mov     eax, esi
                sub     eax, edx
                add     edi, edx
                xor     eax, edi
                xor     ecx, ecx
                xor     eax, ebx
                xor     eax, 1A9BA7C4h
                sub     eax, 779FBC0h
                mov     [ebp+var_4], eax
                mov     eax, edi
                xor     eax, edx
                mov     edx, [ebp+var_4]
                xor     eax, esi
                mov     esi, [ebp+var_C]
                sub     eax, 4852EAABh
                or      ecx, eax
                movzx   eax, bl
                cmp     byte ptr [esi+eax*8-178h], 0
                jnz     short loc_4940B4
                shr     ebx, 8
                movzx   eax, bl
                xor     eax, 0F3h
                cmp     byte ptr [esi+eax*8], 0
                jnz     short loc_4940B4
                xor     ecx, ecx
                xor     edi, 85248B4Dh
                or      ecx, 0AE39A0FCh
                jmp     short loc_4940B6
; ---------------------------------------------------------------------------

loc_4940B4:                             ; CODE XREF: VBNCB_unnamed_800020f5+61¡üj
                                        ; VBNCB_unnamed_800020f5+72¡üj
                mov     edi, edx

loc_4940B6:                             ; CODE XREF: VBNCB_unnamed_800020f5+82¡üj
                mov     edx, edi
                mov     eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800020f5 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___58_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                and     [ebp+var_10], 0
                mov     ecx, [ebp+arg_4]
                add     ecx, 6126C24Bh
                mov     [ebp+var_8], esi
                movzx   eax, cl
                xor     eax, 0DDh
                push    edi
                push    offset dword_40A3B0
                mov     ebx, [eax+esi]
                mov     edi, [eax+esi+4]
                mov     esi, edx
                mov     eax, [ebp+arg_4]
                xor     esi, eax
                add     eax, 53E628F6h
                mov     [ebp+var_10], esi
                add     eax, edx
                xor     eax, ecx
                mov     [ebp+var_C], eax
                mov     eax, [ebp+arg_4]
                sub     eax, edx
                mov     edx, eax
                mov     [ebp+var_4], eax
                xor     edx, esi
                xor     edx, ecx
                mov     ecx, [ebp+var_8]
                xor     edx, 0FC6A4FCFh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     eax, [ebp+var_C]
                xor     eax, esi
                mov     [ebp+var_4], eax
                shr     eax, 8
                xor     al, 0C7h
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_4]
                xor     al, 0B4h
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_8]
                sbb     edx, esi
                add     eax, ebx
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                mov     edx, [ebp+var_10]
                add     ecx, 1EB6D7D1h
                pop     edi
                pop     esi
                add     edx, 5C5C5428h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___58_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___139      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_4]
                mov     edx, eax
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, ecx
                shr     edx, 4
                lea     ecx, [eax+6FA71BC5h]
                and     [esp+58h+var_4], 0
                mov     eax, ebx
                mov     [esp+58h+var_34], ecx
                shl     eax, 4
                add     edx, eax
                mov     [esp+58h+var_40], edi
                mov     eax, ecx
                mov     [esp+58h+var_30], edx
                shr     eax, 18h
                push    offset dword_40BB50
                mov     esi, [eax+edi+0BEh]
                mov     eax, [eax+edi+0C2h]
                mov     [esp+5Ch+var_14], eax
                movzx   eax, dl
                mov     [esp+5Ch+var_C], eax
                mov     [esp+5Ch+var_18], esi
                mov     eax, [esi+eax*8+148h]
                mov     [esp+5Ch+var_8], eax
                mov     eax, ecx
                shr     eax, 10h
                mov     esi, [ebp+arg_4]
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 4
                movzx   edx, al
                xor     eax, eax
                sub     edx, 9Ch
                add     edx, [ecx+edi]
                mov     [esp+5Ch+var_28], edx
                adc     eax, [ecx+edi+4]
                sub     esi, ebx
                mov     edx, [esp+5Ch+var_34]
                mov     [esp+5Ch+var_24], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+5Ch+var_44], esi
                xor     esi, edx
                mov     [esp+5Ch+var_3C], esi
                mov     esi, [ebp+arg_4]
                mov     ecx, [eax+edi-3Dh]
                mov     eax, [eax+edi-39h]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, ebx
                shl     esi, 4
                add     ebx, 0F6FA6F6Dh
                xor     ebx, [esp+5Ch+var_3C]
                xor     ebx, [esp+5Ch+var_30]
                shr     eax, 4
                add     esi, eax
                mov     [esp+5Ch+var_20], ecx
                xor     esi, [esp+5Ch+var_30]
                mov     ecx, [esp+5Ch+var_40]
                xor     esi, edx
                movzx   eax, dl
                lea     edx, [ebx+551F0ED5h]
                mov     [esp+5Ch+var_38], esi
                mov     esi, [esp+5Ch+var_40]
                mov     edi, [edi+eax*8+70h]
                mov     esi, [esi+eax*8+74h]
                call    VBN_TransformContext
                mov     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_38]
                xor     ecx, [esp+58h+var_3C]
                mov     eax, ecx
                mov     [esp+58h+var_44], ecx
                shr     eax, 8
                xor     al, 0A8h
                movzx   ecx, cl
                movzx   eax, al
                cdq
                sub     ecx, 9
                mov     [esp+58h+var_48], ecx
                xor     ecx, ecx
                sub     [esp+58h+var_48], eax
                mov     eax, [esp+58h+var_44]
                sbb     ecx, edx
                add     [esp+58h+var_48], edi
                mov     edi, [esp+58h+var_34]
                adc     ecx, esi
                mov     esi, [esp+58h+var_40]
                mov     [esp+58h+var_10], ecx
                xor     eax, ebx
                mov     ecx, [ebp+arg_4]
                xor     eax, edi
                xor     ecx, [ebp+arg_0]
                xor     ecx, ebx
                mov     [esp+58h+var_34], eax
                xor     ecx, [esp+58h+var_38]
                xor     eax, 3D9E039Fh
                mov     ebx, [esp+58h+var_48]
                mov     [esp+58h+var_2C], ecx
                lea     edx, [ecx+3A1B29F5h]
                xor     ecx, ecx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_30]
                xor     ecx, edi
                mov     [ebx+4], edx
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 9Ah
                pop     edi
                mov     [esi+eax*8], edx
                mov     edx, [esp+54h+var_24]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+54h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0C5h
                mov     [esi+eax*8], edx
                mov     edx, [esp+54h+var_1C]
                mov     [esi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+54h+var_18]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 74h
                shr     ecx, 18h
                xor     ecx, 0BFh
                mov     [eax+esi], edx
                mov     edx, [esp+54h+var_14]
                mov     [eax+esi+4], edx
                mov     eax, [esp+54h+var_10]
                mov     edx, [esp+54h+var_3C]
                mov     [esi+ecx*8+4], eax
                mov     eax, [esp+54h+var_34]
                mov     [esi+ecx*8], ebx
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 0C2C30023h
                xor     ecx, eax
                mov     eax, [esp+54h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+54h+var_8]
                xor     ecx, 0F4h
                xor     ecx, [esp+54h+var_C]
                and     dword ptr [esi+ecx*8+4], 0
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+54h+var_38]
                add     ecx, 93E864DAh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___139      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___122_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                mov     ebx, [ebp+arg_4]
                shr     ebx, 4
                add     ebx, eax
                mov     [ebp+var_4], ecx
                push    esi
                push    edi
                mov     eax, ebx
                xor     esi, esi
                shr     eax, 8
                movzx   edi, al
                movzx   eax, bl
                sub     edi, 0D9h
                xor     eax, 85h
                push    offset dword_40BB70
                add     edi, [eax+ecx]
                adc     esi, [eax+ecx+4]
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 3Bh
                movzx   eax, al
                cdq
                sub     edi, eax
                sbb     esi, edx
                lea     edx, [ebx-7F37B529h]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     [eax+1BCh], esi
                mov     esi, [ebp+arg_4]
                mov     ecx, esi
                sub     esi, [ebp+arg_0]
                mov     [eax+1B8h], edi
                add     esi, 21610A92h
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     eax, ecx
                xor     eax, ebx
                pop     edi
                xor     eax, 61CAB722h
                or      edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___122_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__24      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, esi
                sub     ebx, [ebp+arg_4]
                xor     ebx, 1D215739h
                movzx   eax, bl
                xor     eax, 3Dh
                push    edi
                lea     edi, [esi+6C0F5C4Dh]
                push    offset dword_40AAC0
                mov     edx, [ecx+eax*8]
                mov     [esp+24h+var_4], edx
                lea     edx, [edi-2382E513h]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                lea     edx, [ecx+esi]
                shr     ecx, 4
                add     ecx, eax
                lea     esi, [edx+39166503h]
                xor     ecx, edi
                xor     esi, ebx
                xor     ecx, ebx
                add     edx, 0F383A316h
                mov     ebx, [esp+20h+var_4]
                xor     edx, esi
                movzx   eax, cl
                xor     edx, edi
                mov     [esp+20h+var_10], ecx
                xor     eax, 0D3h
                lea     ecx, [esi-3E1D10AAh]
                sub     edx, 151F74B6h
                pop     edi
                xor     ecx, [eax+ebx]
                mov     eax, [esp+1Ch+var_10]
                shr     eax, 8
                movzx   eax, al
                mov     [eax+ebx+30h], ecx
                xor     eax, eax
                mov     ecx, [ebp+arg_0]
                add     ecx, 0AB9D691Fh
                xor     ecx, [esp+1Ch+var_10]
                xor     ecx, esi
                xor     ecx, 519CDB87h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__24      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___123_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     eax, [ebp+arg_0]
                xor     eax, [ebp+arg_4]
                and     [ebp+var_14], 0
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     [ebp+var_4], eax
                movzx   eax, al
                push    esi
                mov     esi, ecx
                shl     ebx, 4
                xor     eax, 2
                mov     [ebp+var_10], esi
                push    edi
                push    offset dword_40AB80
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [ebp+var_C], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     ebx, eax
                mov     [ebp+var_8], ecx
                mov     ecx, esi
                mov     [ebp+var_14], ebx
                lea     edx, [ebx+5F5DA6BAh]
                call    VBN_TransformContext
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                mov     cl, bl
                shr     eax, 8
                xor     cl, 0E0h
                add     al, 55h ; 'U'
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                mov     esi, [ebp+arg_0]
                sbb     edx, edi
                add     eax, [ebp+var_8]
                mov     [ecx+1B8h], eax
                mov     eax, esi
                adc     edx, [ebp+var_C]
                sub     esi, [ebp+arg_4]
                xor     esi, [ebp+var_14]
                xor     esi, [ebp+var_4]
                mov     [ecx+1BCh], edx
                xor     esi, 80A271B9h
                mov     ecx, [ebp+arg_4]
                sub     esi, 62FC07Fh
                shl     eax, 4
                xor     edx, edx
                shr     ecx, 4
                or      edx, esi
                add     eax, ecx
                xor     eax, ebx
                xor     eax, [ebp+var_14]
                pop     edi
                pop     esi
                add     eax, 4F5CD5Bh
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___123_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___3_stk    proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                mov     [ebp+var_8], edi
                lea     ecx, [esi+256ABB80h]
                movzx   eax, cl
                xor     eax, 2Bh
                push    offset dword_40ACDC
                mov     ebx, [eax+edi]
                mov     edi, [eax+edi+4]
                mov     eax, esi
                sub     eax, edx
                shl     edx, 4
                xor     eax, 20B7716Fh
                mov     [ebp+var_4], eax
                mov     eax, esi
                shr     eax, 4
                add     edx, eax
                xor     edx, ecx
                mov     [ebp+var_C], edx
                mov     edx, [ebp+arg_4]
                sub     edx, esi
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, [ebp+var_8]
                sub     edx, 1C485309h
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     esi, 4
                add     ecx, esi
                xor     ecx, [ebp+var_C]
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                sub     al, 4Dh ; 'M'
                sub     esi, 3Bh ; ';'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                mov     edx, [ebp+var_4]
                add     esi, ebx
                mov     [eax+1B8h], esi
                adc     ecx, edi
                xor     edx, 7DBB5A48h
                mov     [eax+1BCh], ecx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                pop     edi
                add     ecx, 0C58F606Ch
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___3_stk    endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___178_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     [ebp+var_4], ecx
                push    edi
                lea     eax, [ebx-0EB2FB2h]
                movzx   esi, al
                shr     eax, 10h
                xor     esi, 0A3h
                xor     al, 95h
                movzx   eax, al
                cdq
                mov     edi, [esi+ecx]
                mov     ecx, [esi+ecx+4]
                sub     edi, eax
                lea     esi, [ebx-0EB2FB2h]
                sbb     ecx, edx
                mov     eax, esi
                shr     eax, 8
                xor     al, 0D0h
                movzx   eax, al
                cdq
                add     edi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C370
                adc     ecx, edx
                mov     [eax+1B8h], edi
                mov     edi, [ebp+arg_0]
                mov     [eax+1BCh], ecx
                lea     ecx, [edi+576025E4h]
                add     ecx, ebx
                lea     edx, [edi+5115E67Ah]
                xor     edx, ecx
                mov     ecx, eax
                xor     edx, esi
                sub     edx, 4AC40E60h
                call    VBN_TransformContext
                lea     eax, [edi-25C5E25Bh]
                xor     edx, edx
                add     eax, ebx
                lea     ecx, [edi+7D784A5Ah]
                xor     eax, esi
                add     ecx, ebx
                pop     edi
                pop     esi
                sub     eax, 402B4521h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___178_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___11_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                xor     eax, eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                xor     eax, esi
                mov     [ebp+var_8], eax
                lea     ebx, [edx-74806FAEh]
                mov     [ebp+var_4], ecx
                add     ebx, esi
                mov     ecx, esi
                mov     eax, esi
                xor     ecx, edx
                xor     eax, ecx
                xor     eax, edx
                push    edi
                lea     edi, [edx+131DE84Ah]
                mov     [ebp+var_8], eax
                add     edi, esi
                mov     esi, [ebp+var_4]
                xor     ebx, edi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                xor     al, 3
                mov     esi, [ecx+esi-1Fh]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40A310
                mov     ecx, [ecx+eax-1Bh]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                sub     eax, 0CFh
                mov     edx, [ebp+arg_4]
                add     esi, eax
                mov     eax, [ebp+arg_0]
                adc     ecx, 0
                shr     edx, 4
                shl     eax, 4
                add     edx, eax
                mov     [ebx+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, esi
                xor     edx, edi
                mov     [ebx+1BCh], ecx
                sub     edx, 6D2F4763h
                mov     ecx, ebx
                call    VBN_TransformContext
                xor     esi, 34759980h
                lea     edx, [edi+62FADE1Ch]
                xor     eax, eax
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___11_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___158      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                mov     ebx, ecx
                and     [esp+50h+var_4], 0
                mov     ecx, [ebp+arg_4]
                add     ecx, 628D140Fh
                mov     [esp+50h+var_4C], ebx
                mov     eax, ecx
                mov     [esp+50h+var_44], ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 8Dh
                push    esi
                push    edi
                push    offset dword_40C9F4
                mov     esi, [eax+ebx]
                mov     eax, [eax+ebx+4]
                mov     [esp+5Ch+var_18], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     [esp+5Ch+var_1C], esi
                mov     ecx, [eax+ebx+74h]
                mov     eax, [eax+ebx+78h]
                lea     ebx, [edx+40E6AD54h]
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                movzx   eax, bl
                sub     eax, 1Fh
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, [esp+5Ch+var_44]
                shl     eax, 7
                mov     [esp+5Ch+var_48], ebx
                mov     eax, [eax+esi]
                xor     esi, esi
                mov     [esp+5Ch+var_28], eax
                mov     eax, ebx
                mov     ebx, [esp+5Ch+var_4C]
                shr     eax, 8
                movzx   edi, al
                mov     eax, ecx
                shr     eax, 10h
                sub     edi, 46h ; 'F'
                movzx   eax, al
                add     edi, [eax+ebx+5]
                mov     [esp+5Ch+var_14], edi
                mov     edi, ebx
                lea     ebx, [edx+558830DCh]
                adc     esi, [eax+edi+9]
                movzx   eax, cl
                mov     [esp+5Ch+var_10], esi
                mov     esi, [ebp+arg_4]
                mov     ecx, [eax+edi-47h]
                mov     eax, [eax+edi-43h]
                mov     edi, [esp+5Ch+var_44]
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, esi
                xor     ecx, edx
                mov     [esp+5Ch+var_20], eax
                xor     ecx, edi
                shl     edx, 4
                lea     eax, [esi+6041EEBFh]
                mov     [esp+5Ch+var_C], ecx
                xor     eax, [esp+5Ch+var_48]
                xor     ebx, ecx
                xor     ebx, [esp+5Ch+var_48]
                xor     eax, edi
                add     esi, 764BC72Ch
                mov     [esp+5Ch+var_8], eax
                xor     esi, eax
                mov     [esp+5Ch+var_34], ebx
                xor     esi, ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                add     ecx, edx
                mov     [esp+5Ch+var_30], esi
                xor     ecx, ebx
                xor     ecx, eax
                mov     edx, ecx
                mov     [esp+5Ch+var_40], ecx
                mov     ecx, [esp+5Ch+var_4C]
                xor     edx, 3FA87BC7h
                call    VBN_TransformContext
                mov     ecx, esi
                xor     ecx, ebx
                xor     ecx, edi
                xor     ecx, 0A047767Eh
                mov     eax, ecx
                mov     [esp+58h+var_2C], ecx
                shr     eax, 8
                xor     cl, 67h
                sub     eax, 42B6h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_30]
                sub     ebx, esi
                mov     esi, [esp+58h+var_34]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_3C]
                pop     edi
                adc     edx, dword ptr [esp+54h+var_3C+4]
                xor     eax, 0A21CB077h
                xor     ecx, ecx
                xor     esi, 2CE23DD1h
                or      ecx, eax
                mov     eax, [esp+54h+var_2C]
                mov     [ebx], ecx
                mov     ecx, [esp+54h+var_28]
                shr     eax, 18h
                mov     [ebx+4], esi
                xor     eax, 0B7h
                mov     esi, [esp+54h+var_4C]
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_40]
                xor     ecx, [esp+54h+var_30]
                xor     ecx, [esp+54h+var_48]
                xor     ecx, [esp+54h+var_44]
                movzx   eax, cl
                mov     [esp+54h+var_40], ecx
                mov     [esi+eax*8-44Ch], edx
                mov     edx, [esp+54h+var_40]
                mov     [esi+eax*8-450h], ebx
                mov     eax, ecx
                mov     ecx, [esp+54h+var_24]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 73h
                mov     [esi+eax*8], ecx
                mov     ecx, [esp+54h+var_20]
                mov     [esi+eax*8+4], ecx
                mov     eax, edx
                mov     ecx, [esp+54h+var_1C]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                mov     [eax+esi-0Ch], ecx
                mov     ecx, [esp+54h+var_18]
                mov     [eax+esi-8], ecx
                mov     eax, [esp+54h+var_14]
                mov     ecx, [esp+54h+var_8]
                mov     [esi+edx*8-558h], eax
                add     ecx, 21543E94h
                mov     eax, [esp+54h+var_10]
                mov     [esi+edx*8-554h], eax
                xor     eax, eax
                mov     edx, [esp+54h+var_C]
                pop     esi
                xor     edx, 5CFF99AEh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___158      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___150      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shl     eax, 4
                shr     edx, 4
                add     edx, eax
                mov     [esp+50h+var_44], ecx
                lea     ebx, [edi+30A3CEA3h]
                mov     [esp+50h+var_40], edx
                add     ebx, esi
                mov     edi, [esp+50h+var_44]
                movzx   eax, bl
                xor     eax, 17h
                mov     [esp+50h+var_38], ebx
                push    offset dword_40A2EC
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     dword ptr [esp+54h+var_2C+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 70h
                mov     ecx, [ecx+eax*8]
                mov     [esp+54h+var_20], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8+4]
                mov     [esp+54h+var_1C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [eax+ecx+3Ch]
                mov     eax, [eax+edi+40h]
                mov     [esp+54h+var_14], eax
                movzx   eax, dl
                xor     edx, ebx
                xor     eax, 0A1h
                mov     [esp+54h+var_18], ecx
                mov     [esp+54h+var_34], edx
                lea     edx, [edx-41071D34h]
                mov     eax, [ecx+eax*2]
                mov     ecx, edi
                mov     [esp+54h+var_24], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0FBh
                mov     ecx, [eax+ecx]
                mov     dword ptr [esp+54h+var_10], ecx
                mov     ecx, edi
                mov     eax, [eax+ecx+4]
                mov     dword ptr [esp+54h+var_10+4], eax
                call    VBN_TransformContext
                mov     edi, [ebp+arg_0]
                mov     ebx, edi
                shr     ebx, 4
                shl     esi, 4
                add     ebx, esi
                mov     ecx, ebx
                lea     edx, [edi-154D19D7h]
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_38]
                xor     edx, [esp+50h+var_34]
                xor     ebx, ecx
                xor     ebx, [esp+50h+var_34]
                mov     edi, [esp+50h+var_40]
                mov     eax, ebx
                xor     edx, edi
                mov     [esp+50h+var_8], ecx
                xor     eax, edx
                mov     [esp+50h+var_4], edx
                xor     eax, [esp+50h+var_38]
                xor     edi, edx
                xor     edi, ecx
                xor     eax, 0F9C22998h
                mov     [esp+50h+var_3C], edi
                mov     [esp+50h+var_30], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 8
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                mov     edi, eax
                mov     eax, [esp+50h+var_30]
                sub     edi, ecx
                sbb     edx, esi
                add     edi, dword ptr [esp+50h+var_2C]
                mov     esi, [esp+50h+var_3C]
                adc     edx, dword ptr [esp+50h+var_2C+4]
                add     eax, 9101891Ch
                xor     ecx, ecx
                add     esi, 0BA517238h
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, ebx
                mov     [edi+4], esi
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_38]
                mov     ebx, [esp+50h+var_44]
                mov     esi, [esp+50h+var_24]
                movzx   eax, cl
                xor     eax, 4Ah
                mov     [ebx+eax*8], esi
                mov     esi, ebx
                mov     ebx, [esp+50h+var_40]
                and     dword ptr [esi+eax*8+4], 0
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 56h
                mov     [esi+eax*8+4], edx
                mov     [esi+eax*8], edi
                mov     eax, ecx
                mov     edx, [esp+50h+var_20]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                xor     ecx, 66h
                pop     edi
                mov     [esi+eax*8], edx
                mov     edx, [esp+4Ch+var_1C]
                mov     [esi+eax*8+4], edx
                xor     edx, edx
                mov     eax, [esp+4Ch+var_18]
                mov     [ecx+esi], eax
                mov     eax, [esp+4Ch+var_14]
                mov     [ecx+esi+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [esp+4Ch+var_34]
                add     esi, 2Bh ; '+'
                add     esi, dword ptr [esp+4Ch+var_10]
                movzx   eax, al
                adc     edx, dword ptr [esp+4Ch+var_10+4]
                movzx   ecx, bl
                xor     ecx, eax
                mov     eax, [esp+4Ch+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+4Ch+var_30]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+4Ch+var_44]
                mov     [eax+ecx*8-494h], edx
                mov     edx, [esp+4Ch+var_8]
                mov     [eax+ecx*8-498h], esi
                add     edx, 55923F3Ah
                mov     ecx, [esp+4Ch+var_4]
                xor     eax, eax
                xor     ecx, 486DDF72h
                or      eax, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___150      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___79       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                mov     eax, esi
                sub     eax, edi
                mov     [esp+50h+var_44], ebx
                mov     edx, eax
                mov     [esp+50h+var_40], eax
                xor     edx, 758D693Eh
                and     [esp+50h+var_4], 0
                mov     eax, edx
                mov     [esp+50h+var_3C], edx
                shr     eax, 18h
                xor     eax, 4
                push    offset dword_40AC9C
                mov     ecx, [eax+ebx]
                mov     eax, [eax+ebx+4]
                lea     ebx, [edi-102F9AC7h]
                mov     dword ptr [esp+54h+var_2C+4], eax
                add     ebx, esi
                mov     dword ptr [esp+54h+var_2C], ecx
                mov     ecx, [esp+54h+var_44]
                movzx   eax, dl
                mov     edi, [esp+54h+var_44]
                mov     [esp+54h+var_34], ebx
                mov     ecx, [eax+ecx-9Bh]
                mov     [esp+54h+var_1C], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [eax+ecx-97h]
                mov     [esp+54h+var_18], eax
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [ecx+eax*8-2D8h]
                mov     [esp+54h+var_10], ecx
                mov     ecx, [esp+54h+var_44]
                mov     eax, [ecx+eax*8-2D4h]
                mov     [esp+54h+var_C], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 18h
                xor     al, 0D5h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-490h]
                mov     [esp+54h+var_24], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8-48Ch]
                mov     ecx, ebx
                movzx   eax, bl
                mov     ebx, edi
                mov     edi, [ebp+arg_4]
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 0E2h
                mov     [esp+54h+var_20], edx
                add     ecx, [eax+ebx+80h]
                mov     edx, [esp+54h+var_3C]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                mov     eax, [eax+ebx+5Bh]
                mov     ebx, edi
                sub     ebx, esi
                xor     ebx, [esp+54h+var_34]
                xor     ebx, edx
                mov     eax, [eax+ecx*4]
                mov     [esp+54h+var_14], eax
                lea     eax, [esi+60024B5Ch]
                xor     eax, edx
                mov     [esp+54h+var_8], ebx
                lea     esi, [edi+1149C6Ah]
                mov     [esp+54h+var_30], eax
                xor     esi, eax
                xor     esi, [esp+54h+var_34]
                lea     edx, [esi-62677E8h]
                mov     ecx, [esp+54h+var_44]
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_40]
                mov     eax, [ebp+arg_0]
                xor     ecx, ebx
                xor     ecx, [esp+50h+var_30]
                xor     eax, esi
                xor     eax, ebx
                xor     ecx, 5A6ECA9Ah
                xor     eax, edi
                mov     [esp+50h+var_40], ecx
                mov     [esp+50h+var_38], eax
                mov     ebx, ecx
                xor     ebx, esi
                xor     esi, esi
                xor     ebx, [esp+50h+var_3C]
                xor     ebx, 0D3C18FB2h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 0B5h
                sub     eax, 6B63h
                movzx   eax, ax
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_2C]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_2C+4]
                xor     eax, 0F2FE8B28h
                xor     ecx, ecx
                shr     ebx, 18h
                or      ecx, eax
                xor     edx, 1C113450h
                mov     eax, [esp+50h+var_24]
                xor     ebx, 5Ch
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_44]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_38]
                xor     edx, [esp+50h+var_40]
                xor     edx, [esp+50h+var_34]
                xor     edx, [esp+50h+var_3C]
                mov     [ecx+ebx*8], eax
                mov     eax, [esp+50h+var_20]
                mov     [ecx+ebx*8+4], eax
                mov     ebx, ecx
                mov     ecx, [esp+50h+var_1C]
                movzx   eax, dl
                mov     [ebx+eax*8-560h], edi
                mov     [ebx+eax*8-55Ch], esi
                mov     eax, edx
                shr     eax, 8
                movzx   eax, al
                pop     edi
                pop     esi
                mov     [ebx+eax*8-188h], ecx
                mov     ecx, [esp+48h+var_18]
                mov     [ebx+eax*8-184h], ecx
                mov     eax, edx
                mov     ecx, [esp+48h+var_14]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                and     dword ptr [ebx+eax*8-66Ch], 0
                mov     [ebx+eax*8-670h], ecx
                mov     eax, [esp+48h+var_10]
                mov     ecx, [esp+48h+var_8]
                mov     [edx+ebx-6Eh], eax
                xor     ecx, 3DFB03DEh
                mov     eax, [esp+48h+var_C]
                mov     [edx+ebx-6Ah], eax
                xor     eax, eax
                mov     edx, [esp+48h+var_30]
                xor     edx, 108EFBFEh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___79       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___33_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                mov     ebx, edx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, esi
                push    edi
                mov     edi, ecx
                movzx   eax, bl
                mov     [ebp+var_4], edi
                push    offset dword_40BF90
                mov     ecx, [eax+edi+6Dh]
                mov     eax, [eax+edi+71h]
                mov     [ebp+var_C], ecx
                mov     ecx, edx
                mov     [ebp+var_10], eax
                mov     eax, esi
                shl     edx, 4
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                shr     esi, 4
                add     edx, esi
                mov     [ebp+var_8], ecx
                mov     edi, edx
                xor     edx, ecx
                mov     ecx, [ebp+var_4]
                xor     edx, ebx
                add     edx, 0F77E7ECh
                xor     edi, ebx
                call    VBN_TransformContext
                xor     ebx, edi
                xor     ebx, [ebp+var_8]
                mov     eax, ebx
                xor     bl, 23h
                shr     eax, 8
                add     al, 7Ah ; 'z'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                movzx   eax, bl
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_4]
                sbb     edx, esi
                add     eax, [ebp+var_C]
                adc     edx, [ebp+var_10]
                xor     edi, 1AAE5FDFh
                mov     [ecx+1BCh], edx
                mov     edx, [ebp+var_8]
                mov     [ecx+1B8h], eax
                add     edx, 0D0A14261h
                xor     eax, eax
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___33_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___52       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, esi
                push    edi
                mov     edi, [ebp+arg_4]
                xor     ebx, edi
                mov     [esp+58h+var_4C], ecx
                mov     eax, edi
                mov     edx, [esp+58h+var_4C]
                sub     eax, esi
                mov     [esp+58h+var_40], eax
                xor     eax, ebx
                mov     [esp+58h+var_44], eax
                lea     ecx, [edi+0C25CEAEh]
                movzx   eax, bl
                and     [esp+58h+var_4], 0
                push    offset dword_40BACC
                mov     edx, [edx+eax*8-160h]
                mov     dword ptr [esp+5Ch+var_20], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8-15Ch]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     edx, [eax+edx-91h]
                mov     [esp+5Ch+var_18], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+edx-8Dh]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0DFh
                mov     edx, [edx+eax*8]
                mov     [esp+5Ch+var_10], edx
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8+4]
                mov     [esp+5Ch+var_C], eax
                lea     eax, [esi+2C203064h]
                add     eax, edi
                xor     eax, ecx
                xor     eax, ebx
                mov     [esp+5Ch+var_48], eax
                movzx   eax, cl
                xor     eax, 0BDh
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 9Fh
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [esp+5Ch+var_4C]
                mov     eax, [edx+eax*8]
                mov     edx, [esp+5Ch+var_44]
                mov     eax, [eax+edx-1FF80F98h]
                mov     edx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_24], eax
                lea     edx, [edx+33027440h]
                call    VBN_TransformContext
                lea     edx, [esi+0ECF8F4h]
                mov     esi, [esp+58h+var_40]
                xor     esi, [esp+58h+var_48]
                lea     eax, [edi+0C25CEAEh]
                xor     esi, [esp+58h+var_44]
                add     edx, edi
                xor     edx, [esp+58h+var_44]
                mov     [esp+58h+var_40], esi
                xor     edx, eax
                mov     ecx, [esp+58h+var_40]
                lea     esi, [edi+1539FBEBh]
                xor     ecx, edx
                mov     [esp+58h+var_34], edx
                xor     esi, edx
                xor     ecx, ebx
                xor     esi, [esp+58h+var_48]
                xor     ecx, 83912946h
                mov     [esp+58h+var_8], esi
                mov     [esp+58h+var_28], ecx
                mov     edx, esi
                xor     edx, [esp+58h+var_40]
                xor     edx, eax
                xor     edx, ebx
                mov     [esp+58h+var_3C], edx
                mov     edx, ecx
                xor     edx, esi
                xor     edx, [esp+58h+var_44]
                xor     edx, eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 0E4h
                xor     al, 0C0h
                mov     [esp+58h+var_38], edx
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     dword ptr [esp+58h+var_30], ebx
                adc     eax, dword ptr [esp+58h+var_30+4]
                xor     ecx, ecx
                mov     dword ptr [esp+58h+var_30+4], eax
                xor     esi, 9325762Ch
                mov     eax, [esp+58h+var_38]
                xor     edi, edi
                xor     eax, 57E7DC2h
                or      esi, edi
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [ebx+4], esi
                mov     ebx, [esp+58h+var_3C]
                xor     ebx, [esp+58h+var_28]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_44]
                mov     esi, [esp+58h+var_4C]
                movzx   eax, bl
                mov     [esi+eax*8-200h], ecx
                mov     ecx, ebx
                mov     [esi+eax*8-1FCh], edi
                mov     al, byte ptr [esp+58h+var_34]
                xor     al, 29h
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+58h+var_20]
                adc     edx, dword ptr [esp+58h+var_20+4]
                shr     ecx, 8
                movzx   ecx, cl
                xor     ecx, 29h
                mov     [esi+ecx*8], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+58h+var_18]
                shr     ebx, 18h
                mov     [esi+eax*8-2A0h], ecx
                mov     ecx, [esp+58h+var_14]
                mov     [esi+eax*8-29Ch], ecx
                mov     eax, dword ptr [esp+58h+var_30]
                mov     [esi+ebx*8-2C8h], eax
                mov     eax, dword ptr [esp+58h+var_30+4]
                mov     [esi+ebx*8-2C4h], eax
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                mov     edx, [esp+58h+var_40]
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     edx, 49E37AFEh
                mov     [ecx+esi-0C5h], eax
                mov     eax, [esp+58h+var_C]
                mov     [ecx+esi-0C1h], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                xor     ecx, 6BEF7A72h
                or      eax, ecx
                or      edx, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___52       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___70       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                lea     eax, [edx-3976027Ah]
                mov     [esp+54h+var_4C], esi
                mov     [esp+54h+var_2C], eax
                mov     ecx, edx
                mov     eax, [ebp+arg_0]
                xor     ecx, eax
                shr     eax, 4
                mov     [esp+54h+var_44], ecx
                mov     ecx, edx
                shl     ecx, 4
                add     eax, ecx
                lea     ecx, [edx-3976027Ah]
                mov     [esp+54h+var_48], eax
                xor     eax, ecx
                mov     [esp+54h+var_34], eax
                movzx   eax, cl
                push    edi
                mov     ebx, [eax+esi-6Ch]
                mov     eax, [eax+esi-68h]
                mov     dword ptr [esp+58h+var_28+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+58h+var_28], ebx
                mov     ebx, [eax+esi+16h]
                mov     edi, [eax+esi+1Ah]
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0AFh
                mov     esi, [eax+esi]
                mov     [esp+58h+var_30], esi
                mov     esi, [esp+58h+var_4C]
                mov     eax, [eax+esi+4]
                mov     [esp+58h+var_1C], eax
                mov     eax, ecx
                shr     eax, 18h
                mov     esi, [esi+eax*8-3A8h]
                mov     [esp+58h+var_14], esi
                mov     esi, [esp+58h+var_4C]
                mov     eax, [esi+eax*8-3A4h]
                mov     esi, [esp+58h+var_48]
                mov     [esp+58h+var_10], eax
                mov     eax, [esp+58h+var_44]
                xor     esi, eax
                xor     esi, ecx
                movzx   eax, al
                mov     ecx, [esp+58h+var_4C]
                mov     [esp+58h+var_48], esi
                mov     esi, [eax+ecx-2Bh]
                mov     eax, [esp+58h+var_44]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0AAh
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+58h+var_3C], ecx
                mov     ecx, [esp+58h+var_4C]
                mov     eax, [ecx+eax*8+4]
                mov     ecx, edx
                mov     edx, [esp+58h+var_30]
                mov     dword ptr [esp+58h+var_3C+4], eax
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     ecx, eax
                mov     eax, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_34]
                xor     ecx, eax
                shr     eax, 10h
                mov     [esp+58h+var_40], ecx
                movzx   ecx, al
                mov     eax, [esp+58h+var_34]
                xor     ecx, 38h
                xor     eax, 44718833h
                and     ecx, [eax+edx]
                mov     eax, [esp+58h+var_48]
                movzx   eax, al
                xor     eax, 0A0h
                push    offset dword_40A3CC
                mov     [eax+edx], ecx
                mov     edx, [esp+5Ch+var_40]
                mov     ecx, [esp+5Ch+var_4C]
                xor     edx, 0E60708CDh
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                add     ecx, 0C73B2AB3h
                add     eax, ecx
                mov     edx, [esp+58h+var_34]
                xor     eax, [esp+58h+var_48]
                xor     eax, edx
                mov     ecx, dword ptr [esp+58h+var_3C+4]
                mov     [esp+58h+var_34], eax
                mov     eax, dword ptr [esp+58h+var_3C]
                shld    ecx, eax, 2
                shl     eax, 2
                add     eax, ebx
                mov     dword ptr [esp+58h+var_3C], eax
                adc     ecx, edi
                mov     edi, [esp+58h+var_44]
                mov     dword ptr [esp+58h+var_3C+4], ecx
                mov     ecx, [esp+58h+var_34]
                movzx   eax, cl
                add     eax, esi
                mov     esi, edi
                xor     esi, [esp+58h+var_40]
                xor     esi, [esp+58h+var_48]
                mov     [esp+58h+var_C], esi
                mov     eax, [ebx+eax*4-17Ch]
                mov     ebx, ecx
                xor     ebx, [esp+58h+var_40]
                mov     ecx, esi
                xor     ebx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_34]
                xor     ebx, 22B27528h
                mov     [esp+58h+var_18], eax
                xor     ecx, edi
                xor     ecx, [esp+58h+var_2C]
                mov     eax, ebx
                xor     eax, esi
                mov     [esp+58h+var_20], ecx
                xor     eax, edx
                mov     [esp+58h+var_8], ebx
                xor     eax, edi
                mov     [esp+58h+var_44], eax
                mov     eax, ecx
                xor     eax, ebx
                xor     eax, [esp+58h+var_48]
                xor     eax, edx
                mov     [esp+58h+var_2C], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 5Fh
                xor     al, 34h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                sub     ebx, esi
                mov     esi, [esp+58h+var_44]
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_28]
                mov     dword ptr [esp+58h+var_28], ebx
                adc     eax, dword ptr [esp+58h+var_28+4]
                xor     esi, 53F2A3DAh
                mov     dword ptr [esp+58h+var_28+4], eax
                xor     ecx, ecx
                mov     eax, [esp+58h+var_2C]
                xor     eax, 24958061h
                or      ecx, eax
                mov     [ebx], ecx
                mov     [ebx+4], esi
                mov     ebx, [esp+58h+var_44]
                xor     ebx, [esp+58h+var_20]
                xor     ebx, [esp+58h+var_40]
                xor     ebx, [esp+58h+var_48]
                mov     esi, [esp+58h+var_4C]
                mov     edi, esi
                mov     ecx, dword ptr [esp+58h+var_3C]
                mov     edx, dword ptr [esp+58h+var_3C+4]
                movzx   eax, bl
                xor     eax, 8Ah
                mov     [esi+eax*8], ecx
                mov     [esi+eax*8+4], edx
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-600h], ecx
                mov     ecx, ebx
                mov     [esi+eax*8-5FCh], edx
                mov     eax, [esp+58h+var_34]
                shr     eax, 8
                xor     al, 0DCh
                movzx   eax, al
                cdq
                add     eax, [esp+58h+var_30]
                adc     edx, [esp+58h+var_1C]
                shr     ecx, 10h
                movzx   ecx, cl
                shr     ebx, 18h
                xor     ebx, 0DFh
                mov     [edi+ecx*8-328h], eax
                mov     eax, esi
                pop     edi
                mov     [eax+ecx*8-324h], edx
                mov     ecx, esi
                mov     eax, [esp+54h+var_18]
                mov     edx, [esp+54h+var_14]
                and     dword ptr [ecx+ebx*8+4], 0
                mov     [ecx+ebx*8], eax
                mov     ebx, esi
                mov     ecx, [esp+54h+var_2C]
                xor     ecx, [esp+54h+var_44]
                xor     ecx, [esp+54h+var_34]
                xor     ecx, [esp+54h+var_40]
                movzx   eax, cl
                shr     ecx, 8
                pop     esi
                mov     [eax+ebx-0B2h], edx
                mov     edx, [esp+50h+var_10]
                mov     [eax+ebx-0AEh], edx
                mov     edx, [esp+50h+var_C]
                movzx   eax, cl
                add     edx, 8F5C77BAh
                mov     ecx, dword ptr [esp+50h+var_28]
                xor     eax, 84h
                mov     [ebx+eax*8], ecx
                mov     ecx, dword ptr [esp+50h+var_28+4]
                mov     [ebx+eax*8+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_8]
                add     ecx, 4DEFCB67h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___70       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___199_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                and     [ebp+var_8], 0
                mov     [ebp+var_4], ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, ecx
                push    ebx
                shl     eax, 4
                push    esi
                mov     esi, [ebp+arg_4]
                lea     ebx, [ecx+2F2F5C70h]
                mov     edx, esi
                add     ebx, esi
                shr     edx, 4
                add     eax, edx
                mov     [ebp+var_8], eax
                push    edi
                mov     edi, esi
                mov     esi, [ebp+var_4]
                xor     edi, ecx
                movzx   ecx, al
                xor     edi, eax
                xor     ecx, 44h
                mov     eax, ebx
                shr     eax, 8
                xor     al, 75h
                mov     esi, [ecx+esi]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                push    offset dword_40C880
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                xor     bl, 0F1h
                movzx   eax, bl
                mov     ebx, [ebp+var_8]
                cdq
                add     esi, eax
                mov     eax, [ebp+var_4]
                adc     ecx, edx
                mov     edx, [ebp+arg_4]
                sub     edx, [ebp+arg_0]
                xor     edx, edi
                mov     [eax+1BCh], ecx
                xor     edx, ebx
                mov     [eax+1B8h], esi
                add     edx, 9625586h
                mov     ecx, eax
                call    VBN_TransformContext
                lea     ecx, [edi-3545465Eh]
                xor     ebx, 938C60FCh
                pop     edi
                xor     eax, eax
                mov     edx, ebx
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___199_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___90_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                push    edi
                mov     edi, ecx
                mov     edx, esi
                mov     ecx, [ebp+arg_4]
                mov     ebx, ecx
                sub     eax, ecx
                shl     edx, 4
                xor     eax, 0D24BB7FFh
                shr     ecx, 4
                mov     [ebp+var_8], eax
                add     edx, ecx
                sub     ebx, esi
                mov     [ebp+var_4], edi
                mov     eax, edx
                shr     esi, 4
                xor     eax, ebx
                mov     [ebp+var_C], eax
                movzx   eax, bl
                xor     eax, 0AEh
                push    offset dword_40C900
                mov     ecx, [eax+edi]
                mov     edi, [eax+edi+4]
                mov     eax, [ebp+arg_4]
                shl     eax, 4
                add     eax, esi
                mov     [ebp+var_14], ecx
                xor     eax, [ebp+var_8]
                mov     ecx, [ebp+var_4]
                xor     eax, ebx
                mov     ebx, [ebp+var_C]
                xor     edx, ebx
                xor     edx, [ebp+var_8]
                add     edx, 5FFD7201h
                mov     [ebp+var_10], eax
                call    VBN_TransformContext
                mov     ecx, [ebp+var_10]
                mov     eax, ecx
                shr     eax, 8
                xor     al, 0EBh
                movzx   esi, cl
                movzx   eax, al
                sub     esi, 2
                cdq
                xor     ecx, ecx
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_14]
                mov     edx, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     ebx, 55CE65CCh
                pop     edi
                xor     eax, eax
                add     edx, 5EB995F5h
                pop     esi
                or      eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___90_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___114      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     eax, ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                sub     eax, edi
                mov     [esp+58h+var_4C], eax
                mov     ecx, eax
                xor     ecx, 0E391DD8Eh
                mov     [esp+58h+var_48], esi
                mov     edx, edi
                mov     [esp+58h+var_38], ecx
                shr     edx, 4
                lea     eax, [edi-435F7056h]
                mov     [esp+58h+var_28], eax
                mov     eax, ebx
                shl     eax, 4
                add     edx, eax
                movzx   eax, cl
                xor     eax, 71h
                xor     edx, ecx
                mov     [esp+58h+var_44], edx
                push    offset dword_40A39C
                mov     edx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                mov     dword ptr [esp+5Ch+var_34], edx
                mov     edx, [esi+eax*8-3A0h]
                mov     eax, [esi+eax*8-39Ch]
                mov     [esp+5Ch+var_14], eax
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_18], edx
                shr     ecx, 18h
                xor     ecx, 49h
                mov     edx, [eax+esi+96h]
                mov     eax, [eax+esi+9Ah]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_44]
                xor     eax, 0FA77h
                mov     [esp+5Ch+var_24], edx
                movzx   eax, ax
                cdq
                add     eax, [esi+ecx*8]
                mov     [esp+5Ch+var_10], eax
                adc     edx, [esi+ecx*8+4]
                mov     [esp+5Ch+var_C], edx
                lea     edx, [edi-435F7056h]
                mov     ecx, edx
                movzx   esi, dl
                shr     ecx, 10h
                movzx   eax, cl
                mov     ecx, [esp+5Ch+var_48]
                mov     ecx, [esi+ecx-8Bh]
                mov     esi, [esp+5Ch+var_38]
                add     ecx, eax
                mov     eax, edx
                mov     edx, [esp+5Ch+var_48]
                shr     eax, 8
                movzx   eax, al
                mov     eax, [eax+edx-20h]
                mov     edx, [esp+5Ch+var_4C]
                mov     eax, [eax+ecx*4-1B8h]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_1C], eax
                lea     eax, [edi-435F7056h]
                xor     edx, eax
                xor     edx, esi
                mov     eax, edx
                xor     edx, 0EB62B72Eh
                xor     eax, 9BB4F92Dh
                mov     [esp+5Ch+var_40], eax
                call    VBN_TransformContext
                mov     edx, [esp+58h+var_4C]
                xor     edx, [esp+58h+var_44]
                lea     eax, [edi-435F7056h]
                xor     edx, eax
                lea     ecx, [ebx-45B00BCDh]
                xor     edx, 25C60B80h
                mov     [esp+58h+var_4C], edx
                mov     edx, ebx
                xor     edx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_4C]
                xor     edx, edi
                xor     edx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                mov     eax, edx
                xor     eax, [esp+58h+var_4C]
                xor     eax, esi
                mov     [esp+58h+var_8], edx
                xor     eax, 6670FD3Ah
                mov     [esp+58h+var_2C], ecx
                mov     [esp+58h+var_3C], eax
                mov     eax, ecx
                xor     eax, edx
                lea     edx, [edi-435F7056h]
                xor     eax, edx
                xor     eax, esi
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 28h
                sub     eax, 2096h
                movzx   eax, ax
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_38]
                sub     ebx, esi
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_3C]
                adc     edx, dword ptr [esp+58h+var_34+4]
                xor     ecx, ecx
                xor     eax, 0EB26F722h
                or      ecx, eax
                mov     [ebx], ecx
                lea     esi, [edi-0DE46215h]
                mov     ecx, edi
                mov     [ebx+4], esi
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_28]
                mov     edi, [esp+58h+var_48]
                mov     esi, [esp+58h+var_24]
                movzx   eax, cl
                xor     eax, 3Dh
                mov     [eax+edi], esi
                mov     esi, [esp+58h+var_20]
                mov     [eax+edi+4], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 92h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0D7h
                shr     ecx, 18h
                xor     ecx, 35h
                mov     [edi+eax*8], ebx
                mov     [edi+eax*8+4], edx
                mov     eax, [esp+58h+var_18]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_14]
                mov     [edi+ecx*8+4], eax
                mov     eax, [esp+58h+var_44]
                movzx   ecx, al
                mov     eax, [esp+58h+var_40]
                mov     edx, [esp+58h+var_4C]
                movzx   eax, al
                add     edx, 31682E9Dh
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                xor     ecx, 79h
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_C]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                xor     ecx, 8B8A2407h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___114      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___21_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                push    offset dword_40A3E0
                mov     [ebp+var_C], ebx
                lea     eax, [esi-1D24B44Fh]
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     ecx, [eax+ebx+31h]
                mov     edi, [eax+ebx+35h]
                mov     eax, esi
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                shr     ecx, 4
                shl     eax, 4
                add     ecx, eax
                mov     [ebp+var_10], ecx
                lea     edx, [ecx+756660FCh]
                mov     ecx, ebx
                call    VBN_TransformContext
                mov     ebx, [ebp+arg_4]
                xor     ecx, ecx
                sub     ebx, esi
                xor     ebx, [ebp+var_4]
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                sub     esi, 0B1h
                sub     al, 31h ; '1'
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_C]
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                shl     ecx, 4
                add     ecx, eax
                mov     eax, [ebp+var_4]
                xor     ecx, ebx
                xor     eax, 0CB4A3D9Fh
                xor     ecx, [ebp+var_10]
                or      edx, eax
                pop     edi
                pop     esi
                pop     ebx
                lea     eax, [ecx-31E2F8C5h]
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___21_stk   endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___186_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, [ebp+arg_4]
                and     [ebp+var_8], 0
                mov     [ebp+var_4], ecx
                mov     ecx, [ebp+arg_0]
                sub     ecx, eax
                push    ebx
                lea     ebx, [eax+2CA40B9Fh]
                xor     ecx, 593DAADBh
                mov     [ebp+var_8], ecx
                mov     eax, ebx
                shr     eax, 8
                mov     ecx, ebx
                xor     al, 0FEh
                shr     ecx, 10h
                movzx   eax, al
                xor     cl, 75h
                cdq
                push    esi
                mov     esi, eax
                movzx   eax, cl
                mov     ecx, [ebp+var_4]
                push    edi
                mov     edi, edx
                cdq
                sub     esi, eax
                movzx   eax, bl
                push    offset dword_40C470
                sbb     edi, edx
                mov     edx, [ebp+arg_4]
                add     esi, [eax+ecx-3Ch]
                adc     edi, [eax+ecx-38h]
                xor     edx, [ebp+arg_0]
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                xor     edx, 3B6E33C5h
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                add     eax, 0EC9A1684h
                xor     eax, ebx
                mov     [ecx+1B8h], esi
                add     eax, 1F1E0606h
                mov     [ecx+1BCh], edi
                mov     ecx, [ebp+var_8]
                pop     edi
                xor     ecx, 0EB3F541Ah
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___186_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__28      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     [esp+24h+var_1C], ecx
                push    edi
                push    offset dword_40C7A0
                lea     edx, [esi-1007C0D6h]
                movzx   eax, dl
                xor     eax, 0Fh
                mov     ebx, [eax+ecx]
                mov     eax, edx
                mov     ecx, [ebp+arg_0]
                sub     ecx, esi
                shr     eax, 8
                mov     [esp+2Ch+var_10], ecx
                xor     ecx, 0BA6233B0h
                movzx   eax, al
                xor     eax, 20h
                mov     [esp+2Ch+var_18], ebx
                mov     [esp+2Ch+var_14], ecx
                lea     edi, [ecx+42DF545h]
                xor     edi, [eax+ebx]
                mov     ebx, esi
                mov     eax, [ebp+arg_0]
                add     esi, 387692B9h
                xor     esi, ecx
                shl     ebx, 4
                mov     ecx, [esp+2Ch+var_1C]
                xor     esi, edx
                shr     eax, 4
                add     ebx, eax
                xor     ebx, edx
                lea     edx, [esi-22A82FB8h]
                call    VBN_TransformContext
                mov     ecx, [esp+28h+var_18]
                mov     edx, [ebp+arg_0]
                movzx   eax, bl
                mov     [eax+ecx+2Fh], edi
                mov     eax, [ebp+arg_4]
                mov     ecx, [esp+28h+var_10]
                add     eax, 0E5906495h
                add     edx, eax
                xor     ecx, esi
                xor     edx, ebx
                xor     ecx, ebx
                xor     edx, [esp+28h+var_14]
                xor     eax, eax
                pop     edi
                xor     ecx, 2BFF46F3h
                sub     edx, 1EC93547h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__28      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001fdd proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                push    ebx
                and     [esp+20h+var_4], 0
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                sub     ebx, eax
                mov     [esp+24h+var_10], ecx
                mov     [esp+24h+var_C], ebx
                push    edi
                lea     edi, [eax+206FBAFFh]
                mov     [esp+28h+var_18], esi
                movzx   eax, bl
                lea     edx, [esi+8787CECh]
                xor     edx, ebx
                xor     eax, 0BCh
                mov     ebx, [esp+28h+var_10]
                movzx   ecx, dx
                mov     eax, [eax+ebx]
                mov     ecx, [eax+ecx-3F75h]
                mov     eax, edi
                xor     eax, 6B4FDB3Ah
                mov     ebx, ecx
                sub     ebx, eax
                cmp     eax, ecx
                mov     [esp+28h+var_8], ebx
                mov     ebx, [ebp+arg_0]
                setnbe  [esp+28h+var_19]
                xor     [esp+28h+var_18], ebx
                lea     ebx, [esi-2BE63D64h]
                xor     [esp+28h+var_18], edx
                xor     ebx, edi
                xor     [esp+28h+var_18], edi
                xor     ebx, edx
                mov     edx, ebx
                xor     edx, [esp+28h+var_18]
                xor     edx, [esp+28h+var_C]
                xor     edx, 31543698h
                cmp     eax, ecx
                jbe     short loc_495C28
                mov     eax, [esp+28h+var_18]
                xor     esi, esi
                xor     eax, 0F6754C30h
                xor     edi, 5D3C2416h
                or      esi, eax
                jmp     short loc_495C4A
; ---------------------------------------------------------------------------

loc_495C28:                             ; CODE XREF: VBNCB_unnamed_80001fdd+91¡üj
                mov     eax, [ebp+arg_0]
                shl     esi, 4
                shr     eax, 4
                add     esi, eax
                mov     eax, ebx
                xor     esi, [esp+28h+var_18]
                xor     eax, 941F4F3Eh
                xor     esi, edi
                xor     edi, edi
                xor     esi, 0ECA53214h
                or      edi, eax

loc_495C4A:                             ; CODE XREF: VBNCB_unnamed_80001fdd+A6¡üj
                mov     eax, [esp+28h+var_10]
                mov     bl, [esp+28h+var_19]
                movzx   ecx, dl
                xor     ecx, 80h
                cmp     [esp+28h+var_8], 0
                mov     [eax+ecx*8], bl
                setz    bl
                shr     edx, 8
                movzx   ecx, dl
                mov     edx, edi
                xor     ecx, 0F2h
                pop     edi
                mov     [eax+ecx*8], bl
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001fdd endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___115_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                and     [ebp+var_10], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, edx
                mov     [ebp+var_4], ecx
                lea     ecx, [edx+5E2B0E04h]
                xor     edi, esi
                lea     eax, [esi-12013E4Bh]
                shr     edx, 4
                xor     ecx, eax
                mov     [ebp+var_8], edi
                lea     ebx, [esi-38BA801h]
                mov     [ebp+var_C], ecx
                mov     ecx, [ebp+var_4]
                xor     ebx, edi
                xor     ebx, eax
                shl     esi, 4
                movzx   eax, al
                add     edx, esi
                xor     edx, [ebp+var_C]
                xor     edx, [ebp+var_8]
                push    offset dword_40BA80
                mov     ecx, [eax+ecx+0Bh]
                xor     edx, 0D2467E24h
                mov     [ebp+var_10], ecx
                mov     ecx, [ebp+var_4]
                mov     edi, [eax+ecx+0Fh]
                call    VBN_TransformContext
                mov     eax, ebx
                movzx   esi, bl
                shr     eax, 8
                xor     ecx, ecx
                add     eax, 1606h
                sub     esi, 6
                movzx   eax, ax
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_4]
                sbb     ecx, edx
                add     esi, [ebp+var_10]
                mov     edx, [ebp+var_8]
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, 0DF60DEAAh
                mov     ecx, [ebp+var_C]
                xor     eax, eax
                pop     edi
                xor     ecx, 53A34423h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___115_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___96_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_4]
                push    ebx
                and     [ebp+var_C], 0
                mov     ebx, edx
                sub     ebx, eax
                push    esi
                push    edi
                mov     edi, ecx
                mov     esi, edx
                lea     ecx, [edx-0BB5EF49h]
                mov     [ebp+var_4], edi
                xor     ebx, ecx
                xor     esi, eax
                xor     ebx, 0DC0B08B9h
                mov     [ebp+var_C], esi
                mov     [ebp+var_8], ebx
                lea     ebx, [edx+6BC74EB3h]
                add     ebx, eax
                xor     ebx, esi
                xor     ebx, ecx
                movzx   ecx, cl
                mov     eax, ebx
                shr     eax, 8
                sub     eax, 62A9h
                mov     esi, [ecx+edi+3Eh]
                mov     edi, [ecx+edi+42h]
                mov     ecx, [ebp+var_4]
                movzx   eax, ax
                cdq
                sub     esi, eax
                push    offset dword_40A360
                sbb     edi, edx
                xor     bl, 23h
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                cdq
                add     esi, eax
                adc     edi, edx
                mov     edx, [ebp+arg_0]
                add     edx, 0B1E070E8h
                xor     edx, [ebp+var_8]
                xor     edx, ebx
                xor     edx, 673F32DCh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                lea     edx, [ebx+798C6591h]
                mov     ecx, [ebp+var_8]
                xor     ecx, 0AD4D5D85h
                mov     [eax+1BCh], edi
                mov     [eax+1B8h], esi
                xor     eax, eax
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___96_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___107      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                mov     eax, esi
                sub     eax, ebx
                and     [esp+4Ch+var_4], 0
                mov     [esp+4Ch+var_3C], eax
                xor     esi, ebx
                push    edi
                mov     edi, ecx
                mov     [esp+50h+var_40], esi
                xor     esi, eax
                mov     [esp+50h+var_44], edi
                lea     ecx, [ebx-7E68250Ch]
                mov     [esp+50h+var_38], esi
                movzx   eax, cl
                mov     [esp+50h+var_34], ecx
                shr     ecx, 10h
                xor     ecx, 1F1Ah
                mov     esi, [esp+50h+var_44]
                mov     edx, [edi+eax*8-638h]
                add     edx, ecx
                mov     ecx, [esp+50h+var_3C]
                movzx   eax, cl
                xor     eax, 0C3h
                shr     ecx, 18h
                mov     eax, [eax+edi]
                lea     edi, [ebx-7E68250Ch]
                mov     eax, [eax+edx*4]
                mov     edx, [esp+50h+var_44]
                mov     [esp+50h+var_14], eax
                mov     eax, edi
                shr     eax, 8
                movzx   eax, al
                mov     edx, [eax+edx+5]
                mov     [esp+50h+var_20], edx
                mov     edx, [esp+50h+var_44]
                mov     eax, [eax+edx+9]
                mov     [esp+50h+var_1C], eax
                mov     al, byte ptr [esp+50h+var_38]
                xor     al, 48h
                movzx   eax, al
                cdq
                add     eax, [ecx+esi+54h]
                mov     [esp+50h+var_10], eax
                mov     eax, esi
                adc     edx, [ecx+eax+58h]
                mov     ecx, [esp+50h+var_3C]
                shr     ecx, 10h
                movzx   ecx, cl
                xor     ecx, 21h
                mov     [esp+50h+var_C], edx
                mov     eax, [ecx+eax]
                mov     [esp+50h+var_28], eax
                mov     eax, esi
                mov     esi, [ebp+arg_4]
                mov     eax, [ecx+eax+4]
                mov     ecx, [esp+50h+var_3C]
                mov     [esp+50h+var_24], eax
                mov     eax, [esp+50h+var_40]
                xor     eax, edi
                xor     eax, ecx
                mov     [esp+50h+var_40], eax
                lea     eax, [ebx+1610D476h]
                add     eax, esi
                xor     eax, [esp+50h+var_38]
                xor     eax, edi
                lea     edi, [ebx-2DF742E6h]
                add     edi, esi
                mov     [esp+50h+var_8], eax
                xor     edi, [esp+50h+var_40]
                add     ebx, 0E953F079h
                xor     edi, [esp+50h+var_38]
                add     esi, ebx
                mov     edx, edi
                xor     esi, eax
                xor     esi, [esp+50h+var_40]
                xor     edx, eax
                xor     edx, ecx
                xor     edx, 0A6330255h
                mov     ebx, [esp+50h+var_44]
                movzx   eax, dl
                mov     [esp+50h+var_30], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 8
                xor     ecx, 0B0h
                add     al, 69h ; 'i'
                mov     [esp+50h+var_2C], edx
                movzx   eax, al
                cdq
                mov     ebx, [ebx+ecx*8]
                sub     ebx, eax
                mov     eax, [esp+50h+var_44]
                push    offset dword_40C480
                mov     ecx, [eax+ecx*8+4]
                mov     eax, [esp+54h+var_30]
                sbb     ecx, edx
                add     eax, 0FFFFFFC6h
                add     ebx, eax
                mov     eax, esi
                adc     ecx, 0
                xor     eax, edi
                xor     eax, [esp+54h+var_34]
                xor     eax, [esp+54h+var_3C]
                mov     [esp+54h+var_18], ecx
                mov     ecx, [esp+54h+var_44]
                mov     [esp+54h+var_3C], eax
                lea     edx, [eax-73759600h]
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_2C]
                xor     ecx, ecx
                xor     edx, esi
                mov     eax, esi
                mov     esi, [esp+50h+var_44]
                xor     eax, 297A945Dh
                xor     edx, [esp+50h+var_38]
                or      ecx, eax
                xor     edx, [esp+50h+var_34]
                xor     edi, 19F2E5D7h
                mov     [ebx], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [ebx+4], edi
                movzx   eax, dl
                mov     [eax+esi-0B7h], ecx
                mov     ecx, [esp+50h+var_24]
                mov     [eax+esi-0B3h], ecx
                mov     eax, edx
                mov     ecx, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8-338h], ecx
                mov     ecx, [esp+50h+var_1C]
                mov     [esi+eax*8-334h], ecx
                mov     eax, edx
                mov     ecx, [esp+50h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     edx, 18h
                mov     [esi+eax*8-404h], ecx
                mov     [esi+eax*8-408h], ebx
                mov     eax, [esp+50h+var_14]
                and     dword ptr [esi+edx*8-5D4h], 0
                mov     [esi+edx*8-5D8h], eax
                mov     eax, [esp+50h+var_38]
                mov     edx, [esp+50h+var_40]
                movzx   ecx, al
                movzx   eax, dl
                xor     ecx, eax
                mov     eax, [esp+50h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_10]
                xor     ecx, 0F4h
                xor     ecx, [esp+50h+var_30]
                xor     edx, 937FE687h
                mov     [esi+ecx*8], eax
                mov     eax, [esp+50h+var_C]
                mov     [esi+ecx*8+4], eax
                mov     ecx, [esp+50h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 38ACBB87h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___107      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_h__39      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                push    ebx
                mov     ebx, ecx
                mov     ecx, [ebp+arg_4]
                mov     [esp+30h+var_28], ebx
                push    esi
                push    edi
                lea     eax, [ecx+5AADFB0Fh]
                mov     [esp+38h+var_18], eax
                lea     edi, [ecx+5AADFB0Fh]
                movzx   eax, al
                xor     eax, 18h
                push    offset dword_40A680
                mov     edx, [eax+ebx]
                mov     eax, ecx
                mov     ebx, [ebp+arg_0]
                sub     eax, ebx
                mov     [esp+3Ch+var_24], eax
                mov     [esp+3Ch+var_14], edx
                lea     esi, [ebx-527B6E99h]
                add     esi, ecx
                xor     esi, edi
                mov     ebx, [edx+esi+534EB65Eh]
                mov     [esp+3Ch+var_C], ebx
                mov     ebx, [edx+esi+534EB662h]
                mov     [esp+3Ch+var_8], ebx
                lea     ebx, [ecx+4E1C807Dh]
                mov     ecx, [esp+3Ch+var_28]
                xor     ebx, eax
                xor     ebx, edi
                movzx   eax, bl
                mov     edi, [eax+edx-81h]
                mov     eax, [eax+edx-7Dh]
                mov     [esp+3Ch+var_10], eax
                mov     eax, [ebp+arg_0]
                add     eax, 119C324Bh
                xor     eax, esi
                xor     eax, [esp+3Ch+var_24]
                mov     [esp+3Ch+var_1C], eax
                lea     edx, [eax-4C7B55A5h]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                add     eax, 7CC08456h
                add     eax, ecx
                xor     eax, ebx
                xor     eax, esi
                mov     esi, [esp+38h+var_14]
                mov     [esp+38h+var_20], eax
                movzx   eax, ax
                xor     eax, 0E6D2h
                mov     edx, [eax+esi]
                mov     esi, [eax+esi+4]
                lea     eax, [ecx+9F1D22Bh]
                xor     eax, [esp+38h+var_1C]
                xor     eax, ebx
                mov     ebx, [esp+38h+var_28]
                mov     ecx, eax
                mov     [esp+38h+var_14], eax
                xor     ecx, [esp+38h+var_20]
                xor     ecx, [esp+38h+var_24]
                xor     ecx, [esp+38h+var_18]
                movzx   eax, cl
                xor     eax, 1
                mov     [eax+ebx], edi
                mov     edi, [esp+38h+var_10]
                mov     [eax+ebx+4], edi
                mov     eax, ecx
                shr     eax, 8
                mov     edi, ebx
                movzx   eax, al
                shr     ecx, 10h
                mov     [eax+edi-0Ch], edx
                mov     [eax+edi-8], esi
                movzx   eax, cl
                mov     ecx, [esp+38h+var_C]
                xor     eax, 21h
                mov     [edi+eax*8], ecx
                mov     ecx, [esp+38h+var_8]
                mov     [edi+eax*8+4], ecx
                mov     eax, [esp+38h+var_20]
                xor     eax, [esp+38h+var_1C]
                xor     eax, [esp+38h+var_18]
                xor     edx, edx
                mov     ecx, [esp+38h+var_14]
                xor     eax, 6697A191h
                pop     edi
                add     ecx, 25659C14h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_h__39      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

VBNCB_unnamed_80002290 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                shl     eax, 4
                mov     edi, edx
                sub     edi, esi
                mov     [ebp+var_4], ecx
                mov     ecx, edi
                shr     ebx, 4
                add     ebx, eax
                xor     ecx, 7AEAD599h
                lea     eax, [edx+6C8F8346h]
                sub     esi, edx
                xor     eax, ecx
                xor     edi, ebx
                xor     edi, 47C1AA19h
                xor     eax, ebx
                xor     esi, edi
                mov     [ebp+var_8], edi
                mov     edi, [ebp+var_4]
                xor     eax, 40B11F78h
                xor     edx, edx
                xor     esi, ecx
                or      edx, eax
                add     esi, 1A4255A0h
                movzx   eax, bl
                cmp     byte ptr [edi+eax*8-1E0h], 0
                mov     edi, [ebp+var_8]
                jnz     short loc_49625D
                shr     ebx, 8
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                cmp     byte ptr [ebx+eax*8+140h], 0
                jnz     short loc_49625D
                xor     esi, esi
                lea     eax, [edi-3DC0EDBEh]
                xor     ecx, 0BC359FEAh
                or      esi, eax
                jmp     short loc_49625F
; ---------------------------------------------------------------------------

loc_49625D:                             ; CODE XREF: VBNCB_unnamed_80002290+66¡üj
                                        ; VBNCB_unnamed_80002290+79¡üj
                mov     ecx, edx

loc_49625F:                             ; CODE XREF: VBNCB_unnamed_80002290+8B¡üj
                pop     edi
                mov     eax, esi
                mov     edx, ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002290 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng_1__4       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ebx, esi
                shl     ebx, 4
                mov     eax, edi
                shr     eax, 4
                add     ebx, eax
                mov     [esp+30h+var_18], edx
                mov     eax, ebx
                mov     [esp+30h+var_1C], ebx
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [eax+edx+0EBh]
                mov     eax, [eax+edx+0EFh]
                mov     [esp+30h+var_4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Ah
                mov     [esp+30h+var_8], ecx
                mov     ecx, esi
                shr     ecx, 4
                mov     eax, [eax+edx]
                mov     edx, edi
                mov     [esp+30h+var_C], eax
                sub     edx, esi
                mov     eax, edx
                xor     eax, 65CD149Fh
                mov     [esp+30h+var_24], eax
                lea     eax, [esi-665F6AB8h]
                xor     eax, ebx
                mov     [esp+30h+var_14], eax
                mov     eax, edi
                shl     eax, 4
                add     eax, ecx
                mov     ecx, eax
                xor     ecx, [esp+30h+var_24]
                xor     ecx, ebx
                lea     ebx, [edi-68EC252Bh]
                mov     edi, [esp+30h+var_18]
                xor     eax, ecx
                xor     eax, [esp+30h+var_14]
                add     ebx, esi
                xor     ebx, [esp+30h+var_14]
                xor     ebx, [esp+30h+var_24]
                mov     [esp+30h+var_20], eax
                xor     edx, ebx
                mov     eax, [esp+30h+var_1C]
                xor     edx, ecx
                movzx   eax, al
                xor     edx, 0DDF3A394h
                mov     esi, [eax+edi-17h]
                mov     edi, [eax+edi-13h]
                sub     esi, edx
                mov     al, byte ptr [esp+30h+var_20]
                sbb     edi, 0
                xor     al, 24h
                movzx   eax, al
                cdq
                add     esi, eax
                mov     eax, ebx
                adc     edi, edx
                xor     ecx, 9F623F2Bh
                mov     [esp+30h+var_10], ecx
                xor     eax, 8D7BD2E8h
                xor     ecx, ecx
                or      ecx, eax
                mov     eax, [esp+30h+var_10]
                mov     [esi], ecx
                mov     ecx, [esp+30h+var_20]
                xor     ecx, ebx
                mov     [esi+4], eax
                xor     ecx, [esp+30h+var_1C]
                mov     ebx, [esp+30h+var_18]
                xor     ecx, 574D01A7h
                movzx   eax, cl
                xor     eax, 0A5h
                mov     edx, [esp+30h+var_C]
                mov     [eax+ebx], esi
                mov     [eax+ebx+4], edi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0ABh
                shr     ecx, 10h
                pop     edi
                pop     esi
                and     dword ptr [eax+ebx+4], 0
                mov     [eax+ebx], edx
                mov     edx, [esp+28h+var_24]
                movzx   eax, cl
                add     edx, 98D5FB9Fh
                mov     ecx, [esp+28h+var_8]
                xor     eax, 4Fh
                mov     [eax+ebx], ecx
                mov     ecx, [esp+28h+var_4]
                mov     [eax+ebx+4], ecx
                xor     eax, eax
                mov     ecx, [esp+28h+var_14]
                add     ecx, 17007777h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_1__4       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___69       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = qword ptr -14h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 34h
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, eax
                and     [esp+38h+var_4], 0
                sub     ebx, [ebp+arg_4]
                lea     edx, [eax+5DF9CF13h]
                xor     ebx, 1E75639Eh
                shr     eax, 4
                mov     [esp+38h+var_2C], edx
                mov     edx, [ebp+arg_4]
                shl     edx, 4
                add     edx, eax
                mov     [esp+38h+var_30], ebx
                push    esi
                mov     esi, ecx
                movzx   eax, bl
                xor     edx, ebx
                mov     [esp+3Ch+var_34], esi
                push    edi
                mov     [esp+40h+var_20], edx
                add     edx, 5BCE96E8h
                mov     ecx, [eax+esi-55h]
                mov     ebx, [eax+esi-51h]
                mov     eax, [esp+40h+var_30]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0B0h
                mov     [esp+40h+var_24], ecx
                mov     ecx, [esp+40h+var_34]
                push    offset dword_40BDEC
                mov     edi, [esi+eax*8]
                mov     esi, [esi+eax*8+4]
                mov     eax, [esp+44h+var_30]
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [ecx+eax*8-38h]
                mov     [esp+44h+var_18], ecx
                mov     ecx, [esp+44h+var_34]
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     ecx, [esp+40h+var_2C]
                add     eax, 68B056AFh
                xor     eax, ecx
                xor     eax, [esp+40h+var_30]
                mov     [esp+40h+var_28], eax
                movzx   eax, cl
                sub     eax, 2
                and     eax, [esp+40h+var_18]
                shl     eax, 6
                push    4
                pop     ecx
                mul     ecx
                add     eax, edi
                mov     ecx, edx
                mov     edx, [ebp+arg_4]
                adc     ecx, esi
                mov     dword ptr [esp+40h+var_14], eax
                mov     dword ptr [esp+40h+var_14+4], ecx
                mov     ecx, [ebp+arg_0]
                mov     esi, ecx
                xor     esi, edx
                sub     edx, ecx
                xor     esi, [esp+40h+var_20]
                lea     eax, [ecx+5DF9CF13h]
                mov     ecx, edx
                xor     ecx, [esp+40h+var_28]
                xor     esi, eax
                xor     ecx, [esp+40h+var_20]
                xor     edx, esi
                xor     edx, [esp+40h+var_28]
                mov     eax, edx
                mov     [esp+40h+var_1C], edx
                shr     eax, 8
                xor     al, 0D2h
                mov     [esp+40h+var_8], ecx
                mov     ecx, [esp+40h+var_1C]
                movzx   eax, al
                movzx   edi, cl
                mov     [esp+40h+var_C], esi
                sub     edi, 0D9h
                cdq
                xor     esi, esi
                sub     edi, eax
                mov     eax, ecx
                sbb     esi, edx
                add     edi, [esp+40h+var_24]
                adc     esi, ebx
                xor     eax, [esp+40h+var_8]
                xor     eax, [esp+40h+var_2C]
                xor     ecx, ecx
                xor     eax, [esp+40h+var_30]
                mov     ebx, [esp+40h+var_8]
                xor     ebx, [esp+40h+var_C]
                xor     ebx, [esp+40h+var_30]
                mov     [esp+40h+var_24], eax
                xor     ebx, 0A0BDA85Fh
                add     eax, 2F88A14Ch
                xor     [esp+40h+var_24], ebx
                or      ecx, eax
                mov     edx, ebx
                mov     [edi], ecx
                xor     edx, 533DB21Fh
                mov     ecx, [esp+40h+var_34]
                mov     [edi+4], edx
                mov     edx, ebx
                xor     edx, [esp+40h+var_1C]
                xor     edx, [esp+40h+var_20]
                xor     edx, [esp+40h+var_2C]
                movzx   eax, dl
                xor     eax, 67h
                mov     ebx, [esp+40h+var_24]
                xor     ebx, [esp+40h+var_28]
                xor     ebx, [esp+40h+var_20]
                mov     [eax+ecx], edi
                mov     [eax+ecx+4], esi
                mov     eax, edx
                mov     esi, [esp+40h+var_34]
                mov     edi, dword ptr [esp+40h+var_14]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 49h
                mov     [ecx+eax*8], edi
                mov     edi, esi
                mov     ecx, dword ptr [esp+40h+var_14+4]
                mov     [esi+eax*8+4], ecx
                mov     eax, [esp+40h+var_28]
                movzx   ecx, al
                mov     eax, edx
                shr     eax, 10h
                xor     ecx, 0C5h
                movzx   eax, al
                xor     eax, 35h
                shl     ecx, 2
                and     ecx, [esp+40h+var_18]
                shl     ecx, 4
                shr     edx, 18h
                mov     [eax+edi], ecx
                xor     edx, 0BFh
                mov     ecx, esi
                xor     edi, edi
                mov     [eax+ecx+4], edi
                mov     eax, [esp+40h+var_28]
                shr     eax, 8
                movzx   eax, al
                sub     eax, 0E1h
                mov     [edx+esi+4], edi
                shl     eax, 4
                and     eax, [esp+40h+var_18]
                shl     eax, 2
                mov     [edx+esi], eax
                xor     edx, edx
                mov     eax, [esp+40h+var_2C]
                shr     eax, 8
                movzx   ecx, al
                xor     eax, eax
                xor     ecx, 70h
                inc     eax
                call    __allshl
                movzx   ecx, bl
                mov     [esi+ecx*8-528h], eax
                mov     eax, ebx
                mov     [esi+ecx*8-524h], edi
                mov     edi, dword ptr [esp+40h+var_14]
                mov     ecx, dword ptr [esp+40h+var_14+4]
                shr     eax, 8
                movzx   eax, al
                shr     ebx, 10h
                mov     [esi+eax*8-6DCh], ecx
                mov     [esi+eax*8-6E0h], edi
                mov     eax, [esp+40h+var_30]
                shr     eax, 18h
                xor     al, 64h
                movzx   ecx, bl
                xor     ecx, 82h
                movzx   eax, al
                cdq
                pop     edi
                mov     [esi+ecx*8], eax
                xor     eax, eax
                mov     [esi+ecx*8+4], edx
                mov     ecx, [esp+3Ch+var_8]
                mov     edx, [esp+3Ch+var_C]
                add     ecx, 0CF1E342Eh
                pop     esi
                xor     edx, 0F4BC724h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___69       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___74       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                lea     ebx, [edx-333748B2h]
                mov     ecx, [ebp+arg_4]
                add     ebx, ecx
                mov     [esp+50h+var_3C], edi
                mov     [esp+50h+var_38], ebx
                push    offset dword_40BED8
                lea     eax, [ecx+4957F2E6h]
                mov     [esp+54h+var_40], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     esi, [eax+edi-0CFh]
                mov     eax, [eax+edi-0CBh]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 9Eh
                mov     dword ptr [esp+54h+var_30], esi
                mov     esi, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+54h+var_18], eax
                lea     eax, [ecx+4957F2E6h]
                movzx   eax, al
                xor     eax, 42h
                mov     [esp+54h+var_1C], esi
                mov     esi, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     edi, ecx
                mov     [esp+54h+var_10], eax
                sub     edi, edx
                mov     eax, [esp+54h+var_40]
                xor     ecx, ecx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+54h+var_44], edi
                xor     edi, ebx
                mov     [esp+54h+var_14], esi
                mov     esi, [esp+54h+var_3C]
                movzx   edx, di
                sub     edx, 0B7BEh
                mov     [esp+54h+var_34], edi
                mov     edi, [esp+54h+var_3C]
                add     edx, [esi+eax*8-250h]
                mov     [esp+54h+var_24], edx
                adc     ecx, [esi+eax*8-24Ch]
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                mov     [esp+54h+var_20], ecx
                mov     ecx, [esp+54h+var_38]
                mov     ebx, [eax+esi-54h]
                mov     eax, [esp+54h+var_40]
                shr     eax, 10h
                movzx   esi, al
                movzx   eax, cl
                xor     esi, 5Ch
                add     esi, [eax+edi+6Ch]
                xor     eax, eax
                mov     edi, [esp+54h+var_44]
                xor     edi, [esp+54h+var_40]
                xor     edi, ecx
                mov     ecx, [esp+54h+var_3C]
                mov     edx, edi
                shld    eax, esi, 2
                xor     edx, 0FD0B1557h
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                add     edx, 0A6B72AF5h
                xor     edx, [esp+50h+var_34]
                add     ecx, 0ADB27FEFh
                xor     edx, [esp+50h+var_40]
                xor     ecx, edi
                mov     eax, [ebx+esi*4]
                mov     [esp+50h+var_28], eax
                mov     [esp+50h+var_C], edx
                xor     ecx, [esp+50h+var_34]
                xor     esi, esi
                mov     ebx, [esp+50h+var_44]
                mov     eax, ecx
                xor     eax, edx
                mov     [esp+50h+var_8], ecx
                xor     ebx, edx
                mov     edx, [esp+50h+var_38]
                xor     eax, edx
                xor     ebx, edi
                xor     eax, 3151AE8Bh
                mov     [esp+50h+var_44], ebx
                xor     ebx, ecx
                mov     [esp+50h+var_38], eax
                xor     ebx, [esp+50h+var_40]
                xor     ebx, edx
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 2Eh ; '.'
                add     al, 41h ; 'A'
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                mov     edx, [esp+50h+var_44]
                adc     esi, dword ptr [esp+50h+var_30+4]
                xor     eax, 9EEC582Fh
                xor     ecx, ecx
                add     edx, 913D06BAh
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                xor     ebx, 85h
                and     dword ptr [edx+eax*8-2ACh], 0
                mov     [edx+eax*8-2B0h], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_44]
                xor     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_40]
                mov     eax, [esp+50h+var_24]
                mov     [edx+ebx*8], eax
                mov     eax, [esp+50h+var_20]
                mov     [edx+ebx*8+4], eax
                mov     ebx, [esp+50h+var_3C]
                movzx   eax, cl
                xor     eax, 0BAh
                mov     [edx+eax*8], edi
                mov     [edx+eax*8+4], esi
                mov     eax, ecx
                mov     edx, [esp+50h+var_1C]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                pop     edi
                pop     esi
                mov     [ebx+eax*8-400h], edx
                mov     edx, [esp+48h+var_18]
                mov     [ebx+eax*8-3FCh], edx
                mov     edx, [esp+48h+var_C]
                movzx   eax, cl
                add     edx, 7772AD3Ah
                mov     ecx, [esp+48h+var_14]
                xor     eax, 0AFh
                mov     [eax+ebx], ecx
                mov     ecx, [esp+48h+var_10]
                mov     [eax+ebx+4], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_8]
                add     ecx, 4D6C82EBh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___74       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___25       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = qword ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                sub     ebx, esi
                mov     edx, ebx
                and     [esp+54h+var_4], 0
                shr     edx, 10h
                movzx   eax, dl
                xor     dl, 0DAh
                push    edi
                mov     edi, ecx
                mov     [esp+58h+var_40], ebx
                mov     [esp+58h+var_48], edi
                push    offset dword_40A470
                mov     ecx, [eax+edi-1Ah]
                mov     eax, [eax+edi-16h]
                mov     [esp+5Ch+var_30], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 0E1h
                mov     [esp+5Ch+var_34], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     dword ptr [esp+5Ch+var_3C], ecx
                mov     ecx, ebx
                shr     ecx, 8
                mov     dword ptr [esp+5Ch+var_3C+4], eax
                movzx   eax, cl
                movzx   ecx, cl
                xor     ecx, 1Dh
                mov     eax, [eax+edi+5Fh]
                mov     eax, [eax+ecx]
                mov     [esp+5Ch+var_24], eax
                movzx   ecx, bl
                xor     ecx, 7Ah
                movzx   eax, dl
                cdq
                add     eax, [edi+ecx*8]
                mov     [esp+5Ch+var_2C], eax
                adc     edx, [edi+ecx*8+4]
                movzx   eax, bl
                mov     ecx, eax
                mov     [esp+5Ch+var_28], edx
                xor     ecx, 7Fh
                mov     [esp+5Ch+var_18], eax
                mov     edx, esi
                sub     edx, [ebp+arg_4]
                mov     ebx, edx
                mov     [esp+5Ch+var_4C], edx
                mov     eax, [ecx+edi]
                mov     [esp+5Ch+var_14], eax
                mov     eax, [ecx+edi+4]
                mov     edi, [esp+5Ch+var_40]
                xor     ebx, edi
                mov     ecx, [esp+5Ch+var_48]
                xor     ebx, 5A52193h
                mov     [esp+5Ch+var_10], eax
                mov     [esp+5Ch+var_20], ebx
                lea     edx, [ebx-7459526Ah]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     eax, [esi-6B83CDDAh]
                add     eax, ecx
                mov     edx, ecx
                shl     ecx, 4
                xor     edx, esi
                xor     eax, edi
                shr     esi, 4
                add     ecx, esi
                xor     eax, edi
                xor     ecx, eax
                mov     [esp+58h+var_C], eax
                xor     ecx, ebx
                xor     edx, ebx
                mov     [esp+58h+var_44], ecx
                xor     edx, edi
                mov     ecx, [esp+58h+var_4C]
                xor     ecx, edx
                mov     [esp+58h+var_8], edx
                xor     ecx, eax
                mov     eax, [esp+58h+var_44]
                xor     ecx, 71F63D95h
                mov     ebx, eax
                mov     [esp+58h+var_4C], ecx
                mov     ecx, [esp+58h+var_44]
                xor     ebx, edx
                shr     eax, 8
                xor     ebx, edi
                sub     al, 68h ; 'h'
                movzx   edi, cl
                movzx   eax, al
                xor     ebx, 0F0D258C9h
                cdq
                xor     esi, esi
                sub     edi, 0F3h
                mov     [esp+58h+var_1C], ebx
                sub     edi, eax
                lea     eax, [ebx+19236409h]
                mov     ebx, [esp+58h+var_48]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_3C]
                mov     edx, [esp+58h+var_4C]
                adc     esi, dword ptr [esp+58h+var_3C+4]
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, 6602963Ch
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_4C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_40]
                xor     ecx, [esp+58h+var_40]
                mov     [edi+4], edx
                mov     edx, [esp+58h+var_34]
                movzx   eax, cl
                xor     eax, 0Fh
                mov     [eax+ebx], edx
                mov     edx, [esp+58h+var_30]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                shr     eax, 8
                mov     edx, ebx
                movzx   eax, al
                mov     ebx, [esp+58h+var_1C]
                mov     [edx+eax*8-4B8h], edi
                mov     edi, edx
                mov     edx, [esp+58h+var_4C]
                mov     [edi+eax*8-4B4h], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_2C]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 7Ch
                shr     ecx, 18h
                mov     [edi+eax*8], esi
                mov     esi, [esp+58h+var_28]
                mov     [edi+eax*8+4], esi
                and     dword ptr [edi+ecx*8+2Ch], 0
                mov     eax, [esp+58h+var_24]
                mov     [edi+ecx*8+28h], eax
                mov     eax, [esp+58h+var_20]
                movzx   ecx, al
                movzx   eax, dl
                mov     edx, [esp+58h+var_C]
                xor     ecx, eax
                movzx   eax, bl
                add     edx, 7C812C0Eh
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, 3Bh
                xor     ecx, [esp+58h+var_18]
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_10]
                mov     [edi+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                pop     edi
                xor     ecx, 222CFB87h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___25       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___191      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = qword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                sub     esi, ebx
                push    edi
                mov     edi, ecx
                mov     eax, esi
                xor     eax, 0D220AA77h
                mov     [esp+50h+var_40], edi
                mov     edx, [esp+50h+var_40]
                mov     ecx, esi
                mov     [esp+50h+var_3C], eax
                xor     ecx, 16E519FAh
                mov     eax, ecx
                mov     [esp+50h+var_38], ecx
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 18h
                mov     edi, [eax+edi-0Ah]
                mov     eax, [eax+edx-6]
                mov     [esp+50h+var_14], eax
                mov     eax, [esp+50h+var_3C]
                movzx   eax, ax
                xor     eax, 6025h
                mov     [esp+50h+var_18], edi
                mov     eax, [eax+edi]
                mov     [esp+50h+var_20], eax
                mov     eax, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   edi, al
                xor     eax, eax
                sub     edi, 79h ; 'y'
                add     edi, [edx+ecx*8-5E0h]
                mov     dword ptr [esp+50h+var_C], edi
                mov     edi, edx
                mov     edx, [ebp+arg_0]
                adc     eax, [edi+ecx*8-5DCh]
                sub     ebx, edx
                mov     dword ptr [esp+50h+var_C+4], eax
                mov     eax, [esp+50h+var_38]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 32h
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     edi, ebx
                xor     edi, [esp+50h+var_3C]
                mov     [esp+50h+var_24], eax
                mov     eax, ebx
                mov     [esp+50h+var_28], ecx
                mov     ecx, [esp+50h+var_38]
                xor     eax, ecx
                xor     ebx, eax
                mov     [esp+50h+var_10], eax
                xor     ebx, [esp+50h+var_3C]
                xor     edi, ecx
                xor     esi, edi
                mov     [esp+50h+var_34], ebx
                xor     esi, eax
                mov     [esp+50h+var_4], edi
                mov     eax, [esp+50h+var_34]
                lea     ebx, [edx+31A30DF6h]
                xor     ebx, eax
                movzx   ecx, cl
                shr     eax, 8
                xor     ebx, edi
                mov     edi, [esp+50h+var_40]
                xor     eax, 0C5BBh
                xor     ecx, 0CCh
                movzx   eax, ax
                xor     esi, 94C6ADEDh
                cdq
                mov     [esp+50h+var_30], esi
                mov     [esp+50h+var_2C], ebx
                mov     esi, [edi+ecx*8]
                mov     edi, [edi+ecx*8+4]
                sub     esi, eax
                mov     eax, [esp+50h+var_34]
                sbb     edi, edx
                movzx   eax, al
                mov     edx, [esp+50h+var_30]
                sub     eax, 8Dh
                add     esi, eax
                lea     eax, [ebx-4F4F2FFCh]
                mov     ebx, [esp+50h+var_30]
                adc     edi, 0
                xor     edx, 35DA36h
                xor     ebx, [esp+50h+var_34]
                xor     ecx, ecx
                xor     ebx, [esp+50h+var_38]
                or      ecx, eax
                xor     ebx, 13FE6C75h
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_40]
                mov     [esi+4], edx
                push    offset dword_40BEE4
                lea     edx, [ebx+59F9AB79h]
                mov     [esp+54h+var_1C], edi
                call    VBN_TransformContext
                mov     ecx, [esp+50h+var_2C]
                xor     ecx, [esp+50h+var_30]
                xor     ecx, [esp+50h+var_3C]
                xor     ecx, [esp+50h+var_38]
                mov     edi, [esp+50h+var_40]
                mov     edx, [esp+50h+var_28]
                movzx   eax, cl
                xor     eax, 0B4h
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_24]
                mov     [edi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0EDh
                mov     [edi+eax*8], edx
                mov     edx, edi
                mov     edi, [esp+50h+var_1C]
                and     dword ptr [edx+eax*8+4], 0
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 55h
                shr     ecx, 18h
                xor     ecx, 0A0h
                mov     [edx+eax*8], esi
                mov     [edx+eax*8+4], edi
                mov     eax, [esp+50h+var_18]
                mov     [ecx+edx], eax
                mov     eax, [esp+50h+var_14]
                mov     [ecx+edx+4], eax
                mov     eax, [esp+50h+var_3C]
                mov     edx, [esp+50h+var_10]
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 0BCE2769h
                xor     ecx, eax
                mov     eax, [esp+50h+var_2C]
                movzx   eax, al
                xor     ecx, eax
                movzx   eax, bl
                mov     ebx, [esp+50h+var_40]
                xor     ecx, eax
                mov     eax, dword ptr [esp+50h+var_C]
                xor     ecx, 5Eh
                pop     edi
                pop     esi
                mov     [ebx+ecx*8], eax
                mov     eax, dword ptr [esp+48h+var_C+4]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+48h+var_4]
                xor     ecx, 0EFADAD65h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___191      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___48       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = qword ptr -2Ch
var_24          = qword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_0]
                mov     edx, ebx
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                sub     edx, edi
                xor     edx, 796594CBh
                mov     [esp+50h+var_40], esi
                movzx   eax, dl
                mov     [esp+50h+var_3C], edx
                push    offset dword_40BD70
                mov     ecx, [esi+eax*8-388h]
                mov     eax, [esi+eax*8-384h]
                mov     [esp+54h+var_C], eax
                mov     eax, edx
                shr     eax, 18h
                mov     [esp+54h+var_10], ecx
                mov     ecx, [esi+eax*8-220h]
                mov     eax, [esi+eax*8-21Ch]
                mov     dword ptr [esp+54h+var_2C+4], eax
                mov     eax, edx
                shr     eax, 8
                movzx   edx, al
                mov     dword ptr [esp+54h+var_2C], ecx
                lea     ecx, [ebx+1A0A019Ah]
                mov     eax, ecx
                mov     [esp+54h+var_34], ecx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [edx+esi+33h]
                mov     eax, [eax+ecx-0Ah]
                mov     [esp+54h+var_8], eax
                mov     eax, [esp+54h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [esi+eax*8-328h]
                mov     eax, [esi+eax*8-324h]
                mov     [esp+54h+var_18], eax
                lea     eax, [ebx+1A0A019Ah]
                movzx   eax, al
                mov     [esp+54h+var_1C], ecx
                mov     ecx, [esi+eax*8+50h]
                mov     eax, [esi+eax*8+54h]
                mov     esi, edi
                mov     dword ptr [esp+54h+var_24+4], eax
                mov     eax, ebx
                shr     esi, 4
                shl     eax, 4
                add     esi, eax
                mov     dword ptr [esp+54h+var_24], ecx
                xor     esi, [esp+54h+var_3C]
                mov     ecx, [esp+54h+var_40]
                mov     edx, esi
                xor     edx, 0B5B0A8A5h
                call    VBN_TransformContext
                lea     eax, [ebx-7B9B199Fh]
                add     eax, edi
                lea     ecx, [ebx+1A0A019Ah]
                xor     eax, ecx
                lea     edx, [edi-72F05691h]
                xor     eax, [esp+50h+var_3C]
                add     edx, ebx
                xor     edx, esi
                mov     [esp+50h+var_30], eax
                xor     edx, ecx
                lea     ecx, [ebx+1F149A50h]
                xor     ecx, eax
                mov     [esp+50h+var_4], edx
                lea     eax, [ebx-288BE817h]
                xor     ecx, esi
                mov     ebx, ecx
                mov     [esp+50h+var_14], ecx
                xor     eax, edx
                xor     ebx, edx
                xor     eax, [esp+50h+var_30]
                xor     ebx, [esp+50h+var_3C]
                xor     ebx, 785BF0C1h
                mov     [esp+50h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     esi, esi
                add     al, 33h ; '3'
                movzx   edi, bl
                movzx   eax, al
                sub     edi, 0Ah
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_2C]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_2C+4]
                xor     eax, 625C8F5h
                xor     ecx, ecx
                mov     dword ptr [esp+50h+var_2C+4], esi
                or      ecx, eax
                mov     esi, [esp+50h+var_40]
                mov     eax, [esp+50h+var_34]
                xor     edx, 0EE87A97Bh
                mov     [edi], ecx
                mov     ecx, ebx
                shr     eax, 10h
                xor     al, 0D8h
                mov     [edi+4], edx
                movzx   eax, al
                cdq
                add     eax, dword ptr [esp+50h+var_24]
                adc     edx, dword ptr [esp+50h+var_24+4]
                shr     ecx, 10h
                movzx   ecx, cl
                shr     ebx, 18h
                mov     [esi+ecx*8-230h], eax
                mov     eax, esi
                mov     [eax+ecx*8-22Ch], edx
                mov     ecx, esi
                mov     eax, [esp+50h+var_1C]
                mov     edx, [esp+50h+var_10]
                mov     [ecx+ebx*8-358h], eax
                mov     eax, [esp+50h+var_18]
                mov     [ecx+ebx*8-354h], eax
                mov     ebx, esi
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_14]
                xor     ecx, [esp+50h+var_34]
                xor     ecx, [esp+50h+var_3C]
                mov     esi, dword ptr [esp+50h+var_2C+4]
                movzx   eax, cl
                xor     eax, 35h
                mov     [ebx+eax*8], edi
                mov     [ebx+eax*8+4], esi
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 1Eh
                shr     ecx, 10h
                pop     edi
                pop     esi
                mov     [eax+ebx], edx
                mov     edx, [esp+48h+var_C]
                mov     [eax+ebx+4], edx
                mov     edx, [esp+48h+var_30]
                movzx   eax, cl
                add     edx, 63620BECh
                mov     ecx, [esp+48h+var_8]
                xor     eax, 0F4h
                and     dword ptr [ebx+eax*8+4], 0
                mov     [ebx+eax*8], ecx
                xor     eax, eax
                mov     ecx, [esp+48h+var_4]
                add     ecx, 9C5CFF76h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___48       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800022ad proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_15          = byte ptr -15h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                mov     eax, [ebp+arg_0]
                and     [esp+1Ch+var_4], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                push    edi
                mov     edi, ecx
                shl     ebx, 4
                mov     ecx, eax
                mov     [esp+28h+var_C], edi
                xor     ecx, esi
                shr     eax, 4
                add     ebx, eax
                mov     [esp+28h+var_10], ecx
                xor     ebx, ecx
                movzx   eax, cl
                xor     eax, 0C6h
                movzx   ecx, bl
                xor     ecx, 0B2h
                lea     edx, [esi+78148FA8h]
                mov     eax, [eax+edi]
                mov     ecx, [eax+ecx]
                lea     eax, [edx-79DB4219h]
                mov     edi, ecx
                sub     edi, eax
                cmp     eax, ecx
                mov     [esp+28h+var_8], edi
                setnbe  [esp+28h+var_15]
                sub     esi, [ebp+arg_0]
                mov     [esp+28h+var_14], esi
                mov     edi, esi
                xor     [esp+28h+var_14], ebx
                xor     edi, edx
                xor     [esp+28h+var_14], edx
                mov     esi, [esp+28h+var_10]
                xor     edi, esi
                mov     edx, esi
                xor     edx, edi
                xor     edx, ebx
                mov     ebx, [esp+28h+var_14]
                mov     [esp+28h+var_10], edx
                xor     edx, ebx
                xor     edx, esi
                xor     edx, 0D56EB172h
                mov     [esp+28h+var_14], edx
                cmp     eax, ecx
                jbe     short loc_497020
                xor     edx, edx
                xor     ebx, 7AB130AAh
                xor     edi, 9A4FE741h
                or      edx, ebx
                jmp     short loc_497040
; ---------------------------------------------------------------------------

loc_497020:                             ; CODE XREF: VBNCB_unnamed_800022ad+9C¡üj
                mov     edx, [ebp+arg_0]
                mov     eax, [esp+28h+var_10]
                add     edx, 6385BD4Fh
                xor     edx, ebx
                add     eax, 0AB9B3804h
                xor     edx, edi
                xor     edi, edi
                sub     edx, 683F6C2Fh
                or      edi, eax

loc_497040:                             ; CODE XREF: VBNCB_unnamed_800022ad+AE¡üj
                mov     eax, [esp+28h+var_14]
                mov     esi, [esp+28h+var_C]
                mov     bl, [esp+28h+var_15]
                movzx   ecx, al
                xor     ecx, 0C9h
                cmp     [esp+28h+var_8], 0
                mov     [esi+ecx*8], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edx
                mov     edx, edi
                pop     edi
                mov     [esi+ecx*8-338h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800022ad endp


VBNCB_unnamed_80002128 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                shr     ebx, 4
                add     ebx, eax
                mov     [esp+24h+var_4], ecx
                movzx   eax, bl
                xor     eax, 0D0h
                push    edi
                mov     eax, [eax+ecx]
                mov     ecx, [eax+48h]
                mov     eax, ebx
                xor     eax, 0A6DD6781h
                mov     edx, ecx
                cmp     eax, ecx
                setnbe  [esp+28h+var_19]
                sub     edx, eax
                mov     [esp+28h+var_14], edx
                mov     edx, [ebp+arg_4]
                mov     edi, edx
                add     edx, 0CF47EF2h
                sub     edi, esi
                add     esi, edx
                xor     edi, ebx
                mov     edx, esi
                xor     edx, edi
                xor     edx, 2CBDDF8Dh
                mov     [esp+28h+var_10], edx
                cmp     eax, ecx
                jbe     short loc_497101
                xor     ebx, 0E3FB8AEAh
                xor     edx, edx
                xor     edi, 8B8B2143h
                mov     [esp+28h+var_18], ebx
                or      edx, edi
                mov     esi, ebx
                jmp     short loc_497120
; ---------------------------------------------------------------------------

loc_497101:                             ; CODE XREF: VBNCB_unnamed_80002128+67¡üj
                mov     edx, [ebp+arg_4]
                xor     esi, ebx
                add     edx, 0C5D4119Ch
                xor     eax, eax
                xor     edx, edi
                sub     esi, 6BFF6B3Ah
                xor     edx, ebx
                add     edx, 4BD99E0Dh
                or      esi, eax

loc_497120:                             ; CODE XREF: VBNCB_unnamed_80002128+7F¡üj
                mov     eax, [esp+28h+var_10]
                mov     edi, [esp+28h+var_4]
                cmp     [esp+28h+var_14], 0
                movzx   ecx, al
                setz    bl
                shr     eax, 8
                mov     [edi+ecx*8-628h], bl
                movzx   ecx, al
                mov     al, [esp+28h+var_19]
                xor     ecx, 5Dh
                mov     [edi+ecx*8], al
                mov     eax, edx
                pop     edi
                mov     edx, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80002128 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___76_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                push    offset dword_40BAB0
                mov     [ebp+var_10], ebx
                lea     eax, [edi-7B48B096h]
                mov     [ebp+var_18], eax
                movzx   eax, al
                mov     ecx, [eax+ebx+37h]
                mov     eax, [eax+ebx+3Bh]
                mov     [ebp+var_C], eax
                lea     eax, [esi+65473014h]
                add     eax, edi
                mov     [ebp+var_8], ecx
                mov     edx, eax
                mov     [ebp+var_4], eax
                xor     edx, 0F1882A36h
                mov     ecx, ebx
                call    VBN_TransformContext
                shr     esi, 4
                lea     eax, [edi-7B48B096h]
                mov     ebx, edi
                lea     ecx, [edi+728B967Ch]
                shl     ebx, 4
                add     ebx, esi
                mov     [ebp+var_14], ebx
                xor     ebx, eax
                xor     ecx, ebx
                xor     ecx, [ebp+var_4]
                mov     eax, ecx
                movzx   esi, cl
                shr     eax, 8
                xor     ecx, ecx
                sub     al, 73h ; 's'
                sub     esi, 11h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_10]
                pop     edi
                sbb     ecx, edx
                add     esi, [ebp+var_8]
                adc     ecx, [ebp+var_C]
                xor     edx, edx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                lea     ecx, [ebx-5EC3AB05h]
                mov     eax, [ebp+var_14]
                xor     eax, [ebp+var_4]
                xor     eax, [ebp+var_18]
                pop     esi
                sub     eax, 430B4FD1h
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___76_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___24       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                push    esi
                mov     ebx, ecx
                and     [esp+4Ch+var_4], 0
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, [ebp+arg_0]
                mov     ecx, edx
                mov     [esp+50h+var_44], ebx
                shr     ecx, 8
                movzx   eax, cl
                mov     [esp+50h+var_40], edx
                shr     edx, 10h
                mov     esi, [esp+50h+var_44]
                mov     ebx, [eax+ebx-0BDh]
                mov     [esp+50h+var_C], ebx
                mov     ebx, [esp+50h+var_44]
                movzx   ecx, cl
                push    offset dword_40A88C
                mov     eax, [eax+ebx-0B9h]
                mov     [esp+54h+var_8], eax
                movzx   eax, dl
                xor     edx, 0D778h
                xor     eax, 10h
                mov     ebx, [eax+ebx]
                mov     dword ptr [esp+54h+var_30], ebx
                mov     ebx, [esp+54h+var_44]
                mov     eax, [eax+ebx+4]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, [esp+54h+var_40]
                movzx   eax, al
                mov     [esp+54h+var_10], eax
                xor     eax, 28h
                mov     ebx, [eax+ebx]
                mov     [esp+54h+var_20], ebx
                mov     ebx, [esp+54h+var_44]
                mov     eax, [eax+ebx+4]
                mov     ebx, [esp+54h+var_40]
                mov     [esp+54h+var_1C], eax
                mov     eax, ebx
                shr     eax, 18h
                mov     eax, [esi+eax*8-568h]
                mov     eax, [eax+ecx-8Dh]
                mov     [esp+54h+var_24], eax
                movzx   ecx, bl
                mov     ebx, esi
                mov     esi, [ebp+arg_0]
                xor     ecx, 0A8h
                movzx   eax, dx
                cdq
                add     eax, [ecx+ebx]
                mov     [esp+54h+var_18], eax
                mov     eax, edi
                adc     edx, [ecx+ebx+4]
                xor     eax, esi
                mov     ecx, [esp+54h+var_44]
                mov     ebx, eax
                xor     ebx, [esp+54h+var_40]
                mov     [esp+54h+var_14], edx
                mov     edx, ebx
                xor     edx, 0BC2267F3h
                mov     [esp+54h+var_3C], eax
                mov     [esp+54h+var_38], ebx
                call    VBN_TransformContext
                mov     edx, [esp+50h+var_40]
                lea     eax, [esi+6827A671h]
                mov     ecx, esi
                xor     eax, ebx
                sub     ecx, edi
                lea     ebx, [edi+79B8F4C5h]
                xor     ecx, edx
                xor     eax, edx
                xor     ecx, edx
                mov     [esp+50h+var_28], eax
                xor     ecx, 4099A96Bh
                xor     ebx, ecx
                mov     [esp+50h+var_34], ecx
                xor     ebx, [esp+50h+var_38]
                mov     eax, ebx
                shr     eax, 8
                xor     al, 51h
                mov     cl, bl
                movzx   eax, al
                xor     cl, 88h
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                sub     eax, esi
                mov     ecx, edx
                sbb     ecx, edi
                add     dword ptr [esp+50h+var_30], eax
                mov     edi, [esp+50h+var_28]
                mov     eax, ebx
                adc     ecx, dword ptr [esp+50h+var_30+4]
                xor     eax, edi
                xor     eax, [esp+50h+var_40]
                mov     esi, dword ptr [esp+50h+var_30]
                mov     dword ptr [esp+50h+var_30+4], ecx
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, edi
                mov     [esp+50h+var_28], eax
                xor     ecx, [esp+50h+var_34]
                xor     eax, 3B168322h
                mov     [esp+50h+var_3C], ecx
                xor     edi, 86B3D111h
                lea     edx, [ecx+4E1B83E4h]
                xor     ecx, ecx
                or      ecx, eax
                mov     [esi], ecx
                mov     ecx, [esp+50h+var_3C]
                xor     ecx, ebx
                mov     [esi+4], edx
                xor     ecx, [esp+50h+var_40]
                xor     ecx, [esp+50h+var_40]
                mov     ebx, [esp+50h+var_44]
                mov     edx, [esp+50h+var_24]
                movzx   eax, cl
                and     dword ptr [ebx+eax*8-654h], 0
                mov     [ebx+eax*8-658h], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_20]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 2Bh
                mov     [eax+ebx], edx
                mov     edx, [esp+50h+var_1C]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_18]
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [ebx+eax*8-0D8h], edx
                mov     edx, [esp+50h+var_14]
                mov     [ebx+eax*8-0D4h], edx
                mov     eax, dword ptr [esp+50h+var_30+4]
                mov     [ebx+ecx*8-544h], eax
                mov     eax, [esp+50h+var_38]
                mov     edx, [esp+50h+var_34]
                mov     [ebx+ecx*8-548h], esi
                xor     edx, 9CBFBE5Ch
                movzx   ecx, al
                mov     eax, [esp+50h+var_28]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                xor     ecx, 0A0h
                xor     ecx, [esp+50h+var_10]
                mov     [ebx+ecx*8-410h], eax
                mov     eax, [esp+50h+var_8]
                mov     [ebx+ecx*8-40Ch], eax
                xor     eax, eax
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___24       endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___41       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     edx, esi
                shr     edx, 4
                add     edx, eax
                mov     [esp+54h+var_48], ecx
                mov     eax, edx
                mov     [esp+54h+var_44], edx
                shr     eax, 10h
                lea     ebx, [esi+31962FD5h]
                movzx   eax, al
                shr     edx, 18h
                push    edi
                mov     edi, [esp+58h+var_48]
                mov     ecx, [eax+ecx-4]
                mov     dword ptr [esp+58h+var_34], ecx
                mov     ecx, [esp+58h+var_48]
                mov     [esp+58h+var_2C], ebx
                push    offset dword_40A590
                mov     eax, [eax+ecx]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                mov     eax, [esp+5Ch+var_48]
                mov     eax, [edx+eax-4Eh]
                mov     eax, [eax+ecx+47h]
                mov     [esp+5Ch+var_18], eax
                mov     eax, [esp+5Ch+var_44]
                movzx   ecx, al
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 0A5h
                movzx   eax, al
                cdq
                add     eax, [edi+ecx*8-0D8h]
                mov     [esp+5Ch+var_10], eax
                mov     eax, edi
                adc     edx, [eax+ecx*8-0D4h]
                movzx   eax, bl
                mov     ebx, edi
                mov     edi, [ebp+arg_0]
                mov     ecx, eax
                xor     ecx, 0CAh
                mov     [esp+5Ch+var_14], eax
                mov     [esp+5Ch+var_C], edx
                mov     eax, [ecx+ebx]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [ecx+ebx+4]
                mov     [esp+5Ch+var_1C], eax
                mov     eax, [esp+5Ch+var_44]
                shr     eax, 8
                movzx   eax, al
                mov     ecx, [eax+ebx-0A8h]
                mov     eax, [eax+ebx-0A4h]
                lea     ebx, [edi-4F5DC85Ah]
                add     ebx, esi
                mov     [esp+5Ch+var_28], ecx
                xor     ebx, [esp+5Ch+var_44]
                mov     ecx, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_24], eax
                mov     [esp+5Ch+var_40], ebx
                lea     edx, [ebx-71F9E314h]
                call    VBN_TransformContext
                lea     edx, [edi+503F4666h]
                add     edx, esi
                lea     ecx, [esi+31962FD5h]
                xor     edx, ebx
                lea     eax, [esi-45C622A9h]
                xor     eax, ecx
                lea     ebx, [edi+22D303CBh]
                xor     eax, [esp+58h+var_44]
                add     ebx, esi
                xor     edx, ecx
                mov     [esp+58h+var_8], eax
                xor     ebx, eax
                mov     [esp+58h+var_4], edx
                xor     ebx, [esp+58h+var_40]
                mov     ecx, [esp+58h+var_44]
                xor     esi, esi
                xor     ecx, edx
                movzx   edi, bl
                xor     ecx, eax
                sub     edi, 0A3h
                mov     eax, ebx
                mov     [esp+58h+var_38], ecx
                xor     eax, edx
                xor     eax, [esp+58h+var_44]
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                shr     eax, 8
                sub     al, 12h
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+58h+var_3C]
                sbb     esi, edx
                add     edi, dword ptr [esp+58h+var_34]
                lea     edx, [ecx+554C95F8h]
                adc     esi, dword ptr [esp+58h+var_34+4]
                xor     eax, 9A59666Ah
                xor     ecx, ecx
                or      ecx, eax
                mov     [edi], ecx
                mov     ecx, [esp+58h+var_38]
                xor     ecx, ebx
                mov     [edi+4], edx
                xor     ecx, [esp+58h+var_2C]
                xor     ecx, [esp+58h+var_44]
                mov     ebx, [esp+58h+var_48]
                mov     edx, [esp+58h+var_28]
                movzx   eax, cl
                xor     eax, 45h
                mov     [eax+ebx], edx
                mov     edx, [esp+58h+var_24]
                mov     [eax+ebx+4], edx
                mov     eax, ecx
                mov     edx, [esp+58h+var_20]
                shr     eax, 8
                movzx   eax, al
                mov     [ebx+eax*8-298h], edi
                mov     [ebx+eax*8-294h], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                pop     edi
                pop     esi
                mov     [ebx+eax*8-1D8h], edx
                mov     edx, [esp+50h+var_1C]
                mov     [ebx+eax*8-1D4h], edx
                and     dword ptr [ebx+ecx*8-14Ch], 0
                mov     eax, [esp+50h+var_18]
                mov     [ebx+ecx*8-150h], eax
                mov     eax, [esp+50h+var_40]
                mov     edx, [esp+50h+var_8]
                movzx   ecx, al
                add     edx, 0FF0076A4h
                mov     eax, [esp+50h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_10]
                xor     ecx, 0F0h
                xor     ecx, [esp+50h+var_14]
                mov     [ebx+ecx*8], eax
                mov     eax, [esp+50h+var_C]
                mov     [ebx+ecx*8+4], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_4]
                add     ecx, 8AB1835Fh
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___41       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___141_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_C], 0
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                shl     eax, 4
                mov     [ebp+var_4], ecx
                push    edi
                mov     edi, [ebp+arg_4]
                lea     ebx, [esi-52D123B8h]
                lea     ecx, [esi+2A9D53C3h]
                mov     edx, edi
                shr     edx, 4
                add     ecx, edi
                add     edx, eax
                xor     ecx, edx
                mov     [ebp+var_C], edx
                mov     eax, edx
                xor     ecx, ebx
                xor     eax, ebx
                movzx   esi, cl
                mov     [ebp+var_8], eax
                sub     esi, 87h
                mov     eax, ecx
                xor     ecx, ecx
                shr     eax, 8
                xor     al, 3Dh
                movzx   eax, al
                cdq
                sub     esi, eax
                movzx   eax, bl
                mov     ebx, [ebp+var_C]
                sbb     ecx, edx
                mov     edx, [ebp+var_4]
                push    offset dword_40A6B0
                add     esi, [eax+edx+0Dh]
                adc     ecx, [eax+edx+11h]
                mov     [edx+1B8h], esi
                mov     esi, [ebp+var_8]
                mov     [edx+1BCh], ecx
                mov     edx, [ebp+arg_0]
                mov     ecx, [ebp+var_4]
                xor     edx, edi
                xor     edx, esi
                xor     edx, ebx
                xor     edx, 0C2B2AE17h
                call    VBN_TransformContext
                xor     ebx, 0DC345813h
                xor     esi, 0FCAE0779h
                xor     eax, eax
                mov     edx, ebx
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___141_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_800023d2 proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_21          = byte ptr -21h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 24h
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                and     [esp+2Ch+var_C], 0
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_4]
                sub     eax, edi
                mov     ebx, eax
                mov     [esp+30h+var_18], eax
                xor     ebx, 0EB0ADAE6h
                mov     [esp+30h+var_4], esi
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 86h
                movzx   ecx, al
                xor     ecx, 94h
                mov     eax, [edx+esi]
                mov     esi, [eax+ecx]
                mov     ecx, edi
                xor     ecx, [ebp+arg_0]
                mov     eax, edi
                mov     [esp+30h+var_14], esi
                lea     edx, [ecx+79F4131h]
                cmp     edx, esi
                setnbe  [esp+30h+var_21]
                shr     eax, 4
                mov     [esp+30h+var_20], eax
                sub     esi, edx
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                add     [esp+30h+var_20], eax
                mov     eax, edi
                xor     [esp+30h+var_20], ebx
                shl     eax, 4
                mov     [esp+30h+var_1C], eax
                mov     eax, [ebp+arg_0]
                shr     eax, 4
                add     [esp+30h+var_1C], eax
                mov     eax, [esp+30h+var_1C]
                mov     [esp+30h+var_10], esi
                xor     eax, ecx
                mov     esi, [ebp+arg_0]
                xor     eax, ebx
                mov     ebx, [esp+30h+var_20]
                add     esi, 0B953939Ch
                add     esi, edi
                xor     esi, ebx
                xor     esi, ecx
                mov     ecx, [esp+30h+var_18]
                xor     ecx, esi
                xor     ecx, eax
                xor     ecx, 9559CBB9h
                mov     [esp+30h+var_18], ecx
                cmp     edx, [esp+30h+var_14]
                jbe     short loc_497854
                xor     edi, edi
                lea     edx, [ebx-0A29A7BBh]
                add     eax, 0A8121BD8h
                or      edi, eax
                jmp     short loc_49786C
; ---------------------------------------------------------------------------

loc_497854:                             ; CODE XREF: VBNCB_unnamed_800023d2+C1¡üj
                xor     edi, [ebp+arg_0]
                xor     edx, edx
                xor     edi, eax
                mov     eax, esi
                xor     edi, ebx
                add     eax, 0FF0AF036h
                sub     edi, 5F1DB7B6h
                or      edx, eax

loc_49786C:                             ; CODE XREF: VBNCB_unnamed_800023d2+D2¡üj
                cmp     [esp+30h+var_10], 0
                mov     esi, [esp+30h+var_4]
                mov     eax, [esp+30h+var_18]
                setz    bl
                movzx   ecx, cl
                xor     ecx, 5Fh
                shr     eax, 8
                mov     [esi+ecx*8], bl
                movzx   ecx, al
                mov     al, [esp+30h+var_21]
                mov     [esi+ecx*8-308h], al
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_800023d2 endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___147_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     edx, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_4]
                push    edi
                push    offset dword_40AB20
                mov     [ebp+var_8], esi
                lea     eax, [ecx+28C1F3Ch]
                mov     [ebp+var_4], eax
                movzx   eax, al
                mov     ebx, [eax+esi-11h]
                mov     edi, [eax+esi-0Dh]
                lea     eax, [ecx-1A346177h]
                add     eax, edx
                mov     ecx, esi
                add     edx, 681E6E36h
                mov     [ebp+var_C], eax
                xor     edx, eax
                xor     edx, [ebp+var_4]
                add     edx, 1681A1Bh
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     ecx, ecx
                shr     eax, 8
                movzx   esi, al
                mov     eax, [ebp+var_4]
                sub     esi, 7Bh ; '{'
                shr     eax, 10h
                xor     al, 61h
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, [ebp+var_8]
                sbb     ecx, edx
                add     esi, ebx
                adc     ecx, edi
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], ecx
                xor     edx, edx
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+var_C]
                add     eax, 0C44BFAF1h
                xor     eax, [ebp+var_4]
                add     ecx, 5DEF5414h
                pop     edi
                pop     esi
                xor     eax, 2864AE4Dh
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___147_stk  endp

; int VRSAVaultSignPKCS(const void *(*)(unsigned int *, unsigned int *), int (*)(void *, const void *), unsigned int, const unsigned __int8 *, unsigned int, unsigned __int8 *, unsigned int *)




; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame




vBng_0          proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                shl     eax, 4
                push    ebx
                shr     edx, 4
                add     edx, eax
                mov     [esp+10h+var_C], ecx
                mov     ebx, [esp+10h+var_C]
                movzx   eax, dl
                push    esi
                push    edi
                mov     edi, [eax+ecx+90h]
                mov     eax, edx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0F6h
                mov     esi, [ecx+eax*8]
                mov     eax, edx
                shr     eax, 8
                mov     ecx, edx
                movzx   eax, al
                xor     ecx, 0AFD1AB21h
                mov     eax, [ebx+eax*8-440h]
                mov     ebx, [ebp+arg_0]
                add     ebx, 3CB001Bh
                xor     ebx, edx
                xor     edx, edx
                mov     [eax], ecx
                mov     eax, ebx
                shr     eax, 8
                movzx   ecx, al
                xor     eax, eax
                xor     ecx, 6Eh
                inc     eax
                call    __allshl
                mov     [edi], eax
                mov     eax, [esi]
                mov     edx, [esi+4]
                mov     esi, [esp+18h+var_C]
                movzx   ecx, bl
                shr     ebx, 18h
                pop     edi
                lea     ecx, dword_40ACFC[ecx]
                and     dword ptr [esi+ebx*8-23Ch], 0
                mov     [esi+ebx*8-240h], ecx
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng_0          endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___167_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     edx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, ecx
                and     [ebp+var_10], 0
                mov     [ebp+var_8], edi
                lea     ecx, [esi-3BADCAB7h]
                add     ecx, edx
                movzx   eax, cl
                xor     eax, 0D5h
                push    offset dword_40CA40
                mov     ebx, [eax+edi]
                mov     edi, [eax+edi+4]
                mov     eax, esi
                xor     eax, edx
                shr     edx, 4
                mov     [ebp+var_4], eax
                mov     eax, esi
                shl     eax, 4
                add     edx, eax
                xor     edx, ecx
                mov     [ebp+var_C], edx
                mov     edx, [ebp+arg_4]
                sub     edx, esi
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, [ebp+var_8]
                xor     edx, 3FEECA89h
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                shl     eax, 4
                shr     esi, 4
                add     eax, esi
                xor     eax, [ebp+var_C]
                xor     eax, [ebp+var_4]
                mov     [ebp+var_10], eax
                shr     eax, 8
                xor     al, 8Eh
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_10]
                xor     al, 0CFh
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_8]
                sbb     edx, esi
                add     eax, ebx
                adc     edx, edi
                mov     [ecx+1B8h], eax
                mov     [ecx+1BCh], edx
                xor     eax, eax
                mov     ecx, [ebp+var_C]
                mov     edx, [ebp+var_4]
                add     ecx, 27535FA0h
                pop     edi
                pop     esi
                add     edx, 0F4742070h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___167_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___13_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     edx, [ebp+arg_4]
                xor     edx, [ebp+arg_0]
                and     [ebp+var_8], 0
                push    ebx
                movzx   eax, dl
                push    esi
                xor     eax, 0Ch
                mov     [ebp+var_4], edx
                push    edi
                push    offset sub_40BC70
                add     edx, 0C5E5DB60h
                mov     [ebp+var_10], ecx
                mov     ebx, [eax+ecx]
                mov     edi, [eax+ecx+4]
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     eax, [ebp+arg_4]
                xor     eax, [ebp+arg_0]
                mov     [ebp+var_8], eax
                shr     eax, 8
                xor     eax, 8
                movzx   eax, ax
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [ebp+var_8]
                movzx   eax, al
                cdq
                sub     eax, ecx
                mov     ecx, [ebp+var_10]
                sbb     edx, esi
                mov     esi, [ebp+arg_0]
                add     eax, ebx
                mov     ebx, [ebp+arg_4]
                mov     [ecx+1B8h], eax
                adc     edx, edi
                sub     esi, ebx
                xor     esi, [ebp+var_8]
                xor     eax, eax
                mov     [ecx+1BCh], edx
                lea     edx, [ebx+21F9BA9Ah]
                mov     ecx, [ebp+var_4]
                xor     edx, ecx
                xor     esi, ecx
                xor     edx, ecx
                xor     esi, 0F3D96D4Ch
                add     edx, 4249A2A7h
                pop     edi
                or      eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___13_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___165      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, esi
                push    edi
                mov     edi, ecx
                and     [esp+58h+var_4], 0
                mov     ecx, [ebp+arg_4]
                mov     eax, esi
                shr     eax, 4
                mov     edx, ecx
                xor     ebx, ecx
                shl     edx, 4
                add     edx, eax
                mov     [esp+58h+var_40], edi
                mov     eax, esi
                mov     [esp+58h+var_44], edx
                sub     eax, ecx
                mov     [esp+58h+var_4C], eax
                xor     eax, ebx
                xor     eax, 3583B01Bh
                mov     [esp+58h+var_48], eax
                movzx   eax, bl
                push    offset dword_40C4B0
                mov     ecx, [edi+eax*8-1C8h]
                mov     eax, [edi+eax*8-1C4h]
                mov     dword ptr [esp+5Ch+var_20+4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 79h
                mov     dword ptr [esp+5Ch+var_20], ecx
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     [esp+5Ch+var_10], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     [esp+5Ch+var_14], ecx
                mov     ecx, [edi+eax*8-570h]
                mov     eax, [edi+eax*8-56Ch]
                mov     dword ptr [esp+5Ch+var_30+4], eax
                mov     eax, ebx
                shr     eax, 18h
                xor     eax, 1Eh
                mov     dword ptr [esp+5Ch+var_30], ecx
                mov     ecx, [edi+eax*8]
                mov     eax, [edi+eax*8+4]
                mov     edi, [esp+5Ch+var_48]
                mov     [esp+5Ch+var_24], eax
                movzx   eax, dl
                sub     eax, 0C4h
                mov     [esp+5Ch+var_28], ecx
                add     eax, eax
                lea     edx, [edi-2D7E8668h]
                mov     eax, [ecx+eax*8]
                mov     ecx, [esp+5Ch+var_40]
                mov     [esp+5Ch+var_18], eax
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                mov     ecx, ebx
                sub     eax, esi
                xor     ecx, edi
                mov     esi, [esp+58h+var_44]
                xor     eax, esi
                xor     eax, ebx
                xor     ecx, esi
                mov     [esp+58h+var_3C], eax
                mov     eax, [esp+58h+var_4C]
                mov     edx, eax
                xor     edx, [esp+58h+var_3C]
                xor     eax, ecx
                xor     eax, [esp+58h+var_3C]
                xor     edx, edi
                xor     eax, 0E4871281h
                mov     [esp+58h+var_C], ecx
                xor     edx, 0F4CA3079h
                mov     [esp+58h+var_4C], eax
                mov     eax, edx
                mov     [esp+58h+var_8], edx
                xor     eax, ecx
                xor     eax, ebx
                mov     ecx, [esp+58h+var_4C]
                xor     eax, 5415E21Ch
                mov     [esp+58h+var_38], eax
                mov     eax, ecx
                xor     eax, edx
                xor     eax, esi
                xor     eax, ebx
                mov     [esp+58h+var_34], eax
                mov     eax, ecx
                shr     eax, 8
                xor     cl, 14h
                sub     al, 19h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, edx
                mov     edx, [esp+58h+var_38]
                sub     ebx, esi
                sbb     eax, edi
                add     ebx, dword ptr [esp+58h+var_30]
                mov     edi, [esp+58h+var_40]
                adc     eax, dword ptr [esp+58h+var_30+4]
                lea     esi, [edx-14D7EA07h]
                mov     dword ptr [esp+58h+var_30+4], eax
                xor     ecx, ecx
                mov     eax, [esp+58h+var_34]
                add     eax, 45B29C94h
                mov     dword ptr [esp+58h+var_30], ebx
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_28]
                mov     [ebx+4], esi
                mov     ebx, edx
                xor     ebx, [esp+58h+var_4C]
                xor     ebx, [esp+58h+var_48]
                xor     ebx, [esp+58h+var_44]
                movzx   eax, bl
                mov     [eax+edi-3Ch], ecx
                mov     ecx, [esp+58h+var_24]
                mov     [eax+edi-38h], ecx
                xor     ecx, ecx
                mov     eax, [esp+58h+var_3C]
                movzx   esi, al
                mov     eax, ebx
                lea     edx, [esi-13h]
                add     edx, dword ptr [esp+58h+var_20]
                adc     ecx, dword ptr [esp+58h+var_20+4]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 15h
                mov     [edi+eax*8+4], ecx
                mov     ecx, [esp+58h+var_18]
                mov     [edi+eax*8], edx
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 6Fh
                shr     ebx, 18h
                and     dword ptr [edi+eax*8+4], 0
                mov     [edi+eax*8], ecx
                mov     eax, dword ptr [esp+58h+var_30]
                mov     [edi+ebx*8-620h], eax
                mov     eax, dword ptr [esp+58h+var_30+4]
                mov     [edi+ebx*8-61Ch], eax
                mov     eax, [esp+58h+var_48]
                movzx   ecx, al
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_34]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_14]
                xor     ecx, 0Fh
                xor     ecx, esi
                mov     [edi+ecx*8], eax
                mov     eax, [esp+58h+var_10]
                mov     edx, [esp+58h+var_C]
                mov     [edi+ecx*8+4], eax
                add     edx, 0A44DD09Ch
                mov     ecx, [esp+58h+var_8]
                xor     eax, eax
                pop     edi
                xor     ecx, 71D8D952h
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___165      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___159      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                mov     edx, [ebp+arg_0]
                mov     eax, edx
                shr     eax, 4
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ebx, esi
                shl     ebx, 4
                add     ebx, eax
                and     [esp+4Ch+var_4], 0
                push    edi
                mov     edi, ecx
                mov     [esp+50h+var_44], ebx
                mov     ecx, esi
                mov     [esp+50h+var_34], edi
                xor     ecx, edx
                movzx   eax, cl
                mov     [esp+50h+var_40], ecx
                shr     ecx, 18h
                xor     ecx, 7Ch
                mov     ebx, [edi+eax*8-108h]
                mov     eax, [edi+eax*8-104h]
                mov     [esp+50h+var_10], eax
                mov     eax, [esp+50h+var_44]
                movzx   eax, al
                xor     eax, 5Bh
                mov     [esp+50h+var_14], ebx
                push    offset dword_40C3B8
                mov     eax, [ebx+eax*4]
                mov     [esp+54h+var_8], eax
                mov     eax, [esp+54h+var_44]
                shr     eax, 8
                movzx   ebx, al
                xor     eax, eax
                add     ebx, 48h ; 'H'
                add     ebx, [ecx+edi]
                mov     [esp+54h+var_1C], ebx
                adc     eax, [ecx+edi+4]
                mov     ebx, [esp+54h+var_40]
                mov     [esp+54h+var_18], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                mov     ecx, [edi+eax*8-558h]
                mov     eax, [edi+eax*8-554h]
                mov     [esp+54h+var_24], ecx
                mov     ecx, edx
                sub     ecx, esi
                mov     [esp+54h+var_20], eax
                xor     ecx, [esp+54h+var_44]
                lea     eax, [edx-5A9FA4A2h]
                xor     ecx, ebx
                shl     edx, 4
                xor     ecx, 698209Ch
                add     eax, esi
                xor     eax, ebx
                mov     [esp+54h+var_3C], ecx
                mov     [esp+54h+var_30], eax
                mov     ecx, esi
                shr     ecx, 4
                add     ecx, edx
                mov     edx, [esp+54h+var_40]
                xor     ecx, eax
                mov     eax, ebx
                xor     ecx, [esp+54h+var_44]
                shr     eax, 8
                xor     edx, ecx
                xor     edx, [esp+54h+var_3C]
                movzx   eax, al
                mov     [esp+54h+var_38], ecx
                mov     [esp+54h+var_28], edx
                mov     ebx, [eax+edi+57h]
                mov     edi, [eax+edi+5Bh]
                lea     eax, [esi+496AF5FBh]
                xor     eax, [esp+54h+var_3C]
                xor     eax, [esp+54h+var_30]
                mov     [esp+54h+var_2C], eax
                xor     eax, ecx
                xor     eax, [esp+54h+var_40]
                xor     eax, 876C387Dh
                mov     [esp+54h+var_C], eax
                mov     ecx, [esp+54h+var_34]
                lea     edx, [eax+400B3E63h]
                call    VBN_TransformContext
                mov     eax, [esp+50h+var_38]
                shr     eax, 8
                add     al, 46h ; 'F'
                movzx   eax, al
                cdq
                mov     ecx, eax
                mov     esi, edx
                mov     eax, [esp+50h+var_38]
                xor     al, 0F6h
                movzx   eax, al
                cdq
                mov     [esp+50h+var_38], eax
                mov     eax, edx
                mov     edx, [esp+50h+var_38]
                sub     edx, ecx
                sbb     eax, esi
                add     edx, ebx
                mov     ebx, [esp+50h+var_28]
                adc     eax, edi
                mov     edi, [esp+50h+var_2C]
                mov     [esp+50h+var_38], eax
                xor     ecx, ecx
                lea     eax, [ebx+26819C0Bh]
                or      ecx, eax
                lea     esi, [edi-41D2AAF5h]
                mov     [edx], ecx
                mov     ecx, ebx
                xor     ecx, edi
                mov     [edx+4], esi
                xor     ecx, [esp+50h+var_44]
                xor     ecx, [esp+50h+var_40]
                mov     edi, [esp+50h+var_34]
                mov     esi, [esp+50h+var_24]
                movzx   eax, cl
                mov     [edi+eax*8-280h], esi
                mov     esi, [esp+50h+var_20]
                mov     [edi+eax*8-27Ch], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_1C]
                shr     eax, 8
                movzx   eax, al
                xor     eax, 6Ch
                mov     [edi+eax*8], esi
                mov     esi, [esp+50h+var_18]
                mov     [edi+eax*8+4], esi
                mov     eax, ecx
                mov     esi, [esp+50h+var_14]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 5Ch
                shr     ecx, 18h
                xor     ecx, 22h
                mov     [eax+edi], esi
                mov     esi, [esp+50h+var_10]
                mov     [eax+edi+4], esi
                mov     eax, [esp+50h+var_38]
                mov     [edi+ecx*8+4], eax
                mov     eax, [esp+50h+var_44]
                mov     [edi+ecx*8], edx
                mov     edx, [esp+50h+var_30]
                movzx   ecx, al
                movzx   eax, dl
                add     edx, 0AA08308Dh
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, [esp+50h+var_C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+50h+var_8]
                xor     ecx, 0C1h
                and     dword ptr [edi+ecx*8+4], 0
                mov     [edi+ecx*8], eax
                xor     eax, eax
                mov     ecx, [esp+50h+var_3C]
                add     ecx, 96494AD2h
                or      eax, ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___159      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

VBNCB_unnamed_80001f4c proc near        ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_19          = byte ptr -19h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 1Ch
                push    ebx
                mov     ebx, [ebp+arg_4]
                and     [esp+20h+var_C], 0
                add     ebx, 96C6E2F9h
                push    esi
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                add     ebx, edi
                movzx   edx, bl
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 0Fh
                movzx   ecx, al
                xor     ecx, 0F8h
                mov     [esp+28h+var_4], esi
                mov     eax, [edx+esi]
                mov     esi, [eax+ecx]
                lea     ecx, [edi+2E672333h]
                mov     eax, [ebp+arg_4]
                add     ecx, eax
                mov     edx, ecx
                mov     [esp+28h+var_14], esi
                xor     edx, 328CD27Ah
                cmp     edx, esi
                setnbe  [esp+28h+var_19]
                sub     eax, edi
                xor     eax, ebx
                sub     [esp+28h+var_14], edx
                mov     [esp+28h+var_18], eax
                mov     eax, edi
                xor     eax, [ebp+arg_4]
                xor     eax, ecx
                xor     eax, ebx
                mov     ebx, [ebp+arg_4]
                mov     [esp+28h+var_10], eax
                mov     eax, edi
                shr     eax, 4
                shl     ebx, 4
                add     ebx, eax
                mov     eax, [ebp+arg_4]
                xor     ebx, [esp+28h+var_18]
                add     eax, 0B3D632F5h
                xor     ebx, ecx
                mov     ecx, [esp+28h+var_10]
                xor     eax, ebx
                xor     eax, ecx
                mov     [esp+28h+var_10], eax
                cmp     edx, esi
                jbe     short loc_4A11FD
                mov     edx, [esp+28h+var_18]
                lea     eax, [ecx-0EDA1BCFh]
                xor     edi, edi
                add     edx, 0C8192701h
                or      edi, eax
                mov     eax, [esp+28h+var_10]
                jmp     short loc_4A1216
; ---------------------------------------------------------------------------

loc_4A11FD:                             ; CODE XREF: VBNCB_unnamed_80001f4c+A1¡üj
                sub     edi, [ebp+arg_4]
                xor     edx, edx
                xor     edi, ecx
                xor     ebx, 72643BF5h
                xor     edi, [esp+28h+var_18]
                xor     edi, 4A65650Dh
                or      edx, ebx

loc_4A1216:                             ; CODE XREF: VBNCB_unnamed_80001f4c+BB¡üj
                mov     esi, [esp+28h+var_4]
                mov     bl, [esp+28h+var_19]
                movzx   ecx, al
                xor     ecx, 3
                cmp     [esp+28h+var_14], 0
                mov     [esi+ecx*8], bl
                setz    bl
                shr     eax, 8
                movzx   ecx, al
                mov     eax, edi
                pop     edi
                mov     [esi+ecx*8-0C8h], bl
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
VBNCB_unnamed_80001f4c endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___14       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 44h
                push    ebx
                mov     ebx, [ebp+arg_4]
                mov     edx, ebx
                push    esi
                shl     edx, 4
                mov     esi, ecx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                shr     eax, 4
                add     edx, eax
                shr     ebx, 4
                mov     eax, edx
                mov     [esp+50h+var_40], edx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 3Dh
                mov     [esp+50h+var_3C], esi
                push    offset dword_40C7BC
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     dword ptr [esp+54h+var_30+4], eax
                mov     eax, edi
                shl     eax, 4
                add     ebx, eax
                mov     dword ptr [esp+54h+var_30], ecx
                movzx   eax, bl
                xor     eax, 0A7h
                mov     [esp+54h+var_20], ebx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+54h+var_8], eax
                mov     eax, edx
                shr     eax, 10h
                movzx   edx, al
                mov     eax, ebx
                shr     eax, 8
                xor     edx, 47h
                mov     [esp+54h+var_C], ecx
                movzx   ecx, al
                xor     ecx, 9Bh
                mov     eax, [esi+edx*8]
                mov     eax, [eax+ecx]
                mov     ecx, [esp+54h+var_40]
                mov     [esp+54h+var_28], eax
                mov     eax, ebx
                shr     eax, 10h
                shr     ecx, 18h
                movzx   edx, al
                xor     ecx, 0E3h
                xor     eax, eax
                add     edx, 31h ; '1'
                add     edx, [esi+ecx*8]
                mov     [esp+54h+var_1C], edx
                adc     eax, [esi+ecx*8+4]
                mov     edx, [esp+54h+var_40]
                mov     [esp+54h+var_18], eax
                movzx   eax, dl
                xor     eax, 6Bh
                mov     ecx, [esi+eax*8]
                mov     eax, [esi+eax*8+4]
                mov     esi, ebx
                xor     esi, edx
                mov     [esp+54h+var_14], ecx
                mov     ecx, [esp+54h+var_3C]
                mov     [esp+54h+var_10], eax
                lea     edx, [esi-2AE5024Fh]
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                lea     edx, [edi+6053E3AFh]
                sub     ecx, edi
                xor     edx, ebx
                xor     edx, [esp+50h+var_40]
                xor     ecx, esi
                xor     ecx, ebx
                mov     [esp+50h+var_4], edx
                mov     [esp+50h+var_34], ecx
                mov     ecx, [esp+50h+var_40]
                xor     ecx, edx
                xor     ecx, esi
                mov     [esp+50h+var_24], ecx
                mov     ebx, ecx
                lea     eax, [edi+2D758655h]
                xor     eax, [esp+50h+var_34]
                xor     esi, esi
                xor     ebx, [esp+50h+var_34]
                xor     eax, edx
                xor     ebx, [esp+50h+var_40]
                mov     [esp+50h+var_38], eax
                xor     ebx, 7DFB8385h
                mov     eax, ebx
                movzx   edi, bl
                shr     eax, 8
                sub     edi, 78h ; 'x'
                xor     al, 0BAh
                movzx   eax, al
                cdq
                sub     edi, eax
                mov     eax, [esp+50h+var_38]
                sbb     esi, edx
                add     edi, dword ptr [esp+50h+var_30]
                mov     edx, ecx
                adc     esi, dword ptr [esp+50h+var_30+4]
                xor     eax, 0AC13D072h
                xor     ecx, ecx
                xor     edx, 0B87FB553h
                or      ecx, eax
                mov     eax, ebx
                mov     [edi], ecx
                mov     ecx, [esp+50h+var_28]
                mov     [edi+4], edx
                mov     edx, [esp+50h+var_3C]
                shr     eax, 10h
                movzx   eax, al
                shr     ebx, 18h
                and     dword ptr [edx+eax*8+0D4h], 0
                mov     [edx+eax*8+0D0h], ecx
                mov     ecx, [esp+50h+var_38]
                xor     ecx, [esp+50h+var_24]
                xor     ecx, [esp+50h+var_20]
                xor     ecx, [esp+50h+var_40]
                mov     [edx+ebx*8+50h], edi
                mov     edi, edx
                mov     edx, [esp+50h+var_1C]
                movzx   eax, cl
                xor     eax, 2Bh
                mov     [edi+ebx*8+54h], esi
                mov     [edi+eax*8], edx
                mov     edx, [esp+50h+var_18]
                mov     [edi+eax*8+4], edx
                mov     eax, ecx
                mov     edx, [esp+50h+var_14]
                shr     eax, 8
                movzx   eax, al
                shr     ecx, 10h
                mov     [edi+eax*8-358h], edx
                mov     edx, [esp+50h+var_10]
                mov     [edi+eax*8-354h], edx
                mov     edx, [esp+50h+var_4]
                movzx   eax, cl
                xor     edx, 0A62278B9h
                mov     ecx, [esp+50h+var_C]
                xor     eax, 0D2h
                mov     [eax+edi], ecx
                mov     ecx, [esp+50h+var_8]
                mov     [eax+edi+4], ecx
                xor     eax, eax
                mov     ecx, [esp+50h+var_34]
                pop     edi
                add     ecx, 0D329488Dh
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___14       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___62_stk   proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, [ebp+arg_4]
                mov     edx, [ebp+arg_0]
                add     eax, 61EEE440h
                add     eax, edx
                sub     edx, [ebp+arg_4]
                push    ebx
                mov     [ebp+var_8], eax
                push    esi
                mov     esi, ecx
                movzx   eax, al
                xor     eax, 0F0h
                mov     [ebp+var_4], edx
                xor     edx, 4937F4A9h
                mov     [ebp+var_10], esi
                push    edi
                mov     [ebp+var_14], edx
                mov     ecx, [eax+esi]
                mov     ebx, [eax+esi+4]
                lea     edx, [edx-30E819D3h]
                mov     [ebp+var_C], ecx
                mov     ecx, esi
                push    offset dword_40C2D0
                call    VBN_TransformContext
                mov     ecx, [ebp+var_4]
                xor     ecx, [ebp+var_8]
                xor     ecx, 0CB3AC6A4h
                mov     eax, ecx
                mov     [ebp+var_4], ecx
                shr     eax, 8
                xor     cl, 82h
                xor     al, 0A3h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                mov     ecx, [ebp+var_10]
                cdq
                sub     eax, esi
                sbb     edx, edi
                add     eax, [ebp+var_C]
                mov     [ecx+1B8h], eax
                adc     edx, ebx
                xor     eax, eax
                mov     [ecx+1BCh], edx
                mov     ecx, [ebp+arg_4]
                mov     edx, ecx
                sub     edx, [ebp+arg_0]
                add     ecx, 6BFB688Eh
                xor     ecx, [ebp+var_4]
                xor     edx, [ebp+var_14]
                xor     ecx, [ebp+var_14]
                xor     edx, [ebp+var_8]
                xor     ecx, 7CCB9DE4h
                pop     edi
                pop     esi
                add     edx, 7993DFD5h
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___62_stk   endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___146_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                xor     eax, eax
                mov     [ebp+var_4], ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ecx, esi
                xor     eax, esi
                xor     ecx, ebx
                mov     [ebp+var_8], eax
                mov     edx, esi
                shl     edx, 4
                mov     eax, ebx
                shr     eax, 4
                add     edx, eax
                mov     eax, ebx
                shl     eax, 4
                xor     ebx, esi
                xor     ebx, ecx
                mov     [ebp+var_8], edx
                xor     ebx, edx
                push    edi
                mov     edi, esi
                mov     esi, [ebp+var_4]
                shr     edi, 4
                add     edi, eax
                mov     eax, ebx
                xor     edi, ecx
                shr     eax, 8
                sub     al, 36h ; '6'
                movzx   ecx, cl
                xor     ecx, 0E5h
                movzx   eax, al
                cdq
                push    offset dword_40BB40
                mov     esi, [ecx+esi]
                sub     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [ecx+eax+4]
                sbb     ecx, edx
                movzx   eax, bl
                mov     ebx, [ebp+var_4]
                sub     eax, 0EAh
                mov     edx, [ebp+arg_0]
                add     esi, eax
                mov     eax, [ebp+arg_4]
                adc     ecx, 0
                add     eax, 6F83D4DBh
                add     edx, eax
                mov     [ebx+1B8h], esi
                mov     esi, [ebp+var_8]
                xor     edx, edi
                xor     edx, esi
                mov     [ebx+1BCh], ecx
                xor     edx, 33053BB1h
                mov     ecx, ebx
                call    VBN_TransformContext
                xor     edi, 0A0323644h
                lea     edx, [esi+15C40F8Fh]
                xor     eax, eax
                or      eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___146_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___17       proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 3Ch
                push    ebx
                mov     edx, ecx
                mov     ecx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     ebx, ecx
                sub     ebx, esi
                mov     [esp+44h+var_38], edx
                push    edi
                push    offset dword_40C088
                lea     eax, [esi-1CAECED2h]
                mov     [esp+4Ch+var_20], ebx
                mov     [esp+4Ch+var_34], eax
                lea     edi, [esi-1CAECED2h]
                lea     eax, [ecx-6773F501h]
                add     eax, esi
                xor     eax, ebx
                mov     [esp+4Ch+var_3C], eax
                mov     eax, ebx
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 0B4h
                mov     ecx, [edx+eax*8]
                mov     eax, [edx+eax*8+4]
                mov     edx, ebx
                mov     dword ptr [esp+4Ch+var_28+4], eax
                mov     eax, edi
                shr     eax, 8
                shr     edx, 18h
                mov     dword ptr [esp+4Ch+var_28], ecx
                xor     edx, 0F6h
                movzx   ecx, al
                mov     eax, [esp+4Ch+var_38]
                mov     eax, [edx+eax]
                mov     eax, [eax+ecx+3Ah]
                mov     [esp+4Ch+var_1C], eax
                mov     eax, edi
                mov     edi, [esp+4Ch+var_38]
                shr     eax, 10h
                movzx   edx, al
                xor     eax, eax
                movzx   ecx, bl
                add     edx, 33h ; '3'
                add     edx, [edi+ecx*8-340h]
                mov     [esp+4Ch+var_18], edx
                adc     eax, [edi+ecx*8-33Ch]
                mov     edx, [esp+4Ch+var_3C]
                mov     [esp+4Ch+var_14], eax
                xor     edx, 4F2A3082h
                lea     eax, [esi-1CAECED2h]
                movzx   eax, al
                mov     ecx, [eax+edi-46h]
                mov     eax, [eax+edi-42h]
                mov     [esp+4Ch+var_4], eax
                mov     eax, ebx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 48h
                mov     [esp+4Ch+var_8], ecx
                mov     ecx, [eax+edi]
                mov     eax, [eax+edi+4]
                mov     [esp+4Ch+var_10], ecx
                mov     ecx, edi
                mov     [esp+4Ch+var_C], eax
                call    VBN_TransformContext
                mov     edx, [ebp+arg_4]
                lea     ecx, [esi-1CAECED2h]
                shr     edx, 4
                mov     eax, esi
                shl     eax, 4
                add     edx, eax
                mov     eax, ebx
                xor     eax, [esp+48h+var_3C]
                xor     edx, ecx
                xor     edx, ebx
                xor     eax, ecx
                lea     ebx, [esi-127B4D58h]
                mov     [esp+48h+var_30], edx
                xor     ebx, edx
                mov     [esp+48h+var_2C], eax
                xor     ebx, [esp+48h+var_3C]
                add     esi, 5854A768h
                xor     esi, eax
                mov     al, bl
                xor     al, 8Fh
                xor     esi, edx
                movzx   eax, al
                mov     ecx, esi
                cdq
                xor     ecx, 0E8C6973Ch
                mov     edi, eax
                mov     eax, edx
                mov     edx, [esp+48h+var_20]
                sub     edi, ecx
                mov     ecx, ebx
                sbb     eax, 0
                add     edi, dword ptr [esp+48h+var_28]
                adc     eax, dword ptr [esp+48h+var_28+4]
                xor     ecx, [esp+48h+var_2C]
                mov     dword ptr [esp+48h+var_28+4], eax
                xor     ecx, edx
                xor     ecx, 3E26E23Dh
                mov     eax, esi
                xor     eax, ebx
                mov     [esp+48h+var_20], ecx
                xor     eax, [esp+48h+var_34]
                xor     eax, edx
                mov     ebx, [esp+48h+var_20]
                mov     dword ptr [esp+48h+var_28], eax
                mov     edx, ecx
                xor     eax, 0E0C54565h
                xor     ecx, ecx
                or      ecx, eax
                xor     edx, 6508E828h
                mov     [edi], ecx
                mov     ecx, ebx
                xor     ecx, esi
                mov     [edi+4], edx
                xor     ecx, [esp+48h+var_3C]
                xor     ecx, [esp+48h+var_34]
                mov     esi, [esp+48h+var_38]
                mov     edx, [esp+48h+var_1C]
                movzx   eax, cl
                xor     eax, 0AFh
                and     dword ptr [esi+eax*8+4], 0
                mov     [esi+eax*8], edx
                mov     eax, ecx
                mov     edx, dword ptr [esp+48h+var_28+4]
                shr     eax, 8
                movzx   eax, al
                mov     [esi+eax*8+8Ch], edx
                mov     edx, [esp+48h+var_18]
                mov     [esi+eax*8+88h], edi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [esi+eax*8-6B8h], edx
                mov     edx, [esp+48h+var_14]
                mov     [esi+eax*8-6B4h], edx
                mov     eax, [esp+48h+var_10]
                mov     edx, [esp+48h+var_30]
                mov     [ecx+esi+1], eax
                mov     eax, [esp+48h+var_C]
                mov     [ecx+esi+5], eax
                mov     eax, [esp+48h+var_3C]
                movzx   ecx, al
                movzx   eax, dl
                xor     edx, 0B9904E89h
                xor     ecx, eax
                movzx   eax, bl
                xor     ecx, eax
                mov     eax, dword ptr [esp+48h+var_28]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+48h+var_8]
                mov     [esi+ecx*8-248h], eax
                mov     eax, [esp+48h+var_4]
                mov     [esi+ecx*8-244h], eax
                xor     eax, eax
                mov     ecx, [esp+48h+var_2C]
                add     ecx, 39CE7D8Ch
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___17       endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___175_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                push    ebx
                mov     ebx, ecx
                lea     ecx, [eax+7FFBC064h]
                add     ecx, edx
                add     edx, 40582A2Bh
                add     eax, edx
                mov     [ebp+var_8], ecx
                mov     [ebp+var_4], eax
                mov     eax, ecx
                shr     eax, 8
                push    esi
                push    edi
                movzx   edi, al
                xor     esi, esi
                mov     eax, ecx
                sub     edi, 0A5h
                shr     eax, 10h
                xor     al, 0A2h
                movzx   eax, al
                cdq
                sub     edi, eax
                movzx   eax, cl
                push    offset dword_40BE20
                sbb     esi, edx
                mov     edx, [ebp+arg_4]
                add     edi, [eax+ebx+2Ch]
                adc     esi, [eax+ebx+30h]
                add     edx, 0DAF366F8h
                xor     edx, [ebp+var_4]
                xor     edx, ecx
                mov     ecx, ebx
                sub     edx, 32BD06DEh
                call    VBN_TransformContext
                mov     eax, [ebp+arg_4]
                xor     edx, edx
                mov     ecx, [ebp+arg_0]
                shl     eax, 4
                shr     ecx, 4
                add     eax, ecx
                mov     [ebx+1B8h], edi
                xor     eax, [ebp+var_8]
                mov     ecx, [ebp+var_4]
                xor     eax, 0A62B6AB9h
                pop     edi
                mov     [ebx+1BCh], esi
                add     ecx, 9F6BAAC9h
                pop     esi
                or      edx, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___175_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

vBng___190      proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = qword ptr -34h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 4Ch
                push    ebx
                push    esi
                mov     esi, ecx
                and     [esp+54h+var_4], 0
                push    edi
                mov     edi, [ebp+arg_0]
                mov     edx, edi
                sub     edx, [ebp+arg_4]
                mov     eax, edx
                mov     [esp+58h+var_4C], esi
                xor     eax, 0C7D75C04h
                mov     ecx, edx
                mov     [esp+58h+var_48], eax
                xor     ecx, 0BFDA75ABh
                movzx   eax, cl
                mov     [esp+58h+var_40], ecx
                push    offset dword_40BD3C
                mov     ebx, [eax+esi-3Fh]
                mov     eax, [eax+esi-3Bh]
                mov     [esp+5Ch+var_28], eax
                mov     eax, ecx
                shr     eax, 8
                movzx   eax, al
                xor     eax, 0C9h
                mov     [esp+5Ch+var_2C], ebx
                mov     ecx, [eax+esi]
                mov     eax, [eax+esi+4]
                mov     [esp+5Ch+var_20], eax
                mov     eax, [esp+5Ch+var_40]
                shr     eax, 10h
                movzx   eax, al
                xor     eax, 40h
                mov     [esp+5Ch+var_24], ecx
                mov     ecx, esi
                mov     ecx, [ecx+eax*8]
                mov     dword ptr [esp+5Ch+var_34], ecx
                mov     ecx, esi
                mov     eax, [ecx+eax*8+4]
                mov     ecx, [esp+5Ch+var_40]
                mov     dword ptr [esp+5Ch+var_34+4], eax
                mov     eax, [esp+5Ch+var_48]
                movzx   eax, ax
                xor     eax, 0E960h
                shr     ecx, 18h
                mov     eax, [eax+ebx]
                mov     [esp+5Ch+var_10], eax
                mov     eax, [esp+5Ch+var_48]
                shr     eax, 10h
                movzx   ebx, al
                xor     eax, eax
                sub     ebx, 20h ; ' '
                add     ebx, [ecx+esi-10h]
                mov     [esp+5Ch+var_1C], ebx
                mov     ebx, esi
                mov     esi, [esp+5Ch+var_40]
                adc     eax, [ecx+ebx-0Ch]
                xor     edx, esi
                mov     ecx, [esp+5Ch+var_4C]
                mov     ebx, edx
                xor     ebx, 0BB9DDAE4h
                mov     [esp+5Ch+var_18], eax
                xor     edx, 5EFD8DA8h
                mov     [esp+5Ch+var_14], ebx
                call    VBN_TransformContext
                mov     ecx, [ebp+arg_4]
                mov     eax, edi
                shl     ecx, 4
                shr     eax, 4
                add     eax, ecx
                lea     ecx, [edi-15FE7E66h]
                mov     edx, eax
                xor     ecx, ebx
                xor     edx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_48]
                xor     edx, esi
                xor     edi, edx
                mov     [esp+58h+var_C], edx
                xor     edi, ebx
                mov     [esp+58h+var_8], ecx
                mov     [esp+58h+var_44], edi
                mov     ebx, edi
                xor     eax, ecx
                xor     ebx, [ebp+arg_4]
                xor     eax, edx
                mov     [esp+58h+var_44], ebx
                mov     [esp+58h+var_3C], eax
                mov     eax, ebx
                xor     eax, ecx
                mov     cl, bl
                xor     eax, esi
                xor     cl, 0F6h
                xor     eax, 7BECFA5Dh
                mov     [esp+58h+var_38], eax
                mov     eax, ebx
                shr     eax, 8
                xor     al, 98h
                movzx   eax, al
                cdq
                mov     esi, eax
                mov     edi, edx
                movzx   eax, cl
                cdq
                mov     ebx, eax
                mov     eax, [esp+58h+var_38]
                sub     ebx, esi
                mov     esi, [esp+58h+var_3C]
                sbb     edx, edi
                add     ebx, dword ptr [esp+58h+var_34]
                mov     edi, [esp+58h+var_4C]
                adc     edx, dword ptr [esp+58h+var_34+4]
                add     eax, 52E7D10Ch
                xor     ecx, ecx
                xor     esi, 0F3E2943Bh
                or      ecx, eax
                mov     [ebx], ecx
                mov     ecx, [esp+58h+var_3C]
                xor     ecx, [esp+58h+var_44]
                xor     ecx, [esp+58h+var_48]
                xor     ecx, [esp+58h+var_40]
                mov     [ebx+4], esi
                mov     esi, [esp+58h+var_2C]
                movzx   eax, cl
                xor     eax, 66h
                mov     [eax+edi], esi
                mov     esi, [esp+58h+var_28]
                mov     [eax+edi+4], esi
                mov     eax, ecx
                mov     esi, [esp+58h+var_24]
                shr     eax, 8
                movzx   eax, al
                mov     [edi+eax*8-3C8h], esi
                mov     esi, [esp+58h+var_20]
                mov     [edi+eax*8-3C4h], esi
                mov     eax, ecx
                shr     eax, 10h
                movzx   eax, al
                shr     ecx, 18h
                mov     [edi+eax*8-34Ch], edx
                mov     [edi+eax*8-350h], ebx
                mov     eax, [esp+58h+var_1C]
                mov     [edi+ecx*8-698h], eax
                mov     eax, [esp+58h+var_18]
                mov     [edi+ecx*8-694h], eax
                mov     eax, [esp+58h+var_48]
                mov     edx, [esp+58h+var_C]
                movzx   ecx, al
                add     edx, 644D88F2h
                mov     eax, [esp+58h+var_14]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_3C]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_38]
                movzx   eax, al
                xor     ecx, eax
                mov     eax, [esp+58h+var_10]
                and     dword ptr [edi+ecx*8-5D4h], 0
                mov     [edi+ecx*8-5D8h], eax
                xor     eax, eax
                mov     ecx, [esp+58h+var_8]
                add     ecx, 966AEF56h
                pop     edi
                pop     esi
                or      eax, ecx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___190      endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

vBng___191_stk  proc near               ; CODE XREF: VBN_MainLoop+EE¡ýp
                                        ; DATA XREF: .text:funcs_4A3C99¡üo ...

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, [ebp+arg_0]
                shl     eax, 4
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                mov     ecx, [ebp+arg_4]
                mov     ebx, ecx
                mov     [ebp+var_4], edi
                shr     ebx, 4
                add     ebx, eax
                mov     eax, ecx
                xor     eax, [ebp+arg_0]
                mov     [ebp+var_8], eax
                xor     eax, eax
                xor     eax, ecx
                movzx   ecx, bl
                mov     [ebp+var_C], eax
                xor     ecx, 0DAh
                mov     eax, ebx
                shr     eax, 10h
                xor     al, 7Ch
                mov     esi, [ecx+edi]
                mov     edi, [ecx+edi+4]
                mov     ecx, [ebp+var_4]
                movzx   eax, al
                cdq
                sub     esi, eax
                mov     eax, ebx
                push    offset dword_40A660
                sbb     edi, edx
                mov     edx, [ebp+arg_4]
                shr     eax, 8
                movzx   eax, al
                sub     eax, 78h ; 'x'
                add     esi, eax
                adc     edi, 0
                xor     edx, [ebp+var_8]
                xor     edx, [ebp+arg_0]
                xor     edx, ebx
                xor     edx, 0A9574876h
                call    VBN_TransformContext
                mov     eax, [ebp+var_4]
                xor     edx, edx
                mov     ecx, [ebp+arg_4]
                sub     ecx, [ebp+arg_0]
                xor     ecx, ebx
                mov     [eax+1B8h], esi
                mov     [eax+1BCh], edi
                mov     eax, [ebp+var_8]
                pop     edi
                xor     eax, 35C8F50h
                pop     esi
                or      edx, eax
                lea     eax, [ecx+1DF7DA30h]
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
vBng___191_stk  endp

; ---------------------------------------------------------------------------

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp


